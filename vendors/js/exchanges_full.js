!function e(t,s,i){function r(n,o){if(!s[n]){if(!t[n]){var c="function"==typeof require&&require;if(!o&&c)return c(n,!0);if(a)return a(n,!0);var d=new Error("Cannot find module '"+n+"'");throw d.code="MODULE_NOT_FOUND",d}var h=s[n]={exports:{}};t[n][0].call(h.exports,(function(e){return r(t[n][1][e]||e)}),h,h.exports,e,t,s,i)}return s[n].exports}for(var a="function"==typeof require&&require,n=0;n<i.length;n++)r(i[n]);return r}({1:[function(e,t,s){window.ccxt=e("./ccxt.pro")},{"./ccxt.pro":2}],2:[function(e,t,s){"use strict";const i=e("ccxt"),{deepExtend:r}=i,a=e("./js/base/Exchange"),{unique:n}=e("ccxt/js/base/functions"),o={aax:e("./js/aax.js"),ascendex:e("./js/ascendex.js"),bequant:e("./js/bequant.js"),binance:e("./js/binance.js"),binancecoinm:e("./js/binancecoinm.js"),binanceus:e("./js/binanceus.js"),binanceusdm:e("./js/binanceusdm.js"),bitcoincom:e("./js/bitcoincom.js"),bitfinex:e("./js/bitfinex.js"),bitmart:e("./js/bitmart.js"),bitmex:e("./js/bitmex.js"),bitopro:e("./js/bitopro.js"),bitstamp:e("./js/bitstamp.js"),bittrex:e("./js/bittrex.js"),bitvavo:e("./js/bitvavo.js"),bybit:e("./js/bybit.js"),cdax:e("./js/cdax.js"),coinbaseprime:e("./js/coinbaseprime.js"),coinbasepro:e("./js/coinbasepro.js"),coinex:e("./js/coinex.js"),cryptocom:e("./js/cryptocom.js"),currencycom:e("./js/currencycom.js"),exmo:e("./js/exmo.js"),ftx:e("./js/ftx.js"),ftxus:e("./js/ftxus.js"),gate:e("./js/gate.js"),gateio:e("./js/gateio.js"),hitbtc:e("./js/hitbtc.js"),hollaex:e("./js/hollaex.js"),huobi:e("./js/huobi.js"),huobijp:e("./js/huobijp.js"),huobipro:e("./js/huobipro.js"),idex:e("./js/idex.js"),kraken:e("./js/kraken.js"),kucoin:e("./js/kucoin.js"),mexc:e("./js/mexc.js"),ndax:e("./js/ndax.js"),okcoin:e("./js/okcoin.js"),okex:e("./js/okex.js"),okx:e("./js/okx.js"),phemex:e("./js/phemex.js"),poloniex:e("./js/poloniex.js"),ripio:e("./js/ripio.js"),upbit:e("./js/upbit.js"),zb:e("./js/zb.js"),zipmex:e("./js/zipmex.js")};for(const e in o){const t=i[e];Object.getPrototypeOf(t)===i.Exchange&&(Object.setPrototypeOf(t,a),Object.setPrototypeOf(t.prototype,a.prototype))}t.exports=r(i,{version:"1.1.92",Exchange:a,exchanges:n(i.exchanges.concat(Object.keys(o))).sort()},o)},{"./js/aax.js":3,"./js/ascendex.js":4,"./js/base/Exchange":7,"./js/bequant.js":13,"./js/binance.js":14,"./js/binancecoinm.js":15,"./js/binanceus.js":16,"./js/binanceusdm.js":17,"./js/bitcoincom.js":18,"./js/bitfinex.js":19,"./js/bitmart.js":20,"./js/bitmex.js":21,"./js/bitopro.js":22,"./js/bitstamp.js":23,"./js/bittrex.js":24,"./js/bitvavo.js":25,"./js/bybit.js":26,"./js/cdax.js":27,"./js/coinbaseprime.js":28,"./js/coinbasepro.js":29,"./js/coinex.js":30,"./js/cryptocom.js":31,"./js/currencycom.js":32,"./js/exmo.js":33,"./js/ftx.js":34,"./js/ftxus.js":35,"./js/gate.js":36,"./js/gateio.js":37,"./js/hitbtc.js":38,"./js/hollaex.js":39,"./js/huobi.js":40,"./js/huobijp.js":41,"./js/huobipro.js":42,"./js/idex.js":43,"./js/kraken.js":44,"./js/kucoin.js":45,"./js/mexc.js":46,"./js/ndax.js":47,"./js/okcoin.js":48,"./js/okex.js":49,"./js/okx.js":50,"./js/phemex.js":51,"./js/poloniex.js":52,"./js/ripio.js":53,"./js/upbit.js":54,"./js/zb.js":55,"./js/zipmex.js":56,ccxt:123,"ccxt/js/base/functions":130}],3:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r,ArrayCacheByTimestamp:a,ArrayCacheBySymbolById:n,NotSupported:o,AuthenticationError:c}=e("./base/Cache");t.exports=class extends i.aax{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0,watchBalance:!0,watchOrders:!0},urls:{api:{ws:{public:"wss://realtime.aax.com/marketdata/v2/",private:"wss://stream.aax.com/notification/v2/"}}},options:{OHLCVLimit:1e3,tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3}})}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t],o=a.id+"@"+n+"_candles",c=this.urls.api.ws.public,d={e:"subscribe",stream:o},h=this.deepExtend(d,r),l=await this.watch(c,o,h,o);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySinceLimit(l,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"e"),i=s.split("@"),r=this.safeString(i,0),n=this.safeString(i,1),o=this.safeMarket(r).symbol,c=[this.safeTimestamp(t,"s"),this.safeNumber(t,"o"),this.safeNumber(t,"h"),this.safeNumber(t,"l"),this.safeNumber(t,"c"),this.safeNumber(t,"v")],d=n.split("_"),h=this.safeString(d,0),l=this.findTimeframe(h);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let u=this.safeValue(this.ohlcvs[o],l);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new a(e),this.ohlcvs[o][l]=u}u.append(c),e.resolve(u,s)}async watchTicker(e,t={}){const s="tickers";await this.loadMarkets();const i=this.market(e).id+"@"+s,r=this.urls.api.ws.public,a={e:"subscribe",stream:s},n=this.extend(a,t);return await this.watch(r,i,n,s)}handleTickers(e,t){const s=this.safeString(t,"e"),i=this.safeInteger(t,"t"),r={timestamp:i,datetime:this.iso8601(i)},a=this.parseTickers(this.safeValue(t,"tickers",[]),void 0,r),n=Object.keys(a);for(let t=0;t<n.length;t++){const i=n[t];if(i in this.markets){const t=this.market(i),r=a[i];this.tickers[i]=r;const n=t.id+"@"+s;e.resolve(r,n)}}}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e).id+"@trade",a=this.urls.api.ws.public,n={e:"subscribe",stream:r},o=this.extend(n,i),c=await this.watch(a,r,o,r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"e"),i=s.split("@"),a=this.safeString(i,0),n=this.safeMarket(a),o=n.symbol,c=this.parseTrade(t,n);let d=this.safeValue(this.trades,o);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new r(e),this.trades[o]=d}d.append(c),e.resolve(d,s)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);if(20!==(t=void 0===t?20:t)&&50!==t)throw new o(this.id+" watchOrderBook() accepts limit values of 20 or 50 only");const r=i.id+"@book_"+t.toString(),a=this.urls.api.ws.public,n={e:"subscribe",stream:r},c=this.extend(n,s);return(await this.watch(a,r,c,r)).limit(t)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBook(e,t){const s=this.safeString(t,"e"),[i,r]=s.split("@"),a=r.split("_"),n=this.safeMarket(i).symbol,o=this.safeString(a,1),c=parseInt(o),d=this.safeInteger(t,"t"),h=this.parseOrderBook(t,n,d);let l;n in this.orderbooks?(l=this.orderbooks[n],l.reset(h)):(l=this.orderBook(h,c),this.orderbooks[n]=l),e.resolve(l,s)}requestId(){const e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async handshake(e={}){const t=this.urls.api.ws.private,s=this.client(t),i="handshake",r=s.future(i);if(void 0===this.safeValue(s.subscriptions,i)){const s=this.requestId(),a={event:"#"+i,data:{},cid:s},n=this.extend(a,e),o=s.toString(),c=await this.watch(t,o,n,i);r.resolve(c)}return await r}async authenticate(e={}){const t=this.urls.api.ws.private,s=this.client(t),i="login",r=s.future(i);if(void 0===this.safeValue(s.subscriptions,i)){const s=this.milliseconds(),a=s.toString()+":"+this.apiKey,n=this.hmac(this.encode(a),this.encode(this.secret)),o=this.requestId(),d={event:i,data:{apiKey:this.apiKey,nonce:s,signature:n},cid:o},h=this.extend(d,e),l=o.toString(),u=await this.watch(t,l,h,i),f=this.safeValue(u,"data",{});if(!this.safeValue(f,"isAuthenticated",!1))throw new c(this.id+" "+this.json(u));r.resolve(u)}return await r}async watchBalance(e={}){await this.loadMarkets(),await this.handshake(e);const t=await this.authenticate(e),s=this.safeValue(t,"data",{}),i=this.safeString(s,"uid"),r=this.urls.api.ws.private,a=this.safeString2(this.options,"userId","userID",i),n=this.safeString2(e,"userId","userID",a),o=this.safeString2(this.options,"watchBalance","defaultType","spot"),c=this.safeString(e,"type",o),d=this.omit(e,["userId","userID","type"]),h="user/"+n,l=c+":balance",u={event:"#subscribe",data:{channel:h},cid:this.requestId()},f=this.deepExtend(u,d);return await this.watch(r,l,f,h)}handleBalance(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(s,"purseType"),r=this.safeValue(this.options,"accounts",{}),a=this.safeString(r,i),n=a+":balance",o=this.safeString(s,"currency"),c=this.safeCurrencyCode(o),d=this.account();d.free=this.safeString(s,"available"),d.used=this.safeString(s,"unavailable"),a in this.balance||(this.balance[a]={}),this.balance[a][c]=d,this.balance[a]=this.safeBalance(this.balance[a]),e.resolve(this.balance[a],n)}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.handshake(i);const r=await this.authenticate(i),a=this.safeValue(r,"data",{}),n=this.safeString(a,"uid"),o=this.urls.api.ws.private,c=this.safeString2(this.options,"userId","userID",n),d=this.safeString2(i,"userId","userID",c),h=this.omit(i,["userId","userID"]);let l="orders";void 0!==e&&(l+=":"+e);const u={event:"#subscribe",data:{channel:"user/"+d},cid:this.requestId()},f=this.deepExtend(u,h),p=await this.watch(o,l,f,l);return this.newUpdates&&(s=p.getLimit(e,s)),this.filterBySymbolSinceLimit(p,e,t,s,!0)}handleOrder(e,t){const s="orders",i=this.safeValue(t,"data"),r=this.safeValue(i,"order"),a=void 0===r?this.parseOrder(i):this.parseOrder(r),o=this.safeString(a,"symbol"),c=this.safeString(a,"id");if(void 0!==o){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n(e)}const t=this.orders,i=this.safeValue(t.hashmap,o,{}),r=this.safeValue(i,c);if(void 0!==r){const e=this.safeValue(r,"fee");void 0!==e&&(a.fee=e);const t=this.safeValue(r,"fees");void 0!==t&&(a.fees=t),a.trades=this.safeValue(r,"trades"),a.timestamp=this.safeInteger(r,"timestamp"),a.datetime=this.safeString(r,"datetime")}t.append(a),e.resolve(this.orders,s);const d=s+":"+o;e.resolve(this.orders,d)}}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){const s=this.safeString(t,"rid");return e.resolve(t,s),t}async pong(e,t){await e.send("#2")}handlePing(e,t){this.spawn(this.pong,e,t)}handleNotification(e,t){const s=this.safeValue(t,"event"),i={USER_FUNDS:this.handleBalance,USER_BALANCE:this.handleBalance,SPOT:this.handleOrder,FUTURES:this.handleOrder},r=this.safeValue(i,s);if(void 0!==r)return r.call(this,e,t)}handleMessage(e,t){if("string"==typeof t)"#1"===t&&this.handlePing(e,t);else{const s=this.safeString(t,"event"),i=this.safeString(t,"e");if("#publish"===s){const s=this.safeValue(t,"data",{}),i=this.safeValue(s,"data",{});this.handleNotification(e,i)}else if(void 0===i){void 0!==this.safeString(t,"rid")&&this.handleSubscriptionStatus(e,t)}else{const s=i.split("@"),r=s.length,a={reply:this.handleSubscriptionStatus,system:this.handleSystemStatus,book:this.handleOrderBook,trade:this.handleTrades,empty:void 0,tickers:this.handleTickers,candles:this.handleOHLCV,done:this.handleOrder};let n;if(r>1){const e=this.safeString(s,1).split("_"),t=this.safeString(e,0),i=this.safeString(e,1);n=this.safeValue2(a,t,i)}else{const e=this.safeString(s,0);n=this.safeValue(a,e)}if(void 0!==n)return n.call(this,e,t)}}}}},{"./base/Cache":5,ccxt:123}],4:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheByTimestamp:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.ascendex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTrades:!0},urls:{api:{ws:{public:"wss://ascendex.com:443/api/pro/v2/stream",private:"wss://ascendex.com:443/{accountGroup}/api/pro/v2/stream"}},test:{ws:{public:"wss://api-test.ascendex-sandbox.com:443/api/pro/v2/stream",private:"wss://api-test.ascendex-sandbox.com:443/{accountGroup}/api/pro/v2/stream"}}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,categoriesAccount:{cash:"spot",futures:"swap",margin:"margin"}}})}async watchPublic(e,t={}){const s=this.urls.api.ws.public,i={id:this.nonce().toString(),op:"sub"},r=this.extend(i,t);return await this.watch(s,e,r,e)}async watchPrivate(e,t,s={}){await this.loadAccounts();const i=this.safeString(this.options,"account-group");let r=this.urls.api.ws.private;r=this.implodeParams(r,{accountGroup:i});const a={id:this.nonce().toString(),op:"sub",ch:e},n=this.extend(a,s);return await this.authenticate(r,s),await this.watch(r,t,n,e)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);(void 0===i||i>1440)&&(i=100);const n="bar:"+this.timeframes[t]+":"+a.id;r={ch:n};const o=await this.watchPublic(n,r);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"s"),i=this.safeSymbol(s),r=this.safeString(t,"m"),a=this.safeValue(t,"data",{}),o=this.safeString(a,"i"),c=r+":"+o+":"+s,d=this.findTimeframe(o),h=this.market(i),l=this.parseOHLCV(t,h);this.ohlcvs[i]=this.safeValue(this.ohlcvs,i,{});let u=this.safeValue(this.ohlcvs[i],d);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new n(e),this.ohlcvs[i][d]=u}return u.append(l),e.resolve(u,c),t}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r="trades:"+this.market(e).id;i=this.extend(i,{ch:r});const a=await this.watchPublic(r,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySinceLimit(a,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeString(t,"m")+":"+s,n=this.market(i);let o=this.safeValue(t,"data");void 0===o&&(o=[]);const c=this.parseTrades(o,n);let d=this.safeValue(this.trades,i);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a(e)}for(let e=0;e<c.length;e++)d.append(c[e]);this.trades[i]=d,e.resolve(d,r)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i="depth-realtime:"+this.market(e).id;s=this.extend(s,{ch:i});return(await this.watchPublic(i,s)).limit(t)}async watchOrderBookSnapshot(e,t,s={}){await this.loadMarkets();const i=this.market(e),r="depth-snapshot-realtime",a=r+":"+i.id;s=this.extend(s,{action:r,args:{symbol:i.id},op:"req"});return(await this.watchPublic(a,s)).limit(t)}handleOrderBookSnapshot(e,t){const s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeString(t,"m")+":"+i,a=this.orderbooks[i],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,i);o.nonce=this.safeInteger(n,"seqnum"),a.reset(o);const c=a.cache;for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,a)}this.orderbooks[i]=a,e.resolve(a,r)}handleOrderBook(e,t){const s=this.safeString(t,"m"),i=this.safeString(t,"symbol"),r=this.safeSymbol(i),a=s+":"+i;let n=this.safeValue(this.orderbooks,r);void 0===n&&(n=this.orderBook({})),void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,a))}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"data",{}),r=this.safeInteger(i,"seqnum");if(r>s.nonce){const e=this.safeValue(i,"asks",[]),t=this.safeValue(i,"bids",[]);this.handleDeltas(s.asks,e),this.handleDeltas(s.bids,t),s.nonce=r;const a=this.safeInteger(i,"ts");s.timestamp=a,s.datetime=this.iso8601(a)}return s}async watchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i,r;if("spot"===t||"margin"===t){const e=this.safeValue(this.options,"accountCategories",{});let s=this.safeString(e,t,"cash");s=s.toUpperCase(),i="order:"+s,r="balance:"+t}else i="futures-account-update",r="balance:swap";return await this.watchPrivate(i,r,s)}handleBalance(e,t){const s=this.safeString(t,"m");let i,r;if("order"===s||"futures-order"===s){const e=this.safeValue(t,"data"),s=this.safeString(e,"s"),a=this.safeMarket(s),n=this.account();n.free=this.safeString(e,"bab"),n.total=this.safeString(e,"btb");const o=this.account();o.free=this.safeString(e,"qab"),o.total=this.safeString(e,"qtb"),a.contract?(r="swap",i=this.safeValue(this.balance,r,{})):(r=a.type,i=this.safeValue(this.balance,r,{})),i[a.base]=n,i[a.quote]=o}else{const e=this.safeStringLower2(t,"ac","at"),s=this.safeValue(this.options,"categoriesAccount");r=this.safeString(s,e,"spot"),i=this.safeValue(this.balance,r,{});const a=this.safeValue(t,"data");let n;n=void 0===a?this.safeValue(t,"col"):[a];for(let e=0;e<n.length;e++){const t=n[e],s=this.safeCurrencyCode(this.safeString(t,"a")),r=this.account();r.free=this.safeString(t,"ab"),r.total=this.safeString2(t,"tb","b"),i[s]=r}}const a="balance:"+r;e.resolve(this.safeBalance(i),a)}async watchOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const[a,n]=this.handleMarketTypeAndParams("watchOrders",r,i);let o,c;if("spot"!==a)c="futures-order",o="order:FUTURES";else{const e=this.safeValue(this.options,"accountCategories",{});let t=this.safeString(e,a,"cash");t=t.toUpperCase(),o="order:"+t,c=o}void 0!==e&&(o=o+":"+e);const d=await this.watchPrivate(c,o,n);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySymbolSinceLimit(d,e,t,s,!0)}handleOrder(e,t){const s="order:"+this.safeString(t,"ac"),i=this.safeValue(t,"data",t),r=this.parseWsOrder(i);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new o(e)}const a=this.orders;a.append(r);const n=s+":"+r.symbol;e.resolve(a,n),e.resolve(a,s)}parseWsOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"st")),i=this.safeString(e,"s"),r=this.safeInteger(e,"t"),a=this.safeSymbol(i,t,"/"),n=this.safeInteger(e,"t"),o=this.safeString(e,"p"),c=this.safeString(e,"q"),d=this.safeString(e,"ap"),h=this.safeString(e,"cfq"),l=this.safeString(e,"orderId"),u=this.safeStringLower(e,"ot"),f=this.safeStringLower(e,"sd"),p=this.safeNumber(e,"cf");let m;if(void 0!==p){const t=this.safeString(e,"fa");m={cost:p,currency:this.safeCurrencyCode(t)}}const g=this.parseNumber(this.omitZero(this.safeString(e,"sp")));return this.safeOrder({info:e,id:l,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:n,symbol:a,type:u,timeInForce:void 0,postOnly:void 0,side:f,price:o,stopPrice:g,amount:c,cost:void 0,average:d,filled:h,remaining:void 0,status:s,fee:m,trades:void 0},t)}handleErrorMessage(e,t){const s=this.safeInteger(t,"code");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);const i=this.safeValue(t,"message");void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}}catch(t){if(t instanceof r){e.reject(t,"authenticated");const s="auth";return s in e.subscriptions&&delete e.subscriptions[s],!1}e.reject(t)}return t}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;const s=this.safeString(t,"m"),i={ping:this.handlePing,auth:this.handleAuthenticate,sub:this.handleSubscriptionStatus,"depth-realtime":this.handleOrderBook,"depth-snapshot-realtime":this.handleOrderBookSnapshot,trades:this.handleTrades,bar:this.handleOHLCV,balance:this.handleBalance,"futures-account-update":this.handleBalance},r=this.safeValue(i,s);return void 0!==r&&r.call(this,e,t),"order"!==s&&"futures-order"!==s||(this.handleOrder(e,t),"order"===s&&this.handleBalance(e,t)),t}handleSubscriptionStatus(e,t){return this.safeString(t,"ch","").indexOf("depth-realtime")>-1&&this.handleOrderBookSubscription(e,t),t}handleOrderBookSubscription(e,t){const s=this.safeString(t,"ch").split(":")[1],i=this.safeSymbol(s);i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({}),this.spawn(this.watchOrderBookSnapshot,i)}async pong(e,t){await e.send({op:"pong",hp:this.safeInteger(t,"hp")})}handlePing(e,t){this.spawn(this.pong,e,t)}async authenticate(e,t={}){this.checkRequiredCredentials();const s="authenticated",i=this.client(e);let r=this.safeValue(i.futures,s);if(void 0===r){r=i.future("authenticated"),i.future(s);const a=this.milliseconds().toString(),n=e.split("/"),o=n.length,c=this.safeString(n,o-1),d=a+"+"+this.safeString(n,o-2)+"/"+c,h=this.base64ToBinary(this.secret),l=this.hmac(this.encode(d),h,"sha256","base64"),u={op:"auth",id:this.nonce().toString(),t:a,key:this.apiKey,sig:l};this.spawn(this.watch,e,s,this.extend(u,t))}return await r}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],5:[function(e,t,s){"use strict";class i extends Array{constructor(e){super(),Object.defineProperty(this,"maxSize",{__proto__:null,value:e,writable:!0})}clear(){this.length=0}}class r extends i{constructor(e){super(e),Object.defineProperty(this,"newUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"clearUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"allNewUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearAllUpdates",{__proto__:null,value:!1,writable:!0})}getLimit(e,t){let s;return void 0===e?(s=this.allNewUpdates,this.clearAllUpdates=!0):(s=this.newUpdatesBySymbol[e],this.clearUpdatesBySymbol[e]=!0),void 0===s?t:void 0!==t?Math.min(s,t):s}append(e){this.maxSize&&this.length===this.maxSize&&this.shift(),this.push(e),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol]=0),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.allNewUpdates=0),this.newUpdatesBySymbol[e.symbol]=(this.newUpdatesBySymbol[e.symbol]||0)+1,this.allNewUpdates=(this.allNewUpdates||0)+1}}t.exports={ArrayCache:r,ArrayCacheByTimestamp:class extends i{constructor(e){super(e),Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"sizeTracker",{__proto__:null,value:new Set,writable:!0}),Object.defineProperty(this,"newUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearUpdates",{__proto__:null,value:!1,writable:!0})}getLimit(e,t){return this.clearUpdates=!0,void 0===t?this.newUpdates:Math.min(this.newUpdates,t)}append(e){if(e[0]in this.hashmap){const t=this.hashmap[e[0]];if(t!==e)for(const s in e)t[s]=e[s]}else{if(this.hashmap[e[0]]=e,this.maxSize&&this.length===this.maxSize){const e=this.shift();delete this.hashmap[e[0]]}this.push(e)}this.clearUpdates&&(this.clearUpdates=!1,this.sizeTracker.clear()),this.sizeTracker.add(e[0]),this.newUpdates=this.sizeTracker.size}},ArrayCacheBySymbolById:class extends r{constructor(e){super(e),Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0})}append(e){const t=this.hashmap[e.symbol]=this.hashmap[e.symbol]||{};if(e.id in t){const s=t[e.id];if(s!==e)for(const t in e)s[t]=e[t];e=s;const i=this.findIndex((t=>t.id===e.id));this.splice(i,1)}else t[e.id]=e;if(this.maxSize&&this.length===this.maxSize){const e=this.shift();delete this.hashmap[e.symbol][e.id]}this.push(e),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol]=0),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.allNewUpdates=0),this.newUpdatesBySymbol[e.symbol]=(this.newUpdatesBySymbol[e.symbol]||0)+1,this.allNewUpdates=(this.allNewUpdates||0)+1}}}},{}],6:[function(e,t,s){(function(s){"use strict";const i=e("ccxt"),{isNode:r,isJsonEncodedObject:a,RequestTimeout:n,NetworkError:o,NotSupported:c,deepExtend:d,milliseconds:h}=i,{inflate:l,gunzip:u}=e("./functions"),f=e("./Future");t.exports=class{constructor(e,t,s,i,r,a={}){const n={url:e,onMessageCallback:t,onErrorCallback:s,onCloseCallback:i,onConnectedCallback:r,verbose:!1,protocols:void 0,options:void 0,futures:{},subscriptions:{},connected:void 0,error:void 0,connectionStarted:void 0,connectionEstablished:void 0,isConnected:!1,connectionTimer:void 0,connectionTimeout:1e4,pingInterval:void 0,ping:void 0,keepAlive:3e4,maxPingPongMisses:2,connection:void 0,startedConnecting:!1,gunzip:!1,inflate:!1};Object.assign(this,d(n,a)),this.connected=f()}future(e){if(Array.isArray(e)){const t=e[0];if(!this.futures[t]){const s=f();this.futures[t]=s;for(let t=1;t<e.length;t++){const i=e[t];this.futures[i]=s}}return this.futures[t]}return this.futures[e]||(this.futures[e]=f()),this.futures[e]}resolve(e,t){if(this.verbose&&void 0===t&&this.log(new Date,"resolve received undefined messageHash"),this.futures[t]){this.futures[t].resolve(e),delete this.futures[t]}return e}reject(e,t){if(t){if(this.futures[t]){this.futures[t].reject(e),delete this.futures[t]}}else{const t=Object.keys(this.futures);for(let s=0;s<t.length;s++)this.reject(e,t[s])}return e}log(...e){console.log(...e)}connect(e=0){throw new c("connect() not implemented yet")}isOpen(){throw new c("isOpen() not implemented yet")}reset(e){this.clearConnectionTimeout(),this.clearPingInterval(),this.connected.reject(e),this.reject(e)}onConnectionTimeout(){if(!this.isOpen()){const e=new n("Connection to "+this.url+" failed due to a connection timeout");this.onError(e),this.connection.close(1006)}}setConnectionTimeout(){if(this.connectionTimeout){const e=this.onConnectionTimeout.bind(this);this.connectionTimer=setTimeout(e,this.connectionTimeout)}}clearConnectionTimeout(){this.connectionTimer&&(this.connectionTimer=clearTimeout(this.connectionTimer))}setPingInterval(){if(this.keepAlive){const e=this.onPingInterval.bind(this);this.pingInterval=setInterval(e,this.keepAlive)}}clearPingInterval(){this.pingInterval&&(this.pingInterval=clearInterval(this.pingInterval))}onPingInterval(){if(this.keepAlive&&this.isOpen()){const e=h();this.lastPong=this.lastPong||e,this.lastPong+this.keepAlive*this.maxPingPongMisses<e?this.onError(new n("Connection to "+this.url+" timed out due to a ping-pong keepalive missing on time")):this.ping?this.send(this.ping(this)):r?this.connection.ping():this.lastPong=e}}onOpen(){this.verbose&&this.log(new Date,"onOpen"),this.connectionEstablished=h(),this.isConnected=!0,this.connected.resolve(this.url),this.clearConnectionTimeout(),this.setPingInterval(),this.onConnectedCallback(this)}onPing(){this.verbose&&this.log(new Date,"onPing")}onPong(){this.lastPong=h(),this.verbose&&this.log(new Date,"onPong")}onError(e){this.verbose&&this.log(new Date,"onError",e.message),e instanceof i.BaseError||(e=new i.NetworkError(e.message)),this.error=e,this.reset(this.error),this.onErrorCallback(this,this.error)}onClose(e){this.verbose&&this.log(new Date,"onClose",e),this.error||this.reset(new o("connection closed by remote server, closing code "+String(e.code))),this.onCloseCallback(this,e)}onUpgrade(e){this.verbose&&this.log(new Date,"onUpgrade")}send(e){this.verbose&&this.log(new Date,"sending",e),e="string"==typeof e?e:JSON.stringify(e),this.connection.send(e)}close(){throw new c("close() not implemented yet")}onMessage(e){void 0!==(e=e.data).byteLength&&(this.gunzip?e=u(e):this.inflate&&(e=l(e)));try{e instanceof s&&(e=e.toString()),a(e)&&(e=JSON.parse(e.replace(/:(\d{15,}),/g,':"$1",'))),this.verbose&&this.log(new Date,"onMessage",e)}catch(e){this.log(new Date,"onMessage JSON.parse",e)}this.onMessageCallback(this,e)}}}).call(this,e("buffer").Buffer)},{"./Future":8,"./functions":12,buffer:65,ccxt:123}],7:[function(e,t,s){"use strict";const i=e("ccxt"),r=e("./WsClient"),{OrderBook:a,IndexedOrderBook:n,CountedOrderBook:o}=e("./OrderBook"),c=e("./functions");t.exports=class extends i.Exchange{constructor(e={}){super(e),this.newUpdates=e.newUpdates||!1}inflate(e){return c.inflate(e)}inflate64(e){return c.inflate64(e)}gunzip(e){return c.gunzip(e)}orderBook(e={},t=Number.MAX_SAFE_INTEGER){return new a(e,t)}indexedOrderBook(e={},t=Number.MAX_SAFE_INTEGER){return new n(e,t)}countedOrderBook(e={},t=Number.MAX_SAFE_INTEGER){return new o(e,t)}client(e){if(this.clients=this.clients||{},!this.clients[e]){const t=this.handleMessage.bind(this),s=this.onError.bind(this),a=this.onClose.bind(this),n=this.onConnected.bind(this),o=this.safeValue(this.options,"ws",{}),c=this.extend(this.streaming,{log:this.log?this.log.bind(this):this.log,ping:this.ping?this.ping.bind(this):this.ping,verbose:this.verbose,throttle:i.throttle(this.tokenBucket)},o);this.clients[e]=new r(e,t,s,a,n,c)}return this.clients[e]}spawn(e,...t){e.apply(this,t).catch((e=>{}))}delay(e,t,...s){setTimeout((()=>{this.spawn(t,...s)}),e)}watch(e,t,s,i,r){const a=this.client(e),n=a.future(t);return a.connect(0).then((()=>{if(!a.subscriptions[i]){a.subscriptions[i]=r||!0;const e=this.safeValue(this.options,"ws"),t=this.safeValue(e,"cost",1);s&&(this.enableRateLimit&&a.throttle?a.throttle(t).then((()=>{a.send(s)})).catch((e=>{throw e})):a.send(s))}})).catch((e=>{})),n}onConnected(e,t){}onError(e,t){e.url in this.clients&&this.clients[e.url].error&&delete this.clients[e.url]}onClose(e,t){e.error||this.clients[e.url]&&delete this.clients[e.url]}async close(){const e=Object.values(this.clients||{});for(let t=0;t<e.length;t++){const s=e[t];delete this.clients[s.url],await s.close()}}findTimeframe(e,t){t=t||this.timeframes;const s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i];if(t[r]===e)return r}}}},{"./OrderBook":9,"./WsClient":11,"./functions":12,ccxt:123}],8:[function(e,t,s){"use strict";t.exports=function(){let e,t;const s=new Promise(((s,i)=>{e=s,t=i}));return s.resolve=function(){e.apply(this,arguments)},s.reject=function(){t.apply(this,arguments)},s}},{}],9:[function(e,t,s){"use strict";const{iso8601:i}=e("ccxt/js/base/functions/time"),{extend:r,deepExtend:a}=e("ccxt/js/base/functions/generic.js"),{Asks:n,Bids:o,CountedAsks:c,CountedBids:d,IndexedAsks:h,IndexedBids:l,IncrementalAsks:u,IncrementalBids:f,IncrementalIndexedAsks:p,IncrementalIndexedBids:m}=e("./OrderBookSide");class g{constructor(e={},t){Object.defineProperty(this,"cache",{__proto__:null,value:[],writable:!0}),t=t||Number.MAX_SAFE_INTEGER;const s={bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0,symbol:void 0},a=Object.entries(r(s,e));for(let e=0;e<a.length;e++){const[t,s]=a[e];this[t]=s}"Array"===this.asks.constructor.name&&(this.asks=new n(this.asks,t)),"Array"===this.bids.constructor.name&&(this.bids=new o(this.bids,t)),this.timestamp&&(this.datetime=i(this.timestamp))}limit(e){return this.asks.limit(e),this.bids.limit(e),this}update(e){return void 0!==e.nonce&&void 0!==this.nonce&&e.nonce<=this.nonce?this:(this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=i(this.timestamp),this.reset(e))}reset(e={}){if(this.asks.index.fill(Number.MAX_VALUE),this.asks.length=0,e.asks)for(let t=0;t<e.asks.length;t++)this.asks.storeArray(e.asks[t]);if(this.bids.index.fill(Number.MAX_VALUE),this.bids.length=0,e.bids)for(let t=0;t<e.bids.length;t++)this.bids.storeArray(e.bids[t]);return this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=i(this.timestamp),this.symbol=e.symbol,this}}t.exports={OrderBook:g,CountedOrderBook:class extends g{constructor(e={},t){super(r(e,{asks:new c(e.asks||[],t),bids:new d(e.bids||[],t)}))}},IndexedOrderBook:class extends g{constructor(e={},t){super(r(e,{asks:new h(e.asks||[],t),bids:new l(e.bids||[],t)}))}},IncrementalOrderBook:class extends g{constructor(e={},t){super(r(e,{asks:new u(e.asks||[],t),bids:new f(e.bids||[],t)}))}},IncrementalIndexedOrderBook:class extends g{constructor(e={},t){super(r(e,{asks:new p(e.asks||[],t),bids:new m(e.bids||[],t)}))}}}},{"./OrderBookSide":10,"ccxt/js/base/functions/generic.js":133,"ccxt/js/base/functions/time":139}],10:[function(e,t,s){"use strict";function i(e,t){let s=0,i=e.length-1;for(;s<=i;){const r=s+i>>>1;e[r]-t<0?s=r+1:i=r-1}return s}const r=new Float64Array(new Array(1024).fill(Number.MAX_VALUE));class a extends Array{constructor(e=[],t){super(),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0}),Object.defineProperty(this,"hidden",{__proto__:null,value:new Map,writable:!0}),this.length=0;for(let t=0;t<e.length;t++)this.storeArray(e[t].slice())}storeArray(e){const t=e[0],s=e[1],r=this.side?-t:t,a=i(this.index,r);if(s){if(this.index[a]===r)if(a<this.length)this[a][1]=s;else{this.hidden.get(r)[1]=s}else if(this.length++,this.index.copyWithin(a+1,a,this.index.length),this.index[a]=r,a<this.length?(this.copyWithin(a+1,a,this.length),this[a]=e):(this.hidden.set(r,e),this.length--),this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[a]===r&&(this.index.copyWithin(a,a+1,this.index.length),this.index[this.length+this.hidden.size-1]=Number.MAX_VALUE,this.hidden.has(r)?this.hidden.delete(r):(this.copyWithin(a,a+1,this.length),this.length--))}store(e,t){this.storeArray([e,t])}limit(e){if(e<this.length){for(let t=e;t<this.length;t++)this.hidden.set(this.index[t],this[t]);this.length=e}if(this.hidden.size){let t=this.length+this.hidden.size;void 0!==e&&(t=Math.min(t,e));for(let e=this.length;e<t;e++)this.push(this.hidden.get(this.index[e])),this.hidden.delete(this.index[e])}if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.index[e]=Number.MAX_VALUE;this.hidden.clear(),this.length=this.depth}}}class n extends a{store(e,t,s){this.storeArray([e,t,s])}storeArray(e){const t=e[0],s=e[1],r=e[2],a=this.side?-t:t,n=i(this.index,a);if(s&&r){if(this.index[n]==a)if(n<this.length){const e=this[n];e[1]=s,e[2]=r}else{const e=this.hidden.get(a);e[1]=s,e[2]=r}else if(this.length++,this.index.copyWithin(n+1,n,this.index.length),this.index[n]=a,n<this.length?(this.copyWithin(n+1,n,this.length),this[n]=e):(this.hidden.set(a,e),this.length--),this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[n]==a&&(this.index.copyWithin(n,n+1,this.index.length),this.index[this.length+this.hidden.size-1]=Number.MAX_VALUE,this.hidden.has(a)?this.hidden.delete(a):(this.copyWithin(n,n+1,this.length),this.length--))}}class o extends Array{constructor(e=[],t=Number.MAX_SAFE_INTEGER){super(e.length),Object.defineProperty(this,"hashmap",{__proto__:null,value:new Map,writable:!0}),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0}),Object.defineProperty(this,"hidden",{__proto__:null,value:new Map,writable:!0});for(let t=0;t<e.length;t++)this.length=t,this.storeArray(e[t].slice())}store(e,t,s){this.storeArray([e,t,s])}storeArray(e){const t=e[0],s=e[1],r=e[2];let a;if(a=void 0!==t?this.side?-t:t:void 0,s){if(this.hashmap.has(r)){const t=this.hashmap.get(r);if(a=a||t,e[0]=Math.abs(a),a===t){const t=i(this.index,a);return this.index[t]=a,void(t<this.length?this[t]=e:this.hidden.set(a,e))}{const e=i(this.index,t);this.index.copyWithin(e,e+1,this.index.length),this.index[this.length+this.hidden.size-1]=Number.MAX_VALUE,this.hidden.has(t)?this.hidden.delete(t):(this.copyWithin(e,e+1,this.length),this.length--)}}this.hashmap.set(r,a);const t=i(this.index,a);if(this.length++,this.index.copyWithin(t+1,t,this.index.length),this.index[t]=a,t<this.length?(this.copyWithin(t+1,t,this.length),this[t]=e):(this.hidden.set(a,e),this.length--),this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else if(this.hashmap.has(r)){const e=this.hashmap.get(r),t=i(this.index,e);this.index.copyWithin(t,t+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.hidden.has(e)?this.hidden.delete(e):(this.copyWithin(t,t+1,this.length),this.length--),this.hashmap.delete(r)}}limit(e){if(e<this.length){for(let t=e;t<this.length;t++)this.hidden.set(this.index[t],this[t]);this.length=e}if(this.hidden.size){let t=this.length+this.hidden.size;void 0!==e&&(t=Math.min(t,e));for(let e=this.length;e<t;e++)this.push(this.hidden.get(this.index[e])),this.hidden.delete(this.index[e])}if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.hashmap.delete(this.index[e]),this.index[e]=Number.MAX_VALUE;this.hidden.clear(),this.length=this.depth}}}t.exports={Asks:class extends a{get side(){return!1}},Bids:class extends a{get side(){return!0}},OrderBookSide:a,CountedAsks:class extends n{get side(){return!1}},CountedBids:class extends n{get side(){return!0}},CountedOrderBookSide:n,IndexedAsks:class extends o{get side(){return!1}},IndexedBids:class extends o{get side(){return!0}},IndexedOrderBookSide:o}},{}],11:[function(e,t,s){"use strict";const i=e("ccxt"),{sleep:r,isNode:a,milliseconds:n}=i,o=e("./Client"),c=a?e("ws"):window.WebSocket;t.exports=class extends o{createConnection(){this.verbose&&this.log(new Date,"connecting to",this.url),this.connectionStarted=n(),this.setConnectionTimeout(),this.connection=new c(this.url,this.protocols,this.options),this.connection.onopen=this.onOpen.bind(this),this.connection.onmessage=this.onMessage.bind(this),this.connection.onerror=this.onError.bind(this),this.connection.onclose=this.onClose.bind(this),a&&this.connection.on("ping",this.onPing.bind(this)).on("pong",this.onPong.bind(this)).on("upgrade",this.onUpgrade.bind(this))}connect(e=0){return this.startedConnecting||(this.startedConnecting=!0,e?r(e).then(this.createConnection.bind(this)):this.createConnection()),this.connected}isOpen(){return this.connection.readyState===c.OPEN}close(){if(this.connection instanceof c)return this.connection.close()}}},{"./Client":6,ccxt:123,ws:121}],12:[function(e,t,s){(function(s){"use strict";const{inflateRawSync:i,gunzipSync:r}=e("zlib");function a(e){return i(e).toString()}t.exports={inflate:a,inflate64:function(e){return a(s.from(e,"base64"))},gunzip:function(e){return r(e).toString()}}}).call(this,e("buffer").Buffer)},{buffer:65,zlib:64}],13:[function(e,t,s){"use strict";const i=e("./hitbtc.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg",api:{public:"https://api.bequant.io",private:"https://api.bequant.io"},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io"}})}}},{"./hitbtc.js":38}],14:[function(e,t,s){"use strict";const i=e("ccxt"),r=e("ccxt").Precise,{ExchangeError:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheByTimestamp:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.binance{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{test:{ws:{spot:"wss://testnet.binance.vision/ws",margin:"wss://testnet.binance.vision/ws",future:"wss://stream.binancefuture.com/ws",delivery:"wss://dstream.binancefuture.com/ws"}},api:{ws:{spot:"wss://stream.binance.com:9443/ws",margin:"wss://stream.binance.com:9443/ws",future:"wss://fstream.binance.com/ws",delivery:"wss://dstream.binance.com/ws"}}},options:{watchOrderBookRate:100,tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,requestId:{},watchOrderBookLimit:1e3,watchTrades:{name:"trade"},watchTicker:{name:"ticker"},watchBalance:{fetchBalanceSnapshot:!1,awaitBalanceSnapshot:!0},wallet:"wb",listenKeyRefreshRate:12e5,ws:{cost:5}}})}requestId(e){const t=this.safeValue(this.options,"requestId",{}),s=this.safeInteger(t,e,0),i=this.sum(s,1);return this.options.requestId[e]=i,i}async watchOrderBook(e,t,s={}){if(void 0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t&&1e3!==t)throw new a(this.id+" watchOrderBook limit argument must be undefined, 5, 10, 20, 50, 100, 500 or 1000");await this.loadMarkets();const i=this.safeString2(this.options,"watchOrderBook","defaultType","spot"),r=this.safeString(s,"type",i),n=this.omit(s,"type"),o=this.market(e),c="depth",d=o.lowercaseId+"@"+c,h=this.urls.api.ws[r],l=this.requestId(h),u={method:"SUBSCRIBE",params:[d+"@"+this.safeString(this.options,"watchOrderBookRate","100")+"ms"],id:l},f={id:l.toString(),messageHash:d,name:c,symbol:o.symbol,method:this.handleOrderBookSubscription,limit:t,type:r,params:s},p=this.extend(u,n);return(await this.watch(h,d,p,d,f)).limit(t)}async fetchOrderBookSnapshot(e,t,s){const i=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeValue(s,"type"),a=this.safeString(s,"symbol"),n=this.safeString(s,"messageHash"),o=this.safeInteger(s,"limit",i),c=this.safeValue(s,"params"),d=await this.fetchOrderBook(a,o,c),h=this.safeValue(this.orderbooks,a);if(void 0===h)return;h.reset(d);const l=h.cache;for(let t=0;t<l.length;t++){const s=l[t],i=this.safeInteger(s,"U"),a=this.safeInteger(s,"u"),n=this.safeInteger(s,"pu");if("future"===r){if(a<h.nonce)continue;(i<=h.nonce&&a>=h.nonce||n===h.nonce)&&this.handleOrderBookMessage(e,s,h)}else{if(a<=h.nonce)continue;i-1<=h.nonce&&a-1>=h.nonce&&this.handleOrderBookMessage(e,s,h)}}this.orderbooks[a]=h,e.resolve(h,n)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeInteger(t,"u");this.handleDeltas(s.asks,this.safeValue(t,"a",[])),this.handleDeltas(s.bids,this.safeValue(t,"b",[])),s.nonce=i;const r=this.safeInteger(t,"E");return s.timestamp=r,s.datetime=this.iso8601(r),s}handleOrderBook(e,t){const s=this.safeString(t,"s"),i=this.safeMarket(s),r=i.symbol,n=i.lowercaseId+"@depth",o=this.safeValue(this.orderbooks,r);if(void 0===o)return;const c=this.safeInteger(o,"nonce");if(void 0===c)o.cache.push(t);else try{const s=this.safeInteger(t,"U"),i=this.safeInteger(t,"u"),r=this.safeInteger(t,"pu");if(void 0===r){if(i>o.nonce){let r;if(r=void 0===this.safeInteger(o,"timestamp")?s-1<=o.nonce&&i-1>=o.nonce:s-1===o.nonce,!r)throw new a(this.id+" handleOrderBook received an out-of-order nonce");this.handleOrderBookMessage(e,t,o),c<o.nonce&&e.resolve(o,n)}}else if(i>=o.nonce){if(!(s<=o.nonce||r===o.nonce))throw new a(this.id+" handleOrderBook received an out-of-order nonce");this.handleOrderBookMessage(e,t,o),c<=o.nonce&&e.resolve(o,n)}}catch(t){delete this.orderbooks[r],delete e.subscriptions[n],e.reject(t,n)}}handleOrderBookSubscription(e,t,s){const i=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeString(s,"symbol"),a=this.safeInteger(s,"limit",i);r in this.orderbooks&&delete this.orderbooks[r],this.orderbooks[r]=this.orderBook({},a),this.spawn(this.fetchOrderBookSnapshot,e,t,s)}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeValue(this.options,"watchTrades",{}),n=this.safeString(a,"name","trade"),o=r.lowercaseId+"@"+n,c=this.safeString(this.options,"defaultType","spot"),d=this.safeString2(a,"type","defaultType",c),h=this.safeString(i,"type",d),l=this.omit(i,"type"),u=this.urls.api.ws[h],f=this.requestId(u),p={method:"SUBSCRIBE",params:[o],id:f},m={id:f},g=await this.watch(u,o,this.extend(p,l),o,m);return this.newUpdates&&(s=g.getLimit(e,s)),this.filterBySinceLimit(g,t,s,"timestamp",!0)}parseTrade(e,t){const s="TRADE"===this.safeString(e,"x");if(!s)return super.parseTrade(e,t);const i=this.safeString2(e,"t","a"),r=this.safeInteger(e,"T"),a=this.safeFloat2(e,"L","p");let n=this.safeFloat(e,"q");s&&(n=this.safeFloat(e,"l",n));let o=this.safeFloat(e,"Y");void 0===o&&void 0!==a&&void 0!==n&&(o=a*n);const c=this.safeString(e,"s"),d=this.safeSymbol(c);let h,l=this.safeStringLower(e,"S");const u=this.safeString(e,"i");let f;"m"in e&&(void 0===l&&(l=e.m?"sell":"buy"),h=e.m?"maker":"taker");const p=this.safeFloat(e,"n");if(void 0!==p){const t=this.safeString(e,"N");f={cost:p,currency:this.safeCurrencyCode(t)}}const m=this.safeStringLower(e,"o");return{info:e,timestamp:r,datetime:this.iso8601(r),symbol:d,id:i,order:u,type:m,takerOrMaker:h,side:l,price:a,amount:n,cost:o,fee:f}}handleTrade(e,t){const s=this.safeString(t,"s"),i=this.safeMarket(s),r=i.symbol,a=this.safeStringLower(t,"s")+"@"+this.safeString(t,"e"),o=this.parseTrade(t,i);let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new n(e)}c.append(o),this.trades[r]=c,e.resolve(c,a)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e).lowercaseId+"@kline_"+this.timeframes[t],n=this.safeValue(this.options,"watchOHLCV",{}),o=this.safeString(this.options,"defaultType","spot"),c=this.safeString2(n,"type","defaultType",o),d=this.safeString(r,"type",c),h=this.omit(r,"type"),l=this.urls.api.ws[d],u=this.requestId(l),f={method:"SUBSCRIBE",params:[a],id:u},p={id:u},m=await this.watch(l,a,this.extend(f,h),a,p);return this.newUpdates&&(i=m.getLimit(e,i)),this.filterBySinceLimit(m,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"s"),i=this.safeStringLower(t,"s"),r=this.safeString(t,"e"),a=this.safeValue(t,"k"),n=this.safeString(a,"i"),c=this.findTimeframe(n),d=i+"@"+r+"_"+n,h=[this.safeInteger(a,"t"),this.safeFloat(a,"o"),this.safeFloat(a,"h"),this.safeFloat(a,"l"),this.safeFloat(a,"c"),this.safeFloat(a,"v")],l=this.safeSymbol(s);this.ohlcvs[l]=this.safeValue(this.ohlcvs,l,{});let u=this.safeValue(this.ohlcvs[l],c);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new o(e),this.ohlcvs[l][c]=u}u.append(h),e.resolve(u,d)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e).lowercaseId,i=this.safeValue(this.options,"watchTicker",{}),r=s+"@"+this.safeString(i,"name","ticker"),a=this.safeString2(this.options,"defaultType","spot"),n=this.safeString2(i,"type","defaultType",a),o=this.safeString(t,"type",n),c=this.omit(t,"type"),d=this.urls.api.ws[o],h=this.requestId(d),l={method:"SUBSCRIBE",params:[r],id:h},u={id:h};return await this.watch(d,r,this.extend(l,c),r,u)}handleTicker(e,t){let s=this.safeString(t,"e","bookTicker");"24hrTicker"===s&&(s="ticker");const i=this.safeStringLower(t,"s")+"@"+s;let r;const a=this.milliseconds();r="bookTicker"===s?this.safeInteger(t,"E",a):this.safeInteger(t,"C",a);const n=this.safeString(t,"s"),o=this.safeSymbol(n),c=this.safeFloat(t,"c"),d={symbol:o,timestamp:r,datetime:this.iso8601(r),high:this.safeFloat(t,"h"),low:this.safeFloat(t,"l"),bid:this.safeFloat(t,"b"),bidVolume:this.safeFloat(t,"B"),ask:this.safeFloat(t,"a"),askVolume:this.safeFloat(t,"A"),vwap:this.safeFloat(t,"w"),open:this.safeFloat(t,"o"),close:c,last:c,previousClose:this.safeFloat(t,"x"),change:this.safeFloat(t,"p"),percentage:this.safeFloat(t,"P"),average:void 0,baseVolume:this.safeFloat(t,"v"),quoteVolume:this.safeFloat(t,"q"),info:t};this.tickers[o]=d,e.resolve(d,i)}async authenticate(e={}){const t=this.milliseconds();let s=this.safeString2(this.options,"defaultType","authenticate","spot");s=this.safeString(e,"type",s);const i=this.safeValue(this.options,s,{}),r=this.safeInteger(i,"lastAuthenticatedTime",0),a=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);if(t-r>this.sum(a,1e4)){let r="publicPostUserDataStream";"future"===s?r="fapiPrivatePostListenKey":"delivery"===s?r="dapiPrivatePostListenKey":"margin"===s&&(r="sapiPostUserDataStream");const n=await this[r]();this.options[s]=this.extend(i,{listenKey:this.safeString(n,"listenKey"),lastAuthenticatedTime:t}),this.delay(a,this.keepAliveListenKey,e)}}async keepAliveListenKey(e={}){let t=this.safeString2(this.options,"defaultType","authenticate","spot");t=this.safeString(e,"type",t);const s=this.safeValue(this.options,t,{}),i=this.safeString(s,"listenKey");if(void 0===i)return;let r="publicPutUserDataStream";"future"===t?r="fapiPrivatePutListenKey":"delivery"===t?r="dapiPrivatePutListenKey":"margin"===t&&(r="sapiPutUserDataStream");const a={listenKey:i},n=this.milliseconds(),o=this.omit(e,"type");try{await this[r](this.extend(a,o))}catch(e){const i=this.urls.api.ws[t]+"/"+this.options[t].listenKey,r=this.client(i),a=Object.keys(r.futures);for(let t=0;t<a.length;t++){const s=a[t];r.reject(e,s)}return void(this.options[t]=this.extend(s,{listenKey:void 0,lastAuthenticatedTime:0}))}this.options[t]=this.extend(s,{listenKey:i,lastAuthenticatedTime:n});const c=Object.values(this.clients),d=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);for(let s=0;s<c.length;s++){const i=c[s],r=Object.keys(i.subscriptions);for(let s=0;s<r.length;s++){if(r[s]===t)return this.delay(d,this.keepAliveListenKey,e)}}}setBalanceCache(e,t){if(t in e.subscriptions)return;const s=this.safeValue(this.options,"watchBalance");if(this.safeValue(s,"fetchBalanceSnapshot",!1)){const s=t+":fetchBalanceSnapshot";s in e.futures||(e.future(s),this.spawn(this.loadBalanceSnapshot,e,s,t))}else this.balance[t]={}}async loadBalanceSnapshot(e,t,s){const i=await this.fetchBalance({type:s});this.balance[s]=this.extend(i,this.balance[s]);e.futures[t].resolve(),e.resolve(this.balance[s],s+":balance")}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate(e);const t=this.safeString(this.options,"defaultType","spot"),s=this.safeString(e,"type",t),i=this.urls.api.ws[s]+"/"+this.options[s].listenKey,r=this.client(i);this.setBalanceCache(r,s);const a=this.safeValue(this.options,"watchBalance"),n=this.safeValue(a,"fetchBalanceSnapshot",!1),o=this.safeValue(a,"awaitBalanceSnapshot",!0);n&&o&&await r.future(s+":fetchBalanceSnapshot");const c=s+":balance";return await this.watch(i,c,undefined,s)}handleBalance(e,t){const s=this.safeValue(this.options,"wallet","wb"),i=Object.keys(e.subscriptions)[0],a=i+":balance";this.balance[i].info=t;if("balanceUpdate"===this.safeString(t,"e")){const e=this.safeString(t,"a"),s=this.safeCurrencyCode(e),a=this.account(),n=this.safeString(t,"d");if(s in this.balance[i]){let e=this.balance[i][s].free;"string"!=typeof e&&(e=this.numberToString(e)),a.free=r.stringAdd(e,n)}else a.free=n;this.balance[i][s]=a}else{t=this.safeValue(t,"a",t);const e=this.safeValue(t,"B");for(let t=0;t<e.length;t++){const r=e[t],a=this.safeString(r,"a"),n=this.safeCurrencyCode(a),o=this.account();o.free=this.safeString(r,"f"),o.used=this.safeString(r,"l"),o.total=this.safeString(r,s),this.balance[i][n]=o}}const n=this.safeInteger(t,"E");this.balance[i].timestamp=n,this.balance[i].datetime=this.iso8601(n),this.balance[i]=this.safeBalance(this.balance[i]),e.resolve(this.balance[i],a)}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.authenticate(i);const r=this.safeString2(this.options,"watchOrders","defaultType","spot"),a=this.safeString(i,"type",r),n=this.urls.api.ws[a]+"/"+this.options[a].listenKey;let o="orders";void 0!==e&&(o+=":"+e);const c=this.client(n);this.setBalanceCache(c,a);const d=await this.watch(n,o,undefined,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySymbolSinceLimit(d,e,t,s,!0)}parseWsOrder(e,t){const s=this.safeString(e,"x"),i=this.safeString(e,"i"),r=this.safeString(e,"s"),a=this.safeSymbol(r);let n=this.safeInteger(e,"O");const o=this.safeInteger(e,"T");let c,d;"NEW"===s?void 0===n&&(n=o):"TRADE"===s&&(c=o);const h=this.safeFloat(e,"n");if(void 0!==h&&h>0){const t=this.safeString(e,"N");d={cost:h,currency:this.safeCurrencyCode(t)}}const l=this.safeFloat(e,"p"),u=this.safeFloat(e,"q"),f=this.safeStringLower(e,"S"),p=this.safeStringLower(e,"o"),m=this.safeFloat(e,"z"),g=this.safeFloat(e,"Z");let y=u,b=this.safeFloat(e,"ap"),v=g;void 0!==m&&(void 0===v&&void 0!==l&&(v=m*l),void 0!==u&&(y=Math.max(u-m,0)),void 0===b&&void 0!==g&&m>0&&(b=g/m));const w=this.safeString(e,"X"),S=this.parseOrderStatus(w);let k=this.safeString(e,"C");void 0!==k&&0!==k.length||(k=this.safeString(e,"c"));const T=this.safeFloat2(e,"P","sp");let O=this.safeString(e,"f");return"GTX"===O&&(O="PO"),{info:e,symbol:a,id:i,clientOrderId:k,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:c,type:p,timeInForce:O,postOnly:void 0,side:f,price:l,stopPrice:T,amount:u,cost:v,average:b,filled:m,remaining:y,status:S,fee:d,trades:undefined}}handleOrderUpdate(e,t){"ORDER_TRADE_UPDATE"===this.safeString(t,"e")&&(t=this.safeValue(t,"o",t)),this.handleMyTrade(e,t),this.handleOrder(e,t)}async watchMyTrades(e,t,s,i={}){await this.loadMarkets(),await this.authenticate(i);const r=this.safeString2(this.options,"watchMyTrades","defaultType","spot"),a=this.safeString(i,"type",r),n=this.urls.api.ws[a]+"/"+this.options[a].listenKey;let o="myTrades";void 0!==e&&(o+=":"+e);const c=this.client(n);this.setBalanceCache(c,a);const d=await this.watch(n,o,undefined,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySymbolSinceLimit(d,e,t,s,!0)}handleMyTrade(e,t){const s="myTrades";if("TRADE"===this.safeString(t,"x")){const i=this.parseTrade(t),r=this.safeString(i,"order"),a=this.safeValue(i,"fee"),n=this.safeString(i,"symbol");if(void 0!==r&&void 0!==a&&void 0!==n){const e=this.orders;if(void 0!==e){const t=this.safeValue(e.hashmap,n,{}),s=this.safeValue(t,r);if(void 0!==s){const e=this.safeValue(s,"fees"),t=this.safeValue(s,"fee");if(void 0!==e){let t=!0;for(let i=0;i<e.length;i++){const r=e[i];if(r.currency===a.currency){const e=this.sum(a.cost,r.cost);s.fees[i].cost=parseFloat(this.currencyToPrecision(a.currency,e)),t=!1;break}}t&&s.fees.push(a)}else if(void 0!==t)if(t.currency===a.currency){const e=this.sum(t.cost,a.cost);s.fee.cost=parseFloat(this.currencyToPrecision(a.currency,e))}else void 0===t.currency?s.fee=a:(s.fees=[t,a],s.fee=void 0);else s.fee=a;const r=this.safeValue(s,"trades",[]);r.push(i),s.trades=r}}}if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new c(e)}this.myTrades.append(i),e.resolve(this.myTrades,s);const o=s+":"+n;e.resolve(this.myTrades,o)}}handleOrder(e,t){const s="orders",i=this.parseWsOrder(t),r=this.safeString(i,"symbol"),a=this.safeString(i,"id");if(void 0!==r){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new c(e)}const t=this.orders,n=this.safeValue(t.hashmap,r,{}),o=this.safeValue(n,a);if(void 0!==o){const e=this.safeValue(o,"fee");void 0!==e&&(i.fee=e);const t=this.safeValue(o,"fees");void 0!==t&&(i.fees=t),i.trades=this.safeValue(o,"trades"),i.timestamp=this.safeInteger(o,"timestamp"),i.datetime=this.safeString(o,"datetime")}t.append(i),e.resolve(this.orders,s);const d=s+":"+r;e.resolve(this.orders,d)}}handleMessage(e,t){const s={depthUpdate:this.handleOrderBook,trade:this.handleTrade,aggTrade:this.handleTrade,kline:this.handleOHLCV,"24hrTicker":this.handleTicker,bookTicker:this.handleTicker,outboundAccountPosition:this.handleBalance,balanceUpdate:this.handleBalance,ACCOUNT_UPDATE:this.handleBalance,executionReport:this.handleOrderUpdate,ORDER_TRADE_UPDATE:this.handleOrderUpdate},i=this.safeString(t,"e"),r=this.safeValue(s,i);if(void 0!==r)return r.call(this,e,t);if(void 0!==this.safeString(t,"id"))return this.handleSubscriptionStatus(e,t);void 0===i&&this.handleTicker(e,t)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],15:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg"},options:{defaultType:"delivery"}})}}},{"./binance.js":14}],16:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binanceus",name:"Binance US",countries:["US"],certified:!1,urls:{logo:"https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",api:{ws:{spot:"wss://stream.binance.us:9443/ws"},web:"https://www.binance.us",wapi:"https://api.binance.us/wapi/v3",public:"https://api.binance.us/api/v1",private:"https://api.binance.us/api/v3",v3:"https://api.binance.us/api/v3",v1:"https://api.binance.us/api/v1"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},options:{fetchCurrencies:!1,quoteOrderQty:!1},fees:{trading:{tierBased:!1,percentage:!0,taker:0,maker:0}}})}}},{"./binance.js":14}],17:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg"},options:{defaultType:"future"}})}}},{"./binance.js":14}],18:[function(e,t,s){"use strict";const i=e("./hitbtc.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitcoincom",name:"bitcoin.com",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg",api:{ws:"wss://api.fmfw.io/api/2/ws"}},fees:{trading:{maker:.0015,taker:.002}}})}}},{"./hitbtc.js":38}],19:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r,AuthenticationError:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.bitfinex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchTrades:!0,watchBalance:!1,watchOHLCV:!1},urls:{api:{ws:{public:"wss://api-pub.bitfinex.com/ws/1",private:"wss://api.bitfinex.com/ws/1"}}},options:{watchOrderBook:{prec:"P0",freq:"F0"},ordersLimit:1e3}})}async subscribe(e,t,s={}){await this.loadMarkets();const i=this.market(t).id,r=this.urls.api.ws.public,a=e+":"+i,n={event:"subscribe",channel:e,symbol:i,messageHash:a};return await this.watch(r,a,this.deepExtend(n,s),a)}async watchTrades(e,t,s,i={}){const r=await this.subscribe("trades",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrades(e,t,s){const i=this.safeValue(s,"channel"),r=this.safeString(s,"pair"),a=i+":"+r,o=this.safeInteger(this.options,"tradesLimit",1e3);if(r in this.markets_by_id){const s=this.markets_by_id[r],i=s.symbol,c=this.safeValue(t,1);let d=this.safeValue(this.trades,i);if(void 0===d&&(d=new n(o),this.trades[i]=d),Array.isArray(c)){const e=this.parseTrades(c,s);for(let t=0;t<e.length;t++)d.append(e[t])}else{if("tu"!==this.safeString(t,1))return;const e=this.parseTrade(t,s);d.append(e)}e.resolve(d,a)}return t}parseTrade(e,t){if(!Array.isArray(e))return super.parseTrade(e,t);const s=e.length;let i;"tu"===this.safeString(e,1)&&(i=this.safeString(e,s-4));const r=this.safeTimestamp(e,s-3),a=this.safeFloat(e,s-2);let n,o,c=this.safeFloat(e,s-1);void 0!==c&&(n=c>0?"buy":"sell",c=Math.abs(c)),void 0!==a&&void 0!==c&&(o=a*c);const d=this.safeString(e,2).split("-");let h=this.safeString(d,1);void 0!==h&&(h=h.replace("t",""));const l=this.safeSymbol(h,t);return{info:e,timestamp:r,datetime:this.iso8601(r),symbol:l,id:i,order:undefined,type:void 0,takerOrMaker:undefined,side:n,price:a,amount:c,cost:o,fee:void 0}}handleTicker(e,t,s){const i=this.milliseconds(),r=this.safeString(s,"pair"),a=this.safeSymbol(r),n="ticker:"+r,o=this.safeFloat(t,7),c=this.safeFloat(t,5);let d;void 0!==o&&void 0!==c&&(d=o-c);const h={symbol:a,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(t,9),low:this.safeFloat(t,10),bid:this.safeFloat(t,1),bidVolume:void 0,ask:this.safeFloat(t,3),askVolume:void 0,vwap:void 0,open:d,close:o,last:o,previousClose:void 0,change:c,percentage:this.safeFloat(t,6),average:void 0,baseVolume:this.safeFloat(t,8),quoteVolume:void 0,info:t};this.tickers[a]=h,e.resolve(h,n)}async watchOrderBook(e,t,s={}){if(void 0!==t&&25!==t&&100!==t)throw new r(this.id+" watchOrderBook limit argument must be undefined, 25 or 100");const i=this.safeValue(this.options,"watchOrderBook",{}),a={prec:this.safeString(i,"prec","P0"),freq:this.safeString(i,"freq","F0"),len:t};return(await this.subscribe("book",e,this.deepExtend(a,s))).limit(t)}handleOrderBook(e,t,s){const i=this.safeString(s,"pair"),r=this.safeSymbol(i),a="book:"+i,n="R0"===this.safeString(s,"prec","P0");if(Array.isArray(t[1])){const i=this.safeInteger(s,"len");this.orderbooks[r]=n?this.indexedOrderBook({},i):this.countedOrderBook({},i);const o=this.orderbooks[r];if(n){const e=t[1];for(let t=0;t<e.length;t++){const s=e[t],i=this.safeString(s,0),r=this.safeFloat(s,1),a=s[2]<0?-s[2]:s[2];o[s[2]<0?"asks":"bids"].store(r,a,i)}}else{const e=t[1];for(let t=0;t<e.length;t++){const s=e[t],i=s[2]<0?-s[2]:s[2];o[s[2]<0?"asks":"bids"].store(s[0],i,s[1])}}e.resolve(o,a)}else{const s=this.orderbooks[r];if(n){const e=this.safeString(t,1),i=this.safeFloat(t,2),r=t[3]<0?-t[3]:t[3],a=i>0?r:0;s[t[3]<0?"asks":"bids"].store(i,a,e)}else{const e=t[3]<0?-t[3]:t[3];s[t[3]<0?"asks":"bids"].store(t[1],e,t[2])}e.resolve(s,a)}}handleHeartbeat(e,t){const s=this.safeString(t,"event");e.resolve(t,s)}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){const s=this.safeString(t,"chanId");return e.subscriptions[s]=t,t}async authenticate(e={}){const t=this.urls.api.ws.private,s=this.client(t),i=s.future("authenticated"),r="auth";if(void 0===this.safeValue(s.subscriptions,r)){const e=this.milliseconds(),s="AUTH"+e.toString(),i=this.hmac(this.encode(s),this.encode(this.secret),"sha384","hex"),a={apiKey:this.apiKey,authSig:i,authNonce:e,authPayload:s,event:r,filter:["trading","wallet"]};this.spawn(this.watch,t,r,a,1)}return await i}handleAuthenticationMessage(e,t){if("OK"===this.safeString(t,"status")){this.safeValue(e.futures,"authenticated").resolve(!0)}else{const s=new a(this.json(t));e.reject(s,"authenticated");const i=this.safeString(t,"event");i in e.subscriptions&&delete e.subscriptions[i]}}async watchOrder(e,t,s={}){await this.loadMarkets();const i=this.urls.api.ws.private;return await this.authenticate(),await this.watch(i,e,void 0,1)}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.authenticate();const r=this.urls.api.ws.private,a=await this.watch(r,"os",void 0,1);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}handleOrders(e,t,s){const i=this.safeValue(t,2,[]);if("os"===this.safeString(t,1))for(let t=0;t<i.length;t++){const s=i[t];this.handleOrder(e,s)}else this.handleOrder(e,i);void 0!==this.orders&&e.resolve(this.orders,"os")}parseWsOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled"},e,e)}handleOrder(e,t){const s=this.safeString(t,0),i=this.safeString(t,1),r=this.safeSymbol(i);let a=this.safeFloat(t,2),n=this.safeFloat(t,3),c="buy";a<0&&(a=Math.abs(a),n=Math.abs(n),c="sell");let d=this.safeString(t,4);d.indexOf("LIMIT")>-1?d="limit":d.indexOf("MARKET")>-1&&(d="market");const h=this.parseWsOrderStatus(this.safeString(t,5)),l=this.safeFloat(t,6),u=this.safeString(t,8),f=this.parse8601(u),p={info:t,id:s,clientOrderId:void 0,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,symbol:r,type:d,side:c,price:l,stopPrice:void 0,average:void 0,amount:a,remaining:n,filled:a-n,status:h,fee:void 0,cost:void 0,trades:void 0};if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new o(e)}return this.orders.append(p),e.resolve(p,s),p}handleMessage(e,t){if(Array.isArray(t)){const s=this.safeString(t,0);if("hb"===t[1])return t;const i=this.safeValue(e.subscriptions,s,{}),r=this.safeString(i,"channel"),a=this.safeString(t,1),n={book:this.handleOrderBook,ticker:this.handleTicker,trades:this.handleTrades,os:this.handleOrders,on:this.handleOrders,oc:this.handleOrders},o=this.safeValue2(n,r,a);return void 0===o?t:o.call(this,e,t,i)}{const s=this.safeString(t,"event");if(void 0!==s){const i={info:this.handleSystemStatus,subscribed:this.handleSubscriptionStatus,auth:this.handleAuthenticationMessage},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],20:[function(e,t,s){"use strict";const i=e("ccxt"),{ArgumentsRequired:r,AuthenticationError:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheByTimestamp:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.bitmart{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchOHLCV:!0},urls:{api:{ws:{public:"wss://ws-manager-compress.{hostname}/api?protocol=1.1",private:"wss://ws-manager-compress.{hostname}/user?protocol=1.1"}}},options:{defaultType:"spot",watchOrderBook:{depth:"depth5"},ws:{inflate:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","45m":"45m","1h":"1H","2h":"2H","3h":"3H","4h":"4H","1d":"1D","1w":"1W","1M":"1M"}},streaming:{keepAlive:15e3}})}async subscribe(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=this.implodeHostname(this.urls.api.ws.public),a=i.type+"/"+e+":"+i.id,n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,s),a)}async subscribePrivate(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=this.implodeHostname(this.urls.api.ws.private),a=e+":"+i.id;await this.authenticate();const n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,s),a)}async watchTrades(e,t,s,i={}){const r=await this.subscribe("trade",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}async watchOrders(e,t,s,i={}){if(void 0===e)throw new r(this.id+" watchOrders requires a symbol argument");await this.loadMarkets();if("spot"!==this.market(e).type)throw new r(this.id+" watchOrders supports spot markets only");const a=await this.subscribePrivate("spot/user/order",e,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}handleOrders(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]);if(i.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new c(t));const r=this.orders,a=[];for(let e=0;e<i.length;e++){const t=this.parseWsOrder(i[e]);r.append(t);const s=t.symbol,n=this.market(s);a.push(n.id)}for(let t=0;t<a.length;t++){const i=s+":"+a[t];e.resolve(this.orders,i)}}}parseWsOrder(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeString(e,"order_id"),r=this.safeString(e,"clientOid"),a=this.safeString(e,"price"),n=this.safeString(e,"filled_size"),o=this.safeString(e,"size"),c=this.safeString(e,"type"),d=this.safeString(e,"state"),h=this.parseOrderStatusByType(t.type,d),l=this.safeInteger(e,"ms_t"),u=t.symbol,f=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:u,id:i,clientOrderId:r,timestamp:void 0,datetime:void 0,lastTradeTimestamp:l,type:c,timeInForce:void 0,postOnly:void 0,side:f,price:a,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:h,fee:void 0,trades:void 0},t)}handleTrade(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]),r=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<i.length;t++){const a=this.parseTrade(i[t]),o=a.symbol,c=s+":"+this.safeString(a.info,"symbol");let d=this.safeValue(this.trades,o);void 0===d&&(d=new n(r),this.trades[o]=d),d.append(a),e.resolve(d,c)}return t}handleTicker(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){const r=this.parseTicker(i[t]),a=r.symbol,n=s+":"+this.safeString(r.info,"symbol");this.tickers[a]=r,e.resolve(r,n)}return t}async watchOHLCV(e,t="1m",s,i,r={}){const a=this.safeValue(this.options,"timeframes",{}),n="kline"+this.safeString(a,t),o=await this.subscribe(n,e,r);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]),r=s.split("/"),a=this.safeString(r,1).replace("kline",""),n=this.safeValue(this.options,"timeframes",{}),c=this.findTimeframe(a,n),d=1e3*this.parseTimeframe(c);for(let t=0;t<i.length;t++){const r=this.safeString(i[t],"symbol"),a=this.safeValue(i[t],"candle"),n=this.safeMarket(r),h=n.symbol,l=this.parseOHLCV(a,n);l[0]=parseInt(l[0]/d)*d,this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let u=this.safeValue(this.ohlcvs[h],c);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new o(e),this.ohlcvs[h][c]=u}u.append(l);const f=s+":"+r;e.resolve(u,f)}}async watchOrderBook(e,t,s={}){const i=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(i,"depth","depth400");return(await this.subscribe(r,e,s)).limit(t)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(s.asks,i),this.handleDeltas(s.bids,r);const a=this.safeInteger(t,"ms_t"),n=this.safeString(t,"symbol"),o=this.safeSymbol(n);return s.symbol=o,s.timestamp=a,s.datetime=this.iso8601(a),s}handleOrderBook(e,t){const s=this.safeValue(t,"data",[]),i=this.safeString(t,"table"),r=i.split("/"),a=this.safeString(r,1).replace("depth",""),n=parseInt(a);for(let t=0;t<s.length;t++){const r=s[t],a=this.safeString(r,"symbol"),o=this.safeSymbol(a);let c=this.safeValue(this.orderbooks,o);void 0===c&&(c=this.orderBook({},n),this.orderbooks[o]=c),c.reset({}),this.handleOrderBookMessage(e,r,c);const d=i+":"+a;e.resolve(c,d)}return t}async authenticate(e={}){this.checkRequiredCredentials();const t=this.implodeHostname(this.urls.api.ws.private),s="login",i=this.client(t);let r=this.safeValue(i.subscriptions,s);if(void 0===r){r=i.future("authenticated");const e=this.milliseconds().toString(),a=e+"#"+this.uid+"#"+"bitmart.WebSocket",n=this.hmac(this.encode(a),this.encode(this.secret),"sha256"),o={op:s,args:[this.apiKey,e,n]};this.spawn(this.watch,t,s,o,s,r)}return await r}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}handleErrorMessage(e,t){const s=this.safeString(t,"errorCode");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);const i=this.safeValue(t,"message");void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}}catch(t){if(t instanceof a){e.reject(t,"authenticated");const s="login";return s in e.subscriptions&&delete e.subscriptions[s],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;const s=this.safeString(t,"table");if(void 0!==s){const i=s.split("/"),r=this.safeString(i,1),a={depth:this.handleOrderBook,depth5:this.handleOrderBook,depth400:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade};let n=this.safeValue(a,r);r.indexOf("kline")>=0&&(n=this.handleOHLCV);return"order"===this.safeString(i,2)&&(n=this.handleOrders),void 0===n?t:n.call(this,e,t)}{const s=this.safeString(t,"event");if(void 0!==s){const i={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],21:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,ExchangeError:a,RateLimitExceeded:n}=e("ccxt/js/base/errors"),{ArrayCache:o,ArrayCacheByTimestamp:c,ArrayCacheBySymbolById:d}=e("./base/Cache");t.exports=class extends i.bitmex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{test:{ws:"wss://testnet.bitmex.com/realtime"},api:{ws:"wss://www.bitmex.com/realtime"}},versions:{ws:"0.2.0"},options:{watchOrderBookLevel:"orderBookL2",tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{ws:{exact:{},broad:{"Rate limit exceeded":n}}}})}async watchTicker(e,t={}){await this.loadMarkets();const s="instrument:"+this.market(e).id,i=this.urls.api.ws,r={op:"subscribe",args:[s]};return await this.watch(i,s,this.extend(r,t),s)}handleTicker(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){const r=i[t],a=this.safeValue(r,"symbol"),n=this.safeMarket(a),o=n.symbol,c=s+":"+a;let d=this.safeValue(this.tickers,o,{});const h=this.safeValue(d,"info",{});d=this.parseTicker(this.extend(h,r),n),this.tickers[o]=d,e.resolve(d,c)}return t}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate();const t="margin",s=this.urls.api.ws,i={op:"subscribe",args:[t]};return await this.watch(s,t,this.extend(i,e),t)}handleBalance(e,t){const s=this.safeValue(t,"data"),i=this.parseBalance(s);this.balance=this.extend(this.balance,i);const r=this.safeString(t,"table");e.resolve(this.balance,r)}handleTrades(e,t){const s=this.safeValue(t,"data",[]),i=this.groupBy(s,"symbol"),r=Object.keys(i);for(let t=0;t<r.length;t++){const s=r[t],a=this.safeMarket(s),n="trade:"+s,c=a.symbol,d=this.parseTrades(i[s],a);let h=this.safeValue(this.trades,c);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new o(e),this.trades[c]=h}for(let e=0;e<d.length;e++)h.append(d[e]);e.resolve(h,n)}}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r="trade:"+this.market(e).id,a=this.urls.api.ws,n={op:"subscribe",args:[r]},o=await this.watch(a,r,this.extend(n,i),r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,t,s,"timestamp",!0)}async authenticate(e={}){const t=this.urls.api.ws,s=this.client(t),i=s.future("authenticated"),r="authKeyExpires";if(void 0===this.safeValue(s.subscriptions,r))try{this.checkRequiredCredentials();const e=this.milliseconds(),s="GET/realtime"+e.toString(),i=this.hmac(this.encode(s),this.encode(this.secret)),a={op:r,args:[this.apiKey,e,i]};this.spawn(this.watch,t,r,a,r)}catch(e){s.reject(e,"authenticated"),r in s.subscriptions&&delete s.subscriptions[r]}return await i}handleAuthenticationMessage(e,t){if(this.safeValue(t,"success",!1)){this.safeValue(e.futures,"authenticated").resolve(!0)}else{const s=new r(this.json(t));e.reject(s,"authenticated");const i="authKeyExpires";i in e.subscriptions&&delete e.subscriptions[i]}}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.authenticate();const r="order",a=r;let n=r;void 0!==e&&(n+=":"+e);const o=this.urls.api.ws,c={op:"subscribe",args:[a]},d=await this.watch(o,n,c,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySymbolSinceLimit(d,e,t,s,!0)}handleOrders(e,t){const s=this.safeValue(t,"data",[]),i="order",r=s.length;if(r>0){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new d(e)}const t=this.orders,a={};for(let e=0;e<r;e++){const i=s[e],r=this.safeString(i,"orderID"),n=this.safeValue(t.hashmap,r);let o=i;void 0!==n&&(o=this.extend(n.info,i));const c=this.parseOrder(o);t.append(c);a[c.symbol]=!0}e.resolve(this.orders,i);const n=Object.keys(a);for(let t=0;t<n.length;t++){const s=n[t];e.resolve(this.orders,i+":"+s)}}}async watchMyTrades(e,t,s,i={}){await this.loadMarkets(),await this.authenticate();const r="execution",a=r;let n=r;void 0!==e&&(n+=":"+e);const o=this.urls.api.ws,c={op:"subscribe",args:[a]},d=await this.watch(o,n,c,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySymbolSinceLimit(d,e,t,s,!0)}handleMyTrades(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]),r=this.groupBy(i,"execType"),a=this.safeValue(r,"Trade",[]),n=this.parseTrades(a);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new d(e)}const o=this.myTrades,c={};for(let e=0;e<n.length;e++){const t=n[e],s=t.symbol;o.append(t),c[s]=t}n.length>0&&e.resolve(o,s);const h=Object.keys(c);for(let t=0;t<h.length;t++)e.resolve(o,s+":"+h[t])}async watchOrderBook(e,t,s={}){let i;if(void 0===t)i=this.safeString(this.options,"watchOrderBookLevel","orderBookL2");else if(25===t)i="orderBookL2_25";else{if(10!==t)throw new a(this.id+" watchOrderBook limit argument must be undefined (L2), 25 (L2) or 10 (L3)");i="orderBookL10"}await this.loadMarkets();const r=i+":"+this.market(e).id,n=this.urls.api.ws,o={op:"subscribe",args:[r]};return(await this.watch(n,r,this.deepExtend(o,s),r)).limit(t)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n="tradeBin"+this.timeframes[t]+":"+a.id,o=this.urls.api.ws,c={op:"subscribe",args:[n]},d=await this.watch(o,n,this.extend(c,r),n);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"table"),i=s.replace("tradeBin",""),r=this.findTimeframe(i),a=this.parseTimeframe(r),n=this.safeValue(t,"data",[]),o={};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"symbol"),d=this.safeMarket(i),h=d.symbol,l=s+":"+d.id,u=[this.parse8601(this.safeString(t,"timestamp"))-1e3*a,this.safeFloat(t,"open"),this.safeFloat(t,"high"),this.safeFloat(t,"low"),this.safeFloat(t,"close"),this.safeFloat(t,"volume")];this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let f=this.safeValue(this.ohlcvs[h],r);if(void 0===f){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);f=new c(e),this.ohlcvs[h][r]=f}f.append(u),o[l]=f}const d=Object.keys(o);for(let t=0;t<d.length;t++){const s=d[t];e.resolve(o[s],s)}}async watchHeartbeat(e={}){await this.loadMarkets();const t=this.urls.api.ws;return await this.watch(t,"heartbeat")}handleOrderBook(e,t){const s=this.safeString(t,"action"),i=this.safeString(t,"table"),r=this.safeValue(t,"data",[]);if("partial"===s){const s=this.safeValue(t,"filter",{}),a=this.safeValue(s,"symbol"),n=this.safeMarket(a).symbol;"orderBookL2"===i?this.orderbooks[n]=this.indexedOrderBook():"orderBookL2_25"===i?this.orderbooks[n]=this.indexedOrderBook({},25):"orderBook10"===i&&(this.orderbooks[n]=this.indexedOrderBook({},10));const o=this.orderbooks[n];for(let e=0;e<r.length;e++){const t=this.safeFloat(r[e],"price"),s=this.safeFloat(r[e],"size"),i=this.safeString(r[e],"id");let a=this.safeString(r[e],"side");a="Buy"===a?"bids":"asks";o[a].store(t,s,i)}const c=i+":"+a;e.resolve(o,c)}else{const t={};for(let e=0;e<r.length;e++){const s=this.safeValue(r[e],"symbol");s in t||(t[s]=0),t[s]=this.sum(t,1);const i=this.safeMarket(s).symbol,a=this.orderbooks[i],n=this.safeFloat(r[e],"price"),o=this.safeFloat(r[e],"size",0),c=this.safeString(r[e],"id");let d=this.safeString(r[e],"side");d="Buy"===d?"bids":"asks";a[d].store(n,o,c)}const s=Object.keys(t);for(let t=0;t<s.length;t++){const r=s[t],a=i+":"+r,n=this.safeMarket(r).symbol,o=this.orderbooks[n];e.resolve(o,a)}}}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){return t}handleErrorMessage(e,t){const s=this.safeValue(t,"error");if(void 0!==s){const i=this.safeValue(t,"request",{}),r=this.safeString(i,"args",[]);if(r.length>0){const t=r[0],i=this.exceptions.ws.broad,n=this.findBroadlyMatchedKey(i,s);let o;return o=void 0===n?new a(s):new i[n](s),e.reject(o,t),!1}}return!0}handleMessage(e,t){if(this.handleErrorMessage(e,t)){const s=this.safeString(t,"table"),i={orderBookL2:this.handleOrderBook,orderBookL2_25:this.handleOrderBook,orderBook10:this.handleOrderBook,instrument:this.handleTicker,trade:this.handleTrades,tradeBin1m:this.handleOHLCV,tradeBin5m:this.handleOHLCV,tradeBin1h:this.handleOHLCV,tradeBin1d:this.handleOHLCV,order:this.handleOrders,execution:this.handleMyTrades,margin:this.handleBalance},r=this.safeValue(i,s);if(void 0===r){const s=this.safeValue(t,"request",{});return"authKeyExpires"===this.safeValue(s,"op")?this.handleAuthenticationMessage.call(this,e,t):t}return r.call(this,e,t)}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],22:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r}=e("ccxt/js/base/errors"),{ArrayCache:a}=e("./base/Cache");t.exports=class extends i.bitopro{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!1,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{ws:{public:"wss://stream.bitopro.com:9443/ws/v1/pub",private:"wss://stream.bitopro.com:9443/ws/v1/pub/auth"}},requiredCredentials:{apiKey:!0,secret:!0,login:!0},options:{tradesLimit:1e3,ordersLimit:1e3,ws:{options:{headers:{}}}}})}async watchPublic(e,t,s){const i=this.urls.ws.public+"/"+e+"/"+s;return await this.watch(i,t,void 0,t)}async watchOrderBook(e,t,s={}){if(void 0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t&&1e3!==t)throw new r(this.id+" watchOrderBook limit argument must be undefined, 5, 10, 20, 50, 100, 500 or 1000");await this.loadMarkets();const i=this.market(e),a="ORDER_BOOK:"+e;let n;n=void 0===t?i.id:i.id+":"+t;return(await this.watchPublic("order-books",a,n)).limit(t)}handleOrderBook(e,t){const s=this.safeString(t,"pair"),i=this.safeMarket(s,void 0,"_").symbol,r=this.safeString(t,"event")+":"+i;let a=this.safeValue(this.orderbooks,i);void 0===a&&(a=this.orderBook({}));const n=this.safeInteger(t,"timestamp"),o=this.parseOrderBook(t,i,n,"bids","asks","price","amount");a.reset(o),e.resolve(a,r)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a="TRADE:"+e,n=await this.watchPublic("trades",a,r.id,s);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,t,s,"timestamp",!0)}handleTrade(e,t){const s=this.safeString(t,"pair"),i=this.safeMarket(s,void 0,"_"),r=i.symbol,n=this.safeString(t,"event")+":"+r,o=this.safeValue(t,"data",[]),c=this.parseTrades(o,i);let d=this.safeValue(this.trades,r);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a(e)}for(let e=0;e<c.length;e++)d.append(c[e]);this.trades[r]=d,e.resolve(d,n)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="TICKER:"+e;return await this.watchPublic("tickers",i,s.id)}handleTicker(e,t){const s=this.safeString(t,"pair"),i=this.safeMarket(s,void 0,"_").symbol,r=this.safeString(t,"event")+":"+i,a=this.parseTicker(t),n=this.safeInteger(t,"timestamp"),o=this.safeString(t,"datetime");a.timestamp=n,a.datetime=o,this.tickers[i]=a,e.resolve(a,r)}authenticate(e){if(void 0!==this.clients&&e in this.clients)return;this.checkRequiredCredentials();const t=this.milliseconds(),s=this.json({nonce:t,identity:this.login}),i=this.stringToBase64(s),r=this.hmac(i,this.encode(this.secret),"sha384");this.options=this.extend({ws:{options:{headers:{}}}},this.options);const a=this.options.ws.options.headers;this.options.ws.options.headers={"X-BITOPRO-API":"ccxt","X-BITOPRO-APIKEY":this.apiKey,"X-BITOPRO-PAYLOAD":i,"X-BITOPRO-SIGNATURE":r},this.client(e),this.options.ws.options.headers=a}async watchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t="ACCOUNT_BALANCE",s=this.urls.ws.private+"/account-balance";return this.authenticate(s),await this.watch(s,t,void 0,t)}handleBalance(e,t){const s=this.safeString(t,"event"),i=this.safeValue(t,"data"),r=Object.keys(i),a={};for(let e=0;e<r.length;e++){const t=this.safeString(r,e),s=this.safeValue(i,t),n=this.safeString(s,"currency"),o=this.safeCurrencyCode(n),c=this.account();c.free=this.safeString(s,"available"),c.total=this.safeString(s,"amount"),a[o]=c}this.balance=this.safeBalance(a),e.resolve(this.balance,s)}handleMessage(e,t){const s={TRADE:this.handleTrade,TICKER:this.handleTicker,ORDER_BOOK:this.handleOrderBook,ACCOUNT_BALANCE:this.handleBalance},i=this.safeString(t,"event"),r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],23:[function(e,t,s){"use strict";const i=e("ccxt"),{ArgumentsRequired:r,AuthenticationError:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.bitstamp{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchOHLCV:!1,watchTicker:!1,watchTickers:!1},urls:{api:{ws:"wss://ws.bitstamp.net"}},options:{expiresIn:"",userId:"",wsSessionToken:"",watchOrderBook:{type:"order_book"},tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{exact:{4009:a}}})}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.safeValue(this.options,"watchOrderBook",{}),a=this.safeString(r,"type","order_book"),n=a+"_"+i.id,o=this.urls.api.ws,c={event:"bts:subscribe",data:{channel:n}},d={messageHash:n,type:a,symbol:e,method:this.handleOrderBookSubscription,limit:t,params:s},h=this.extend(c,s);return(await this.watch(o,n,h,n,d)).limit(t)}async fetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeValue(s,"params"),n=this.safeString(s,"messageHash"),o=await this.fetchOrderBook(i,r,a),c=this.safeValue(this.orderbooks,i);if(void 0!==c){c.reset(o);const t=c.cache;for(let s=0;s<t.length;s++){const i=t[s];this.handleOrderBookMessage(e,i,c)}this.orderbooks[i]=c,e.resolve(c,n)}}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1),r=this.safeString(t,2);void 0===r?e.store(s,i):e.store(s,i,r)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s,i){const r=this.safeValue(t,"data",{}),a=this.safeInteger(r,"microtimestamp");if(void 0!==i&&a<=i)return s;this.handleDeltas(s.asks,this.safeValue(r,"asks",[])),this.handleDeltas(s.bids,this.safeValue(r,"bids",[])),s.nonce=a;const n=parseInt(a/1e3);return s.timestamp=n,s.datetime=this.iso8601(n),s}handleOrderBook(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(e.subscriptions,s),r=this.safeString(i,"symbol"),a=this.safeString(i,"type"),n=this.safeValue(this.orderbooks,r);if(void 0===n)return t;if("order_book"===a)n.reset({}),this.handleOrderBookMessage(e,t,n),e.resolve(n,s);else if("detail_order_book"===a)n.reset({}),this.handleOrderBookMessage(e,t,n),e.resolve(n,s);else if("diff_order_book"===a){const i=this.safeInteger(n,"nonce");if(void 0===i)n.cache.push(t);else try{this.handleOrderBookMessage(e,t,n,i),e.resolve(n,s)}catch(t){r in this.orderbooks&&delete this.orderbooks[r],s in e.subscriptions&&delete e.subscriptions[s],e.reject(t,s)}}}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeValue(this.options,"watchTrades",{}),n=this.safeString(a,"type","live_trades"),o=n+"_"+r.id,c=this.urls.api.ws,d={event:"bts:subscribe",data:{channel:o}},h={messageHash:o,type:n,symbol:e,limit:s,params:i},l=this.extend(d,i),u=await this.watch(c,o,l,o,h);return this.newUpdates&&(s=u.getLimit(e,s)),this.filterBySinceLimit(u,t,s,"timestamp",!0)}parseTrade(e,t){const s=this.safeInteger(e,"microtimestamp");if(void 0===s)return super.parseTrade(e,t);const i=this.safeString(e,"id"),r=parseInt(s/1e3),a=this.safeFloat(e,"price"),n=this.safeFloat(e,"amount");let o,c;void 0!==a&&void 0!==n&&(o=a*n);const d=this.safeString(e,"s");d in this.markets_by_id&&(t=this.markets_by_id[d]),void 0===c&&void 0!==t&&(c=t.symbol);let h=this.safeInteger(e,"type");return h=0===h?"buy":"sell",{info:e,timestamp:r,datetime:this.iso8601(r),symbol:c,id:i,order:void 0,type:void 0,takerOrMaker:void 0,side:h,price:a,amount:n,cost:o,fee:void 0}}handleTrade(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"data"),r=this.safeValue(e.subscriptions,s),a=this.safeString(r,"symbol"),o=this.market(a),c=this.parseTrade(i,o);let d=this.safeValue(this.trades,a);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new n(e),this.trades[a]=d}d.append(c),e.resolve(d,s)}async watchOrders(e,t,s,i={}){if(void 0===e)throw new r(this.id+" watchOrders requires a symbol argument");await this.loadMarkets();const a="private-my_orders",n=a+"_"+this.market(e).id,o={symbol:e,limit:s,type:a,params:i},c=await this.subscribePrivate(o,n,i);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleOrders(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"data",{}),r=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new o(r));const a=this.orders,n=this.safeValue(e.subscriptions,s),c=this.safeString(n,"symbol"),d=this.market(c),h=this.parseWsOrder(i,d);a.append(h),e.resolve(this.orders,s)}parseWsOrder(e,t){const s=this.safeString(e,"id_str"),i=this.safeStringLower(e,"order_type"),r=this.safeString(e,"price_str"),a=this.safeString(e,"amount_str"),n="1"===i?"sell":"buy",o=this.safeIntegerProduct(e,"datetime",1e3),c=(t=this.safeMarket(void 0,t)).symbol;return this.safeOrder({info:e,symbol:c,id:s,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,type:void 0,timeInForce:void 0,postOnly:void 0,side:n,price:r,stopPrice:void 0,amount:a,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0},t)}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"type"),r=this.safeString(s,"symbol");if(r in this.orderbooks&&delete this.orderbooks[r],"order_book"===i){const e=this.safeInteger(s,"limit",100);this.orderbooks[r]=this.orderBook({},e)}else if("detail_order_book"===i){const e=this.safeInteger(s,"limit",100);this.orderbooks[r]=this.indexedOrderBook({},e)}else if("diff_order_book"===i){const i=this.safeInteger(s,"limit");this.orderbooks[r]=this.orderBook({},i),this.spawn(this.fetchOrderBookSnapshot,e,t,s)}}handleSubscriptionStatus(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(e.subscriptions,s,{}),r=this.safeValue(i,"method");return void 0!==r&&r.call(this,e,t,i),t}handleSubject(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(e.subscriptions,s),r=this.safeString(i,"type"),a={live_trades:this.handleTrade,order_book:this.handleOrderBook,detail_order_book:this.handleOrderBook,diff_order_book:this.handleOrderBook,"private-my_orders":this.handleOrders},n=this.safeValue(a,r);return void 0===n?t:n.call(this,e,t)}handleErrorMessage(e,t){if("bts:error"===this.safeString(t,"event")){const e=this.id+" "+this.json(t),s=this.safeValue(t,"data",{}),i=this.safeNumber(s,"code");this.throwExactlyMatchedException(this.exceptions.exact,i,e)}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;return"bts:subscription_succeeded"===this.safeString(t,"event")?this.handleSubscriptionStatus(e,t):this.handleSubject(e,t)}async authenticate(e={}){this.checkRequiredCredentials();const t=this.milliseconds();if(t>this.safeInteger(this.options,"expiresIn")){const s=await this.privatePostWebsocketsToken(e),i=this.safeString(s,"token");if(void 0!==i){const e=this.safeNumber(s,"user_id"),r=this.safeIntegerProduct(s,"valid_sec",1e3);return this.options.expiresIn=this.sum(t,r),this.options.userId=e,this.options.wsSessionToken=i,s}}}async subscribePrivate(e,t,s={}){const i=this.urls.api.ws;await this.authenticate();const r={event:"bts:subscribe",data:{channel:t+="-"+this.options.userId,auth:this.options.wsSessionToken}};return e.messageHash=t,await this.watch(i,t,this.extend(r,s),t,e)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],24:[function(e,t,s){"use strict";const i=e("ccxt"),{InvalidNonce:r,BadRequest:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheByTimestamp:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.bittrex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchHeartbeat:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:"wss://socket-v3.bittrex.com/signalr/connect",signalr:"https://socket-v3.bittrex.com/signalr"}},api:{signalr:{get:["negotiate","start"]}},options:{tradesLimit:1e3,hub:"c3",I:this.milliseconds()}})}getSignalRUrl(e){const t=this.safeString(e.response,"ConnectionToken"),s=this.extend(e.request,{connectionToken:t});return this.urls.api.ws+"?"+this.urlencode(s)}makeRequest(e,t,s){return{H:this.safeString(this.options,"hub","c3"),M:t,A:s,I:e}}makeRequestToSubscribe(e,t){return this.makeRequest(e,"Subscribe",t)}makeRequestToAuthenticate(e){const t=this.milliseconds(),s=this.uuid(),i=t.toString()+s,r=this.hmac(this.encode(i),this.encode(this.secret),"sha512"),a=[this.apiKey,t,s,r];return this.makeRequest(e,"Authenticate",a)}requestId(){const e=this.sum(this.safeInteger(this.options,"I",0),1);return this.options.I=e,e}async sendRequestToSubscribe(e,t,s,i={}){const r=[t],a=this.requestId().toString(),n=this.makeRequestToSubscribe(a,[r]);s=this.extend({id:a,negotiation:e},s);const o=this.getSignalRUrl(e);return await this.watch(o,t,n,t,s)}async authenticate(e={}){await this.loadMarkets();const t=await this.negotiate();return await this.sendRequestToAuthenticate(t,!1,e)}async sendRequestToAuthenticate(e,t=!1,s={}){const i=this.getSignalRUrl(e),r=this.client(i),a="authenticate";let n=this.safeValue(r.subscriptions,a);if(void 0===n||t){n=r.future(a),r.subscriptions[a]=n;const t=this.requestId().toString(),o=this.makeRequestToAuthenticate(t),c={id:t,params:s,negotiation:e,method:this.handleAuthenticate};this.spawn(this.watch,i,a,o,t,c)}return await n}async sendAuthenticatedRequestToSubscribe(e,t,s={}){const i=this.safeValue(e,"negotiation"),r={params:s};return await this.sendRequestToSubscribe(i,t,r,s)}handleAuthenticate(e,t,s){const i=this.safeString(s,"id");i in e.subscriptions&&delete e.subscriptions[i],e.resolve(s,"authenticate")}async handleAuthenticationExpiringHelper(){const e=await this.negotiate();return await this.sendRequestToAuthenticate(e,!0)}handleAuthenticationExpiring(e,t){this.spawn(this.handleAuthenticationExpiringHelper)}createSignalRQuery(e={}){const t=[{name:this.safeString(this.options,"hub","c3")}],s=this.milliseconds();return this.extend({transport:"webSockets",connectionData:this.json(t),clientProtocol:1.5,_:s,tid:this.sum(s%10,1)},e)}async negotiate(e={}){const t=this.client(this.urls.api.ws),s="negotiate";let i=this.safeValue(t.subscriptions,s);if(void 0===i){i=t.future(s),t.subscriptions[s]=i;const r=this.createSignalRQuery(e),a={request:r,response:await this.signalrGetNegotiate(this.extend(r,e))};t.resolve(a,s)}return await i}async start(e,t={}){const s=this.safeString(e.response,"ConnectionToken"),i=this.createSignalRQuery(this.extend(e.request,{connectionToken:s}));return await this.signalrGetStart(i)}async watchOrders(e,t,s,i={}){await this.loadMarkets();const r=await this.authenticate(),a=await this.subscribeToOrders(r,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}async subscribeToOrders(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"order",t)}handleOrder(e,t){const s=this.safeValue(t,"delta",{}),i=this.parseOrder(s);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new c(e)}this.orders.append(i);e.resolve(this.orders,"order")}async watchBalance(e={}){await this.loadMarkets();const t=await this.authenticate();return await this.subscribeToBalance(t,e)}async subscribeToBalance(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"balance",t)}handleBalance(e,t){const s=this.safeValue(t,"delta",{}),i=this.safeString(s,"currencySymbol"),r=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(s,"available"),a.total=this.safeString(s,"total"),this.balance[r]=a,this.balance=this.safeBalance(this.balance);e.resolve(this.balance,"balance")}async watchHeartbeat(e={}){await this.loadMarkets();const t=await this.negotiate();return await this.subscribeToHeartbeat(t,e)}async subscribeToHeartbeat(e,t={}){await this.loadMarkets();const s=this.getSignalRUrl(e),i=this.milliseconds().toString(),r="heartbeat",a=[r],n=this.makeRequestToSubscribe(i,[a]),o={id:i,params:t,negotiation:e};return await this.watch(s,r,n,r,o)}handleHeartbeat(e,t){e.resolve(t,"heartbeat")}async watchTicker(e,t={}){await this.loadMarkets();const s=await this.negotiate();return await this.subscribeToTicker(s,e,t)}async subscribeToTicker(e,t,s={}){await this.loadMarkets();const i=this.market(t),r="ticker_"+i.id,a={marketId:i.id,symbol:t,params:s};return await this.sendRequestToSubscribe(e,r,a)}handleTicker(e,t){const s=this.parseTicker(t),i=s.symbol,r=this.market(i);this.tickers[i]=s;const a="ticker_"+r.id;e.resolve(s,a)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=await this.negotiate(),n=await this.subscribeToOHLCV(a,e,t,r);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,s,i,0,!0)}async subscribeToOHLCV(e,t,s="1m",i={}){await this.loadMarkets();const r=this.market(t),a=this.timeframes[s],n="candle_"+r.id+"_"+a,o={symbol:t,timeframe:s,messageHash:n,params:i};return await this.sendRequestToSubscribe(e,n,o)}handleOHLCV(e,t){const s=this.safeString(t,"marketSymbol"),i=this.safeSymbol(s,void 0,"-"),r=this.safeString(t,"interval"),a="candle_"+s+"_"+r,n=this.findTimeframe(r),c=this.safeValue(t,"delta",{}),d=this.parseOHLCV(c);this.ohlcvs[i]=this.safeValue(this.ohlcvs,i,{});let h=this.safeValue(this.ohlcvs[i],n);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new o(e),this.ohlcvs[i][n]=h}h.append(d),e.resolve(h,a)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=await this.negotiate(),a=await this.subscribeToTrades(r,e,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySinceLimit(a,t,s,"timestamp",!0)}async subscribeToTrades(e,t,s={}){await this.loadMarkets();const i="trade_"+this.market(t).id,r={symbol:t,messageHash:i,params:s};return await this.sendRequestToSubscribe(e,i,r)}handleTrades(e,t){const s=this.safeValue(t,"deltas",[]),i=this.safeString(t,"marketSymbol"),r=this.safeSymbol(i,void 0,"-"),a=this.market(r),o="trade_"+i;let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new n(e)}const d=this.parseTrades(s,a);for(let e=0;e<d.length;e++)c.append(d[e]);this.trades[r]=c,e.resolve(c,o)}async watchMyTrades(e,t,s,i={}){await this.loadMarkets();const r=await this.authenticate(),a=await this.subscribeToMyTrades(r,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}async subscribeToMyTrades(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"execution",t)}handleMyTrades(e,t){const s=this.safeValue(t,"deltas",{}),i=this.parseTrades(s);let r=this.myTrades;if(void 0===r){const e=this.safeInteger(this.options,"tradesLimit",1e3);r=new c(e),this.myTrades=r}for(let e=0;e<i.length;e++)r.append(i[e]);e.resolve(r,"execution")}async watchOrderBook(e,t,s={}){if(1!==(t=void 0===t?25:t)&&25!==t&&500!==t)throw new a(this.id+" watchOrderBook() limit argument must be undefined, 1, 25 or 500, default is 25");await this.loadMarkets();const i=await this.negotiate();return(await this.subscribeToOrderBook(i,e,t,s)).limit(t)}async subscribeToOrderBook(e,t,s,i={}){await this.loadMarkets();const r="orderbook_"+this.market(t).id+"_"+s.toString(),a={symbol:t,messageHash:r,method:this.handleSubscribeToOrderBook,limit:s,params:i};return await this.sendRequestToSubscribe(e,r,a)}async fetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),a=this.safeInteger(s,"limit"),n=this.safeString(s,"messageHash");try{const o=await this.fetchOrderBook(i,a),c=this.orderbooks[i],d=c.cache,h=this.safeValue(d,0,{}),l=this.safeInteger(h,"sequence"),u=this.safeInteger(o,"nonce");if(void 0!==l&&u<l){const a=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),o=this.safeInteger(a,"maxAttempts",3);let c=this.safeInteger(s,"numAttempts",0);if(!(c<o))throw new r(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+i+" in "+o.toString()+" attempts");n in e.subscriptions&&(c=this.sum(c,1),s.numAttempts=c,e.subscriptions[n]=s,this.spawn(this.fetchOrderBookSnapshot,e,t,s))}else{c.reset(o);for(let t=0;t<d.length;t++){const s=d[t];this.handleOrderBookMessage(e,s,c)}this.orderbooks[i]=c,e.resolve(c,n)}}catch(t){e.reject(t,n)}}handleSubscribeToOrderBook(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r),this.spawn(this.fetchOrderBookSnapshot,e,t,s)}handleDelta(e,t){const s=this.safeFloat(t,"rate"),i=this.safeFloat(t,"quantity");e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBook(e,t){const s=this.safeString(t,"marketSymbol"),i=this.safeSymbol(s,void 0,"-"),r=this.safeInteger(t,"depth");let a=this.safeValue(this.orderbooks,i);void 0===a&&(a=this.orderBook({},r)),void 0!==a.nonce?this.handleOrderBookMessage(e,t,a):a.cache.push(t)}handleOrderBookMessage(e,t,s){const i="orderbook_"+this.safeString(t,"marketSymbol")+"_"+this.safeString(t,"depth"),r=this.safeInteger(t,"sequence");return r>s.nonce&&(this.handleDeltas(s.asks,this.safeValue(t,"askDeltas",[])),this.handleDeltas(s.bids,this.safeValue(t,"bidDeltas",[])),s.nonce=r,e.resolve(s,i)),s}async handleSystemStatusHelper(){const e=await this.negotiate();await this.start(e)}handleSystemStatus(e,t){return this.spawn(this.handleSystemStatusHelper),t}handleSubscriptionStatus(e,t){const s=this.safeString(t,"I");let i=this.safeValue(e.subscriptions,s);if(void 0===i){const t=this.indexBy(e.subscriptions,"id");i=this.safeValue(t,s,{})}else delete e.subscriptions[s];const r=this.safeValue(i,"method");return void 0===r?e.resolve(t,s):r.call(this,e,t,i),t}handleMessage(e,t){const s={authenticationExpiring:this.handleAuthenticationExpiring,order:this.handleOrder,balance:this.handleBalance,trade:this.handleTrades,candle:this.handleOHLCV,orderBook:this.handleOrderBook,heartbeat:this.handleHeartbeat,ticker:this.handleTicker,execution:this.handleMyTrades},i=this.safeValue(t,"M",[]);for(let r=0;r<i.length;r++){const a=this.safeValue(i[r],"M"),n=this.safeValue(s,a);if(void 0!==n)if("heartbeat"===a)n.call(this,e,t);else if("authenticationExpiring"===a)n.call(this,e,t);else{const t=this.safeValue(i[r],"A",[]);for(let s=0;s<t.length;s++){const i=this.inflate64(t[s]),r=JSON.parse(i);n.call(this,e,r)}}}"I"in t&&this.handleSubscriptionStatus(e,t),"S"in t&&this.handleSystemStatus(e,t);Object.keys(t).length<1&&this.handleHeartbeat(e,t)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],25:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,ArgumentsRequired:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheByTimestamp:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.bitvavo{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0,watchOHLCV:!0,watchOrders:!0,watchMyTrades:!0},urls:{api:{ws:"wss://ws.bitvavo.com/v2"}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3}})}async watchPublic(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=e+"@"+i.id,a=this.urls.api.ws,n={action:"subscribe",channels:[{name:e,markets:[i.id]}]},o=this.extend(n,s);return await this.watch(a,r,o,r)}async watchTicker(e,t={}){return await this.watchPublic("ticker24h",e,t)}handleTicker(e,t){const s=this.safeString(t,"event"),i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){const r=i[t],a=this.safeString(r,"market"),n=this.safeMarket(a,void 0,"-"),o=s+"@"+a,c=this.parseTicker(r,n),d=c.symbol;this.tickers[d]=c,e.resolve(c,o)}return t}async watchTrades(e,t,s,i={}){const r=await this.watchPublic("trades",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}handleTrade(e,t){const s=this.safeString(t,"market"),i=this.safeMarket(s,void 0,"-"),r=i.symbol,a="trades@"+s,o=this.parseTrade(t,i);let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new n(e)}c.append(o),this.trades[r]=c,e.resolve(c,a)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e).id,n=this.timeframes[t],o="candles@"+a+"_"+n,c=this.urls.api.ws,d={action:"subscribe",channels:[{name:"candles",interval:[n],markets:[a]}]},h=this.extend(d,r),l=await this.watch(c,o,h,o);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySinceLimit(l,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"market"),i=this.safeMarket(s,void 0,"-"),r=i.symbol,a=this.safeString(t,"interval"),n=this.findTimeframe(a),c="candles@"+s+"_"+a,d=this.safeValue(t,"candle");this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let h=this.safeValue(this.ohlcvs[r],n);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new o(e),this.ohlcvs[r][n]=h}for(let e=0;e<d.length;e++){const t=d[e],s=this.parseOHLCV(t,i);h.append(s)}e.resolve(h,c)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r="book",a=r+"@"+i.id,n=this.urls.api.ws,o={action:"subscribe",channels:[{name:r,markets:[i.id]}]},c={messageHash:a,name:r,symbol:e,marketId:i.id,method:this.handleOrderBookSubscription,limit:t,params:s},d=this.extend(o,s);return(await this.watch(n,a,d,a,c)).limit(t)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeInteger(t,"nonce");return i>s.nonce&&(this.handleDeltas(s.asks,this.safeValue(t,"asks",[])),this.handleDeltas(s.bids,this.safeValue(t,"bids",[])),s.nonce=i),s}handleOrderBook(e,t){const s=this.safeString(t,"event"),i=this.safeString(t,"market"),r=this.safeMarket(i,void 0,"-"),a=r.symbol,n=s+"@"+r.id,o=this.safeValue(this.orderbooks,a);if(void 0!==o)if(void 0===o.nonce){const s=this.safeValue(e.subscriptions,n,{});if(void 0===this.safeValue(s,"watchingOrderBookSnapshot")){s.watchingOrderBookSnapshot=!0,e.subscriptions[n]=s;const i=this.safeValue(this.options,"watchOrderBookSnapshot",{}),r=this.safeInteger(i,"delay",this.rateLimit);this.delay(r,this.watchOrderBookSnapshot,e,t,s)}o.cache.push(t)}else this.handleOrderBookMessage(e,t,o),e.resolve(o,n)}async watchOrderBookSnapshot(e,t,s){const i=this.safeInteger(s,"limit"),r=this.safeValue(s,"params"),a=this.safeString(s,"marketId"),n="getBook",o=n+"@"+a,c=this.urls.api.ws,d={action:n,market:a};return(await this.watch(c,o,this.extend(d,r),o,s)).limit(i)}handleOrderBookSnapshot(e,t){const s=this.safeValue(t,"response");if(void 0===s)return t;const i=this.safeString(s,"market");let r;if(i in this.markets_by_id){r=this.markets_by_id[i].symbol}const a="book@"+i,n=this.orderbooks[r],o=this.parseOrderBook(s,r);o.nonce=this.safeInteger(s,"nonce"),n.reset(o);const c=n.cache;for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,n)}this.orderbooks[r]=n,e.resolve(n,a)}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r)}handleOrderBookSubscriptions(e,t,s){for(let i=0;i<s.length;i++){const r=this.safeString(s,i);if(r in this.markets_by_id){const s="book@"+r;if(!(this.markets_by_id[r].symbol in this.orderbooks)){const i=this.safeValue(e.subscriptions,s),r=this.safeValue(i,"method");void 0!==r&&r.call(this,e,t,i)}}}}async watchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" watchOrders requires a symbol argument");await this.loadMarkets(),await this.authenticate();const r=this.market(e).id,n=this.urls.api.ws,o="account",c=o+"@"+r,d=c+"_order",h={action:"subscribe",channels:[{name:o,markets:[r]}]},l=await this.watch(n,d,h,c);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySymbolSinceLimit(l,e,t,s,!0)}async watchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" watchMyTrades requires a symbol argument");await this.loadMarkets(),await this.authenticate();const r=this.market(e).id,n=this.urls.api.ws,o="account",c=o+"@"+r,d=c+"_fill",h={action:"subscribe",channels:[{name:o,markets:[r]}]},l=await this.watch(n,d,h,c);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySymbolSinceLimit(l,e,t,s,!0)}handleOrder(e,t){const s=this.safeString(t,"event"),i=this.safeString(t,"market","-"),r="account@"+i+"_"+s;if(i in this.markets_by_id){const s=this.markets_by_id[i],a=this.parseOrder(t,s);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new c(e)}this.orders.append(a),e.resolve(this.orders,r)}}handleMyTrade(e,t){const s=this.safeString(t,"event"),i=this.safeString(t,"market"),r="account@"+i+"_"+s,a=this.safeMarket(i,void 0,"-"),o=this.parseTrade(t,a);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new n(e)}const c=this.myTrades;c.append(o),this.myTrades=c,e.resolve(c,r)}handleSubscriptionStatus(e,t){const s=this.safeValue(t,"subscriptions",{}),i={book:this.handleOrderBookSubscriptions},r=Object.keys(s);for(let a=0;a<r.length;a++){const n=r[a],o=this.safeValue(i,n);if(void 0!==o){const i=this.safeValue(s,n);o.call(this,e,t,i)}}return t}async authenticate(e={}){const t=this.urls.api.ws,s=this.client(t),i=s.future("authenticated"),r="authenticate";if(void 0===this.safeValue(s.subscriptions,r))try{this.checkRequiredCredentials();const e=this.milliseconds(),s=e.toString()+"GET/"+this.version+"/websocket",i=this.hmac(this.encode(s),this.encode(this.secret)),a={action:r,key:this.apiKey,signature:i,timestamp:e};this.spawn(this.watch,t,r,a,r)}catch(e){s.reject(e,"authenticated"),r in s.subscriptions&&delete s.subscriptions[r]}return await i}handleAuthenticationMessage(e,t){if(this.safeValue(t,"authenticated",!1)){this.safeValue(e.futures,"authenticated").resolve(!0)}else{const s=new r(this.json(t));e.reject(s,"authenticated");const i=this.safeValue(t,"event");i in e.subscriptions&&delete e.subscriptions[i]}}handleMessage(e,t){const s={subscribed:this.handleSubscriptionStatus,book:this.handleOrderBook,getBook:this.handleOrderBookSnapshot,trade:this.handleTrade,candle:this.handleOHLCV,ticker24h:this.handleTicker,authenticate:this.handleAuthenticationMessage,order:this.handleOrder,fill:this.handleMyTrade},i=this.safeString(t,"event");let r=this.safeValue(s,i);if(void 0===r){const i=this.safeString(t,"action");return r=this.safeValue(s,i),void 0===r?t:r.call(this,e,t)}return r.call(this,e,t)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],26:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,BadRequest:a,NotSupported:n}=e("ccxt/js/base/errors"),o=e("ccxt/js/base/Precise"),{ArrayCache:c,ArrayCacheBySymbolById:d,ArrayCacheByTimestamp:h}=e("./base/Cache");t.exports=class extends i.bybit{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:{inverse:{public:"wss://stream.{hostname}/realtime",private:"wss://stream.{hostname}/realtime"},linear:{public:"wss://stream.{hostname}/realtime_public",private:"wss://stream.{hostname}/realtime_private"},spot:{public:"wss://stream.{hostname}/spot/quote/ws/v2",private:"wss://stream.{hostname}/spot/ws"},usdc:{option:{public:"wss://stream.{hostname}/trade/option/usdc/public/v1",private:"wss://stream.{hostname}/trade/option/usdc/private/v1"},swap:{public:"wss://stream.{hostname}/perpetual/ws/v1/realtime_public",private:"wss://stream.{hostname}/trade/option/usdc/private/v1"}}}},test:{ws:{inverse:{public:"wss://stream-testnet.{hostname}/realtime",private:"wss://stream-testnet.{hostname}/realtime"},linear:{public:"wss://stream-testnet.{hostname}/realtime_public",private:"wss://stream-testnet.{hostname}/realtime_private"},spot:{public:"wss://stream-testnet.{hostname}/spot/quote/ws/v2",private:"wss://stream-testnet.{hostname}/spot/ws"},usdc:{option:{public:"wss://stream-testnet.{hostname}/trade/option/usdc/public/v1",private:"wss://stream-testnet.{hostname}/trade/option/usdc/private/v1"},swap:{public:"wss://stream-testnet.{hostname}/perpetual/ws/v1/realtime_public",private:"wss://stream-testnet.{hostname}/trade/option/usdc/private/v1"}}}}},options:{watchTicker:{name:"realtimes"}},streaming:{ping:this.ping},exceptions:{ws:{exact:{}}}})}getUrlByMarketType(e,t=!1,s,i={}){const r=t?"private":"public";let a,n,o,c,d,h=this.urls.api.ws;if(void 0!==e)d=this.market(e),a="USDC"===d.settle,n=d.spot,o=d.type,c=d.linear;else{[o,i]=this.handleMarketTypeAndParams(s,void 0,i);const e=this.safeString(this.options,"defaultSubType","linear"),t=this.safeString(i,"subType",e);let r=this.safeString(this.options,"defaultSettle");r=this.safeString2(i,"settle","defaultSettle",r),a="USDC"===r,n="spot"===o,c="linear"===t}return h=n?h.spot[r]:a?h.usdc[o][r]:c?h.linear[r]:h.inverse[r],h=this.implodeHostname(h),h}cleanParams(e){return e=this.omit(e,["type","subType","settle","defaultSettle"])}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="ticker:"+s.symbol,r=this.getUrlByMarketType(e,!1,t);if(t=this.cleanParams(t),s.spot){const e=this.safeValue(this.options,"watchTicker",{}),a=this.safeString(e,"name","realtimes"),n={symbol:s.id};return await this.watchSpotPublic(r,a,i,n,t)}{const e=["instrument_info.100ms."+s.id];return await this.watchContractPublic(r,i,e,t)}}handleTicker(e,t){const s=this.safeString(t,"topic","");if("realtimes"===s||"bookTicker"===s){const s=this.safeValue(t,"data"),i=this.parseWsTicker(s),r=i.symbol;this.tickers[r]=i;const a="ticker:"+r;return void e.resolve(i,a)}const i=this.safeString(t,"type",""),r=this.safeValue(t,"data",{});let a;if("snapshot"===i){const e=this.parseWsTicker(r);a=e.symbol,this.tickers[a]=e}if("delta"===i){const e=s.split("."),t=e.length,i=this.safeString(e,t-1);a=this.market(i).symbol;const n=this.safeValue(r,"update",[]);let o=this.safeValue(this.tickers,a,{});for(let e=0;e<n.length;e++){const t=n[e];o=this.updateTicker(o,t)}this.tickers[a]=o}const n="ticker:"+a;e.resolve(this.tickers[a],n)}updateTicker(e,t){const s=e.info,i=Object.keys(t);if(i.length>0){for(let e=0;e<i.length;e++){const r=i[e];r in s&&(s[r]=t[r])}return this.parseWsTicker(s)}return e}parseWsTicker(e,t){let s=this.safeInteger2(e,"time","t");if(void 0===s&&(s=this.parse8601(this.safeString2(e,"updated_at","updatedAt")),void 0===s)){const t=this.safeString(e,"updated_at_e9");s=o.stringDiv(t,"10000000"),s=this.parseNumber(s),s=void 0!==s?this.parseInt(s):void 0}const i=this.safeString2(e,"symbol","s"),r=this.safeSymbol(i,t),a=this.safeStringN(e,["l","last_price","lastPrice"]),n=this.safeStringN(e,["prev_price_24h","o","prevPrice24h"]);let c=this.safeStringN(e,["v","turnover24h"]);void 0===c&&(c=this.safeString2(e,"turnover_24h_e8","turnover24hE8"),c=o.stringDiv(c,"100000000"));let d=this.safeStringN(e,["qv","volume24h","volume_24h"]);void 0===d&&(d=this.safeString2(e,"volume_24h_e8","volume24hE8"),d=o.stringDiv(d,"100000000"));const h=this.safeStringN(e,["bidPrice","bid1_price","bid1Price"]),l=this.safeStringN(e,["askPrice","ask1_price","ask1Price"]),u=this.safeStringN(e,["high_price_24h","high24h","h","highPrice24h"]),f=this.safeStringN(e,["low_price_24h","low24h","l","lowPrice24h"]);let p=this.safeString(e,"m");void 0===p&&(p=this.safeString2(e,"price_24h_pcnt_e6","price24hPcntE6"),p=o.stringDiv(p,"1000000"));const m=this.safeString(e,"change24h");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:u,low:f,bid:h,bidVolume:this.safeString2(e,"bidSize","bidQty"),ask:l,askVolume:this.safeString2(e,"askSize","askQty"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:m,percentage:p,average:void 0,baseVolume:d,quoteVolume:c,info:e},t)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.timeframes[t],o=this.getUrlByMarketType(e,!1,r);r=this.cleanParams(r);const c="kline:"+t+":"+e;let d;if(a.spot){const e="kline",s={symbol:a.id,klineType:t};d=await this.watchSpotPublic(o,e,c,s,r)}else{const e=[(a.linear?"candle":"klineV2")+"."+n+"."+a.id];d=await this.watchContractPublic(o,c,e,r)}return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"topic");if(Array.isArray(s)){const t=i.split("."),r=t.length,a=this.safeString(t,r-1),n=this.safeString(t,r-2),o={};for(let e=0;e<s.length;e++){const t=s[e],i=this.market(a),r=i.symbol,c=this.parseWsOHLCV(t,i);let d=this.safeValue(this.ohlcvs,r);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new h(e),this.ohlcvs[r]=d}d.append(c),o[r]=n}const c=Object.keys(o);for(let t=0;t<c.length;t++){const s=c[t],i=o[s],r="kline:"+this.findTimeframe(i)+":"+s,a=this.safeValue(this.ohlcvs,s);e.resolve(a,r)}}else{const s=this.safeValue(t,"params",{}),i=this.safeValue(t,"data"),r=this.safeString(s,"symbol"),a=this.safeString(s,"klineType"),n=this.market(r),o=this.parseWsOHLCV(i,n),c=n.symbol;let d=this.safeValue(this.ohlcvs,c);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new h(e),this.ohlcvs[c]=d}d.append(o);const l="kline:"+a+":"+c;e.resolve(d,l)}}parseWsOHLCV(e,t){let s=this.safeInteger(e,"t");return void 0===s&&(s=this.safeTimestamp(e,"start")),[s,this.safeNumber2(e,"open","o"),this.safeNumber2(e,"high","h"),this.safeNumber2(e,"low","l"),this.safeNumber2(e,"close","c"),this.safeNumber2(e,"volume","v")]}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const r=this.getUrlByMarketType(e,!1,s);s=this.cleanParams(s);const n="orderbook:"+e;let o;if(i.spot){const e="depth",t={symbol:i.id};o=await this.watchSpotPublic(r,e,n,t,s)}else{let e;if(i.option)e="delta.orderbook100."+i.marketId;else{if(void 0!==t){if(25!==t&&200!==t)throw new a(this.id+" watchOrderBook limit argument must be either 25 or 200")}else t=25;e=(25===t?"orderBookL2_25":"orderBook_200.100ms")+"."+i.id}const c=[e];o=await this.watchContractPublic(r,n,c,s)}return o.limit(t)}handleOrderBook(e,t){const s=this.safeString(t,"topic",""),i=this.safeValue(t,"data",{});if("depth"!==s){if(s.indexOf("orderBook")>=0){const r=this.safeString(t,"type"),a=s.split("."),n=a.length,o=this.safeString(a,n-1),c=this.market(o).symbol,d="orderbook:"+c,h=this.safeInteger2(t,"cross_seq","crossSeq"),l=this.safeIntegerProduct2(t,"timestamp_e6","timestampE6",.001);if("snapshot"===r){const e=this.safeValue2(i,"order_book","orderBook",i),t=this.parseOrderBook(e,c,l,"Buy","Sell","price","size");let s;t.nonce=h,c in this.orderbooks?(s=this.orderbooks[c],s.reset(t)):(s=this.orderBook(t),this.orderbooks[c]=s)}else if("delta"===r){const e=this.safeValue(i,"delete",[]),t=this.safeValue(i,"update",[]),s=this.safeValue(i,"insert",[]),r=[];for(let t=0;t<e.length;t++){const s=e[t];s.size=0,r.push(s)}let a=r;a=this.arrayConcat(a,t),a=this.arrayConcat(a,s);const n=this.safeValue(this.orderbooks,c);n.nonce=h,n.timestamp=l,n.datetime=this.iso8601(l),this.handleDeltas(n,a)}e.resolve(this.orderbooks[c],d)}}else{const t=this.safeString(i,"s"),s=this.market(t).symbol,r=this.safeInteger(i,"t"),a=this.parseOrderBook(i,s,r,"b","a");let n;s in this.orderbooks?(n=this.orderbooks[s],n.reset(a)):(n=this.orderBook(a),this.orderbooks[s]=n);const o="orderbook:"+s;e.resolve(n,o)}}handleDeltas(e,t){for(let s=0;s<t.length;s++){const i=t[s];"Buy"===this.safeString(i,"side")?this.handleDelta(e.bids,t[s]):this.handleDelta(e.asks,t[s])}}handleDelta(e,t){const s=this.safeNumber(t,"price"),i=this.safeNumber(t,"size");e.store(s,i)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trade",n=this.getUrlByMarketType(e,!1,i);i=this.cleanParams(i);const o=a+":"+e;let c;if(r.spot){const e={symbol:r.id};c=await this.watchSpotPublic(n,a,o,e,i)}else{let e;e=r.option?"recenttrades."+r.baseId:a+"."+r.id;const t=[e];c=await this.watchContractPublic(n,o,t,i)}return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrades(e,t){let s;const i=this.safeValue(t,"data",[]),r=this.safeString(t,"topic");let a;if(Array.isArray(i)){const e=r.split(".");s=this.safeString(e,1),a=i}else{const e=this.safeValue(t,"params",{});s=this.safeString(e,"symbol"),i.symbol=s,a=[i]}const n=this.safeMarket(s),o=n.symbol;let d=this.safeValue(this.trades,o);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new c(e),this.trades[o]=d}for(let e=0;e<a.length;e++){const t=this.parseWsTrade(a[e],n);d.append(t)}const h="trade:"+o;e.resolve(d,h)}parseWsTrade(e,t){const s=this.safeStringN(e,["trade_id","v","tradeId","T","exec_id"]),i=this.safeString2(e,"symbol","s"),r=(t=this.safeMarket(i,t)).symbol,a=this.safeStringN(e,["p","price","execPrice"]),n=this.safeStringN(e,["q","size","exec_qty","execQty"]),o=this.safeString2(e,"exec_value","execValue");let c=this.safeIntegerN(e,["trade_time_ms","t","tradeTime","tradeTimeMs"]);void 0===c&&(c=this.parse8601(this.safeString(e,"trade_time")));const d=this.safeStringLower(e,"side");let h=this.safeValue2(e,"m","is_maker");if(void 0===h){h="MAKER"===this.safeString(e,"lastLiquidityInd")}const l=h?"maker":"taker",u=this.safeStringN(e,["o","order_id","tradeTime"]);let f;if(this.safeValue(t,"contract")){const s=this.safeString2(e,"exec_fee","execFee");if(void 0!==s){f={cost:s,currency:t.linear?t.quote:t.base}}}return this.safeTrade({id:s,info:e,timestamp:c,datetime:this.iso8601(c),symbol:r,order:u,type:void 0,side:d,takerOrMaker:l,price:a,amount:n,cost:o,fee:f},t)}async watchMyTrades(e,t,s,i={}){const r="watchMyTrades";let a,n,o,c="usertrade";await this.loadMarkets();const d=this.getUrlByMarketType(e,!0,r,i);if(void 0!==e)a=this.market(e),c+=":"+(e=a.symbol),n=a.type,o="USDC"===a.settle;else{[n,i]=this.handleMarketTypeAndParams(r,void 0,i);let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(i,"settle","defaultSettle",e),o="USDC"===e}let h;if(i=this.cleanParams(i),"spot"===n)h=await this.watchSpotPrivate(d,c,i);else{let e;e=o?"option"===n?"user.openapi.option.trade":"user.openapi.perp.trade":"execution";const t=[e];h=await this.watchContractPrivate(d,c,t,i)}return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,t,s,"timestamp",!0)}handleMyTrades(e,t){let s=[];if(Array.isArray(t)?s=t:(s=this.safeValue(t,"data",[]),"result"in s&&(s=s.result)),void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new d(e)}const i=this.myTrades,r={};for(let e=0;e<s.length;e++){const t=s[e],a=this.parseWsTrade(t);r[a.symbol]=!0,i.append(a)}const a="usertrade";e.resolve(i,a);const n=Object.keys(r);for(let t=0;t<n.length;t++){const s=a+":"+n[t];e.resolve(i,s)}}async watchOrders(e,t,s,i={}){const r="watchOrders";let a,n,o,c="order";await this.loadMarkets();const d=this.getUrlByMarketType(e,!0,r,i);if(void 0!==e)a=this.market(e),c+=":"+(e=a.symbol),n=a.type,o="USDC"===a.settle;else{[n,i]=this.handleMarketTypeAndParams(r,void 0,i);let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(i,"settle","defaultSettle",e),o="USDC"===e}let h;if(i=this.cleanParams(i),"spot"===n)h=await this.watchSpotPrivate(d,c,i);else{let e;if(o)e="option"===n?"user.openapi.option.order":"user.openapi.perp.order";else{const t=this.safeString(i,"orderType"),s=this.safeValue(i,"stop",!1)||"stop"===t||"conditional"===t;i=this.omit(i,["stop","orderType"]),e=s?"stop_order":"order"}const t=[e];h=await this.watchContractPrivate(d,c,t,i)}return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySymbolSinceLimit(h,e,t,s,!0)}handleOrder(e,t,s){let i=[],r=!1;Array.isArray(t)?(i=t,r=!0):(i=this.safeValue(t,"data",[]),"result"in i&&(i=i.result));if(0===i.length)return;if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new d(e)}const a=this.orders,n={};for(let e=0;e<i.length;e++){const t=i[e];let s;s=r?this.parseWsOrder(t):this.parseOrder(t);n[s.symbol]=!0,a.append(s)}const o="order";e.resolve(a,o);const c=Object.keys(n);for(let t=0;t<c.length;t++){const s=o+":"+c[t];e.resolve(a,s)}}parseWsOrder(e,t){const s=this.safeString(e,"i"),i=this.safeString(e,"s"),r=this.safeSymbol(i,t),a=this.safeInteger(e,"O");let n=this.safeString(e,"p");"0"===n&&(n=void 0);const o=this.safeString(e,"q"),c=this.safeString(e,"z"),d=this.parseOrderStatus(this.safeString(e,"X")),h=this.safeStringLower(e,"S"),l=this.safeString(e,"E"),u=this.safeString(e,"f");let f,p=this.safeStringLower(e,"o");p.indexOf("market")>=0&&(p="market");const m=this.safeString(e,"n");if(void 0!==m&&"0"!==m){const t=this.safeString(e,"N");f={cost:m,currency:this.safeCurrencyCode(t)}}return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:l,symbol:r,type:p,timeInForce:u,postOnly:void 0,side:h,price:n,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:c,remaining:void 0,status:d,fee:f,trades:void 0},t)}async watchBalance(e={}){const t="watchBalance";let s;if([s,e]=this.handleMarketTypeAndParams(t,void 0,e),"spot"!==s&&"swap"!==s)throw new n(this.id+" watchBalance does not support "+s+" type");const i="balance:"+s,r=this.getUrlByMarketType(void 0,!0,t,e);if(e=this.cleanParams(e),"spot"===s)return await this.watchSpotPrivate(r,i,e);{const t=["wallet"];return await this.watchContractPrivate(r,i,t,e)}}handleBalance(e,t){let s="balance";if("wallet"===this.safeString(t,"topic")){const i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=this.account(),s=i[e],r=this.safeString(s,"coin","USDT"),a=this.safeCurrencyCode(r);t.free=this.safeString(s,"available_balance"),t.total=this.safeString(s,"wallet_balance"),this.balance[a]=t,this.balance=this.safeBalance(this.balance)}return s+=":swap",void e.resolve(this.balance,s)}if(Array.isArray(t)){for(let e=0;e<t.length;e++){const s=this.safeValue(t[e],"B",[]);for(let e=0;e<s.length;e++){const t=s[e],i=this.account(),r=this.safeCurrencyCode(this.safeString(t,"a"));i.free=this.safeString(t,"f"),i.used=this.safeString(t,"l"),this.balance[r]=i,this.balance=this.safeBalance(this.balance)}}s+=":spot",e.resolve(this.balance,s)}}async watchContractPublic(e,t,s={},i={}){const r={op:"subscribe",args:s},a=this.extend(r,i);return await this.watch(e,t,a,t)}async watchSpotPublic(e,t,s,i={},r={}){const a={topic:t,event:"sub",params:i=this.extend(i,{binary:!1})},n=this.extend(a,r);return await this.watch(e,s,n,s)}async watchSpotPrivate(e,t,s={}){this.checkRequiredCredentials();let i=this.milliseconds()+1e4;i=i.toString();const r="GET/realtime"+i,a=this.hmac(this.encode(r),this.encode(this.secret),"sha256","hex"),n={op:"auth",args:[this.apiKey,i,a]};return await this.watch(e,t,n,"private")}async watchContractPrivate(e,t,s,i={}){return await this.authenticateContract(e,i),await this.watchContractPublic(e,t,s,i)}async authenticateContract(e,t={}){this.checkRequiredCredentials();const s="login",i=this.client(e);let r=this.safeValue(i.subscriptions,s);if(void 0===r){r=i.future("authenticated");let t=this.milliseconds()+1e4;t=t.toString();const a="GET/realtime"+t,n=this.hmac(this.encode(a),this.encode(this.secret),"sha256","hex"),o={op:"auth",args:[this.apiKey,t,n]};this.spawn(this.watch,e,s,o,s,r)}return await r}handleErrorMessage(e,t){const s=this.safeInteger(t,"code");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e)}if(!this.safeValue(t,"success",!1)){const e=this.safeString(t,"ret_msg"),s=this.safeValue(t,"request",{});if("auth"===this.safeString(s,"op"))throw new r("Authentication failed: "+e)}}catch(t){if(t instanceof r){e.reject(t,"authenticated");const s="login";return s in e.subscriptions&&delete e.subscriptions[s],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"ret_msg"))return void this.handlePong(e,t);if(void 0!==this.safeInteger(t,"pong"))return void this.handlePong(e,t);if("pong"===this.safeString(t,"op"))return void this.handlePong(e,t);if("sub"===this.safeString(t,"event"))return void this.handleSubscriptionStatus(e,t);const s=this.safeString(t,"topic","");if(s.indexOf("kline")>=0||s.indexOf("candle")>=0)return void this.handleOHLCV(e,t);if(s.indexOf("realtimes")>=0||s.indexOf("instrument_info")>=0)return void this.handleTicker(e,t);if(s.indexOf("trade")>=0){if(s.indexOf("user")>=0)return void this.handleMyTrades(e,t);this.handleTrades(e,t)}if(s.indexOf("orderBook")>=0)return void this.handleOrderBook(e,t);if(s.indexOf("order")>=0)return void this.handleOrder(e,t);const i={realtimes:this.handleTicker,bookTicker:this.handleTicker,depth:this.handleOrderBook,wallet:this.handleBalance,execution:this.handleMyTrades},r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t);const a=this.safeValue(t,"request",{});"auth"===this.safeString(a,"op")&&this.handleAuthenticate(e,t);if("AUTH_RESP"===this.safeString(t,"type")&&this.handleAuthenticate(e,t),Array.isArray(t)){const s=this.safeValue(t,0),i=this.safeString(s,"e");"outboundAccountInfo"===i&&this.handleBalance(e,t),"executionReport"===i&&this.handleOrder(e,t),"ticketInfo"===i&&this.handleMyTrades(e,t)}}ping(e){const t=e.url,s=this.milliseconds();return t.indexOf("spot")>=0?{ping:s}:{op:"ping"}}handlePong(e,t){return e.lastPong=this.safeInteger(t,"pong"),t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}handleSubscriptionStatus(e,t){return t}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/Precise":127,"ccxt/js/base/errors":129}],27:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheByTimestamp:n}=e("./base/Cache");t.exports=class extends i.cdax{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:{api:{public:"wss://{hostname}/api/ws",private:"wss://{hostname}/api/ws/v2"}}},www:"https://cdax.io",referral:"https://cdax.io/invite?invite_code=esc74",doc:"https://github.com/cloudapidoc/API_Docs",fees:"https://cdax.io/about/fee"},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",ws:{gunzip:!0}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();const s="market."+this.market(e).id+".detail",i=this.safeString(this.options,"api","api"),r={hostname:this.hostname},a=this.implodeParams(this.urls.api.ws[i].public,r),n=this.requestId(),o={sub:s,id:n},c={id:n,messageHash:s,symbol:e,params:t};return await this.watch(a,s,this.extend(o,t),s,c)}handleTicker(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeString(t,"ch"),r=i.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(s,n),c=this.safeValue(t,"ts");o.timestamp=c,o.datetime=this.iso8601(c);const d=o.symbol;return this.tickers[d]=o,e.resolve(o,i),t}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r="market."+this.market(e).id+".trade.detail",a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),c=this.requestId(),d={sub:r,id:c},h={id:c,messageHash:r,symbol:e,params:i},l=await this.watch(o,r,this.extend(d,i),r,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeValue(s,"data",{}),r=this.safeString(t,"ch"),n=r.split("."),o=this.safeString(n,1),c=this.safeMarket(o),d=c.symbol;let h=this.safeValue(this.trades,d);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a(e),this.trades[d]=h}for(let e=0;e<i.length;e++){const t=this.parseTrade(i[e],c);h.append(t)}return e.resolve(h,r),t}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t],o="market."+a.id+".kline."+n,c=this.safeString(this.options,"api","api"),d={hostname:this.hostname},h=this.implodeParams(this.urls.api.ws[c].public,d),l=this.requestId(),u={sub:o,id:l},f={id:l,messageHash:o,symbol:e,timeframe:t,params:r},p=await this.watch(h,o,this.extend(u,r),o,f);return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySinceLimit(p,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"ch"),i=s.split("."),r=this.safeString(i,1),a=this.safeMarket(r),o=a.symbol,c=this.safeString(i,3),d=this.findTimeframe(c);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],d);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new n(e),this.ohlcvs[o][d]=h}const l=this.safeValue(t,"tick"),u=this.parseOHLCV(l,a);h.append(u),e.resolve(h,s)}async watchOrderBook(e,t,s={}){if(void 0!==t&&150!==t)throw new r(this.id+" watchOrderBook accepts limit = 150 only");await this.loadMarkets();t=void 0===t?150:t;const i="market."+this.market(e).id+".mbp."+t.toString(),a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),c=this.requestId(),d={sub:i,id:c},h={id:c,messageHash:i,symbol:e,limit:t,params:s,method:this.handleOrderBookSubscription};return(await this.watch(o,i,this.extend(d,s),i,h)).limit(t)}handleOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(s,"messageHash"),a=this.orderbooks[i],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,i);o.nonce=this.safeInteger(n,"seqNum"),a.reset(o);const c=a.cache;for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,a)}this.orderbooks[i]=a,e.resolve(a,r)}async watchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeValue(s,"params"),n=this.safeString(s,"messageHash"),o=this.safeString(this.options,"api","api"),c={hostname:this.hostname},d=this.implodeParams(this.urls.api.ws[o].public,c),h=this.requestId(),l={req:n,id:h},u={id:h,messageHash:n,symbol:i,limit:r,params:a,method:this.handleOrderBookSnapshot};return(await this.watch(d,h,l,h,u)).limit(r)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"tick",{}),r=this.safeInteger(i,"seqNum");if(this.safeInteger(i,"prevSeqNum")<=s.nonce&&r>s.nonce){const e=this.safeValue(i,"asks",[]),a=this.safeValue(i,"bids",[]);this.handleDeltas(s.asks,e),this.handleDeltas(s.bids,a),s.nonce=r;const n=this.safeInteger(t,"ts");s.timestamp=n,s.datetime=this.iso8601(n)}return s}handleOrderBook(e,t){const s=this.safeString(t,"ch"),i=this.safeValue(t,"ch").split("."),r=this.safeString(i,1),a=this.safeSymbol(r),n=this.orderbooks[a];void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,s))}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r),this.spawn(this.watchOrderBookSnapshot,e,t,s)}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeValue(r,"method");if(void 0!==i)return i.call(this,e,t,r);s in e.subscriptions&&delete e.subscriptions[s]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){const s=this.safeValue(t,"ch").split(".");if("market"===this.safeString(s,0)){const i=this.safeString(s,2),r={mbp:this.handleOrderBook,detail:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,i);return void 0===a?t:a.call(this,e,t)}}async pong(e,t){await e.send({pong:this.safeInteger(t,"ping")})}handlePing(e,t){this.spawn(this.pong,e,t)}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.exact,i,this.json(t))}catch(t){const i=this.safeString(r,"messageHash");e.reject(t,i),e.reject(t,s),s in e.subscriptions&&delete e.subscriptions[s]}}return!1}return t}handleMessage(e,t){this.handleErrorMessage(e,t)&&("id"in t?this.handleSubscriptionStatus(e,t):"ch"in t?this.handleSubject(e,t):"ping"in t&&this.handlePing(e,t))}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],28:[function(e,t,s){"use strict";const i=e("./coinbasepro.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinbaseprime",name:"Coinbase Prime",has:{ws:!0,watchOrderBook:!0},urls:{test:{ws:"wss://ws-feed-public.sandbox.exchange.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg",api:{ws:"wss://ws-feed.exchange.coinbase.com"},www:"https://exchange.coinbase.com",doc:"https://docs.exchange.coinbase.com/",fees:"https://pro.coinbase.com/fees"}})}}},{"./coinbasepro.js":29}],29:[function(e,t,s){"use strict";const i=e("ccxt"),{BadSymbol:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheBySymbolById:n}=e("./base/Cache");t.exports=class extends i.coinbasepro{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!1,watchOrderBook:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchBalance:!1,watchStatus:!1,watchOrders:!0,watchMyTrades:!0},urls:{api:{ws:"wss://ws-feed.pro.coinbase.com"}},options:{tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3}})}authenticate(){this.checkRequiredCredentials();const e=this.nonce(),t=e.toString()+"GET/users/self/verify",s=this.hmac(this.encode(t),this.base64ToBinary(this.secret),"sha256","base64");return{timestamp:e,key:this.apiKey,signature:s,passphrase:this.password}}async subscribe(e,t,s,i={}){await this.loadMarkets();const r=this.market(t),a=s+":"+r.id;let n=this.urls.api.ws;"signature"in i&&(n+="?");const o={type:"subscribe",product_ids:[r.id],channels:[e]},c=this.extend(o,i);return await this.watch(n,a,c,a)}async watchTicker(e,t={}){const s="ticker";return await this.subscribe(s,e,s,t)}async watchTrades(e,t,s,i={}){const r="matches",a=await this.subscribe(r,e,r,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySinceLimit(a,t,s,"timestamp",!0)}async watchMyTrades(e,t,s,i={}){if(void 0===e)throw new r(this.id+" watchMyTrades requires a symbol");const a=this.authenticate(),n=await this.subscribe("user",e,"myTrades",this.extend(i,a));return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,t,s,"timestamp",!0)}async watchOrders(e,t,s,i={}){if(void 0===e)throw new r(this.id+" watchMyTrades requires a symbol");const a=this.authenticate(),n=await this.subscribe("user",e,"orders",this.extend(i,a));return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){const i="level2";await this.loadMarkets();const r=this.market(e),a=i+":"+r.id,n=this.urls.api.ws,o={type:"subscribe",product_ids:[r.id],channels:[i]},c=this.extend(o,s),d={messageHash:a,symbol:e,marketId:r.id,limit:t};return(await this.watch(n,a,c,a,d)).limit(t)}handleTrade(e,t){const s=this.safeString(t,"product_id");if(void 0!==s){const i=this.parseWsTrade(t),r=i.symbol,n="matches"+":"+s;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a(e),this.trades[r]=o}o.append(i),e.resolve(o,n)}return t}handleMyTrade(e,t){const s=this.safeString(t,"product_id");if(void 0!==s){const i=this.parseWsTrade(t),r="myTrades"+":"+s;let a=this.myTrades;if(void 0===a){const e=this.safeInteger(this.options,"myTradesLimit",1e3);a=new n(e),this.myTrades=a}a.append(i),e.resolve(a,r)}return t}parseWsTrade(e){const t=super.parseTrade(e);let s;"maker_fee_rate"in e?(t.takerOrMaker="maker",s=this.safeNumber(e,"maker_fee_rate")):(t.takerOrMaker="taker",s=this.safeNumber(e,"taker_fee_rate"));const i=this.market(t.symbol).quote;let r;return void 0!==t.cost&&void 0!==s&&(r=t.cost*s),t.fee={rate:s,cost:r,currency:i},t}parseWsOrderStatus(e){return this.safeString({filled:"closed",canceled:"canceled"},e,"open")}handleOrder(e,t){let s=this.orders;if(void 0===s){const e=this.safeInteger(this.options,"ordersLimit",1e3);s=new n(e),this.orders=s}const i=this.safeString(t,"type"),r=this.safeString(t,"product_id");if(void 0!==r){const s="orders:"+r,a=this.safeSymbol(r),n=this.safeString(t,"order_id"),o=this.safeString(t,"maker_order_id"),c=this.safeString(t,"taker_order_id"),d=this.orders,h=this.safeValue(d.hashmap,a,{});let l=this.safeValue(h,n);if(void 0===l&&(l=this.safeValue2(h,o,c)),void 0===l){const i=this.parseWsOrder(t);d.append(i),e.resolve(d,s)}else{const r=this.safeInteger(t,"sequence"),a=this.safeValue(l,"info",{}),n=this.safeInteger(a,"sequence");if(void 0===n||r>n)if("match"===i){const i=this.parseWsTrade(t);void 0===l.trades&&(l.trades=[]),l.trades.push(i),l.lastTradeTimestamp=i.timestamp;let r=0,a=0;const n=l.trades;for(let e=0;e<n.length;e++){const t=n[e];r=this.sum(r,t.cost),a=this.sum(a,t.amount)}a>0&&(l.average=r/a),l.cost=r,void 0!==l.filled&&(l.filled+=i.amount,void 0!==l.amount&&(l.remaining=l.amount-l.filled)),void 0===l.fee&&(l.fee={cost:0,currency:i.fee.currency}),void 0!==l.fee.cost&&void 0!==i.fee.cost&&(l.fee.cost=this.sum(l.fee.cost,i.fee.cost)),d.append(l),e.resolve(d,s)}else if("received"===i||"done"===i){const i=this.extend(l.info,t),r=this.parseWsOrder(i),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e];void 0!==r[t]&&(l[t]=r[t])}d.append(l),e.resolve(d,s)}}}}parseWsOrder(e){const t=this.safeString(e,"order_id"),s=this.safeString(e,"client_oid"),i=this.safeString(e,"product_id"),r=this.safeSymbol(i),a=this.safeString(e,"side"),n=this.safeNumber(e,"price"),o=this.safeNumber2(e,"size","funds"),c=this.safeString(e,"time"),d=this.parse8601(c),h=this.safeString(e,"reason"),l=this.parseWsOrderStatus(h),u=this.safeString(e,"order_type");let f=this.safeNumber(e,"remaining_size");const p=this.safeString(e,"type");let m,g;return void 0!==o&&void 0!==f?m=o-f:"received"===p&&(m=0,void 0!==o&&(f=o-m)),void 0!==n&&void 0!==o&&(g=n*o),{info:e,symbol:r,id:t,clientOrderId:s,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,type:u,timeInForce:void 0,postOnly:void 0,side:a,price:n,stopPrice:void 0,amount:o,cost:g,average:void 0,filled:m,remaining:f,status:l,fee:void 0,trades:void 0}}handleTicker(e,t){const s=this.safeString(t,"product_id");if(void 0!==s){const i=this.parseTicker(t),r=i.symbol;this.tickers[r]=i;const a=this.safeString(t,"type")+":"+s;e.resolve(i,a)}return t}parseTicker(e,t){if(void 0===this.safeString(e,"type"))return super.parseTicker(e,t);const s=this.safeString(e,"product_id"),i=this.safeSymbol(s,t,"-"),r=this.parse8601(this.safeString(e,"time")),a=this.safeNumber(e,"price");return{symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeNumber(e,"high_24h"),low:this.safeNumber(e,"low_24h"),bid:this.safeNumber(e,"best_bid"),bidVolume:void 0,ask:this.safeNumber(e,"best_ask"),askVolume:void 0,vwap:void 0,open:this.safeNumber(e,"open_24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(e,"volume_24h"),quoteVolume:void 0,info:e}}handleDelta(e,t){const s=this.safeNumber(t,0),i=this.safeNumber(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBook(e,t){const s=this.safeString(t,"type"),i=this.safeString(t,"product_id"),r=this.safeMarket(i,void 0,"-").symbol,a="level2:"+i,n=this.safeValue(e.subscriptions,a,{}),o=this.safeInteger(n,"limit");if("snapshot"===s){this.orderbooks[r]=this.orderBook({},o);const s=this.orderbooks[r];this.handleDeltas(s.asks,this.safeValue(t,"asks",[])),this.handleDeltas(s.bids,this.safeValue(t,"bids",[])),s.timestamp=void 0,s.datetime=void 0,e.resolve(s,a)}else if("l2update"===s){const s=this.orderbooks[r],i=this.parse8601(this.safeString(t,"time")),n=this.safeValue(t,"changes",[]),o={sell:"asks",buy:"bids"};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,0),r=this.safeString(o,i),a=this.safeNumber(t,1),c=this.safeNumber(t,2);s[r].store(a,c)}s.timestamp=i,s.datetime=this.iso8601(i),e.resolve(s,a)}}handleSubscriptionStatus(e,t){return t}handleMessage(e,t){const s=this.safeString(t,"type"),i={snapshot:this.handleOrderBook,l2update:this.handleOrderBook,subscribe:this.handleSubscriptionStatus,ticker:this.handleTicker,received:this.handleOrder,open:this.handleOrder,change:this.handleOrder,done:this.handleOrder},r=e.url.length,a="?"===e.url[r-1],n=this.safeValue(i,s);if(void 0!==n)return n.call(this,e,t);"match"===s&&(a?(this.handleMyTrade(e,t),this.handleOrder(e,t)):this.handleTrade(e,t))}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],30:[function(e,t,s){"use strict";const i=e("ccxt"),r=e("ccxt/js/base/Precise"),{AuthenticationError:a,BadRequest:n,ExchangeNotAvailable:o,NotSupported:c,RequestTimeout:d,ExchangeError:h}=e("ccxt/js/base/errors"),{ArrayCache:l,ArrayCacheByTimestamp:u,ArrayCacheBySymbolById:f}=e("./base/Cache");t.exports=class extends i.coinex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:{spot:"wss://socket.coinex.com/",swap:"wss://perpetual.coinex.com/"}}},options:{account:"spot",watchOrderBook:{limits:[5,10,20,50],defaultLimit:50,aggregations:["10","1","0","0.1","0.01"],defaultAggregation:"0"}},streaming:{},exceptions:{codes:{1:n,2:h,3:o,4:c,5:d,6:a}},timeframes:{"1m":60,"3m":180,"5m":300,"15m":900,"30m":1800,"1h":3600,"2h":7200,"4h":14400,"6h":21600,"12h":43200,"1d":86400,"3d":259200,"1w":604800}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}handleTicker(e,t){const s=this.safeValue(t,"params",[]),i=this.safeValue(s,0,{}),r=Object.keys(i),a=this.safeString(r,0),n=this.safeSymbol(a),o=this.safeValue(i,a,{}),c=this.safeMarket(a),d=this.parseWSTicker(o,c),h="ticker:"+n;this.tickers[n]=d,e.resolve(d,h)}parseWSTicker(e,t){return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:this.safeString(e,"buy_total"),ask:void 0,askVolume:this.safeString(e,"sell_total"),vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:this.safeString(e,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"deal"),info:e},t)}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate(e);const t="balance";let s;[s,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);const i=this.urls.api.ws[s],r={method:"asset.subscribe",params:Object.keys(this.currencies_by_id),id:this.requestId()},a=this.deepExtend(r,e);return await this.watch(i,t,a,t)}handleBalance(e,t){const s=this.safeValue(t,"params",[]),i=this.safeValue(s,0,{}),a=Object.keys(i);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeCurrencyCode(t),n=this.safeString(i[t],"available"),o=this.safeString(i[t],"frozen"),c=r.stringAdd(n,o),d=this.account();d.free=this.parseNumber(n),d.used=this.parseNumber(o),d.total=this.parseNumber(c),this.balance[s]=d,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,"balance")}handleTrades(e,t){const s=this.safeValue(t,"params",[]),i=this.safeString(s,0),r=this.safeValue(s,1,[]),a=this.safeMarket(i),n=this.safeSymbol(i),o="trades:"+n;let c=this.safeValue(this.trades,n);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new l(e),this.trades[n]=c}for(let e=0;e<r.length;e++){const t=r[e],s=this.parseWSTrade(t,a);c.append(s)}this.trades[n]=c,e.resolve(this.trades[n],o)}parseWSTrade(e,t){const s=this.safeTimestamp(e,"time");return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:s,datetime:this.iso8601(s),symbol:this.safeSymbol(void 0,t),order:void 0,type:void 0,side:this.safeString(e,"type"),takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}handleOHLCV(e,t){const s=this.safeValue(t,"params",[]),i=this.parseOHLCVs(s);if(0===Object.keys(this.ohlcvs).length){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs=new u(e)}for(let e=0;e<i.length;e++){const t=i[e];this.ohlcvs.append(t)}e.resolve(this.ohlcvs,"ohlcv")}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e);let i;[i,t]=this.handleMarketTypeAndParams("watchTicker",s,t);const r=this.urls.api.ws[i],a="ticker:"+e,n={method:"state.subscribe",id:this.requestId(),params:[s.id]},o=this.deepExtend(n,t);return await this.watch(r,a,o,a,o)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);let a;[a,i]=this.handleMarketTypeAndParams("watchTrades",r,i);const n=this.urls.api.ws[a],o="trades:"+e,c={method:"deals.subscribe",params:[r.id],id:this.requestId()},d=this.deepExtend(c,i),h=await this.watch(n,o,d,o,d);return this.filterBySinceLimit(h,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);let r;[r,s]=this.handleMarketTypeAndParams("watchOrderBook",i,s);const a=this.urls.api.ws[r],n="orderbook:"+e,o=this.safeValue(this.options,"watchOrderBook",{}),d=this.safeValue(o,"limits",[]);if(void 0===t&&(t=this.safeValue(o,"defaultLimit",50)),!this.inArray(t,d))throw new c(this.id+" watchOrderBook() limit must be one of "+d.join(", "));const h=this.safeString(o,"defaultAggregation","0"),l=this.safeValue(o,"aggregations",[]),u=this.safeString(s,"aggregation",h);if(!this.inArray(u,l))throw new c(this.id+" watchOrderBook() aggregation must be one of "+l.join(", "));s=this.omit(s,"aggregation");const f={method:"depth.subscribe",id:this.requestId(),params:[i.id,t,u,!0]},p=this.deepExtend(f,s);return(await this.watch(a,n,p,n)).limit(t)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n="ohlcv";let o;if([o,r]=this.handleMarketTypeAndParams("watchOHLCV",a,r),"swap"!==o)throw new c(this.id+" watchOHLCV() is only supported for swap markets");const d=this.urls.api.ws[o],h={method:"kline.subscribe",id:this.requestId(),params:[a.id,this.safeInteger(this.timeframes,t,t)]},l=this.deepExtend(h,r),u=await this.watch(d,n,l,n);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,s,i,0,!0)}handleDelta(e,t){const s=this.parseBidAsk(t,0,1);e.storeArray(s)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBook(e,t){const s=this.safeValue(t,"params",[]),i=this.safeValue(s,0);let r=this.safeValue(s,1);const a=this.safeString(s,2),n=this.safeMarket(a).symbol,o="orderbook:"+n,c=this.safeNumber(r,"time"),d=this.safeValue(this.orderbooks,n);if(i){const e=this.parseOrderBook(r,n,c);void 0===d?(r=this.orderBook(e),this.orderbooks[n]=r):(r=this.orderbooks[n],r.reset(e))}else{const e=this.safeValue(r,"asks",[]),t=this.safeValue(r,"bids",[]);this.handleDeltas(d.asks,e),this.handleDeltas(d.bids,t),d.nonce=c,d.timestamp=c,d.datetime=this.iso8601(c),this.orderbooks[n]=d}e.resolve(this.orderbooks[n],o)}checkOrderBookChecksum(e){const t=this.safeValue(e,"asks",[]),s=this.safeValue(e,"bids",[]);let i="";const r=s.length;for(let e=0;e<r;e++){const t=s[e];0!==e&&(i+=":"),i+=t[0]+":"+t[1]}const a=t.length;for(let e=0;e<a;e++){const s=t[e];0!==r&&(i+=":"),i+=s[0]+":"+s[1]}const n=this.hash(i,"cr32","hex");if(this.safeString(e,"checksum")!==n)throw new h(this.id+" watchOrderBook () checksum failed")}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.authenticate(i);let r,a="orders";const[n,o]=this.handleMarketTypeAndParams("watchOrders",r,i),c={method:"order.subscribe",id:this.requestId()};if(void 0!==e)r=this.market(e),e=r.symbol,c.params=[r.id],a+=":"+e;else{const e=Object.keys(this.markets_by_id);c.params=e}const d=this.urls.api.ws[n],h=this.deepExtend(c,o),l=await this.watch(d,a,h,a,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySymbolSinceLimit(l,e,t,s,!0)}handleOrders(e,t){const s=this.safeValue(t,"params",[]),i=this.safeValue(s,1,{}),r=this.parseWSOrder(i);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new f(e)}this.orders.append(r);let a="orders";e.resolve(this.orders,a),a+=":"+r.symbol,e.resolve(this.orders,a)}parseWSOrder(e){const t=this.safeTimestamp2(e,"update_time","mtime"),s=this.safeString(e,"market"),i=this.safeString(e,"type"),a=this.safeString({1:"limit",2:"market"},i),n=this.safeString(e,"side"),o=this.safeString({1:"sell",2:"buy"},n),c=this.safeString(e,"left"),d=this.safeString(e,"amount"),h=this.safeString(e,"status"),l=this.safeMarket(s);let u,f,p=this.safeString(e,"deal_money"),m=this.safeString(e,"deal_stock");if(l.swap){const t=this.safeString(e,"leverage");p=r.stringDiv(m,t),u=r.stringDiv(m,d),m=void 0}const g=this.omitZero(this.safeString(e,"money_fee"));if(void 0!==g){const t=this.safeString(e,"fee_asset",l.quote);f={currency:this.safeCurrencyCode(t),cost:g}}return this.safeOrder({info:e,id:this.safeString2(e,"order_id","id"),clientOrderId:this.safeString(e,"client_id"),datetime:this.iso8601(t),timestamp:t,lastTradeTimestamp:this.safeTimestamp(e,"last_deal_time"),symbol:l.symbol,type:1===a?"limit":"market",timeInForce:void 0,postOnly:void 0,side:o,price:this.safeString(e,"price"),stopPrice:this.safeString(e,"stop_price"),amount:d,filled:m,remaining:c,cost:p,average:u,status:this.parseWSOrderStatus(h),fee:f,trades:void 0},l)}parseWSOrderStatus(e){return this.safeString({0:"pending",1:"ok"},e,e)}handleMessage(e,t){const s=this.safeValue(t,"error");if(void 0!==s)throw new h(this.id+" "+this.json(s));const i=this.safeString(t,"method"),r={"state.update":this.handleTicker,"asset.update":this.handleBalance,"deals.update":this.handleTrades,"depth.update":this.handleOrderBook,"order.update":this.handleOrders,"kline.update":this.handleOHLCV,"order.update_stop":this.handleOrders},a=this.safeValue(r,i);return void 0!==a?a.call(this,e,t):this.handleSubscriptionStatus(e,t)}handleAuthenticationMessage(e,t){const s=this.safeValue(e.futures,"authenticated");return void 0!==s&&s.resolve(!0),t}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.safeValue(e.subscriptions,s);if(void 0!==i){const t=this.safeString(i,"future"),r=this.safeValue(e.futures,t);void 0!==r&&r.resolve(!0),delete e.subscriptions[s]}}authenticate(e={}){let t;[t,e]=this.handleMarketTypeAndParams("authenticate",void 0,e);const s=this.urls.api.ws[t],i=this.client(s),r=this.milliseconds();if("spot"===t){const e="authenticated:spot";if(void 0!==this.safeValue(i.futures,e))return;const t=i.future(e),a=this.requestId(),n={id:a,future:"authenticated:spot"},o="access_id="+this.apiKey+"&tonce="+this.numberToString(r)+"&secret_key="+this.secret,c=this.hash(this.encode(o),"md5"),d={method:"server.sign",params:[this.apiKey,c.toUpperCase(),r],id:a};return this.spawn(this.watch,s,e,d,a,n),t}{const e="authenticated:swap";if(void 0!==this.safeValue(i.futures,e))return;const t=i.future("authenticated:swap"),a=this.requestId(),n={id:a,future:"authenticated:swap"},o="access_id="+this.apiKey+"&timestamp="+this.numberToString(r)+"&secret_key="+this.secret,c=this.hash(this.encode(o),"sha256","hex"),d={method:"server.sign",params:[this.apiKey,c.toLowerCase(),r],id:a};return this.spawn(this.watch,s,e,d,a,n),t}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/Precise":127,"ccxt/js/base/errors":129}],31:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,NotSupported:a,ExchangeError:n}=e("ccxt/js/base/errors"),{ArrayCache:o,ArrayCacheByTimestamp:c,ArrayCacheBySymbolById:d}=e("./base/Cache");t.exports=class extends i.cryptocom{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchMyTrades:!0,watchTrades:!0,watchOrderBook:!0,watchOrders:!0,watchOHLCV:!0},urls:{api:{ws:{public:"wss://stream.crypto.com/v2/market",private:"wss://stream.crypto.com/v2/user"}},test:{public:"wss://uat-stream.3ona.co/v2/market",private:"wss://uat-stream.3ona.co/v2/user"}},options:{},streaming:{}})}async pong(e,t){await e.send({id:this.safeInteger(t,"id"),method:"public/respond-heartbeat"})}async watchOrderBook(e,t,s={}){if(void 0!==t){if(10!==t&&150!==t)throw new n(this.id+" watchOrderBook limit argument must be undefined, 10 or 150")}else t=150;await this.loadMarkets();const i=this.market(e);if(!i.spot)throw new a(this.id+" watchOrderBook() supports spot markets only");const r="book."+i.id+"."+t.toString();return(await this.watchPublic(r,s)).limit(t)}handleOrderBookSnapshot(e,t){const s=this.safeString(t,"subscription"),i=this.safeString(t,"instrument_name"),r=this.safeMarket(i).symbol;let a=this.safeValue(t,"data");a=this.safeValue(a,0);const n=this.safeInteger(a,"t"),o=this.parseOrderBook(a,r,n);o.nonce=this.safeInteger(a,"s");let c=this.safeValue(this.orderbooks,r);if(void 0===c){const e=this.safeInteger(t,"depth");c=this.orderBook({},e)}c.reset(o),this.orderbooks[r]=c,e.resolve(c,s)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);if(!r.spot)throw new a(this.id+" watchTrades() supports spot markets only");const n="trade."+r.id,o=await this.watchPublic(n,i);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"channel"),i=this.safeString(t,"instrument_name"),r=this.safeString(t,"subscription"),a=this.safeMarket(i),n=a.symbol;let c=this.safeValue(this.trades,n);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new o(e),this.trades[n]=c}const d=this.safeValue(t,"data",[]),h=this.parseTrades(d,a);for(let e=0;e<h.length;e++)c.append(h[e]);e.resolve(c,r),e.resolve(c,s)}async watchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.trade":"user.trade";a=void 0!==r?a+"."+r.id:a;const n=await this.watchPrivate(a,i);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.spot)throw new a(this.id+" watchTicker() supports spot markets only");const i="ticker."+s.id;return await this.watchPublic(i,t)}handleTicker(e,t){const s=this.safeString(t,"subscription"),i=this.safeString(t,"instrument_name"),r=this.safeMarket(i),a=this.safeValue(t,"data",[]);for(let t=0;t<a.length;t++){const i=a[t],n=this.parseTicker(i,r),o=n.symbol;this.tickers[o]=n,e.resolve(n,s)}}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const n=this.market(e);if(!n.spot)throw new a(this.id+" watchOHLCV() supports spot markets only");const o="candlestick."+this.timeframes[t]+"."+n.id,c=await this.watchPublic(o,r);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"subscription"),i=this.safeString(t,"instrument_name"),r=this.safeMarket(i),a=r.symbol,n=this.safeString(t,"interval"),o=this.findTimeframe(n);this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let d=this.safeValue(this.ohlcvs[a],o);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new c(e),this.ohlcvs[a][o]=d}const h=this.safeValue(t,"data");for(let e=0;e<h.length;e++){const t=h[e],s=this.parseOHLCV(t,r);d.append(s)}e.resolve(d,s)}async watchOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));let a="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.order":"user.order";a=void 0!==r?a+"."+r.id:a;const n=await this.watchPrivate(a,i);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}handleOrders(e,t,s){const i=this.safeString(t,"channel"),r=this.safeString(t,"subscription"),a=this.safeValue(t,"data",[]);if(a.length>0){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new d(e)}const t=this.orders,s=this.parseOrders(a);for(let e=0;e<s.length;e++)t.append(s[e]);e.resolve(t,r),e.resolve(t,i)}}async watchBalance(e={}){const t="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.balance":"user.balance";return await this.watchPrivate(t,e)}handleBalance(e,t){const s=this.safeString(t,"subscription"),i=this.safeValue(t,"data");for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"currency"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(t,"available"),a.total=this.safeString(t,"balance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,s)}async watchPublic(e,t={}){const s=this.urls.api.ws.public,i={method:"subscribe",params:{channels:[e]},nonce:this.nonce()},r=this.extend(i,t);return await this.watch(s,e,r,e)}async watchPrivate(e,t={}){await this.authenticate();const s=this.urls.api.ws.private,i={method:"subscribe",params:{channels:[e]},nonce:this.nonce()},r=this.extend(i,t);return await this.watch(s,e,r,e)}handleErrorMessage(e,t){const s=this.safeInteger(t,"code");try{if(void 0!==s&&0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);const i=this.safeValue(t,"message");void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}}catch(t){if(t instanceof r)return e.reject(t,"authenticated"),"public/auth"in e.subscriptions&&delete e.subscriptions["public/auth"],!1;e.reject(t)}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;const s=this.safeString(t,"method");if("public/heartbeat"===s)return void this.handlePing(e,t);if("public/auth"===s)return void this.handleAuthenticate(e,t);const i={candlestick:this.handleOHLCV,ticker:this.handleTicker,trade:this.handleTrades,book:this.handleOrderBookSnapshot,"user.order":this.handleOrders,"user.margin.order":this.handleOrders,"user.trade":this.handleTrades,"user.margin.trade":this.handleTrades,"user.balance":this.handleBalance,"user.margin.balance":this.handleBalance},r=this.safeValue2(t,"result","info"),a=this.safeString(r,"channel"),n=this.safeValue(i,a);void 0!==n&&n.call(this,e,r)}async authenticate(e={}){const t=this.urls.api.ws.private;this.checkRequiredCredentials();const s=this.client(t),i=s.future("authenticated"),r="public/auth";if(void 0===this.safeValue(s.subscriptions,r)){const s=this.nonce().toString(),i=r+s+this.apiKey+s,a=this.hmac(this.encode(i),this.encode(this.secret),"sha256"),n={id:s,nonce:s,method:r,api_key:this.apiKey,sig:a};this.spawn(this.watch,t,r,this.extend(n,e),r)}return await i}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),e.resolve(1,"public/auth"),t}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],32:[function(e,t,s){"use strict";const i=e("ccxt"),r=e("ccxt").Precise,{ArrayCache:a,ArrayCacheByTimestamp:n}=e("./base/Cache");t.exports=class extends i.currencycom{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://api-adapter.backend.currency.com/connect"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"W1"}},streaming:{ping:this.ping,keepAlive:2e4}})}ping(e){return{destination:"ping",correlationId:this.requestId().toString(),payload:{}}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleBalance(e,t,s){const i=this.safeValue(t,"payload"),r=this.parseBalance(i);this.balance=this.extend(this.balance,r);const a=this.safeString(s,"messageHash");e.resolve(this.balance,a),a in e.subscriptions&&delete e.subscriptions[a]}handleTicker(e,t,s){const i=this.safeValue(t,"payload"),r=this.safeValue(i,"tickers",[]);for(let t=0;t<r.length;t++){const s=this.parseTicker(r[t]),i=s.symbol;this.tickers[i]=s;const a="/api/v1/ticker/24hr:"+i;e.resolve(s,a),a in e.subscriptions&&delete e.subscriptions[a]}}handleTrade(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,void 0,"/"),a=this.safeInteger(e,"ts"),n=this.safeString(e,"price"),o=this.safeString(e,"size"),c=this.parseNumber(r.stringMul(n,o)),d=this.parseNumber(n),h=this.parseNumber(o),l=this.safeString2(e,"id"),u=this.safeString(e,"orderId"),f=this.safeValue(e,"buyer")?"buy":"sell";return{info:e,timestamp:a,datetime:this.iso8601(a),symbol:i,id:l,order:u,type:void 0,takerOrMaker:void 0,side:f,price:d,amount:h,cost:c,fee:void 0}}handleTrades(e,t,s){const i=this.safeValue(t,"payload"),r=this.handleTrade(i),n=r.symbol,o="trades.subscribe:"+n;let c=this.safeValue(this.trades,n);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a(e),this.trades[n]=c}c.append(r),e.resolve(c,o)}findTimeframe(e){const t=this.safeValue(this.options,"timeframes"),s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i];if(t[r]===e)return r}}handleOHLCV(e,t){const s=this.safeValue(t,"payload",{}),i=this.safeString(s,"interval"),r=this.findTimeframe(i),a=this.safeString(s,"symbol"),o=this.safeMarket(a).symbol,c="OHLCMarketData.subscribe:"+r+":"+o,d=[this.safeInteger(s,"t"),this.safeNumber(s,"o"),this.safeNumber(s,"h"),this.safeNumber(s,"l"),this.safeNumber(s,"c"),void 0];this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],r);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new n(e),this.ohlcvs[o][r]=h}h.append(d),e.resolve(h,c)}requestId(){const e=this.sum(this.safeInteger(this.options,"correlationId",0),1);return this.options.correlationId=e,e}async watchPublic(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=e+":"+t,a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:e,correlationId:n,payload:{symbols:[i.id]}},s),c=this.extend(o,{messageHash:r,symbol:t});return await this.watch(a,r,o,r,c)}async watchPrivate(e,t={}){await this.loadMarkets();const s="/api/v1/account",i=this.urls.api.ws,r=this.requestId().toString(),a={timestamp:this.milliseconds(),apiKey:this.apiKey},n=this.urlencode(this.keysort(a)),o=this.deepExtend({destination:e,correlationId:r,payload:a},t);o.payload.signature=this.hmac(this.encode(n),this.encode(this.secret));const c=this.extend(o,{messageHash:s});return await this.watch(i,s,o,s,c)}async watchBalance(e={}){return await this.loadMarkets(),await this.watchPrivate("/api/v1/account",e)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="/api/v1/ticker/24hr",r=i+":"+e,a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:i,correlationId:n,payload:{symbol:s.id}},t),c=this.extend(o,{messageHash:r,symbol:e});return await this.watch(a,r,o,r,c)}async watchTrades(e,t,s,i={}){const r=await this.watchPublic("trades.subscribe",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){return(await this.watchPublic("depthMarketData.subscribe",e,s)).limit(t)}async watchOHLCV(e,t="1m",s,i,r={}){const a="OHLCMarketData.subscribe",n=a+":"+t,o={destination:a,payload:{intervals:[this.safeValue(this.options,"timeframes")[t]]}},c=await this.watchPublic(n,e,this.extend(o,r));return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,s,i,0,!0)}handleDeltas(e,t){const s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i],a=t[r];e.store(parseFloat(r),parseFloat(a))}}handleOrderBook(e,t){const s=this.safeValue(t,"payload",{}),i=this.safeValue(s,"data",{}),r=this.safeString(s,"symbol"),a=this.safeSymbol(r,void 0,"/"),n="depthMarketData.subscribe:"+a,o=this.safeInteger(i,"ts");let c=this.safeValue(this.orderbooks,a);void 0===c&&(c=this.orderBook()),c.reset({timestamp:o,datetime:this.iso8601(o)});const d=this.safeValue(i,"bid",{}),h=this.safeValue(i,"ofr",{});this.handleDeltas(c.bids,d),this.handleDeltas(c.asks,h),this.orderbooks[a]=c,e.resolve(c,n)}handleMessage(e,t){const s=this.safeString(t,"correlationId");if(void 0!==s){const i=this.indexBy(e.subscriptions,"correlationId"),r=this.safeString(t,"status"),a=this.safeValue(i,s);if(void 0!==a&&"OK"===r){const s=this.safeString(a,"destination");if(void 0!==s){const i={"/api/v1/ticker/24hr":this.handleTicker,"/api/v1/account":this.handleBalance},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t,a)}}}const i=this.safeString(t,"destination");if(void 0!==i){const s={"marketdepth.event":this.handleOrderBook,"internal.trade":this.handleTrades,"ohlc.event":this.handleOHLCV,ping:this.handlePong},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}},{"./base/Cache":5,ccxt:123}],33:[function(e,t,s){"use strict";const i=e("ccxt"),{NotSupported:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheBySymbolById:n}=e("./base/Cache");t.exports=class extends i.exmo{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!1,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:{public:"wss://ws-api.exmo.com:443/v1/public",spot:"wss://ws-api.exmo.com:443/v1/private",margin:"wss://ws-api.exmo.com:443/v1/margin/private"}}},options:{},streaming:{},exceptions:{}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);const[t,s]=this.handleMarketTypeAndParams("watchBalance",void 0,e),i="balance:"+t,r=this.urls.api.ws[t],a={method:"subscribe",topics:[t+"/wallet"],id:this.requestId()},n=this.deepExtend(a,s);return await this.watch(r,i,n,i,n)}handleBalance(e,t){const s=this.safeString(t,"topic").split("/"),i=this.safeString(s,0);"spot"===i?this.parseSpotBalance(t):"margin"===i&&this.parseMarginBalance(t);const r="balance:"+i;e.resolve(this.balance,r)}parseSpotBalance(e){const t=this.safeString(e,"event"),s=this.safeValue(e,"data");if("snapshot"===t){const e=this.safeValue(s,"balances",{}),t=this.safeValue(s,"reserved",{}),i=Object.keys(e);for(let s=0;s<i.length;s++){const r=i[s],a=this.safeCurrencyCode(r),n=e[r],o=t[r],c=this.account();c.free=this.parseNumber(n),c.used=this.parseNumber(o),this.balance[a]=c}}else if("update"===t){const e=this.safeString(s,"currency"),t=this.safeCurrencyCode(e),i=this.account();i.free=this.safeNumber(s,"balance"),i.used=this.safeNumber(s,"reserved"),this.balance[t]=i}this.balance=this.safeBalance(this.balance)}parseMarginBalance(e){const t=this.safeValue(e,"data"),s=Object.keys(t);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeCurrencyCode(i),a=this.safeValue(t,i),n=this.account();n.free=this.safeNumber(a,"free"),n.used=this.safeNumber(a,"used"),n.total=this.safeNumber(a,"balance"),this.balance[r]=n,this.balance=this.safeBalance(this.balance)}}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=this.urls.api.ws.public,r="ticker:"+e,a={method:"subscribe",topics:["spot/ticker:"+s.id],id:this.requestId()},n=this.deepExtend(a,t);return await this.watch(i,r,n,r,n)}handleTicker(e,t){const s=this.safeString(t,"topic").split(":"),i=this.safeString(s,1),r=this.safeSymbol(i),a=this.safeValue(t,"data",{}),n=this.safeMarket(i),o=this.parseTicker(a,n),c="ticker:"+r;this.tickers[r]=o,e.resolve(o,c)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.urls.api.ws.public,n="trades:"+e,o={method:"subscribe",topics:["spot/trades:"+r.id],id:this.requestId()},c=this.deepExtend(o,i),d=await this.watch(a,n,c,n,c);return this.filterBySinceLimit(d,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"topic").split(":"),i=this.safeString(s,1),r=this.safeSymbol(i),n=this.safeMarket(i),o=this.safeValue(t,"data",[]),c="trades:"+r;let d=this.safeValue(this.trades,r);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a(e),this.trades[r]=d}for(let e=0;e<o.length;e++){const t=o[e],s=this.parseTrade(t,n);d.append(s)}this.trades[r]=d,e.resolve(this.trades[r],c)}async watchMyTrades(e,t,s,i={}){await this.loadMarkets(),await this.authenticate(i);const[r,a]=this.handleMarketTypeAndParams("watchMyTrades",void 0,i),n=this.urls.api.ws[r];let o;if(void 0===e)o="myTrades:"+r;else{o="myTrades:"+this.market(e).symbol}const c={method:"subscribe",topics:[r+"/user_trades"],id:this.requestId()},d=this.deepExtend(c,a),h=await this.watch(n,o,d,o,d);return this.filterBySymbolSinceLimit(h,e,t,s,!0)}handleMyTrades(e,t){const s=this.safeString(t,"topic").split("/"),i="myTrades:"+this.safeString(s,0),r=this.safeString(t,"event");let a,o=[];if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);a=new n(e),this.myTrades=a}else a=this.myTrades;if("snapshot"===r)o=this.safeValue(t,"data",[]);else if("update"===r){o=[this.safeValue(t,"data",{})]}const c=this.parseTrades(o),d={};for(let e=0;e<c.length;e++){const t=c[e];a.append(t),d[t.symbol]=!0}const h=Object.keys(d);for(let t=0;t<h.length;t++){const s="myTrades:"+h[t];e.resolve(a,s)}e.resolve(a,i)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.urls.api.ws.public,a="orderbook:"+e;s=this.omit(s,"aggregation");const n={method:"subscribe",id:this.requestId(),topics:["spot/order_book_updates:"+i.id]},o=this.deepExtend(n,s);return(await this.watch(r,a,o,a)).limit(t)}handleOrderBook(e,t){const s=this.safeString(t,"topic").split(":"),i=this.safeString(s,1),r=this.safeSymbol(i),a=this.safeValue(t,"data",{}),n="orderbook:"+r,o=this.safeNumber(t,"ts");let c=this.safeValue(this.orderbooks,r);void 0===c&&(c=this.orderBook({}),this.orderbooks[r]=c);if("snapshot"===this.safeString(t,"event")){const e=this.parseOrderBook(a,r,o,"bid","ask");c.reset(e)}else{const e=this.safeValue(a,"ask",[]),t=this.safeValue(a,"bid",[]);this.handleDeltas(c.asks,e),this.handleDeltas(c.bids,t),c.timestamp=o,c.datetime=this.iso8601(o)}e.resolve(c,n)}handleDelta(e,t){const s=this.parseBidAsk(t,0,1);e.storeArray(s)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleMessage(e,t){const s=this.safeString(t,"event");if("logged_in"===s)return this.handleAuthenticationMessage(e,t);if("update"===s||"snapshot"===s){const s=this.safeString(t,"topic");if(void 0!==s){const i=s.split(":"),r=this.safeString(i,0),a={"spot/ticker":this.handleTicker,"spot/wallet":this.handleBalance,"margin/wallet":this.handleBalance,"margin/wallets":this.handleBalance,"spot/trades":this.handleTrades,"margin/trades":this.handleTrades,"spot/order_book_updates":this.handleOrderBook,"spot/user_trades":this.handleMyTrades,"margin/user_trades":this.handleMyTrades},n=this.safeValue(a,r);if(void 0!==n)return n.call(this,e,t)}}if("info"===s)return this.handleInfo(e,t);if("subscribed"===s)return this.handleSubscribed(e,t);throw new r(this.id+" received an unsupported message: "+this.json(t))}handleSubscribed(e,t){return t}handleInfo(e,t){return t}handleAuthenticationMessage(e,t){const s=this.safeValue(e.futures,"authenticated");void 0!==s&&s.resolve(!0)}async authenticate(e={}){const[t,s]=this.handleMarketTypeAndParams("authenticate",void 0,e),i=this.urls.api.ws[t],r=this.client(i),a=this.milliseconds(),n="authenticated",o=r.future("authenticated");if(void 0===this.safeValue(r.subscriptions,n)){this.checkRequiredCredentials();const e=this.requestId(),t=this.apiKey+a.toString(),r=this.hmac(this.encode(t),this.encode(this.secret),"sha512","base64"),o={method:"login",id:e,api_key:this.apiKey,sign:r,nonce:a};this.spawn(this.watch,i,n,this.extend(o,s),n)}return await o}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],34:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r,AuthenticationError:a,ExchangeNotAvailable:n}=e("ccxt/js/base/errors"),{ArrayCache:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.ftx{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0,watchOHLCV:!1,watchBalance:!1,watchOrders:!0,watchMyTrades:!0},urls:{api:{ws:"wss://{hostname}/ws"}},options:{ordersLimit:1e3,tradesLimit:1e3},streaming:{ping:this.ping,keepAlive:15e3},exceptions:{exact:{"Internal server error":n,"Invalid login credentials":a,"Not logged in":a}}})}async watchPublic(e,t,s={}){await this.loadMarkets();const i=this.market(e).id,r=this.implodeParams(this.urls.api.ws,{hostname:this.hostname}),a={op:"subscribe",channel:t,market:i},n=t+":"+i;return await this.watch(r,n,a,n)}async watchPrivate(e,t,s={}){await this.loadMarkets();let i=e;if(void 0!==t){i=i+":"+this.market(t).id}await this.authenticate();const r=this.implodeParams(this.urls.api.ws,{hostname:this.hostname}),a={op:"subscribe",channel:e};return await this.watch(r,i,a,e)}authenticate(e={}){const t=this.implodeParams(this.urls.api.ws,{hostname:this.hostname}),s=this.client(t),i="authenticate",r="login";if(!(i in s.subscriptions)){this.checkRequiredCredentials(),s.subscriptions[i]=!0;const e=this.milliseconds(),a=e.toString()+"websocket_login",n=this.hmac(this.encode(a),this.encode(this.secret),"sha256","hex"),o={key:this.apiKey,time:e,sign:n},c=this.safeValue(this.options,"sign",{}),d=this.safeString(c,this.hostname,"FTX"),h=this.safeString(this.headers,d+"-SUBACCOUNT");void 0!==h&&(o.subaccount=h);const l={args:o,op:r};this.watch(t,r,l).resolve(!0)}return s.future(r)}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker")}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=await this.watchPublic(r.symbol,"trades");return this.newUpdates&&(s=a.getLimit(r.symbol,s)),this.filterBySinceLimit(a,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){return(await this.watchPublic(e,"orderbook")).limit(t)}handlePartial(e,t){const s={orderbook:this.handleOrderBookSnapshot},i=this.safeString(t,"channel"),r=this.safeValue(s,i);r&&r.call(this,e,t)}handleUpdate(e,t){const s={trades:this.handleTrade,ticker:this.handleTicker,orderbook:this.handleOrderBookUpdate,orders:this.handleOrder,fills:this.handleMyTrade},i=this.safeString(t,"channel"),r=this.safeValue(s,i);r&&r.call(this,e,t)}handleMessage(e,t){const s={partial:this.handleOrderBookSnapshot,update:this.handleUpdate,subscribed:this.handleSubscriptionStatus,unsubscribed:this.handleUnsubscriptionStatus,info:this.handleInfo,error:this.handleError,pong:this.handlePong},i=this.safeString(t,"type"),r=this.safeValue(s,i);r&&r.call(this,e,t)}getMessageHash(e){return this.safeString(e,"channel")+":"+this.safeString(e,"market")}handleTicker(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"market");if(i in this.markets_by_id){const r=this.markets_by_id[i],a=this.parseTicker(s,r),n=a.symbol;this.tickers[n]=a;const o=this.getMessageHash(t);e.resolve(a,o)}return t}handleOrderBookSnapshot(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"market");if(i in this.markets_by_id){const r=this.markets_by_id[i].symbol,a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeInteger(a,"limit",400),o=this.orderBook({},n);this.orderbooks[r]=o;const c=this.safeTimestamp(s,"time"),d=this.parseOrderBook(s,r,c);o.reset(d),this.orderbooks[r]=o;const h=this.getMessageHash(t);e.resolve(o,h)}}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookUpdate(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"market");if(i in this.markets_by_id){const r=this.markets_by_id[i].symbol,a=this.orderbooks[r];this.handleDeltas(a.asks,this.safeValue(s,"asks",[])),this.handleDeltas(a.bids,this.safeValue(s,"bids",[]));const n=this.safeTimestamp(s,"time");a.timestamp=n,a.datetime=this.iso8601(n),this.orderbooks[r]=a;const o=this.getMessageHash(t);e.resolve(a,o)}}handleTrade(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"market");if(i in this.markets_by_id){const r=this.markets_by_id[i],a=r.symbol,n=this.getMessageHash(t),c=this.safeInteger(this.options,"tradesLimit",1e3);let d=this.safeValue(this.trades,a);if(void 0===d&&(d=new o(c),this.trades[a]=d),Array.isArray(s)){const e=this.parseTrades(s,r);for(let t=0;t<e.length;t++)d.append(e[t])}else{const e=this.parseTrade(t,r);d.append(e)}e.resolve(d,n)}return t}handleSubscriptionStatus(e,t){return t}handleUnsubscriptionStatus(e,t){return t}handleInfo(e,t){return t}handleError(e,t){const s=this.safeString(t,"msg"),i=this.safeValue(this.exceptions.exact,s);if(void 0===i){const t=new r(s);e.reject(t)}else{if(i instanceof a){const t="authenticate";t in e.subscriptions&&delete e.subscriptions[t]}const t=new i(s);e.reject(t,"fills"),e.reject(t,"orders")}return t}ping(e){return{op:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}async watchOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);const a=await this.watchPrivate("orders",e);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}handleOrder(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"data"),r=this.parseOrder(i),a=this.market(r.symbol);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new c(e)}const n=this.orders;n.append(r),e.resolve(n,s);const o=s+":"+a.id;e.resolve(n,o)}async watchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);const a=await this.watchPrivate("fills",e);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s,!0)}handleMyTrade(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"data",{}),r=this.parseTrade(i),a=this.market(r.symbol);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new c(e)}const n=this.myTrades;n.append(r),e.resolve(n,s);const o=s+":"+a.id;e.resolve(n,o)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],35:[function(e,t,s){"use strict";const i=e("./ftx.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ftxus",name:"FTX.us",countries:["US"],hostname:"ftx.us",has:{future:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/141506670-12f6115f-f425-4cd8-b892-b51d157ca01f.jpg",www:"https://ftx.us/",docs:"https://docs.ftx.us/",fees:"https://help.ftx.us/hc/en-us/articles/360043579273-Fees"}})}}},{"./ftx.js":34}],36:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,BadRequest:a,ArgumentsRequired:n,NotSupported:o,InvalidNonce:c}=e("ccxt/js/base/errors"),{ArrayCache:d,ArrayCacheByTimestamp:h,ArrayCacheBySymbolById:l}=e("./base/Cache");t.exports=class extends i.gate{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOHLCV:!0,watchBalance:!0,watchOrders:!0},urls:{api:{ws:"wss://ws.gate.io/v4",spot:"wss://api.gateio.ws/ws/v4/",swap:{usdt:"wss://fx-ws.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws.gateio.ws/v4/ws/delivery/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/delivery/btc"},option:"wss://op-ws.gateio.live/v4/ws"},test:{swap:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},option:"wss://op-ws-testnet.gateio.live/v4/ws"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,watchTradesSubscriptions:{},watchTickerSubscriptions:{},watchOrderBookSubscriptions:{},watchOrderBook:{interval:"100ms"},watchBalance:{settle:"usdt",spot:"spot.balances"}},exceptions:{ws:{exact:{2:a,4:r,6:r,11:r}}}})}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const r=i.id,a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeInteger(a,"limit",20);t||(t=n);const o=this.safeString(a,"interval","100ms"),c=this.safeString(s,"interval",o),d=i.type,h=this.getUniformType(d)+".order_book_update",l=h+":"+i.symbol,u=this.getUrlByMarketType(d,i.inverse),f=[r,c];if("spot"!==d){const e=t.toString();f.push(e)}const p={method:this.handleOrderBookSubscription,symbol:e,limit:t};return(await this.subscribePublic(u,h,l,f,p)).limit(t)}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r);const a=this.safeValue(this.options,"handleOrderBookSubscription",{});if(this.safeValue(a,"fetchOrderBookSnapshot",!1)){s["fetchingOrderBookSnapshot"]=!0;const i=s.messageHash;e.subscriptions[i]=s,this.spawn(this.fetchOrderBookSnapshot,e,t,s)}}async fetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeString(s,"messageHash");try{const n=await this.fetchOrderBook(i,r),o=this.orderbooks[i],d=o.cache,h=this.safeValue(d,0,{}),l=this.safeValue(h,"result"),u=this.safeInteger(l,"U"),f=this.safeInteger(n,"nonce");if(void 0===u||f<u){const r=this.safeInteger(this.options,"maxOrderBookSyncAttempts",3);let n=this.safeInteger(s,"numAttempts",0);if(!(n<r))throw new c(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+i+" in "+r.toString()+" attempts");a in e.subscriptions&&(n=this.sum(n,1),s.numAttempts=n,e.subscriptions[a]=s,this.spawn(this.fetchOrderBookSnapshot,e,t,s))}else{o.reset(n);for(let t=0;t<d.length;t++){const s=d[t];this.handleOrderBookMessage(e,s,o)}this.orderbooks[i]=o,e.resolve(o,a)}}catch(t){e.reject(t,a)}}handleOrderBook(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"result"),r=this.safeString(i,"s"),a=this.safeSymbol(r);let n=this.safeValue(this.orderbooks,a);void 0===n&&(n=this.orderBook({}),this.orderbooks[a]=n);const o=s+":"+a,c=this.safeValue(e.subscriptions,o,{}),d="fetchingOrderBookSnapshot";if(this.safeValue(c,d,!1)||(c[d]=!0,e.subscriptions[o]=c,this.spawn(this.fetchOrderBookSnapshot,e,t,c)),void 0===n.nonce)n.cache.push(t);else{const i=s+":"+a;this.handleOrderBookMessage(e,t,n,i)}}handleOrderBookMessage(e,t,s,i){const r=this.safeValue(t,"result"),a=this.safeInteger(r,"u");if(a>=s.nonce){const t=this.safeValue(r,"a",[]),n=this.safeValue(r,"b",[]);this.handleDeltas(s.asks,t),this.handleDeltas(s.bids,n),s.nonce=a;const o=this.safeInteger(r,"t");s.timestamp=o,s.datetime=this.iso8601(o),void 0!==i&&e.resolve(s,i)}return s}handleDelta(e,t){let s,i;Array.isArray(t)?(s=this.safeFloat(t,0),i=this.safeFloat(t,1)):(s=this.safeFloat(t,"p"),i=this.safeFloat(t,"s")),e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=s.id,r=s.type,a=this.getUniformType(r)+".tickers",n=a+"."+s.symbol,o=[i],c=this.getUrlByMarketType(r,s.inverse);return await this.subscribePublic(c,a,n,o)}handleTicker(e,t){const s=this.safeString(t,"channel");let i=this.safeValue(t,"result");Array.isArray(i)||(i=[i]);for(let t=0;t<i.length;t++){const r=i[t],a=this.parseTicker(r),n=a.symbol;this.tickers[n]=a;const o=s+"."+n;e.resolve(this.tickers[n],o)}}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=r.id,n=r.type,o=this.getUniformType(n)+".trades";let c=o;void 0!==e&&(c+=":"+r.symbol);const d=this.getUrlByMarketType(n,r.inverse),h=[a],l=await this.subscribePublic(d,o,c,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"channel");let i=this.safeValue(t,"result");Array.isArray(i)||(i=[i]);const r=this.parseTrades(i),a={};for(let e=0;e<r.length;e++){const t=r[e],s=t.symbol;let i=this.safeValue(this.trades,s);if(void 0===i){const e=this.safeInteger(this.options,"tradesLimit",1e3);i=new d(e),this.trades[s]=i}i.append(t),a[s]=!0}const n=Object.keys(a);for(let t=0;t<n.length;t++){const i=n[t],r=s+":"+i,a=this.safeValue(this.trades,i);e.resolve(a,r)}e.resolve(this.trades,s)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=a.id,o=a.type,c=this.timeframes[t],d=this.getUniformType(o)+".candlesticks",h=d+":"+c+":"+a.symbol,l=this.getUrlByMarketType(o,a.inverse),u=[c,n],f=await this.subscribePublic(l,d,h,u);return this.newUpdates&&(i=f.getLimit(e,i)),this.filterBySinceLimit(f,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"channel");let i=this.safeValue(t,"result");Array.isArray(i)||(i=[i]);const r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"n",""),a=s.split("_"),n=this.safeString(a,0),o=n+"_",c=s.replace(o,""),d=this.safeSymbol(c,void 0,"_"),l=this.parseOHLCV(t);let u=this.safeValue(this.ohlcvs,d);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new h(e),this.ohlcvs[d]=u}u.append(l),r[d]=n}const a=Object.keys(r);for(let t=0;t<a.length;t++){const i=a[t],n=r[i],o=s+":"+this.timeframes[n]+":"+i,c=this.safeValue(this.ohlcvs,i);e.resolve(c,o)}}async authenticate(e={}){const t=this.urls.api.ws,s=this.client(t),i=s.future("authenticated"),r="server.sign";if(void 0===this.safeValue(s.subscriptions,r)){const e=this.milliseconds(),s=e.toString(),i=this.hmac(this.encode(s),this.encode(this.secret),"sha512","hex"),a={id:e,method:r,params:[this.apiKey,i,e]},n={id:e,method:this.handleAuthenticationMessage};this.spawn(this.watch,t,e,a,r,n)}return await i}async watchMyTrades(e,t,s,i={}){let r,a;await this.loadMarkets();let n="!all";if(void 0!==e){const t=this.market(e);e=t.symbol,a=t.type,n=t.id}else if([a,i]=this.handleMarketTypeAndParams("watchMyTrades",void 0,i),"spot"!==a){const e=this.safeValue(this.options,"watchMyTrades",{});r=this.safeValue(e,"subType","linear"),r=this.safeValue(i,"subType",r),i=this.omit(i,"subType")}const o=this.getUniformType(a)+".usertrades";let c=o;void 0!==e&&(c+=":"+e);const d="inverse"===r,h=this.getUrlByMarketType(a,d),l=[n],u="spot"!==a,f=await this.subscribePrivate(h,o,c,l,u);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySymbolSinceLimit(f,e,t,s,!0)}handleMyTrades(e,t){const s=this.safeValue(t,"result",[]),i=this.safeString(t,"channel");if(0===s.length)return;let r=this.myTrades;if(void 0===r){const e=this.safeInteger(this.options,"tradesLimit",1e3);r=new l(e)}const a=this.parseTrades(s),n={};for(let e=0;e<a.length;e++){const t=a[e];r.append(t);n[t.symbol]=!0}const o=Object.keys(n);for(let t=0;t<o.length;t++){const s=i+":"+o[t];e.resolve(r,s)}e.resolve(r,i)}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);const s=this.safeValue(this.options,"watchBalance",{});let i=this.safeValue(s,"subType","linear");i=this.safeValue(e,"subType",i),e=this.omit(e,"subType");const r="inverse"===i,a=this.getUrlByMarketType(t,r),n="spot"!==t;let o,c="spot";if("future"===t||"swap"===t?c="futures":"option"===t&&(c="options"),"spot"===t){const e=this.safeValue(this.options,"watchTicker",{});o=this.safeString(e,"spot","spot.balances")}else o=c+".balances";return await this.subscribePrivate(a,o,o,void 0,n)}handleBalance(e,t){const s=t.method,i=t.params[0];this.handleBalanceMessage(e,s,i)}handleBalanceMessage(e,t){const s=this.safeString(t,"channel"),i=this.safeValue(t,"result",[]);for(let e=0;e<i.length;e++){const t=i[e],s=this.account(),r=this.safeString(t,"currency","USDT"),a=this.safeCurrencyCode(r);s.free=this.safeString(t,"available"),s.total=this.safeString2(t,"total","balance"),this.balance[a]=s}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,s)}async watchOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" watchOrders requires a symbol argument");await this.loadMarkets();const r=this.market(e);e=r.symbol;let a="spot";r.future||r.swap?a="futures":r.option&&(a="options");const o=a+".orders";let c=o;c=o+":"+r.id;const d=this.getUrlByMarketType(r.type,r.inverse),h=[r.id],l="spot"!==a,u=await this.subscribePrivate(d,o,c,h,l);return this.newUpdates&&(s=u.getLimit(e,s)),this.filterBySinceLimit(u,t,s,"timestamp",!0)}handleOrder(e,t){const s=this.safeValue(t,"result",[]),i=this.safeString(t,"channel");if(s.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new l(t));const r=this.orders,a={},n=this.parseOrders(s);for(let e=0;e<n.length;e++){const t=n[e],s=this.safeValue(t,"info"),i=this.safeString(s,"event");"put"===i?t.status="open":"finish"===i&&(t.status="closed"),r.append(t);const o=t.symbol;a[this.market(o).id]=!0}const o=Object.keys(a);for(let t=0;t<o.length;t++){const s=i+":"+o[t];e.resolve(this.orders,s)}}}handleAuthenticationMessage(e,t,s){const i=this.safeValue(t,"result");if("success"===this.safeString(i,"status")){const t=this.safeValue(e.futures,"authenticated");void 0!==t&&t.resolve(!0)}else{const t=new r(this.id+" handleAuthenticationMessage() error");e.reject(t,"authenticated"),"server.sign"in e.subscriptions&&delete e.subscriptions["server.sign"]}}handleErrorMessage(e,t){const s=this.safeValue(t,"error",{}),i=this.safeInteger(s,"code");if(void 0!==i){const s=this.safeString(t,"id"),r=this.indexBy(e.subscriptions,"id"),a=this.safeValue(r,s);if(void 0!==a)try{this.throwExactlyMatchedException(this.exceptions.ws.exact,i,this.json(t))}catch(t){const i=this.safeString(a,"messageHash");e.reject(t,i),e.reject(t,s),s in e.subscriptions&&delete e.subscriptions[s]}}}handleBalanceSubscription(e,t){this.spawn(this.fetchBalanceSnapshot,e,t)}async fetchBalanceSnapshot(e,t){await this.loadMarkets();const s=this.safeString(t,"channel",""),i=s.split("."),r=this.safeString(i,0);let a=r;"futures"===r?a="future":"options"===a&&(a="option");const n={type:a};if("future"===a||"swap"===a){const e=this.safeValue(this.options,"watchTicker",{}),t=this.safeString(e,"settle","usdt");n.settle=t}const o=await this.fetchBalance(n);this.balance=o,e.resolve(this.balance,s)}handleSubscriptionStatus(e,t){this.safeString(t,"channel","").indexOf("balance")>=0&&this.handleBalanceSubscription(e,t)}handleMessage(e,t){this.handleErrorMessage(e,t);if("subscribe"===this.safeString(t,"event"))return void this.handleSubscriptionStatus(e,t);const s=this.safeString(t,"channel","").split("."),i=this.safeValue(s,1),r={usertrades:this.handleMyTrades,candlesticks:this.handleOHLCV,orders:this.handleOrder,tickers:this.handleTicker,trades:this.handleTrades,order_book_update:this.handleOrderBook,balances:this.handleBalanceMessage},a=this.safeValue(r,i);void 0!==a&&a.call(this,e,t)}getUniformType(e){let t="spot";return"future"===e||"swap"===e?t="futures":"option"===e&&(t="options"),t}getUrlByMarketType(e,t=!1){if("spot"===e){const t=this.urls.api.spot;if(void 0===t)throw new o(this.id+" does not have a testnet for the "+e+" market type.");return t}if("swap"===e){const e=this.urls.api.swap;return t?e.btc:e.usdt}if("future"===e){const e=this.urls.api.future;return t?e.btc:e.usdt}if("option"===e)return this.urls.api.option}requestId(){const e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async subscribePublic(e,t,s,i,r={}){const a=this.requestId(),n={id:a,time:this.seconds(),channel:t,event:"subscribe",payload:i};let o={id:a,messageHash:s};return o=this.extend(o,r),await this.watch(e,s,n,s,o)}async subscribePrivate(e,t,s,i,r=!1){if(this.checkRequiredCredentials(),r){if(void 0===this.uid||0===this.uid.length)throw new n(this.id+" requires uid to subscribe");const e=[this.uid];i=void 0===i?e:this.arrayConcat(e,i)}const a=this.seconds(),o="channel="+t+"&event=subscribe&time="+a.toString(),c=this.hmac(this.encode(o),this.encode(this.secret),"sha512","hex"),d={method:"api_key",KEY:this.apiKey,SIGN:c},h=this.requestId(),l={id:h,time:a,channel:t,event:"subscribe",auth:d};void 0!==i&&(l.payload=i);const u={id:h,messageHash:s};return await this.watch(e,s,l,s,u)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],37:[function(e,t,s){"use strict";const i=e("./gate.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"gateio"})}}},{"./gate.js":36}],38:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r,ArrayCacheByTimestamp:a}=e("./base/Cache");t.exports=class extends i.hitbtc{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:"wss://api.hitbtc.com/api/2/ws"}},options:{tradesLimit:1e3,methods:{orderbook:"subscribeOrderbook",ticker:"subscribeTicker",trades:"subscribeTrades",ohlcv:"subscribeCandles"}}})}async watchPublic(e,t,s,i={}){await this.loadMarkets();const r=this.marketId(e),a=this.urls.api.ws;let n=t+":"+r;void 0!==s&&(n+=":"+s);const o=this.safeValue(this.options,"methods",{}),c={method:this.safeString(o,t,t),params:{symbol:r},id:this.nonce()},d=this.deepExtend(c,i);return await this.watch(a,n,d,n)}async watchOrderBook(e,t,s={}){return(await this.watchPublic(e,"orderbook",void 0,s)).limit(t)}handleOrderBookSnapshot(e,t){const s=this.safeValue(t,"params",{}),i=this.safeString(s,"symbol"),r=this.safeMarket(i).symbol,a=this.parse8601(this.safeString(s,"timestamp")),n=this.safeInteger(s,"sequence");r in this.orderbooks&&delete this.orderbooks[r];const o=this.parseOrderBook(s,r,a,"bid","ask","price","size"),c=this.orderBook(o);c.nonce=n,this.orderbooks[r]=c;const d="orderbook:"+i;e.resolve(c,d)}handleOrderBookUpdate(e,t){const s=this.safeValue(t,"params",{}),i=this.safeString(s,"symbol"),r=this.safeMarket(i).symbol;if(r in this.orderbooks){const t=this.parse8601(this.safeString(s,"timestamp")),a=this.safeInteger(s,"sequence"),n=this.orderbooks[r],o=this.safeValue(s,"ask",[]),c=this.safeValue(s,"bid",[]);this.handleDeltas(n.asks,o),this.handleDeltas(n.bids,c),n.timestamp=t,n.datetime=this.iso8601(t),n.nonce=a,this.orderbooks[r]=n;const d="orderbook:"+i;e.resolve(n,d)}}handleDelta(e,t){const s=this.safeFloat(t,"price"),i=this.safeFloat(t,"size");e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker",void 0,t)}handleTicker(e,t){const s=this.safeValue(t,"params"),i=this.safeValue(s,"symbol"),r=this.safeMarket(i),a=r.symbol,n=this.parseTicker(s,r);this.tickers[a]=n;const o=this.safeValue(t,"method")+":"+i;e.resolve(n,o)}async watchTrades(e,t,s,i={}){const r=await this.watchPublic(e,"trades",void 0,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"params",{}),i=this.safeValue(s,"data",[]),a=this.safeString(s,"symbol"),n=this.safeMarket(a),o=n.symbol,c="trades:"+a,d=this.safeInteger(this.options,"tradesLimit",1e3);let h=this.safeValue(this.trades,o);if(void 0===h&&(h=new r(d),this.trades[o]=h),Array.isArray(i)){const e=this.parseTrades(i,n);for(let t=0;t<e.length;t++)h.append(e[t])}else{const e=this.parseTrade(t,n);h.append(e)}return e.resolve(h,c),t}async watchOHLCV(e,t="1m",s,i,r={}){const a=this.timeframes[t],n={params:{period:a}},o=this.deepExtend(n,r),c=await this.watchPublic(e,"ohlcv",a,o);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeValue(t,"params",{}),i=this.safeValue(s,"data",[]),r=this.safeString(s,"symbol"),n=this.safeMarket(r),o=n.symbol,c=this.safeString(s,"period"),d=this.findTimeframe(c),h="ohlcv:"+r+":"+c;for(let t=0;t<i.length;t++){const s=i[t],r=this.parseOHLCV(s,n);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let c=this.safeValue(this.ohlcvs[o],d);if(void 0===c){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new a(e),this.ohlcvs[o][d]=c}c.append(r),e.resolve(c,h)}return t}handleNotification(e,t){return t}handleMessage(e,t){const s={snapshotOrderbook:this.handleOrderBookSnapshot,updateOrderbook:this.handleOrderBookUpdate,ticker:this.handleTicker,snapshotTrades:this.handleTrades,updateTrades:this.handleTrades,snapshotCandles:this.handleOHLCV,updateCandles:this.handleOHLCV},i=this.safeString(t,"method"),r=this.safeValue(s,i);void 0===r?this.handleNotification(e,t):r.call(this,e,t)}}},{"./base/Cache":5,ccxt:123}],39:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,BadSymbol:a,BadRequest:n}=e("ccxt/js/base/errors"),{ArrayCache:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.hollaex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTickers:!1,watchTrades:!0},urls:{api:{ws:"wss://api.hollaex.com/stream"},test:{ws:"wss://api.sandbox.hollaex.com/stream"}},options:{watchBalance:{},watchOrders:{}},streaming:{ping:this.ping},exceptions:{ws:{exact:{"Bearer or HMAC authentication required":a,"Error: wrong input":n}}}})}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i="orderbook:"+this.market(e).id;return(await this.watchPublic(i,s)).limit(t)}handleOrderBook(e,t){const s=this.safeString(t,"symbol"),i=this.safeString(t,"topic"),r=this.safeMarket(s).symbol,a=this.safeValue(t,"data");let n=this.safeString(a,"timestamp");n=this.parse8601(n);const o=this.parseOrderBook(a,r,n);let c;r in this.orderbooks?(c=this.orderbooks[r],c.reset(o)):(c=this.orderBook(o),this.orderbooks[r]=c);const d=i+":"+s;e.resolve(c,d)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trade:"+r.id,n=await this.watchPublic(a,i);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"topic"),i=this.safeString(t,"symbol"),r=this.safeMarket(i),a=r.symbol;let n=this.safeValue(this.trades,a);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new o(e),this.trades[a]=n}const c=this.safeValue(t,"data",[]),d=this.parseTrades(c,r);for(let e=0;e<d.length;e++)n.append(d[e]);const h=s+":"+i;e.resolve(n,h),e.resolve(n,s)}async watchMyTrades(e,t,s,i={}){await this.loadMarkets();let r,a="usertrade";void 0!==e&&(r=this.market(e),e=r.symbol,a+=":"+r.id);const n=await this.watchPrivate(a,i);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}handleMyTrades(e,t,s){const i=this.safeString(t,"topic"),r=this.safeValue(t,"data");if(0===r.length)return 0;if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new o(e)}const a=this.myTrades,n={};for(let e=0;e<r.length;e++){const t=r[e],s=this.parseTrade(t);a.append(s);const i=t.symbol;n[this.market(i).id]=!0}e.resolve(this.myTrades,i);const c=Object.keys(n);for(let t=0;t<c.length;t++){const s=i+":"+c[t];e.resolve(this.myTrades,s)}}async watchOrders(e,t,s,i={}){await this.loadMarkets();let r,a="order";void 0!==e&&(r=this.market(e),e=r.symbol,a+=":"+r.id);const n=await this.watchPrivate(a,i);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}handleOrder(e,t,s){const i=this.safeString(t,"topic"),r=this.safeValue(t,"data",{});if(0===r.length)return 0;if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new c(e)}const a=this.orders;let n;n=Array.isArray(r)?r:[r];const o={};for(let e=0;e<n.length;e++){const t=n[e],s=this.parseOrder(t);a.append(s);const i=t.symbol;o[this.market(i).id]=!0}e.resolve(this.orders,i);const d=Object.keys(o);for(let t=0;t<d.length;t++){const s=i+":"+d[t];e.resolve(this.orders,s)}}async watchBalance(e={}){return await this.watchPrivate("wallet",e)}handleBalance(e,t){const s=this.safeString(t,"topic"),i=this.safeValue(t,"data"),r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],s=t.split("_"),a=this.safeString(s,0),n=this.safeCurrencyCode(a),o=n in this.balance?this.balance[n]:this.account();o["available"===this.safeString(s,1)?"free":"total"]=this.safeString(i,t),this.balance[n]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,s)}async watchPublic(e,t={}){const s=this.urls.api.ws,i={op:"subscribe",args:[e]},r=this.extend(i,t);return await this.watch(s,e,r,e)}async watchPrivate(e,t={}){this.checkRequiredCredentials();let s=this.safeString(this.options,"ws-expires");if(void 0===s){const e=parseInt(this.timeout/1e3);s=this.sum(this.seconds(),e),s=s.toString(),this.options["ws-expires"]=s}const i=this.urls.api.ws,r="CONNECT/stream"+s,a=this.hmac(this.encode(r),this.encode(this.secret)),n={"api-key":this.apiKey,"api-signature":a,"api-expires":s},o=i+"?"+this.urlencode(n),c={op:"subscribe",args:[e]},d=this.extend(c,t);return await this.watch(o,e,d,e)}handleErrorMessage(e,t){const s=this.safeInteger(t,"error");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,s,e)}}catch(e){if(e instanceof r)return!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message"))return void this.handlePong(e,t);const s={trade:this.handleTrades,orderbook:this.handleOrderBook,order:this.handleOrder,wallet:this.handleBalance,usertrade:this.handleMyTrades},i=this.safeValue(t,"topic"),r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}ping(e){return{op:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}onError(e,t){this.options["ws-expires"]=void 0,super.onError(e,t)}onClose(e,t){this.options["ws-expires"]=void 0,super.onError(e,t)}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],40:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r,InvalidNonce:a,ArgumentsRequired:n,BadRequest:o,BadSymbol:c,AuthenticationError:d}=e("ccxt/js/base/errors"),{ArrayCache:h,ArrayCacheByTimestamp:l,ArrayCacheBySymbolById:u}=e("./base/Cache");t.exports=class extends i.huobi{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchMyTrades:!0,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:{api:{spot:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2"},future:{linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"},inverse:{public:"wss://api.hbdm.com/ws",private:"wss://api.hbdm.com/notification"}},swap:{inverse:{public:"wss://api.hbdm.com/swap-ws",private:"wss://api.hbdm.com/swap-notification"},linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"}}},"api-aws":{spot:{public:"wss://api-aws.huobi.pro/ws",private:"wss://api-aws.huobi.pro/ws/v2"},future:{linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"},inverse:{public:"wss://api.hbdm.vn/ws",private:"wss://api.hbdm.vn/notification"}},swap:{inverse:{public:"wss://api.hbdm.vn/swap-ws",private:"wss://api.hbdm.vn/swap-notification"},linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"}}}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",maxOrderBookSyncAttempts:3,ws:{gunzip:!0}},exceptions:{ws:{exact:{"bad-request":o,2002:d,2021:o,2001:c,2011:c,2040:o}}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const i="market."+s.id+".detail",r=this.getUrlByMarketType(s.type,s.linear);return await this.subscribePublic(r,e,i,void 0,t)}handleTicker(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeString(t,"ch"),r=i.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(s,n),c=this.safeValue(t,"ts");o.timestamp=c,o.datetime=this.iso8601(c);const d=o.symbol;return this.tickers[d]=o,e.resolve(o,i),t}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="market."+r.id+".trade.detail",n=this.getUrlByMarketType(r.type,r.linear),o=await this.subscribePublic(n,e,a,void 0,i);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeValue(s,"data",{}),r=this.safeString(t,"ch"),a=r.split("."),n=this.safeString(a,1),o=this.safeMarket(n),c=o.symbol;let d=this.safeValue(this.trades,c);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new h(e),this.trades[c]=d}for(let e=0;e<i.length;e++){const t=this.parseTrade(i[e],o);d.append(t)}return e.resolve(d,r),t}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.timeframes[t],o="market."+a.id+".kline."+n,c=this.getUrlByMarketType(a.type,a.linear),d=await this.subscribePublic(c,e,o,void 0,r);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"ch"),i=s.split("."),r=this.safeString(i,1),a=this.safeMarket(r),n=a.symbol,o=this.safeString(i,3),c=this.findTimeframe(o);this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],c);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new l(e),this.ohlcvs[n][c]=d}const h=this.safeValue(t,"tick"),u=this.parseOHLCV(h,a);d.append(u),e.resolve(d,s)}async watchOrderBook(e,t,s={}){if(void 0!==t&&150!==t)throw new r(this.id+" watchOrderBook accepts limit = 150 only");await this.loadMarkets();const i=this.market(e);let a;e=i.symbol,t=void 0===t?150:t,a=i.spot?"market."+i.id+".mbp."+t.toString():"market."+i.id+".depth.size_"+t.toString()+".high_freq";const n=this.getUrlByMarketType(i.type,i.linear);i.spot||(s.data_type="incremental");return(await this.subscribePublic(n,e,a,this.handleOrderBookSubscription,s)).limit(t)}handleOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(s,"messageHash");try{const n=this.orderbooks[i],o=this.safeValue(t,"data"),c=n.cache,d=this.safeValue(c,0,{}),h=this.parseOrderBook(o,i),l=this.safeValue(d,"tick"),u=this.safeInteger(l,"seqNum"),f=this.safeInteger(o,"seqNum");if(h.nonce=f,void 0!==u&&f<u){const n=this.safeInteger(this.options,"maxOrderBookSyncAttempts",3);let o=this.safeInteger(s,"numAttempts",0);if(!(o<n))throw new a(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+i+" in "+n.toString()+" attempts");r in e.subscriptions&&(o=this.sum(o,1),s.numAttempts=o,e.subscriptions[r]=s,this.spawn(this.watchOrderBookSnapshot,e,t,s))}else{n.reset(h);for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,n)}this.orderbooks[i]=n,e.resolve(n,r)}}catch(t){e.reject(t,r)}}async watchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeValue(s,"params"),n=this.safeInteger(s,"numAttempts",0),o=this.safeString(s,"messageHash"),c=this.market(i),d=this.getUrlByMarketType(c.type,c.linear),h=this.requestId(),l={req:o,id:h},u={id:h,messageHash:o,symbol:i,limit:r,params:a,numAttempts:n,method:this.handleOrderBookSnapshot};return(await this.watch(d,h,l,h,u)).limit(r)}async fetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),n=this.safeString(s,"messageHash");try{const o=await this.fetchOrderBook(i,r),c=this.orderbooks[i],d=c.cache,h=this.safeValue(d,0,{}),l=this.safeValue(h,"tick"),u=this.safeInteger(l,"seqNum"),f=this.safeInteger(o,"nonce");if(void 0!==u&&f<u){const r=this.safeInteger(this.options,"maxOrderBookSyncAttempts",3);let o=this.safeInteger(s,"numAttempts",0);if(!(o<r))throw new a(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+i+" in "+r.toString()+" attempts");n in e.subscriptions&&(o=this.sum(o,1),s.numAttempts=o,e.subscriptions[n]=s,this.spawn(this.fetchOrderBookSnapshot,e,t,s))}else{c.reset(o);for(let t=0;t<d.length;t++){const s=d[t];this.handleOrderBookMessage(e,s,c)}this.orderbooks[i]=c,e.resolve(c,n)}}catch(t){e.reject(t,n)}}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"tick",{}),r=this.safeInteger2(i,"seqNum","id"),a=this.safeInteger(i,"prevSeqNum");if((void 0===a||a<=s.nonce)&&r>s.nonce){const e=this.safeValue(i,"asks",[]),a=this.safeValue(i,"bids",[]);this.handleDeltas(s.asks,e),this.handleDeltas(s.bids,a),s.nonce=r;const n=this.safeInteger(t,"ts");s.timestamp=n,s.datetime=this.iso8601(n)}return s}handleOrderBook(e,t){const s=this.safeString(t,"ch"),i=this.safeValue(t,"ch").split("."),r=this.safeString(i,1),a=this.safeSymbol(r);let n=this.safeValue(this.orderbooks,a);if(void 0===n){const e=this.safeString(i,3).split("_"),t=this.safeNumber(e,1);n=this.orderBook({},t)}void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,s))}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r),!0===this.markets[i].spot?this.spawn(this.watchOrderBookSnapshot,e,t,s):this.spawn(this.fetchOrderBookSnapshot,e,t,s)}async watchMyTrades(e,t,s,i={}){let r;this.checkRequiredCredentials();let a,n,o,c,d,h="*";if(void 0!==e?(await this.loadMarkets(),a=this.market(e),e=a.symbol,r=a.type,d=a.linear?"linear":"inverse",h=a.lowercaseId):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(i,"type",r),d=this.safeString2(this.options,"subType","defaultSubType","linear"),d=this.safeString(i,"subType",d),i=this.omit(i,["type","subType"])),"spot"===r){let e;void 0===e&&(e=this.safeString2(this.options,"watchMyTrades","mode",0),e=this.safeString(i,"mode",e),i=this.omit(i,"mode")),n="trade.clearing#"+h+"#"+e,o=n}else{const e=this.getOrderChannelAndMessageHash(r,d,a,i);o=this.safeString(e,0);n=this.safeString(e,1)+":trade"}return c=await this.subscribePrivate(o,n,r,d,i),this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySymbolSinceLimit(c,e,t,s,!0)}getOrderChannelAndMessageHash(e,t,s,i={}){let r,a,n=this.safeString(this.options,"orderType","orders");n=this.safeString(i,"orderType",n),i=this.omit(i,"orderType");const o=void 0!==s?s.lowercaseId:void 0,c=void 0!==s?s.lowercaseBaseId:void 0,d=n;if(r=d,"linear"===t){const e="cross"===this.safeString(i,"margin","cross")?d+"_cross":d;r=e,void 0!==o?(r+="."+o,a=r):a=e+".*"}else"future"===e?void 0!==c?(a=d+"."+c,r=a):a=d+".*":void 0!==o?(a=d+"."+o,r=a):a=d+".*";return[a,r]}async watchOrders(e,t,s,i={}){let r,a,n;await this.loadMarkets();let o,c,d="*";if(void 0!==e?(n=this.market(e),e=n.symbol,r=n.type,d=n.lowercaseId,a=n.linear?"linear":"inverse"):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(i,"type",r),a=this.safeString2(this.options,"subType","defaultSubType","linear"),a=this.safeString(i,"subType",a),i=this.omit(i,["type","subType"])),"spot"===r)o="orders#"+d,c=o;else{const e=this.getOrderChannelAndMessageHash(r,a,n,i);c=this.safeString(e,0),o=this.safeString(e,1)}const h=await this.subscribePrivate(c,o,r,a,i);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,t,s)}handleOrder(e,t){const s=this.safeString2(t,"ch","topic"),i=this.safeValue(t,"data");let r=this.safeString(t,"contract_code");void 0===r&&(r=this.safeString(i,"symbol"));const a=this.safeMarket(r);let n;if(void 0!==i){if("trade"===this.safeString(i,"eventType")){const e=this.parseOrderTrade(i,a);n={id:this.safeString(e,"order"),trades:[e],status:"closed",symbol:a.symbol}}else n=this.parseWsOrder(i,a)}else{n=this.parseWsOrder(t,a);const i=this.safeValue(t,"trade",[]);if(i.length>0){const t={trades:i,ch:s,symbol:r},a={order:this.safeString(n,"id"),type:this.safeString(n,"type"),side:this.safeString(n,"side")};this.handleMyTrade(e,t,a)}}if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new u(e)}this.orders.append(n),e.resolve(this.orders,s);let o=s.replace("."+a.lowercaseId,"");o=o.replace("."+a.lowercaseBaseId,""),e.resolve(this.orders,o)}parseWsOrder(e,t){const s=this.safeInteger2(e,"lastActTime","ts"),i=this.safeInteger(e,"orderCreateTime"),r=this.safeString2(e,"contract_code","symbol");t=this.safeMarket(r,t);const a=this.safeSymbol(r,t),n=this.safeString2(e,"orderSize","volume"),o=this.parseOrderStatus(this.safeString2(e,"orderStatus","status")),c=this.safeString2(e,"orderId","order_id"),d=this.safeString2(e,"clientOrderId","client_order_id"),h=this.safeString2(e,"orderPrice","price"),l=this.safeString(e,"execAmt");let u=this.safeString(e,"type");const f=this.safeString(e,"fee");let p;if(void 0!==f){const t=this.safeString(e,"fee_asset");p={cost:f,currency:this.safeCurrencyCode(t)}}const m=this.safeString(e,"trade_avg_price"),g=this.safeValue(e,"trade");void 0!==u&&(u=u.split("-"));let y=this.safeStringLower(u,1);void 0===y&&(y=this.safeString(e,"order_price_type"));let b=this.safeStringLower(u,0);void 0===b&&(b=this.safeString(e,"direction"));const v=this.safeString(e,"orderValue");return this.safeOrder({info:e,id:c,clientOrderId:d,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:o,symbol:a,type:y,timeInForce:void 0,postOnly:void 0,side:b,price:h,amount:n,filled:l,remaining:void 0,cost:v,fee:p,average:m,trades:g},t)}parseOrderTrade(e,t){const s=(t=this.safeMarket(void 0,t)).symbol,i=this.safeString(e,"tradeId"),r=this.safeString(e,"tradePrice"),a=this.safeString(e,"tradeVolume"),n=this.safeString(e,"orderId"),o=this.safeInteger(e,"tradeTime");let c,d=this.safeString(e,"type");if(void 0!==d){const e=d.split("-");c=e[0],d=e[1]}const h=this.safeValue(e,"aggressor");let l;return void 0!==h&&(l=h?"taker":"maker"),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:s,id:i,order:n,type:d,takerOrMaker:l,side:c,price:r,amount:a,cost:void 0,fee:void 0},t)}async watchBalance(e={}){let t=this.safeString2(this.options,"watchBalance","defaultType","spot");t=this.safeString(e,"type",t);let s,i,r,a=this.safeString2(this.options,"watchBalance","subType","linear");if(a=this.safeString(e,"subType",a),e=this.omit(e,["type","subType"]),e=this.omit(e,"type"),await this.loadMarkets(),"spot"===t){let t=this.safeString2(this.options,"watchBalance","mode","2");t=this.safeString(e,"mode",t),s="accounts.update#"+t,i=s}else{const n=this.safeString(e,"symbol"),o=this.safeString(e,"currency"),c=void 0!==n?this.market(n):void 0,d=void 0!==o?this.currency(o):void 0;r=this.safeString(e,"margin","cross"),e=this.omit(e,["currency","symbol","margin"]);let h="accounts";s=h,"linear"===a?(h="cross"===r?h+"_cross":h,s=h,"isolated"===r?void 0!==n?(s+="."+c.id,i=s):i=h+".*":void 0!==d?(i=h+"."+d.id,s=i):i=h+".*"):"future"===t?void 0!==d?(s+="."+d.id,i=s):i=h+".*":void 0!==c?(s+="."+c.id,i=s):i=h+".*"}const n={type:t,subType:a,margin:r};return await this.subscribePrivate(i,s,t,a,e,n)}handleBalance(e,t){const s=this.safeString(t,"ch");if(void 0!==s){const i=this.safeValue(t,"data",{}),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.total=this.safeString(i,"balance"),this.balance[a]=n,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,s)}else{const s=this.safeValue(t,"data",[]);if(0===s.length)return;const i=this.safeValue(s,0,{});let r=this.safeString(t,"topic"),a=this.safeValue(e.subscriptions,r);if(void 0===a){r+="."+this.safeString(i,"margin_asset").toLowerCase(),a=this.safeValue(e.subscriptions,r)}const n=this.safeString(a,"type");if("linear"===this.safeString(a,"subType")){if("cross"===this.safeString(a,"margin")){const e="future"===n?"futures_contract_detail":"contract_detail",t=this.safeValue(i,e,[]);if(t.length>0)for(let e=0;e<t.length;e++){const s=t[e],i=this.safeString2(s,"contract_code","margin_account"),r=this.safeMarket(i),a=this.safeString(s,"margin_asset"),n=this.safeCurrency(a),o=this.safeString(r,"settle",n.code);if(void 0!==o){const e=this.account();e.free=this.safeString(s,"margin_balance"),e.used=this.safeString(s,"margin_frozen");const t={};t[o]=e;const i=r.symbol;this.balance[i]=this.safeBalance(t)}}}else for(let e=0;e<s.length;e++){const t=s[e],i=this.account();i.free=this.safeString(t,"margin_balance","margin_available"),i.used=this.safeString(t,"margin_frozen");const r=this.safeString2(t,"margin_asset","symbol"),a=this.safeCurrencyCode(r);this.balance[a]=i,this.balance=this.safeBalance(this.balance)}}else for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),r=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(t,"margin_available"),a.used=this.safeString(t,"margin_frozen"),this.balance[r]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,r)}}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeValue(r,"method");if(void 0!==i)return i.call(this,e,t,r);s in e.subscriptions&&delete e.subscriptions[s]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){const s=this.safeValue(t,"ch",""),i=s.split(".");if("market"===this.safeString(i,0)){const s=this.safeString(i,2),r={depth:this.handleOrderBook,mbp:this.handleOrderBook,detail:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,s);return void 0===a?t:a.call(this,e,t)}const r=s.split("#"),a=this.safeString(r,0);if("trade.clearing"===a)return void this.handleMyTrade(e,t);if(-1!==a.indexOf("accounts.update"))return void this.handleBalance(e,t);if("orders"===a)return void this.handleOrder(e,t);if("notify"===this.safeString(t,"op")){const s=this.safeString(t,"topic","");-1!==s.indexOf("orders")&&this.handleOrder(e,t),-1!==s.indexOf("account")&&this.handleBalance(e,t)}}async pong(e,t){const s=this.safeInteger(t,"ping");if(void 0!==s)return void await e.send({pong:s});if("ping"===this.safeString(t,"action")){const s=this.safeValue(t,"data"),i=this.safeInteger(s,"ts");return void await e.send({action:"pong",data:{ts:i}})}if("ping"===this.safeString(t,"op")){const s=this.safeInteger(t,"ts");await e.send({op:"pong",ts:s})}}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){return e.resolve(t,"auth"),t}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.ws.exact,i,this.json(t))}catch(t){const i=this.safeString(r,"messageHash");e.reject(t,i),e.reject(t,s),s in e.subscriptions&&delete e.subscriptions[s]}}return!1}const s=this.safeInteger(t,"code");if(void 0!==s&&200!==s){const i=this.id+" "+this.json(t);try{this.throwExactlyMatchedException(this.exceptions.ws.exact,s,i)}catch(t){if(t instanceof d){e.reject(t,"auth");const s="auth";return s in e.subscriptions&&delete e.subscriptions[s],!1}e.reject(t)}}return t}handleMessage(e,t){if(this.handleErrorMessage(e,t)){if("id"in t)return void this.handleSubscriptionStatus(e,t);if("action"in t){const s=this.safeString(t,"action");if("ping"===s)return void this.handlePing(e,t);if("sub"===s)return void this.handleSubscriptionStatus(e,t)}if("ch"in t)return"auth"===t.ch?void this.handleAuthenticate(e,t):void this.handleSubject(e,t);if("op"in t){const s=this.safeString(t,"op");if("ping"===s)return void this.handlePing(e,t);if("auth"===s)return void this.handleAuthenticate(e,t);if("sub"===s)return void this.handleSubscriptionStatus(e,t);if("notify"===s)return void this.handleSubject(e,t)}"ping"in t&&this.handlePing(e,t)}}handleMyTrade(e,t,s={}){if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new u(e)}const i=this.myTrades,r=this.safeString(t,"ch");if(void 0!==r){const a=this.safeValue(t,"data");if(void 0!==a){const t=this.parseWsTrade(a);void 0!==this.safeString(t,"symbol")&&(i.append(t),e.resolve(this.myTrades,r))}else{const a=this.safeValue(t,"trades",[]),n=this.safeValue(t,"symbol"),o=this.market(n);for(let e=0;e<a.length;e++){const t=a[e];let r=this.parseTrade(t,o);r=this.extend(r,s),i.append(r)}const c=r+":trade";e.resolve(this.myTrades,c);let d=r.replace("."+o.lowercaseId,"");d=d.replace("."+o.lowercaseBaseId,"");const h=d+":trade";e.resolve(this.myTrades,h)}}}parseWsTrade(e){const t=this.safeSymbol(this.safeString(e,"symbol")),s=this.safeString2(e,"side","orderSide"),i=this.safeString(e,"tradeId"),r=this.safeString(e,"tradePrice"),a=this.safeString(e,"tradeVolume"),n=this.safeString(e,"orderId"),o=this.safeInteger(e,"tradeTime"),c=this.market(t);let d=this.safeString(e,"orderType");const h=this.safeValue(e,"aggressor");let l,u,f;void 0!==h&&(l=h?"taker":"maker"),void 0!==d&&(d=d.split("-"),u=this.safeString(d,1));const p=this.safeCurrencyCode(this.safeString(e,"feeCurrency"));return void 0!==p&&(f={cost:this.safeString(e,"transactFee"),currency:p}),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:t,id:i,order:n,type:u,takerOrMaker:l,side:s,price:r,amount:a,cost:void 0,fee:f},c)}getUrlByMarketType(e,t=!0,s=!1){const i=this.safeString(this.options,"api","api"),r={hostname:this.hostname};let a,n;if("spot"===e)a=s?this.urls.api.ws[i].spot.private:this.urls.api.ws[i].spot.public,n=this.implodeParams(a,r);else{const r=this.urls.api.ws[i][e],a=t?r.linear:r.inverse;n=s?a.private:a.public}return n}async subscribePublic(e,t,s,i,r={}){const a=this.requestId(),n={sub:s,id:a},o={id:a,messageHash:s,symbol:t,params:r};return void 0!==i&&(o.method=i),await this.watch(e,s,this.extend(n,r),s,o)}async subscribePrivate(e,t,s,i,r={},a={}){const n=this.nonce(),o={id:n,messageHash:t,params:r},c=this.extend(o,a);let d;d="spot"===s?{action:"sub",ch:e}:{op:"sub",topic:e,cid:n};const h="linear"===i,l=this.getUrlByMarketType(s,h,!0),u={type:s,url:l,hostname:"spot"===s?this.urls.hostnames.spot:this.urls.hostnames.contract};return"spot"===s&&(this.options.ws.gunzip=!1),await this.authenticate(u),await this.watch(l,t,this.extend(d,r),e,c)}async authenticate(e={}){const t=this.safeString(e,"url"),s=this.safeString(e,"hostname"),i=this.safeString(e,"type");if(void 0===t||void 0===s||void 0===i)throw new n(this.id+" authenticate requires a url, hostname and type argument");this.checkRequiredCredentials();const r="auth",a=t.replace("wss://"+s,""),o=this.client(t);let c=this.safeValue(o.subscriptions,r);if(void 0===c){c=o.future(r);const e=this.ymdhms(this.milliseconds(),"T");let n;n="spot"===i?{accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:e}:{AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:e},n=this.keysort(n);const d=["GET",s,a,this.urlencode(n)].join("\n"),h=this.hmac(this.encode(d),this.encode(this.secret),"sha256","base64");let l;if("spot"===i){l={params:{authType:"api",accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:e,signature:h},action:"req",ch:r}}else l={op:r,type:"api",AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:e,Signature:h};await this.watch(t,r,l,r,c)}return await c}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],41:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheByTimestamp:n}=e("./base/Cache");t.exports=class extends i.huobijp{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:{api:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2"}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",ws:{gunzip:!0}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();const s="market."+this.market(e).id+".detail",i=this.safeString(this.options,"api","api"),r={hostname:this.hostname},a=this.implodeParams(this.urls.api.ws[i].public,r),n=this.requestId(),o={sub:s,id:n},c={id:n,messageHash:s,symbol:e,params:t};return await this.watch(a,s,this.extend(o,t),s,c)}handleTicker(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeString(t,"ch"),r=i.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(s,n),c=this.safeValue(t,"ts");o.timestamp=c,o.datetime=this.iso8601(c);const d=o.symbol;return this.tickers[d]=o,e.resolve(o,i),t}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r="market."+this.market(e).id+".trade.detail",a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),c=this.requestId(),d={sub:r,id:c},h={id:c,messageHash:r,symbol:e,params:i},l=await this.watch(o,r,this.extend(d,i),r,h);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"tick",{}),i=this.safeValue(s,"data",{}),r=this.safeString(t,"ch"),n=r.split("."),o=this.safeString(n,1),c=this.safeMarket(o),d=c.symbol;let h=this.safeValue(this.trades,d);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a(e),this.trades[d]=h}for(let e=0;e<i.length;e++){const t=this.parseTrade(i[e],c);h.append(t)}return e.resolve(h,r),t}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t],o="market."+a.id+".kline."+n,c=this.safeString(this.options,"api","api"),d={hostname:this.hostname},h=this.implodeParams(this.urls.api.ws[c].public,d),l=this.requestId(),u={sub:o,id:l},f={id:l,messageHash:o,symbol:e,timeframe:t,params:r},p=await this.watch(h,o,this.extend(u,r),o,f);return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySinceLimit(p,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"ch"),i=s.split("."),r=this.safeString(i,1),a=this.safeMarket(r),o=a.symbol,c=this.safeString(i,3),d=this.findTimeframe(c);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],d);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new n(e),this.ohlcvs[o][d]=h}const l=this.safeValue(t,"tick"),u=this.parseOHLCV(l,a);h.append(u),e.resolve(h,s)}async watchOrderBook(e,t,s={}){if(void 0!==t&&150!==t)throw new r(this.id+" watchOrderBook accepts limit = 150 only");await this.loadMarkets();t=void 0===t?150:t;const i="market."+this.market(e).id+".mbp."+t.toString(),a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),c=this.requestId(),d={sub:i,id:c},h={id:c,messageHash:i,symbol:e,limit:t,params:s,method:this.handleOrderBookSubscription};return(await this.watch(o,i,this.extend(d,s),i,h)).limit(t)}handleOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(s,"messageHash"),a=this.orderbooks[i],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,i);o.nonce=this.safeInteger(n,"seqNum"),a.reset(o);const c=a.cache;for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,a)}this.orderbooks[i]=a,e.resolve(a,r)}async watchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeValue(s,"params"),n=this.safeString(s,"messageHash"),o=this.safeString(this.options,"api","api"),c={hostname:this.hostname},d=this.implodeParams(this.urls.api.ws[o].public,c),h=this.requestId(),l={req:n,id:h},u={id:h,messageHash:n,symbol:i,limit:r,params:a,method:this.handleOrderBookSnapshot};return(await this.watch(d,h,l,h,u)).limit(r)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"tick",{}),r=this.safeInteger(i,"seqNum");if(this.safeInteger(i,"prevSeqNum")<=s.nonce&&r>s.nonce){const e=this.safeValue(i,"asks",[]),a=this.safeValue(i,"bids",[]);this.handleDeltas(s.asks,e),this.handleDeltas(s.bids,a),s.nonce=r;const n=this.safeInteger(t,"ts");s.timestamp=n,s.datetime=this.iso8601(n)}return s}handleOrderBook(e,t){const s=this.safeString(t,"ch"),i=this.safeValue(t,"ch").split("."),r=this.safeString(i,1),a=this.safeSymbol(r),n=this.orderbooks[a];void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,s))}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r),this.spawn(this.watchOrderBookSnapshot,e,t,s)}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeValue(r,"method");if(void 0!==i)return i.call(this,e,t,r);s in e.subscriptions&&delete e.subscriptions[s]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){const s=this.safeValue(t,"ch").split(".");if("market"===this.safeString(s,0)){const i=this.safeString(s,2),r={mbp:this.handleOrderBook,detail:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,i);return void 0===a?t:a.call(this,e,t)}}async pong(e,t){await e.send({pong:this.safeInteger(t,"ping")})}handlePing(e,t){this.spawn(this.pong,e,t)}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.exact,i,this.json(t))}catch(t){const i=this.safeString(r,"messageHash");e.reject(t,i),e.reject(t,s),s in e.subscriptions&&delete e.subscriptions[s]}}return!1}return t}handleMessage(e,t){this.handleErrorMessage(e,t)&&("id"in t?this.handleSubscriptionStatus(e,t):"ch"in t?this.handleSubject(e,t):"ping"in t&&this.handlePing(e,t))}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],42:[function(e,t,s){"use strict";const i=e("./huobi.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"huobipro"})}}},{"./huobi.js":40}],43:[function(e,t,s){"use strict";const i=e("ccxt"),{InvalidNonce:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheByTimestamp:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.idex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchOHLCV:!0,watchTicker:!0,watchTickers:!1,watchOrders:!0,watchTransactions:!0},urls:{test:{ws:"wss://websocket.idex.io/v1"},api:{}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,watchOrderBookLimit:1e3,orderBookSubscriptions:{},token:void 0,fetchOrderBookSnapshotMaxAttempts:10,fetchOrderBookSnapshotMaxDelay:1e4}})}async subscribe(e,t,s=!0){const i=this.urls.test.ws,r={method:"subscribe",subscriptions:[e]};return await this.watch(i,t,r,t,s)}async subscribePrivate(e,t){const s=await this.authenticate(),i=this.urls.test.ws,r={method:"subscribe",token:s,subscriptions:[e]};return await this.watch(i,t,r,t)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="tickers",r={name:i,markets:[s.id]},a=i+":"+s.id;return await this.subscribe(this.extend(r,t),a)}handleTicker(e,t){const s=this.safeString(t,"type"),i=this.safeValue(t,"data"),r=this.safeString(i,"m"),a=this.safeSymbol(r),n=s+":"+r,o=this.safeInteger(i,"t"),c=this.safeFloat(i,"c"),d=this.safeFloat(i,"P");let h;void 0!==d&&void 0!==c&&(h=c*d);const l={symbol:a,timestamp:o,datetime:this.iso8601(o),high:this.safeFloat(i,"h"),low:this.safeFloat(i,"l"),bid:this.safeFloat(i,"b"),bidVolume:void 0,ask:this.safeFloat(i,"a"),askVolume:void 0,vwap:void 0,open:this.safeFloat(i,"o"),close:c,last:c,previousClose:void 0,change:h,percentage:d,average:void 0,baseVolume:this.safeFloat(i,"v"),quoteVolume:this.safeFloat(i,"q"),info:t};e.resolve(l,n)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a="trades",n={name:a,markets:[r.id]},o=a+":"+r.id,c=await this.subscribe(n,o);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrade(e,t){const s=this.safeString(t,"type"),i=this.safeValue(t,"data"),r=s+":"+this.safeString(i,"m"),a=this.parseWsTrade(i);if(0===Object.keys(this.trades).length){const e=this.safeInteger(this.options,"tradesLimit");this.trades=new o(e)}const n=this.trades;n.append(a),e.resolve(n,r)}parseWsTrade(e){const t=this.safeString(e,"m"),s=this.safeSymbol(t),i=this.safeString(e,"i"),r=this.safeFloat(e,"p"),a=this.safeFloat(e,"q"),n=this.safeFloat(e,"Q"),o=this.safeInteger(e,"t"),c=this.safeString(e,"s"),d={currency:this.safeString(e,"a"),cost:this.safeFloat(e,"f")},h=this.safeString(e,"l");return{info:e,timestamp:o,datetime:this.iso8601(o),symbol:s,id:i,order:void 0,type:void 0,takerOrMaker:h,side:c,price:r,amount:a,cost:n,fee:d}}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n="candles",o=this.timeframes[t],c={name:n,markets:[a.id],interval:o},d=n+":"+a.id,h=await this.subscribe(c,d);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"type"),i=this.safeValue(t,"data"),r=this.safeString(i,"m"),a=s+":"+r,o=[this.safeInteger(i,"s"),this.safeFloat(i,"o"),this.safeFloat(i,"h"),this.safeFloat(i,"l"),this.safeFloat(i,"c"),this.safeFloat(i,"v")],c=this.safeSymbol(r),d=this.safeString(i,"i"),h=this.findTimeframe(d);this.ohlcvs[c]=this.safeValue(this.ohlcvs,c,{});let l=this.safeValue(this.ohlcvs[c],h);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new n(e),this.ohlcvs[c][h]=l}l.append(o),e.resolve(l,a)}handleSubscribeMessage(e,t){const s=this.safeValue(t,"subscriptions");for(let t=0;t<s.length;t++){const i=s[t];if("l2orderbook"===this.safeString(i,"name")){const t=this.safeValue(i,"markets");for(let s=0;s<t.length;s++){const i=t[s];if(!(i in this.safeValue(this.options,"orderBookSubscriptions",{}))){const t=this.safeSymbol(i);if(!(t in this.orderbooks)){const e=this.countedOrderBook({});e.cache=[],this.orderbooks[t]=e}this.spawn(this.fetchOrderBookSnapshot,e,t)}}break}}}async fetchOrderBookSnapshot(e,t,s={}){const i=this.orderbooks[t],a="l2orderbook:"+this.market(t).id,n=e.subscriptions[a];n.fetchingOrderBookSnapshot||(n.startTime=this.milliseconds()),n.fetchingOrderBookSnapshot=!0;const o=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxAttempts",10),c=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxDelay",1e4);try{const s=this.safeInteger(n,"limit",0),d=await this.fetchOrderBook(t,s),h=this.safeValue(i.cache,0),l=this.safeValue(h,"data"),u=this.safeInteger(l,"u"),f=i.cache.length,p=this.safeValue(i.cache,f-1),m=this.safeValue(p,"data"),g=this.safeInteger(m,"u");if(void 0!==u&&void 0!==g&&u<=d.nonce+1&&g>d.nonce){i.reset(d);for(let t=0;t<i.cache.length;t++){const s=i.cache[t],r=this.safeValue(s,"data");this.safeInteger(r,"u")>i.nonce&&this.handleOrderBookMessage(e,s,i)}n.fetchingOrderBookSnapshot=!1,e.resolve(i,a)}else{n.numAttempts=n.numAttempts+1;const s=this.milliseconds()-n.startTime,i=n.numAttempts<o;if(!i||!(s<c)){const e=i?" after "+c.toString()+" milliseconds":" in "+o.toString()+" attempts";throw new r(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+t+e)}this.delay(this.rateLimit,this.fetchOrderBookSnapshot,e,t)}}catch(t){n.fetchingOrderBookSnapshot=!1,e.reject(t,a)}}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r="l2orderbook",a={name:r,markets:[i.id]},n=r+":"+i.id,o={fetchingOrderBookSnapshot:!1,numAttempts:0,startTime:void 0,limit:0};return(await this.subscribe(a,n,o)).limit(t)}handleOrderBook(e,t){const s=this.safeValue(t,"data"),i=this.safeString(s,"m"),r=this.safeSymbol(i),a=this.orderbooks[r];void 0===a.nonce?a.cache.push(t):this.handleOrderBookMessage(e,t,a)}handleOrderBookMessage(e,t,s){const i=this.safeString(t,"type"),r=this.safeValue(t,"data"),a=i+":"+this.safeString(r,"m"),n=this.safeInteger(r,"u"),o=this.safeInteger(r,"t"),c=this.safeValue(r,"b"),d=this.safeValue(r,"a");this.handleDeltas(s.bids,c),this.handleDeltas(s.asks,d),s.nonce=n,s.timestamp=o,s.datetime=this.iso8601(o),e.resolve(s,a)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1),r=this.safeInteger(t,2);e.store(s,i,r)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}async authenticate(e={}){const t=this.seconds();if(t-this.safeInteger(this.options,"lastAuthenticatedTime",0)>900){const s={wallet:this.walletAddress,nonce:this.uuidv1()},i=await this.privateGetWsToken(this.extend(s,e));this.options.lastAuthenticatedTime=t,this.options.token=this.safeString(i,"token")}return this.options.token}async watchOrders(e,t,s,i={}){await this.loadMarkets();const r="orders",a={name:r};let n=r;if(void 0!==e){const t=this.marketId(e);a.markets=[t],n=r+":"+t}const o=await this.subscribePrivate(a,n);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,t,s,"timestamp",!0)}handleOrder(e,t){const s=this.safeString(t,"type"),i=this.safeValue(t,"data"),r=this.safeString(i,"m"),a=this.safeSymbol(r),n=this.safeInteger(i,"t"),c=this.safeValue(i,"F"),d=[];for(let e=0;e<c.length;e++)d.push(this.parseWsTrade(c[e]));const h=this.safeString(i,"i"),l=this.safeString(i,"s"),u=this.safeString(i,"o"),f=this.safeFloat(i,"q"),p=this.safeFloat(i,"z");let m;void 0!==f&&void 0!==p&&(m=f-p);const g=this.safeFloat(i,"v"),y=this.safeFloat(i,"price",g);let b;void 0!==f&&void 0!==y&&(b=f*y);const v=this.safeString(i,"X"),w=this.parseOrderStatus(v),S={currency:void 0,cost:void 0};let k;for(let e=0;e<d.length;e++)k=d[e],S.currency=k.fee.currency,S.cost=this.sum(S.cost,k.fee.cost);const T=this.safeInteger(k,"timestamp"),O={info:t,id:h,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:T,symbol:a,type:u,side:l,price:y,stopPrice:void 0,amount:f,cost:b,average:g,filled:p,remaining:m,status:w,fee:S,trades:d};if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new o(e)}const _=this.orders;_.append(O);const x=s+":"+r;e.resolve(_,x),e.resolve(_,s)}async watchTransactions(e,t,s,i={}){await this.loadMarkets();const r="balances",a={name:r};let n=r;void 0!==e&&(n=r+":"+e);const o=await this.subscribePrivate(a,n);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,t,s,"timestamp",!0)}handleTransaction(e,t){const s=this.safeString(t,"type"),i=this.safeValue(t,"data"),r=this.safeString(i,"a"),n=s+":"+r,o=this.safeCurrencyCode(r),c={info:t,id:void 0,currency:o,amount:void 0,address:this.safeString(i,"w"),addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:"ok",type:void 0,updated:void 0,txid:void 0,timestamp:void 0,datetime:void 0,fee:void 0};if(!(o in this.transactions)){const e=this.safeInteger(this.options,"transactionsLimit",1e3);this.transactions[o]=new a(e)}const d=this.transactions[o];d.append(c),e.resolve(d,n),e.resolve(d,s)}handleMessage(e,t){const s=this.safeString(t,"type"),i={tickers:this.handleTicker,trades:this.handleTrade,subscriptions:this.handleSubscribeMessage,candles:this.handleOHLCV,l2orderbook:this.handleOrderBook,balances:this.handleTransaction,orders:this.handleOrder};if(s in i){i[s].call(this,e,t)}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],44:[function(e,t,s){"use strict";const i=e("ccxt"),{BadSymbol:r,BadRequest:a,ExchangeError:n,NotSupported:o}=e("ccxt/js/base/errors"),{ArrayCache:c,ArrayCacheByTimestamp:d,ArrayCacheBySymbolById:h}=e("./base/Cache");t.exports=class extends i.kraken{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:{public:"wss://ws.kraken.com",private:"wss://ws-auth.kraken.com",beta:"wss://beta-ws.kraken.com"}}},versions:{ws:"0.2.0"},options:{tradesLimit:1e3,OHLCVLimit:1e3,ordersLimit:1e3,symbolsByOrderId:{}},exceptions:{ws:{exact:{"Event(s) not found":a},broad:{"Currency pair not in ISO 4217-A3 format":r}}}})}handleTicker(e,t,s){const i=t[3],r="ticker:"+i,a=this.safeValue(this.options.marketsByWsName,i).symbol,n=t[1],o=this.safeFloat(n.p,0);let c;const d=this.safeFloat(n.v,0);void 0!==d&&void 0!==o&&(c=d*o);const h=this.safeFloat(n.c,0),l=this.milliseconds(),u={symbol:a,timestamp:l,datetime:this.iso8601(l),high:this.safeFloat(n.h,0),low:this.safeFloat(n.l,0),bid:this.safeFloat(n.b,0),bidVolume:this.safeFloat(n.b,2),ask:this.safeFloat(n.a,0),askVolume:this.safeFloat(n.a,2),vwap:o,open:this.safeFloat(n.o,0),close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:c,info:n};this.tickers[a]=u,e.resolve(u,r)}handleTrades(e,t,s){const i=this.safeString(t,3),r=this.safeString(t,2)+":"+i,a=this.safeValue(this.options.marketsByWsName,i),n=a.symbol;let o=this.safeValue(this.trades,n);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new c(e),this.trades[n]=o}const d=this.safeValue(t,1,[]),h=this.parseTrades(d,a);for(let e=0;e<h.length;e++)o.append(h[e]);e.resolve(o,r)}handleOHLCV(e,t,s){const i=this.safeValue(s,"subscription",{}),r=this.safeInteger(i,"interval"),a=this.safeString(i,"name"),n=this.safeString(t,3),o=this.safeValue(this.options.marketsByWsName,n).symbol,c=this.findTimeframe(r),h=this.parseTimeframe(c);if(void 0!==c){const s=this.safeValue(t,1),i=a+":"+c+":"+n;let r=this.safeFloat(s,1);r-=h;const l=[parseInt(1e3*r),this.safeFloat(s,2),this.safeFloat(s,3),this.safeFloat(s,4),this.safeFloat(s,5),this.safeFloat(s,7)];this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let u=this.safeValue(this.ohlcvs[o],c);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new d(e),this.ohlcvs[o][c]=u}u.append(l),e.resolve(u,i)}}requestId(){const e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async watchPublic(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=this.safeValue(i.info,"wsname"),a=e+":"+r,n=this.urls.api.ws.public,o={event:"subscribe",reqid:this.requestId(),pair:[r],subscription:{name:e}},c=this.deepExtend(o,s);return await this.watch(n,a,c,a)}async watchTicker(e,t={}){return await this.watchPublic("ticker",e,t)}async watchTrades(e,t,s,i={}){const r=await this.watchPublic("trade",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){const i={};if(void 0!==t){if(10!==t&&25!==t&&100!==t&&500!==t&&1e3!==t)throw new o(this.id+" watchOrderBook accepts limit values of 10, 25, 100, 500 and 1000 only");i.subscription={depth:t}}return(await this.watchPublic("book",e,this.extend(i,s))).limit(t)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a="ohlc",n=this.market(e),o=this.safeValue(n.info,"wsname"),c=a+":"+t+":"+o,d=this.urls.api.ws.public,h={event:"subscribe",reqid:this.requestId(),pair:[o],subscription:{name:a,interval:this.timeframes[t]}},l=this.deepExtend(h,r),u=await this.watch(d,c,l,c);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,s,i,0,!0)}async loadMarkets(e=!1,t={}){const s=await super.loadMarkets(e,t);let i=this.safeValue(this.options,"marketsByWsName");if(void 0===i||e){i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],s=this.markets[t];if(s.darkpool){const e=this.safeValue(s,"info",{}),t=this.safeString(e,"altname");i[t.slice(0,3)+"/"+t.slice(3)]=s}else{const e=this.safeValue(s,"info",{});i[this.safeString(e,"wsname")]=s}}this.options.marketsByWsName=i}return s}async watchHeartbeat(e={}){await this.loadMarkets();const t=this.urls.api.ws.public;return await this.watch(t,"heartbeat")}handleHeartbeat(e,t){const s=this.safeString(t,"event");e.resolve(t,s)}handleOrderBook(e,t,s){const i=t.length,r=t[i-1],a=t[i-2].split("-"),n=this.safeInteger(a,1,10),o=this.safeValue(this.options.marketsByWsName,r).symbol;let c;const d="book:"+r;if("as"in t[1]){this.orderbooks[o]=this.orderBook({},n);const s=this.orderbooks[o],i={as:"asks",bs:"bids"},r=Object.keys(i);for(let e=0;e<r.length;e++){const a=r[e],n=s[i[a]],o=this.safeValue(t[1],a,[]);c=this.handleDeltas(n,o,c)}s.timestamp=c,s.datetime=this.iso8601(c),e.resolve(s,d)}else{const s=this.orderbooks[o];let r,a;5===i?(r=this.safeValue(t[1],"a",[]),a=this.safeValue(t[2],"b",[])):"a"in t[1]?r=this.safeValue(t[1],"a",[]):a=this.safeValue(t[1],"b",[]),void 0!==r&&(c=this.handleDeltas(s.asks,r,c)),void 0!==a&&(c=this.handleDeltas(s.bids,a,c)),s.timestamp=c,s.datetime=this.iso8601(c),s.limit(),e.resolve(s,d)}}handleDeltas(e,t,s){for(let i=0;i<t.length;i++){const r=t[i],a=parseFloat(r[0]),n=parseFloat(r[1]);s=Math.max(s||0,parseInt(1e3*parseFloat(r[2]))),e.store(a,n)}return s}handleSystemStatus(e,t){return t}async authenticate(e={}){const t=this.urls.api.ws.private,s=this.client(t),i="authenticated";let r=this.safeValue(s.subscriptions,i);if(void 0===r){const t=await this.privatePostGetWebSocketsToken(e);r=this.safeValue(t,"result"),s.subscriptions[i]=r}return this.safeString(r,"token")}async watchPrivate(e,t,s,i,r={}){await this.loadMarkets();const a=await this.authenticate(),n=e;let o=e;void 0!==t&&(o+=":"+t);const c=this.urls.api.ws.private,d={event:"subscribe",reqid:this.requestId(),subscription:{name:e,token:a}},h=this.deepExtend(d,r),l=await this.watch(c,o,h,n);return this.newUpdates&&(i=l.getLimit(t,i)),this.filterBySymbolSinceLimit(l,t,s,i,!0)}async watchMyTrades(e,t,s,i={}){return await this.watchPrivate("ownTrades",e,t,s,i)}handleMyTrades(e,t,s){const i=this.safeValue(t,0,[]);if(i.length>0){if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new c(e)}const t=this.myTrades,s={};for(let e=0;e<i.length;e++){const r=this.safeValue(i,e,{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const i=a[e],n=r[i],o=this.parseWsTrade(this.extend({id:i},n));t.append(o);s[o.symbol]=!0}}const r="ownTrades";e.resolve(this.myTrades,r);const a=Object.keys(s);for(let t=0;t<a.length;t++){const s=r+":"+a[t];e.resolve(this.myTrades,s)}}}parseWsTrade(e,t){const s=this.safeString(e,"pair");let i;t=this.safeValue(this.options.marketsByWsName,s,t);const r=this.safeString(e,"ordertxid"),a=this.safeString2(e,"id","postxid"),n=this.safeTimestamp(e,"time"),o=this.safeString(e,"type"),c=this.safeString(e,"ordertype"),d=this.safeFloat(e,"price"),h=this.safeFloat(e,"vol");let l,u;if("fee"in e){let s;void 0!==t&&(s=t.quote),u={cost:this.safeFloat(e,"fee"),currency:s}}return void 0!==t&&(i=t.symbol),void 0!==d&&void 0!==h&&(l=d*h),{id:a,order:r,info:e,timestamp:n,datetime:this.iso8601(n),symbol:i,type:c,side:o,takerOrMaker:void 0,price:d,amount:h,cost:l,fee:u}}async watchOrders(e,t,s,i={}){return await this.watchPrivate("openOrders",e,t,s,i)}handleOrders(e,t,s){const i=this.safeValue(t,0,[]);if(i.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new h(t));const s=this.orders,r={};for(let e=0;e<i.length;e++){const a=this.safeValue(i,e,{}),n=Object.keys(a);for(let e=0;e<n.length;e++){const i=n[e],o=a[i],c=this.parseWsOrder(o);let d;c.id=i;const h=this.safeValue(this.options,"symbolsByOrderId",{});void 0!==c.symbol?(d=c.symbol,h[i]=d,this.options.symbolsByOrderId=h):d=this.safeString(h,i);const l=this.safeValue(s.hashmap,d),u=this.safeValue(l,i);let f=c;if(void 0!==u){const e=this.extend(u.info,f.info);f=this.parseWsOrder(e),f.id=i}if(s.length===t&&void 0===u){const e=s[0];e.id in h&&delete h[e.id]}s.append(f),r[d]=!0}}const a="openOrders";e.resolve(this.orders,a);const n=Object.keys(r);for(let t=0;t<n.length;t++){const s=a+":"+n[t];e.resolve(this.orders,s)}}}parseWsOrder(e,t){const s=this.safeValue(e,"descr",{}),i=this.safeString(s,"order");let r,a,n,o,c,d;if(void 0!==i){const e=i.split(" ");r=this.safeString(e,0),c=this.safeFloat(e,1),n=this.safeString(e,2),a=this.safeString(e,4),o=this.safeFloat(e,5)}r=this.safeString(s,"type",r),a=this.safeString(s,"ordertype",a),n=this.safeString(s,"pair",n),t=this.safeValue(this.options.marketsByWsName,n,t);const h=this.safeTimestamp(e,"opentm");c=this.safeFloat(e,"vol",c);const l=this.safeFloat(e,"vol_exec");let u,f;void 0!==c&&void 0!==l&&(u=c-l);const p=this.safeFloat(e,"cost");o=this.safeFloat(s,"price",o),void 0!==o&&0!==o||(o=this.safeFloat(s,"price2")),void 0!==o&&0!==o||(o=this.safeFloat(e,"price",o));const m=this.safeFloat(e,"price");if(void 0!==t&&(d=t.symbol,"fee"in e)){const s=e.oflags;f={cost:this.safeFloat(e,"fee"),rate:void 0},s.indexOf("fciq")>=0?f.currency=t.quote:s.indexOf("fcib")>=0&&(f.currency=t.base)}const g=this.parseOrderStatus(this.safeString(e,"status"));let y=this.safeString(e,"id");if(void 0===y){const t=this.safeValue(e,"txid");y=this.safeString(t,0)}const b=this.safeString(e,"userref"),v=this.safeValue(e,"trades");let w;void 0!==v&&(w=this.parseTrades(v,t,void 0,void 0,{order:y}));const S=this.safeFloat(e,"stopprice");return{id:y,clientOrderId:b,info:e,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,status:g,symbol:d,type:a,timeInForce:void 0,postOnly:void 0,side:r,price:o,stopPrice:S,cost:p,amount:c,filled:l,average:m,remaining:u,fee:f,trades:w}}handleSubscriptionStatus(e,t){const s=this.safeString(t,"channelID");void 0!==s&&(e.subscriptions[s]=t)}handleErrorMessage(e,t){const s=this.safeValue(t,"errorMessage");if(void 0!==s){const i=this.safeValue(t,"reqid");if(void 0!==i){const t=this.exceptions.ws.broad,r=this.findBroadlyMatchedKey(t,s);let a;return a=void 0===r?new n(s):new t[r](s),e.reject(a,i),!1}}return!0}handleMessage(e,t){if(Array.isArray(t)){const s=this.safeString(t,0),i=this.safeValue(e.subscriptions,s,{}),r=this.safeValue(i,"subscription",{}),a=t.length,n=this.safeString(t,a-2),o=this.safeString(r,"name"),c={book:this.handleOrderBook,ohlc:this.handleOHLCV,ticker:this.handleTicker,trade:this.handleTrades,openOrders:this.handleOrders,ownTrades:this.handleMyTrades},d=this.safeValue2(c,o,n);return void 0===d?t:d.call(this,e,t,i)}if(this.handleErrorMessage(e,t)){const s=this.safeString(t,"event"),i={heartbeat:this.handleHeartbeat,systemStatus:this.handleSystemStatus,subscriptionStatus:this.handleSubscriptionStatus},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],45:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r,InvalidNonce:a,NetworkError:n}=e("ccxt/js/base/errors"),{ArrayCache:o,ArrayCacheByTimestamp:c,ArrayCacheBySymbolById:d}=e("./base/Cache");t.exports=class extends i.kucoin{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchMyTrades:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0},options:{tradesLimit:1e3,watchOrderBookRate:100,fetchOrderBookSnapshot:{maxAttempts:3,delay:1e3},watchTicker:{topic:"market/snapshot"}},streaming:{ping:this.ping}})}async negotiate(e={}){const t=this.client("ws"),s="negotiate";let i=this.safeValue(t.subscriptions,s);if(void 0===i){let e;i=t.future(s),t.subscriptions[s]=i;const r=!1;e=this.checkRequiredCredentials(r)?await this.privatePostBulletPrivate():await this.publicPostBulletPublic(),t.resolve(e,s)}return await i}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.safeValue(e,"data",{}),o=this.safeValue(n,"instanceServers",[]),c=this.safeValue(o,0,{}),d=this.safeString(c,"endpoint"),h=this.safeString(n,"token"),l=this.requestId(),u={token:h,acceptUserMessage:"true"},f=d+"?"+this.urlencode(u),p={id:l,type:"subscribe",topic:t,response:!0},m={id:l.toString(),symbol:r,topic:t,messageHash:s,method:i},g=this.extend(p,a),y=t;return await this.watch(f,s,g,y,m)}async unsubscribe(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.safeValue(e,"data",{}),o=this.safeValue(n,"instanceServers",[]),c=this.safeValue(o,0,{}),d=this.safeString(c,"endpoint"),h=this.safeString(n,"token"),l=this.requestId(),u={token:h,acceptUserMessage:"true"},f=d+"?"+this.urlencode(u),p={id:a.id,type:"unsubscribe",topic:t,response:!0},m={id:l.toString(),symbol:r,topic:t,messageHash:s,method:i},g=this.extend(p,a),y=t;return await this.watch(f,s,g,y,m)}async watchOrderBook(e,t,s={}){if(void 0!==t&&20!==t&&100!==t)throw new r(this.id+" watchOrderBook 'limit' argument must be undefined, 20 or 100");await this.loadMarkets();const i=await this.negotiate(),a=this.market(e);e=a.symbol;const n="/market/level2:"+a.id,o=n;return(await this.subscribe(i,n,o,this.handleOrderBookSubscription,e,s)).limit(t)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const i=await this.negotiate(),r=this.safeValue(this.options,"watchTicker",{}),a="/"+this.safeString(r,"topic","market/snapshot")+":"+s.id,n=a;return await this.subscribe(i,a,n,void 0,e,t)}handleTicker(e,t){const s=this.safeString(t,"topic");let i;if(void 0!==s){const e=s.split(":"),t=this.safeString(e,1);i=this.safeMarket(t,i,"-")}const r=this.safeValue(t,"data",{}),a=this.safeValue(r,"data",r),n=this.parseTicker(a,i),o=n.symbol;this.tickers[o]=n;const c=this.safeString(t,"topic");return void 0!==c&&e.resolve(n,c),t}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=await this.negotiate(),n=this.market(e);e=n.symbol;const o=this.timeframes[t],c="/market/candles:"+n.id+"_"+o,d=c,h=await this.subscribe(a,c,d,void 0,e,r);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(s,"symbol"),r=this.safeValue(s,"candles",[]),a=this.safeString(t,"topic"),n=a.split("_"),o=this.safeString(n,1),d=this.findTimeframe(o),h=this.safeSymbol(i),l=this.market(h);this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let u=this.safeValue(this.ohlcvs[h],d);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new c(e),this.ohlcvs[h][d]=u}const f=this.parseOHLCV(r,l);u.append(f),e.resolve(u,a)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=await this.negotiate(),a=this.market(e);e=a.symbol;const n="/market/match:"+a.id,o=n,c=await this.subscribe(r,n,o,void 0,e,i);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrade(e,t){const s=this.safeValue(t,"data",{}),i=this.parseTrade(s),r=this.safeString(t,"topic"),a=i.symbol;let n=this.safeValue(this.trades,a);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new o(e),this.trades[a]=n}return n.append(i),e.resolve(n,r),t}retryFetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(s,"messageHash"),n=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),o=this.safeInteger(n,"maxAttempts",3);let c=this.safeInteger(s,"numAttempts",0);if(c<o)r in e.subscriptions&&(c=this.sum(c,1),s.numAttempts=c,e.subscriptions[r]=s,this.spawn(this.fetchOrderBookSnapshot,e,t,s));else{r in e.subscriptions&&(s.fetchingOrderBookSnapshot=!1,s.numAttempts=0,e.subscriptions[r]=s);const t=new a(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+i+" in "+o.toString()+" attempts");e.reject(t,r)}}async fetchOrderBookSnapshot(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeInteger(s,"limit"),a=this.safeString(s,"messageHash");try{const n=await this.fetchOrderBook(i,r),o=this.orderbooks[i],c=o.cache,d=this.safeValue(c,0,{}),h=this.safeValue(d,"data",{}),l=this.safeInteger(h,"sequenceStart"),u=this.safeInteger(n,"nonce");if(u<l-1)this.retryFetchOrderBookSnapshot(e,t,s);else{o.reset(n);for(let t=0;t<c.length;t++){const s=c[t];this.handleOrderBookMessage(e,s,o)}this.orderbooks[i]=o,e.resolve(o,a)}}catch(i){i instanceof n?this.retryFetchOrderBookSnapshot(e,t,s):e.reject(i,a)}}handleDelta(e,t,s){const i=this.safeFloat(t,0);if(i>0){if(this.safeInteger(t,2)>s){const s=this.safeFloat(t,1);e.store(i,s)}}}handleDeltas(e,t,s){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i],s)}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"data",{}),a=this.safeInteger(i,"sequenceEnd");if(a>s.nonce){const e=this.safeInteger(t,"sequenceStart");if(void 0!==e&&e-1>s.nonce)throw new r(this.id+" handleOrderBook received an out-of-order nonce");const n=this.safeValue(i,"changes",{});let o=this.safeValue(n,"asks",[]),c=this.safeValue(n,"bids",[]);o=this.sortBy(o,2),c=this.sortBy(c,2),this.handleDeltas(s.asks,o,s.nonce),this.handleDeltas(s.bids,c,s.nonce),s.nonce=a,s.timestamp=void 0,s.datetime=void 0}return s}handleOrderBook(e,t){const s=this.safeString(t,"topic"),i=this.safeValue(t,"data"),r=this.safeString(i,"symbol"),a=this.safeSymbol(r,void 0,"-"),n=this.orderbooks[a];if(void 0===n.nonce){const i=this.safeValue(e.subscriptions,s);if(void 0===this.safeValue(i,"fetchingOrderBookSnapshot")){i.fetchingOrderBookSnapshot=!0,e.subscriptions[s]=i;const r=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),a=this.safeInteger(r,"delay",this.rateLimit);this.delay(a,this.fetchOrderBookSnapshot,e,t,i)}n.cache.push(t)}else this.handleOrderBookMessage(e,t,n),e.resolve(n,s)}handleOrderBookSubscription(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(s,"limit");i in this.orderbooks&&delete this.orderbooks[i],this.orderbooks[i]=this.orderBook({},r)}handleSubscriptionStatus(e,t){const s=this.safeString(t,"id"),i=this.indexBy(e.subscriptions,"id"),r=this.safeValue(i,s,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}handleSystemStatus(e,t){return t}async watchOrders(e,t,s,i={}){await this.loadMarkets();const r=await this.negotiate(),a="/spotMarket/tradeOrders";let n=a;if(void 0!==e){const t=this.market(e);e=t.symbol,n=n+":"+t.symbol}const o=await this.subscribe(r,a,n,void 0,void 0,this.extend({privateChannel:!0},i));return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySymbolSinceLimit(o,e,t,s,!0)}parseWsOrderStatus(e){return this.safeString({open:"open",filled:"closed",match:"open",update:"open",canceled:"canceled"},e,e)}parseWsOrder(e,t){const s=this.safeString(e,"orderId"),i=this.safeString(e,"clientOid"),r=this.safeStringLower(e,"orderType"),a=this.safeString(e,"price"),n=this.safeString(e,"filledSize"),o=this.safeString(e,"size"),c=this.safeString(e,"type"),d=this.parseWsOrderStatus(c),h=this.safeIntegerProduct(e,"orderTime",1e-6),l=this.safeString(e,"symbol"),u=(t=this.safeMarket(l,t)).symbol,f=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:u,id:s,clientOrderId:i,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,type:r,timeInForce:void 0,postOnly:void 0,side:f,price:a,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:d,fee:void 0,trades:void 0},t)}handleOrder(e,t){const s="/spotMarket/tradeOrders",i=this.safeValue(t,"data"),r=this.parseWsOrder(i),a=this.safeString(r,"symbol"),n=this.safeString(r,"id");if(void 0!==a){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new d(e)}const t=this.orders,i=this.safeValue(t.hashmap,a,{}),o=this.safeValue(i,n);if(void 0!==o){const e=this.safeValue(o,"stopPrice");void 0!==e&&(r.stopPrice=e),"closed"===o.status&&(r.status="closed")}t.append(r),e.resolve(this.orders,s);const c=s+":"+a;e.resolve(this.orders,c)}}async watchMyTrades(e,t,s,i={}){await this.loadMarkets();const r=await this.negotiate(),a="/spot/tradeFills";let n=a;if(void 0!==e){const t=this.market(e);e=t.symbol,n=n+":"+t.symbol}const o=await this.subscribe(r,a,n,void 0,void 0,this.extend({privateChannel:!0},i));return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySymbolSinceLimit(o,e,t,s)}handleMyTrade(e,t){let s=this.myTrades;if(void 0===s){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new d(e)}const i=this.safeValue(t,"data"),r=this.parseWsTrade(i);s.append(r);const a="/spot/tradeFills";e.resolve(s,a);const n=a+":"+r.symbol;e.resolve(s,n)}parseWsTrade(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t,"-")).symbol,r=this.safeString(e,"orderType"),a=this.safeString(e,"side"),n=this.safeString(e,"tradeId"),o=this.safeString(e,"price"),c=this.safeString(e,"size"),d=this.safeString(e,"orderId"),h=this.safeIntegerProduct(e,"time",1e-6),l=t.quote,u={cost:void 0,rate:this.safeString(e,"feeRate"),currency:l};return this.safeTrade({info:e,timestamp:h,datetime:this.iso8601(h),symbol:i,id:n,order:d,type:r,takerOrMaker:void 0,side:a,price:o,amount:c,cost:void 0,fee:u},t)}async watchBalance(e={}){await this.loadMarkets();const t=await this.negotiate(),s="/account/balance",i=s;return await this.subscribe(t,s,i,this.handleBalanceSubscription,void 0,this.extend({privateChannel:!0},e))}handleBalance(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"topic"),r=this.safeString(s,"currency"),a=this.safeString(s,"relationEvent");let n;if(void 0!==a){const e=a.split(".");n=this.safeString(e,0)}const o=this.safeString2(this.options,"watchBalance","defaultType","trade"),c=this.safeValue(this.options,"accountsByType"),d=this.safeString(c,n,"trade");d in this.balance||(this.balance[d]={});const h=this.safeCurrencyCode(r),l=this.account();l.free=this.safeString(s,"available"),l.used=this.safeString(s,"hold"),l.total=this.safeString(s,"total"),this.balance[d][h]=l,this.balance[d]=this.safeBalance(this.balance[d]),d===o&&e.resolve(this.balance[d],i)}handleBalanceSubscription(e,t,s){this.spawn(this.fetchBalanceSnapshot,e,t)}async fetchBalanceSnapshot(e,t){await this.loadMarkets(),this.checkRequiredCredentials();const s={type:this.safeString2(this.options,"watchBalance","defaultType","spot")},i=await this.fetchBalance(s),r=this.safeValue(i.info,"data",[]);if(r.length>0){const t=this.safeString2(this.options,"watchBalance","defaultType","trade");for(let e=0;e<r.length;e++){const s=r[e],i=this.safeString(s,"type"),a=this.safeValue(this.options,"accountsByType"),n=this.safeString(a,i,"trade");n in this.balance||(this.balance[n]={});const o=this.safeString(s,"currency"),c=this.safeCurrencyCode(o),d=this.account();d.free=this.safeString(s,"available"),d.used=this.safeString(s,"holds"),d.total=this.safeString(s,"total"),this.balance[t][c]=d,this.balance[t]=this.safeBalance(this.balance[t])}e.resolve(this.balance[t],"/account/balance")}}handleSubject(e,t){const s=this.safeString(t,"subject"),i={"trade.l2update":this.handleOrderBook,"trade.ticker":this.handleTicker,"trade.snapshot":this.handleTicker,"trade.l3match":this.handleTrade,"trade.candles.update":this.handleOHLCV,"account.balance":this.handleBalance,"/spot/tradeFills":this.handleMyTrade,orderChange:this.handleOrder},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){return t}handleMessage(e,t){if(this.handleErrorMessage(e,t)){const s=this.safeString(t,"type"),i={welcome:this.handleSystemStatus,ack:this.handleSubscriptionStatus,message:this.handleSubject,pong:this.handlePong},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],46:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r,BadSymbol:a,BadRequest:n,NotSupported:o}=e("ccxt/js/base/errors"),{ArrayCache:c,ArrayCacheBySymbolById:d,ArrayCacheByTimestamp:h}=e("./base/Cache");t.exports=class extends i.mexc{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:{spot:"wss://wbs.mexc.com/raw/ws",swap:"wss://contract.mexc.com/ws"}}},options:{timeframes:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},streaming:{ping:this.ping,keepAlive:1e4},exceptions:{ws:{exact:{"signature validation failed":r},broad:{"Contract not exists":a}}}})}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="ticker:"+(e=s.symbol),r={symbol:s.id};if("spot"===s.type)throw new o(this.id+" watchTicker does not support spot markets");return await this.watchSwapPublic(i,"sub.ticker",r,t)}handleTicker(e,t){const s=this.safeValue(t,"data",{}),i=this.safeString(t,"symbol"),r=this.safeMarket(i),a=r.symbol,n=this.parseTicker(s,r);this.tickers[a]=n;const o="ticker:"+a;return e.resolve(n,o),t}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={};e=a.symbol;const o=a.type,c=this.safeValue(this.options,"timeframes",{}),d=this.safeString(c,t),h="sub.kline",l="kline:"+d+":"+e;let u;return n.symbol=a.id,n.interval=d,void 0!==s&&(n.start=s),u="spot"===o?await this.watchSpotPublic(l,h,n,r):await this.watchSwapPublic(l,h,n,r),this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"symbol"),i=this.safeMarket(s),r=i.symbol,a=this.safeValue(t,"data",{}),n=this.safeString(a,"interval"),o="kline:"+n+":"+r,c=this.safeValue(this.options,"timeframes",{}),d=this.findTimeframe(n,c),l=this.parseWsOHLCV(a,i);this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let u=this.safeValue(this.ohlcvs[r],d);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new h(e),this.ohlcvs[r][d]=u}return u.append(l),e.resolve(u,o),t}parseWsOHLCV(e,t){return[this.safeIntegerProduct(e,"t",1e3),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber2(e,"v","q")]}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r="orderbook:"+(e=i.symbol),a={symbol:i.id};if(void 0!==t){if(5!==t&&10!==t&&20!==t)throw new n(this.id+" watchOrderBook limit parameter cannot be different from 5, 10 or 20")}else t=20;let o;if("swap"===i.type){const e="sub.depth";a.compress=!0,a.limit=t,o=await this.watchSwapPublic(r,e,a,s)}else{const e="sub.limit.depth";a.depth=t,o=await this.watchSpotPublic(r,e,a,s)}return o.limit(t)}handleOrderBook(e,t){const s=this.safeString(t,"symbol"),i=this.safeMarket(s),r=i.symbol,a=this.safeValue(t,"data"),n=this.safeInteger(t,"ts"),o=this.parseOrderBook(a,r,n);let c=this.safeNumber(a,"end");void 0===c&&(c=this.safeNumber(t,"version")),o.nonce=c;let d=this.safeValue(this.orderbooks,r);void 0===d?(d=this.orderBook(o),this.orderbooks[r]=d):"spot"===i.type?d.reset(o):this.handleOrderBookMessage(e,t,d);const h="orderbook:"+r;e.resolve(d,h)}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"data",{}),r=this.safeNumber(i,"end"),a=this.safeValue(i,"asks",[]),n=this.safeValue(i,"bids",[]);this.handleDeltas(s.asks,a),this.handleDeltas(s.bids,n);const o=this.safeInteger(t,"ts"),c=this.safeString(t,"symbol"),d=this.safeSymbol(c);return s.nonce=r,s.symbol=d,s.timestamp=o,s.datetime=this.iso8601(o),s}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a="sub.deal",n="trades:"+(e=r.symbol),o={symbol:r.id};let c;return c="spot"===r.type?await this.watchSpotPublic(n,a,o,i):await this.watchSwapPublic(n,a,o,i),this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeString(t,"symbol"),i=this.safeMarket(s),r=i.symbol;let a=this.safeValue(this.trades,r);if(void 0===a){const e=this.safeInteger(this.options,"tradesLimit",1e3);a=new c(e),this.trades[r]=a}const n=this.safeValue(t,"data",{});let o;o="deals"in n?this.safeValue(n,"deals",[]):[n];for(let e=0;e<o.length;e++){const t=this.parseWsTrade(o[e],i);a.append(t)}const d="trades:"+r;e.resolve(a,d)}async watchMyTrades(e,t,s,i={}){await this.loadMarkets();let r,a,n,c="trade";if(void 0!==e&&(r=this.market(e),e=r.symbol,c+=":"+r.symbol),[a,i]=this.handleMarketTypeAndParams("watchMyTrades",r,i),"spot"===a)throw new o(this.id+" watchMyTrades does not support spot markets");return n=await this.watchSwapPrivate(c,i),this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}handleMyTrade(e,t,s){const i=this.safeValue(t,"data",{}),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.parseWsTrade(i,a);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new d(e)}const o=this.myTrades;o.append(n);let c="trade";e.resolve(o,c),c+=":"+a.symbol,e.resolve(o,c)}parseWsTrade(e,t){const s=this.safeInteger2(e,"timestamp","t"),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t,"_")).symbol,a=this.safeString2(e,"price","p");let n=this.safeString2(e,"vol","q");void 0===n&&(n=this.safeString(e,"v"));let o,c=this.safeString(e,"T");void 0===c?(c=this.safeString(e,"side"),o=this.parseSwapSide(c)):o="1"===c?"buy":"sell";let d=this.safeString(e,"id");void 0===d&&(d=s.toString()+"-"+t.id+"-"+n);const h=this.safeString(e,"fee");let l;if(void 0!==h){const t=this.safeString(e,"feeCurrency");l={cost:h,currency:this.safeCurrencyCode(t)}}const u=this.safeString(e,"orderId"),f=this.safeValue(e,"taker",!0)?"taker":"maker";return this.safeTrade({info:e,id:d,order:u,timestamp:s,datetime:this.iso8601(s),symbol:r,type:void 0,side:o,takerOrMaker:f,price:a,amount:n,cost:void 0,fee:l},t)}async watchOrders(e,t,s,i={}){await this.loadMarkets();let r,a,n,o="order";return void 0!==e&&(r=this.market(e),e=r.symbol,o+=":"+r.symbol),[a,i]=this.handleMarketTypeAndParams("watchOrders",r,i),n="spot"===a?await this.watchSpotPrivate(o,i):await this.watchSwapPrivate(o,i),this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySymbolSinceLimit(n,e,t,s,!0)}handleOrder(e,t,s){const i=this.safeValue(t,"data",{});let r=this.safeString(t,"symbol");void 0===r&&(r=this.safeString(i,"symbol"));const a=this.safeMarket(r),n=this.parseWSOrder(i,a);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new d(e)}const o=this.orders;o.append(n);let c="order";e.resolve(o,c),c+=":"+a.symbol,e.resolve(o,c)}parseWSOrder(e,t){const s=this.safeString2(e,"orderId","id"),i=this.safeString2(e,"state","status"),r=this.safeInteger(e,"createTime"),a=this.safeString(e,"price"),n=this.safeString2(e,"quantity","vol"),o=this.safeString(e,"remainQuantity"),c=this.safeString(e,"dealVol"),d=this.safeString(e,"amount"),h=this.safeString(e,"dealAvgPrice"),l=this.safeString2(e,"symbol","symbolDisplay"),u=this.safeSymbol(l,t,"_"),f=this.safeString(e,"side");let p=this.parseSwapSide(f);if(void 0===p){const t=this.safeStringLower(e,"tradeType");p="ask"===t||"2"===t?"sell":"bid"===t||"1"===t?"buy":t}const m=this.parseWsOrderStatus(i,t);let g=this.safeString2(e,"client_order_id","orderId");""===g&&(g=void 0);const y=this.safeString(e,"orderType"),b="3"===y||"5"===y?"market":"limit";return this.safeOrder({id:s,clientOrderId:g,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:m,symbol:u,type:b,timeInForce:void 0,side:p,price:a,stopPrice:void 0,average:h,amount:n,cost:d,filled:c,remaining:o,fee:void 0,trades:void 0,info:e},t)}parseSwapSide(e){return this.safeString({1:"open long",2:"close short",3:"open short",4:"close long"},e)}parseWsOrderStatus(e,t){let s={};return s="spot"===t.type?{1:"open",2:"closed",3:"open",4:"canceled",5:"open",NEW:"open",FILLED:"closed",PARTIALLY_FILLED:"open",CANCELED:"canceled",PARTIALLY_CANCELED:"canceled"}:{2:"open",3:"closed",4:"canceled"},this.safeString(s,e,e)}async watchBalance(e={}){await this.loadMarkets();let t;if([t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),"spot"===t)throw new o(this.id+" watchBalance does not support spot markets");return this.watchSwapPrivate("balance",e)}handleBalance(e,t){const s=this.safeValue(t,"data"),i=this.safeString(s,"currency"),r=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(s,"availableBalance"),a.used=this.safeString(s,"frozenBalance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance);e.resolve(this.balance,"balance")}async watchSwapPublic(e,t,s,i={}){const r=this.urls.api.ws.swap,a={method:t,param:s},n=this.extend(a,i);return await this.watch(r,e,n,e)}async watchSpotPublic(e,t,s,i={}){const r=this.urls.api.ws.spot,a={op:t},n=this.extend(a,s),o=this.extend(n,i);return await this.watch(r,e,o,e)}async watchSpotPrivate(e,t={}){this.checkRequiredCredentials();const s="sub.personal",i=this.urls.api.ws.spot,r=this.milliseconds().toString(),a={op:s,api_key:this.apiKey,req_time:r},n=this.keysort(a);n.api_secret=this.secret;const o=this.urlencode(n),c=this.hash(this.encode(o),"md5");a.sign=c;const d=this.extend(a,t);return await this.watch(i,e,d,s)}async watchSwapPrivate(e,t={}){this.checkRequiredCredentials();const s="login",i=this.urls.api.ws.swap,r=this.milliseconds().toString(),a=this.apiKey+r,n=this.hmac(this.encode(a),this.encode(this.secret),"sha256"),o={method:s,param:{apiKey:this.apiKey,signature:n,reqTime:r}},c=this.extend(o,t),d=this.extend(c,t);return await this.watch(i,e,d,s)}handleErrorMessage(e,t){const s=this.safeString(t,"channel");try{const e=this.id+" "+this.json(t);if(s.indexOf("error")>=0){const s=this.safeValue(t,"data");"string"==typeof s&&(this.throwExactlyMatchedException(this.exceptions.ws.exact,s,e),this.throwBroadlyMatchedException(this.exceptions.ws.broad,s,e))}if("sub.personal"===s){const s=this.safeString(t,"msg");this.throwExactlyMatchedException(this.exceptions.ws.exact,s,e)}}catch(e){if(e instanceof r)return!1}return t}handleAuthenticate(e,t){return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return void this.handlePong(e,t);const s=this.safeString(t,"channel"),i={pong:this.handlePong,"rs.login":this.handleAuthenticate,"push.deal":this.handleTrades,orderbook:this.handleOrderBook,"push.kline":this.handleOHLCV,"push.ticker":this.handleTicker,"push.depth":this.handleOrderBook,"push.limit.depth":this.handleOrderBook,"push.personal.order":this.handleOrder,"push.personal.trigger.order":this.handleOrder,"push.personal.plan.order":this.handleOrder,"push.personal.order.deal":this.handleMyTrade,"push.personal.asset":this.handleBalance},r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}ping(e){return"spot"===this.safeString(this.options,"defaultType","spot")?"ping":{method:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],47:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r}=e("./base/Cache");t.exports=class extends i.ndax{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0,watchOHLCV:!0},urls:{test:{ws:"wss://ndaxmarginstaging.cdnhop.net:10456/WSAdminGatewa/"},api:{ws:"wss://api.ndax.io/WSGateway"}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchTicker(e,t={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const i=this.market(e),r="SubscribeLevel1",a=r+":"+i.id,n=this.urls.api.ws,o=this.requestId(),c={OMSId:s,InstrumentId:parseInt(i.id)},d={m:0,i:o,n:r,o:this.json(c)},h=this.extend(d,t);return await this.watch(n,a,h,a)}handleTicker(e,t){const s=this.safeValue(t,"o",{}),i=this.parseTicker(s),r=i.symbol,a=this.market(r);this.tickers[r]=i;const n="SubscribeLevel1:"+a.id;e.resolve(i,n)}async watchTrades(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const a=this.market(e);e=a.symbol;const n="SubscribeTrades",o=n+":"+a.id,c=this.urls.api.ws,d=this.requestId(),h={OMSId:r,InstrumentId:parseInt(a.id),IncludeLastCount:100},l={m:0,i:d,n:n,o:this.json(h)},u=this.extend(l,i),f=await this.watch(c,o,u,o);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"o",[]),i={};for(let e=0;e<s.length;e++){const t=this.parseTrade(s[e]),a=t.symbol;let n=this.safeValue(this.trades,a);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new r(e)}n.append(t),this.trades[a]=n,i[a]=!0}const a=Object.keys(i);for(let t=0;t<a.length;t++){const s=a[t],i="SubscribeTrades:"+this.market(s).id,r=this.safeValue(this.trades,s);e.resolve(r,i)}}async watchOHLCV(e,t="1m",s,i,r={}){const a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const n=this.market(e);e=n.symbol;const o="SubscribeTicker",c=o+":"+t+":"+n.id,d=this.urls.api.ws,h=this.requestId(),l={OMSId:a,InstrumentId:parseInt(n.id),Interval:parseInt(this.timeframes[t]),IncludeLastCount:100},u={m:0,i:h,n:o,o:this.json(l)},f=this.extend(u,r),p=await this.watch(d,c,f,c);return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySinceLimit(p,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeValue(t,"o",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,8),a=this.safeMarket(r).symbol;i[r]={},this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});const n=Object.keys(this.timeframes);for(let e=0;e<n.length;e++){const s=n[e],o=this.timeframes[s],c=1e3*parseInt(o),d=this.safeInteger(t,0),h=[parseInt(d/c)*c,this.safeFloat(t,3),this.safeFloat(t,1),this.safeFloat(t,2),this.safeFloat(t,4),this.safeFloat(t,5)],l=this.safeValue(this.ohlcvs[a],s,[]),u=l.length;if(u&&h[0]===l[u-1][0]){const e=l[u-1];l[u-1]=[h[0],e[1],Math.max(h[1],e[1]),Math.min(h[2],e[2]),h[4],this.sum(h[5],e[5])],i[r][s]=!0}else{if(u&&h[0]<l[u-1][0])continue;l.push(h);u>=this.safeInteger(this.options,"OHLCVLimit",1e3)&&l.shift(),i[r][s]=!0}this.ohlcvs[a][s]=l}}const r=Object.keys(i);for(let t=0;t<r.length;t++){const s=r[t],a=Object.keys(i[s]);for(let t=0;t<a.length;t++){const i=a[t],r="SubscribeTicker:"+i+":"+s,n=this.safeMarket(s).symbol,o=this.safeValue(this.ohlcvs[n],i,[]);e.resolve(o,r)}}}async watchOrderBook(e,t,s={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="SubscribeLevel2",n=a+":"+r.id,o=this.urls.api.ws,c=this.requestId();t=void 0===t?100:t;const d={OMSId:i,InstrumentId:parseInt(r.id),Depth:t},h={m:0,i:c,n:a,o:this.json(d)},l={id:c,messageHash:n,name:a,symbol:e,marketId:r.id,method:this.handleOrderBookSubscription,limit:t,params:s},u=this.extend(h,s);return(await this.watch(o,n,u,n,l)).limit(t)}handleOrderBook(e,t){const s=this.safeValue(t,"o",[]),i=this.safeValue(s,0,[]),r=this.safeString(i,7);if(void 0===r)return t;const a=this.safeMarket(r).symbol,n=this.safeValue(this.orderbooks,a);if(void 0===n)return t;let o,c;for(let e=0;e<s.length;e++){const t=s[e];if(void 0===o)o=this.safeInteger(t,2);else{const e=this.safeInteger(t,2);o=Math.max(o,e)}if(void 0===c)c=this.safeInteger(t,0);else{const e=this.safeInteger(t,0);c=Math.max(c,e)}const i=this.safeInteger(t,3),r=this.safeFloat(t,6),a=this.safeFloat(t,8),d=0===this.safeInteger(t,9)?n.bids:n.asks;0===i||1===i?d.store(r,a):2===i&&d.store(r,0)}n.nonce=c,n.timestamp=o,n.datetime=this.iso8601(o);const d="SubscribeLevel2:"+r;this.orderbooks[a]=n,e.resolve(n,d)}handleOrderBookSubscription(e,t,s){const i=this.safeValue(t,"o",[]),r=this.safeString(s,"symbol"),a=this.parseOrderBook(i,r),n=this.safeInteger(s,"limit"),o=this.orderBook(a,n);this.orderbooks[r]=o;const c=this.safeString(s,"messageHash");e.resolve(o,c)}handleSubscriptionStatus(e,t){const s=this.indexBy(e.subscriptions,"id"),i=this.safeInteger(t,"i"),r=this.safeValue(s,i);if(void 0!==r){const s=this.safeValue(r,"method");return void 0===s?t:s.call(this,e,t,r)}}handleMessage(e,t){const s=this.safeString(t,"o");if(void 0===s)return t;t.o=JSON.parse(s);const i={SubscribeLevel2:this.handleSubscriptionStatus,SubscribeLevel1:this.handleTicker,Level2UpdateEvent:this.handleOrderBook,Level1UpdateEvent:this.handleTicker,SubscribeTrades:this.handleTrades,TradeDataUpdateEvent:this.handleTrades,SubscribeTicker:this.handleOHLCV,TickerDataUpdateEvent:this.handleOHLCV},r=this.safeString(t,"n"),a=this.safeValue(i,r);return void 0===a?t:a.call(this,e,t)}}},{"./base/Cache":5,ccxt:123}],48:[function(e,t,s){"use strict";const i=e("ccxt"),{ArgumentsRequired:r,AuthenticationError:a}=e("ccxt/js/base/errors"),{ArrayCache:n,ArrayCacheByTimestamp:o,ArrayCacheBySymbolById:c}=e("./base/Cache");t.exports=class extends i.okcoin{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:"wss://real.okcoin.com:8443/ws/v3"},logo:"https://user-images.githubusercontent.com/1294454/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg",www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513"},options:{fetchMarkets:["spot"],watchOrders:"order",watchOrderBook:{limit:400,type:"spot",depth:"depth_l2_tbt"},watchBalance:"spot",ws:{inflate:!0}},streaming:{ping:this.ping,keepAlive:2e4}})}async subscribe(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=this.urls.api.ws,a=i.type+"/"+e+":"+i.id,n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,s),a)}async watchTrades(e,t,s,i={}){const r=await this.subscribe("trade",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchOrders(e,t,s,i={}){await this.authenticate();const r=this.safeString(this.options,"watchOrders","order"),a=await this.subscribe(r,e,i);return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySinceLimit(a,t,s,"timestamp",!0)}handleOrders(e,t,s){const i=this.safeString(t,"table"),r=this.safeValue(t,"data",[]);if(r.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new c(t));const s=this.orders,a={},n=this.parseOrders(r);for(let e=0;e<n.length;e++){const t=n[e];s.append(t);const i=t.symbol;a[this.market(i).id]=!0}const o=Object.keys(a);for(let t=0;t<o.length;t++){const s=i+":"+o[t];e.resolve(this.orders,s)}}}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrade(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]),r=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<i.length;t++){const a=this.parseTrade(i[t]),o=a.symbol,c=s+":"+this.safeString(a.info,"instrument_id");let d=this.safeValue(this.trades,o);void 0===d&&(d=new n(r),this.trades[o]=d),d.append(a),e.resolve(d,c)}return t}handleTicker(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){const r=this.parseTicker(i[t]),a=r.symbol,n=s+":"+this.safeString(r.info,"instrument_id");this.tickers[a]=r,e.resolve(r,n)}return t}async watchOHLCV(e,t="1m",s,i,r={}){const a="candle"+this.timeframes[t]+"s",n=await this.subscribe(a,e,r);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeString(t,"table"),i=this.safeValue(t,"data",[]),r=s.split("/");let a=this.safeString(r,1).replace("candle","");a=a.replace("s","");const n=this.findTimeframe(a);for(let t=0;t<i.length;t++){const r=this.safeString(i[t],"instrument_id"),a=this.safeValue(i[t],"candle"),c=this.safeMarket(r),d=c.symbol,h=this.parseOHLCV(a,c);this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let l=this.safeValue(this.ohlcvs[d],n);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new o(e),this.ohlcvs[d][n]=l}l.append(h);const u=s+":"+r;e.resolve(l,u)}}async watchOrderBook(e,t,s={}){const i=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(i,"depth","depth_l2_tbt");return(await this.subscribe(r,e,s)).limit(t)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(s.asks,i),this.handleDeltas(s.bids,r);const a=this.parse8601(this.safeString(t,"timestamp"));return s.timestamp=a,s.datetime=this.iso8601(a),s}handleOrderBook(e,t){const s=this.safeString(t,"action"),i=this.safeValue(t,"data",[]),r=this.safeString(t,"table");if("partial"===s)for(let t=0;t<i.length;t++){const s=i[t],a=this.safeString(s,"instrument_id"),n=this.safeMarket(a).symbol,o=this.safeValue(this.options,"watchOrderBook",{}),c=this.safeInteger(o,"limit",400),d=this.orderBook({},c);this.orderbooks[n]=d,this.handleOrderBookMessage(e,s,d);const h=r+":"+a;e.resolve(d,h)}else for(let t=0;t<i.length;t++){const s=i[t],a=this.safeString(s,"instrument_id"),n=this.safeMarket(a).symbol;if(n in this.orderbooks){const t=this.orderbooks[n];this.handleOrderBookMessage(e,s,t);const i=r+":"+a;e.resolve(t,i)}}return t}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,s="login",i=this.client(t);let r=this.safeValue(i.subscriptions,s);if(void 0===r){r=i.future("authenticated");const e=this.seconds().toString(),a=e+"GET"+"/users/self/verify",n=this.hmac(this.encode(a),this.encode(this.secret),"sha256","base64"),o={op:s,args:[this.apiKey,this.password,e,n]};this.spawn(this.watch,t,s,o,s,r)}return await r}async watchBalance(e={}){const t=this.safeString2(this.options,"watchBalance","defaultType");if(void 0===this.safeString(e,"type",t))throw new r(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");const s=await this.authenticate();return await this.subscribeToUserAccount(s,e)}async subscribeToUserAccount(e,t={}){const s=this.safeString2(this.options,"watchBalance","defaultType"),i=this.safeString(t,"type",s);if(void 0===i)throw new r(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");await this.loadMarkets();const a=this.safeString(t,"currency"),n=this.safeString(t,"code",this.safeCurrencyCode(a));let o;void 0!==n&&(o=this.currency(n));const c=this.safeString(t,"instrument_id"),d=this.safeString(t,"symbol");let h;void 0!==d?h=this.market(d):void 0!==c&&c in this.markets_by_id&&(h=this.markets_by_id[c]);const l=void 0===h,u=void 0===o;if("spot"===i){if(u)throw new r(this.id+" watchBalance requires a 'currency' (id) or a unified 'code' parameter for "+i+" accounts")}else if("margin"===i||"swap"===i||"option"===i){if(l)throw new r(this.id+" watchBalance requires a 'instrument_id' (id) or a unified 'symbol' parameter for "+i+" accounts")}else if("futures"===i&&u&&l)throw new r(this.id+" watchBalance requires a 'currency' (id), or unified 'code', or 'instrument_id' (id), or unified 'symbol' parameter for "+i+" accounts");let f;u?l||(f=h.id):f=o.id;const p=("margin"===i?"spot":i)+"/"+("margin"===i?"margin_account":"account"),m=p+":"+f,g=this.urls.api.ws,y={op:"subscribe",args:[m]},b=this.omit(t,["currency","code","instrument_id","symbol","type"]);return await this.watch(g,p,this.deepExtend(y,b),m)}handleBalance(e,t){const s=this.safeString(t,"table"),i=s.split("/");let r=this.safeString(i,0);if("spot"===r){"margin_account"===this.safeString(i,1)&&(r="margin")}const a=this.safeValue(t,"data",[]);for(let t=0;t<a.length;t++){const t=this.parseBalanceByType(r,a),i=this.safeValue(this.balance,r,{}),n=this.deepExtend(i,t);this.balance[r]=this.safeBalance(n),e.resolve(this.balance[r],s)}}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){const s=this.safeString(t,"errorCode");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);const i=this.safeValue(t,"message");void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}}catch(t){if(t instanceof a){e.reject(t,"authenticated");const s="login";return s in e.subscriptions&&delete e.subscriptions[s],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return this.handlePong(e,t);const s=this.safeString(t,"table");if(void 0!==s){const i=s.split("/"),r=this.safeString(i,1),a={depth:this.handleOrderBook,depth5:this.handleOrderBook,depth_l2_tbt:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade,account:this.handleBalance,margin_account:this.handleBalance,order:this.handleOrders};let n=this.safeValue(a,r);return r.indexOf("candle")>=0&&(n=this.handleOHLCV),void 0===n?t:n.call(this,e,t)}{const s=this.safeString(t,"event");if(void 0!==s){const i={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],49:[function(e,t,s){"use strict";const i=e("./okx.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"okex"})}}},{"./okx.js":50}],50:[function(e,t,s){"use strict";const i=e("ccxt"),{AuthenticationError:r}=e("ccxt/js/base/errors"),{ArrayCache:a,ArrayCacheByTimestamp:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.okx{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchOrderBook:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0,watchOrders:!0},urls:{api:{ws:{public:"wss://ws.okx.com:8443/ws/v5/public",private:"wss://ws.okx.com:8443/ws/v5/private"}},test:{ws:{public:"wss://wspap.okx.com:8443/ws/v5/public?brokerId=9999",private:"wss://wspap.okx.com:8443/ws/v5/private?brokerId=9999"}}},options:{watchOrderBook:{depth:"books"},watchBalance:"spot",ws:{}},streaming:{ping:this.ping,keepAlive:2e4}})}async subscribe(e,t,s,i={}){await this.loadMarkets();const r=this.urls.api.ws[e];let a=t;const n={channel:t};if(void 0!==s){const e=this.market(s);a+=":"+e.id,n.instId=e.id}const o={op:"subscribe",args:[this.deepExtend(n,i)]};return await this.watch(r,a,o,a)}async watchTrades(e,t,s,i={}){const r=await this.subscribe("public","trades",e,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}handleTrades(e,t){const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r=this.safeValue(t,"data",[]),n=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<r.length;t++){const s=this.parseTrade(r[t]),o=s.symbol,c=i+":"+this.safeString(s.info,"instId");let d=this.safeValue(this.trades,o);void 0===d&&(d=new a(n),this.trades[o]=d),d.append(s),e.resolve(d,c)}return t}async watchTicker(e,t={}){return await this.subscribe("public","tickers",e,t)}handleTicker(e,t){const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r=this.safeValue(t,"data",[]);for(let t=0;t<r.length;t++){const s=this.parseTicker(r[t]),a=s.symbol,n=i+":"+this.safeString(s.info,"instId");this.tickers[a]=s,e.resolve(s,n)}return t}async watchOHLCV(e,t="1m",s,i,r={}){const a="candle"+this.timeframes[t],n=await this.subscribe("public",a,e,r);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,s,i,0,!0)}handleOHLCV(e,t){const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r=this.safeValue(t,"data",[]),a=this.safeString(s,"instId"),o=this.safeMarket(a),c=o.id,d=i.replace("candle",""),h=this.findTimeframe(d);for(let t=0;t<r.length;t++){const s=this.parseOHLCV(r[t],o);this.ohlcvs[c]=this.safeValue(this.ohlcvs,c,{});let d=this.safeValue(this.ohlcvs[c],h);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new n(e),this.ohlcvs[c][h]=d}d.append(s);const l=i+":"+a;e.resolve(d,l)}}async watchOrderBook(e,t,s={}){const i=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(i,"depth","books");return(await this.subscribe("public",r,e,s)).limit(t)}handleDelta(e,t){const s=this.safeFloat(t,0),i=this.safeFloat(t,1);e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}handleOrderBookMessage(e,t,s){const i=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(s.asks,i),this.handleDeltas(s.bids,r);const a=this.safeInteger(t,"ts");return s.timestamp=a,s.datetime=this.iso8601(a),s}handleOrderBook(e,t){const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r=this.safeString(t,"action"),a=this.safeValue(t,"data",[]),n=this.safeString(s,"instId"),o=this.safeMarket(n).symbol,c=this.safeInteger({"bbo-tbt":1,books:400,books5:5,"books-l2-tbt":400,"books50-l2-tbt":50},i);if("snapshot"===r)for(let t=0;t<a.length;t++){const s=a[t],r=this.orderBook({},c);this.orderbooks[o]=r,this.handleOrderBookMessage(e,s,r);const d=i+":"+n;e.resolve(r,d)}else if("update"===r){if(o in this.orderbooks){const t=this.orderbooks[o];for(let s=0;s<a.length;s++){const r=a[s];this.handleOrderBookMessage(e,r,t);const o=i+":"+n;e.resolve(t,o)}}}else if("books5"===i||"bbo-tbt"===i){let t=this.safeValue(this.orderbooks,o);void 0===t&&(t=this.orderBook({},c)),this.orderbooks[o]=t;for(let s=0;s<a.length;s++){const r=a[s],c=this.safeInteger(r,"ts"),d=this.parseOrderBook(r,o,c,"bids","asks",0,1);t.reset(d);const h=i+":"+n;e.resolve(t,h)}}return t}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws.private,s="login",i=this.client(t);let r=this.safeValue(i.subscriptions,s);if(void 0===r){r=i.future("authenticated");const e=this.seconds().toString(),a=e+"GET"+"/users/self/verify",n=this.hmac(this.encode(a),this.encode(this.secret),"sha256","base64"),o={op:s,args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:e,sign:n}]};this.spawn(this.watch,t,s,o,s,r)}return await r}async watchBalance(e={}){return await this.loadMarkets(),await this.authenticate(),await this.subscribe("private","account",void 0,e)}handleBalance(e,t){const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r="spot",a=this.parseTradingBalance(t),n=this.safeValue(this.balance,r,{}),o=this.deepExtend(n,a);this.balance[r]=this.safeBalance(o),e.resolve(this.balance[r],i)}async watchOrders(e,t,s,i={}){await this.loadMarkets(),await this.authenticate();const r=this.safeValue(this.options,"watchOrders",{});let a,n=this.safeString(r,"type","ANY");n=this.safeString(i,"type",n),i=this.omit(i,"type"),void 0!==e&&(a=this.market(e),n=a.type),"future"===n&&(n="futures");const o={instType:n.toUpperCase()},c=await this.subscribe("private","orders",e,this.extend(o,i));return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySymbolSinceLimit(c,e,t,s,!0)}handleOrders(e,t,s){const i=this.safeValue(t,"arg",{}),r=this.safeString(i,"channel"),a=this.safeValue(t,"data",[]);if(a.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new o(t));const s=this.orders,i=[],n=this.parseOrders(a);for(let e=0;e<n.length;e++){const t=n[e];s.append(t);const r=t.symbol,a=this.market(r);i.push(a.id)}e.resolve(this.orders,r);for(let t=0;t<i.length;t++){const s=r+":"+i[t];e.resolve(this.orders,s)}}}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){const s=this.safeString(t,"errorCode");try{if(void 0!==s){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,s,e);const i=this.safeValue(t,"message");void 0!==i&&this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}}catch(t){if(t instanceof r){e.reject(t,"authenticated");const s="login";return s in e.subscriptions&&delete e.subscriptions[s],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return this.handlePong(e,t);const s=this.safeString(t,"event");if(void 0!==s){const i={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}{const s=this.safeValue(t,"arg",{}),i=this.safeString(s,"channel"),r={"bbo-tbt":this.handleOrderBook,books:this.handleOrderBook,books5:this.handleOrderBook,"books50-l2-tbt":this.handleOrderBook,"books-l2-tbt":this.handleOrderBook,tickers:this.handleTicker,trades:this.handleTrades,account:this.handleBalance,orders:this.handleOrders},a=this.safeValue(r,i);if(void 0!==a)return a.call(this,e,t);if(0!==i.indexOf("candle"))return t;this.handleOHLCV(e,t)}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],51:[function(e,t,s){"use strict";const i=e("ccxt"),r=e("ccxt/js/base/Precise"),{ArrayCache:a,ArrayCacheByTimestamp:n,ArrayCacheBySymbolById:o}=e("./base/Cache");t.exports=class extends i.phemex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{test:{ws:"wss://testnet.phemex.com/ws"},api:{ws:"wss://phemex.com/ws"}},options:{tradesLimit:1e3,OHLCVLimit:1e3},streaming:{keepAlive:2e4}})}fromEn(e,t){if(void 0===e)return;const s=new r(e);return s.decimals=this.sum(s.decimals,t),s.reduce(),s.toString()}fromEp(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}parseSwapTicker(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol,a=this.safeIntegerProduct(e,"timestamp",1e-6),n=this.fromEp(this.safeString(e,"close"),t),o=this.parseNumber(n),c=this.parseNumber(this.fromEv(this.safeString(e,"turnover"),t)),d=this.parseNumber(this.fromEv(this.safeString(e,"volume"),t));let h,l,u;const f=this.omitZero(this.fromEp(this.safeString(e,"open"),t)),p=this.parseNumber(f);void 0!==f&&void 0!==n&&(h=this.parseNumber(r.stringSub(n,f)),u=this.parseNumber(r.stringDiv(r.stringAdd(n,f),"2")),l=this.parseNumber(r.stringMul(r.stringSub(r.stringDiv(n,f),"1"),"100")));return{symbol:i,timestamp:a,datetime:this.iso8601(a),high:this.parseNumber(this.fromEp(this.safeString(e,"high"),t)),low:this.parseNumber(this.fromEp(this.safeString(e,"low"),t)),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:p,close:o,last:o,previousClose:void 0,change:h,percentage:l,average:u,baseVolume:d,quoteVolume:c,info:e}}handleTicker(e,t){let s,i="market24h",r=this.safeValue(t,i);void 0===r?(i="spot_market24h",r=this.safeValue(t,i),s=this.parseTicker(r)):s=this.parseSwapTicker(r);const a=s.symbol,n=i+":"+a,o=this.safeIntegerProduct(t,"timestamp",1e-6);s.timestamp=o,s.datetime=this.iso8601(o),this.tickers[a]=s,e.resolve(s,n)}async watchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("watchBalance",void 0,e),i=t+":balance";return await this.subscribePrivate(t,i,s)}handleBalance(e,t,s){for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"currency"),a=this.safeCurrencyCode(i),n=this.safeValue(this.currencies,a,{}),o=this.safeInteger(n,"valueScale",8),c=this.account();let d=this.safeString(t,"totalUsedBalanceEv");if(void 0===d){const e=this.safeString(t,"lockedTradingBalanceEv"),s=this.safeString(t,"lockedWithdrawEv");d=r.stringAdd(e,s)}const h=this.safeString2(t,"accountBalanceEv","balanceEv");c.used=this.fromEn(d,o),c.total=this.fromEn(h,o),this.balance[a]=c,this.balance=this.safeBalance(this.balance)}const i=e+":balance";t.resolve(this.balance,i)}handleTrades(e,t){const s=this.safeString(t,"symbol"),i=this.safeMarket(s),r=i.symbol,n="trade:"+r;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a(e),this.trades[r]=o}const c=this.safeValue(t,"trades",[]),d=this.parseTrades(c,i);for(let e=0;e<d.length;e++)o.append(d[e]);e.resolve(o,n)}handleOHLCV(e,t){const s="kline",i=this.safeString(t,"symbol"),r=this.safeMarket(i),a=r.symbol,o=this.safeValue(t,s,[]),c=this.safeValue(o,0,[]),d=this.safeString(c,1),h=this.findTimeframe(d);if(void 0!==h){const t=s+":"+h+":"+a,i=this.parseOHLCVs(o,r);this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});let c=this.safeValue(this.ohlcvs[a],h);if(void 0===c){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new n(e),this.ohlcvs[a][h]=c}for(let e=0;e<i.length;e++){const t=i[e];c.append(t)}e.resolve(c,t)}}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e).spot?"spot_market24h":"market24h",i=this.urls.api.ws,r=s+".subscribe",a=s+":"+e,n={method:r,id:this.requestId(),params:[]},o=this.deepExtend(n,t);return await this.watch(i,a,o,r)}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.urls.api.ws,n="trade",o=n+":"+e,c={method:n+".subscribe",id:this.requestId(),params:[r.id]},d=this.deepExtend(c,i),h=await this.watch(a,o,d,o);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.urls.api.ws,a="orderbook",n=a+":"+e,o={method:a+".subscribe",id:this.requestId(),params:[i.id]},c=this.deepExtend(o,s);return(await this.watch(r,n,c,n)).limit(t)}async watchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.urls.api.ws,o="kline",c=o+":"+t+":"+e,d={method:o+".subscribe",id:this.requestId(),params:[a.id,this.safeInteger(this.timeframes,t)]},h=this.deepExtend(d,r),l=await this.watch(n,c,h,c);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySinceLimit(l,s,i,0,!0)}handleDelta(e,t,s){const i=this.parseBidAsk(t,0,1,s);e.storeArray(i)}handleDeltas(e,t,s){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i],s)}handleOrderBook(e,t){const s=this.safeString(t,"symbol"),i=this.safeMarket(s),r=i.symbol,a=this.safeString(t,"type"),n=this.safeInteger(t,"depth"),o="orderbook:"+r,c=this.safeInteger(t,"sequence"),d=this.safeIntegerProduct(t,"timestamp",1e-6);if("snapshot"===a){const s=this.safeValue(t,"book",{}),a=this.parseOrderBook(s,r,d,"bids","asks",0,1,i);a.nonce=c;const h=this.orderBook(a,n);this.orderbooks[r]=h,e.resolve(h,o)}else{const s=this.safeValue(this.orderbooks,r);if(void 0!==s){const a=this.safeValue(t,"book",{}),n=this.safeValue(a,"asks",[]),h=this.safeValue(a,"bids",[]);this.handleDeltas(s.asks,n,i),this.handleDeltas(s.bids,h,i),s.nonce=c,s.timestamp=d,s.datetime=this.iso8601(d),this.orderbooks[r]=s,e.resolve(s,o)}}}async watchMyTrades(e,t,s,i={}){await this.loadMarkets();let r,a,n="trades";void 0!==e&&(r=this.market(e),e=r.symbol,n=n+":"+r.symbol),[a,i]=this.handleMarketTypeAndParams("watchMyTrades",r,i),void 0===e&&(n=n+":"+a);const o=await this.subscribePrivate(a,n,i);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySymbolSinceLimit(o,e,t,s,!0)}handleMyTrades(e,t){const s="trades";if(0===t.length)return;let i=this.myTrades;if(void 0===i){const e=this.safeInteger(this.options,"tradesLimit",1e3);i=new o(e)}const r={};let a;for(let e=0;e<t.length;e++){const s=t[e];if(this.safeString(s,"symbol")in this.markets_by_id){const e=this.parseTrade(s);i.append(e);const t=e.symbol,n=this.market(t);void 0===a&&(a=n.type),r[t]=!0}}const n=Object.keys(r);for(let t=0;t<n.length;t++){const r=s+":"+n[t];e.resolve(i,r)}const c=s+":"+a;e.resolve(i,c)}async watchOrders(e,t,s,i={}){await this.loadMarkets();let r,a,n="orders";void 0!==e&&(r=this.market(e),e=r.symbol,n=n+":"+r.symbol),[a,i]=this.handleMarketTypeAndParams("watchOrders",r,i),void 0===e&&(n=n+":"+a);const o=await this.subscribePrivate(a,n,i);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySymbolSinceLimit(o,e,t,s,!0)}handleOrders(e,t){let s=[];const i=[];if("closed"in t||"fills"in t||"open"in t){const e=this.safeValue(t,"closed",[]),r=this.safeValue(t,"open",[]),a=this.arrayConcat(r,e);if(0===a.length)return;s=this.safeValue(t,"fills",[]);for(let e=0;e<a.length;e++){const t=a[e];if(this.safeString(t,"symbol")in this.markets_by_id){const e=this.parseOrder(t);i.push(e)}}}else for(let e=0;e<t.length;e++){const r=t[e];if(this.safeString(r,"symbol")in this.markets_by_id){const e=this.safeString(r,"action");void 0!==e&&"Cancel"!==e&&s.push(r);const t=this.parseWSSwapOrder(r);i.push(t)}}this.handleMyTrades(e,s);const r=this.safeInteger(this.options,"ordersLimit",1e3),a={};let n;void 0===this.orders&&(this.orders=new o(r));const c=this.orders;for(let e=0;e<i.length;e++){const t=i[e];c.append(t);const s=t.symbol,r=this.market(s);void 0===n&&(n=r.type),a[s]=!0}const d=Object.keys(a);for(let t=0;t<d.length;t++){const s="orders:"+d[t];e.resolve(this.orders,s)}const h="orders:"+n;e.resolve(this.orders,h)}parseWSSwapOrder(e,t){const s=this.safeString(e,"orderID");let i=this.safeString(e,"clOrdID");void 0!==i&&i.length<1&&(i=void 0);const r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeStringLower(e,"side"),c=this.parseOrderType(this.safeString(e,"ordType")),d=this.parseNumber(this.fromEp(this.safeString(e,"priceEp"),t)),h=this.safeString(e,"orderQty"),l=this.safeString(e,"cumQty"),u=this.safeString(e,"leavesQty"),f=this.safeIntegerProduct(e,"actionTimeNs",1e-6),p=this.safeString(e,"cumValueEv"),m=this.fromEv(p,t);let g=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===g&&(g=void 0);const y=this.parseTimeInForce(this.safeString(e,"timeInForce")),b=this.safeString(e,"stopPx"),v="PO"===y;return this.safeOrder({info:e,id:s,clientOrderId:i,datetime:this.iso8601(f),timestamp:f,lastTradeTimestamp:g,symbol:a,type:c,timeInForce:y,postOnly:v,side:o,price:d,stopPrice:b,amount:h,filled:l,remaining:u,cost:m,average:void 0,status:n,fee:void 0,trades:void 0},t)}handleMessage(e,t){const s=this.safeInteger(t,"id");if(void 0!==s){const i=e.subscriptions,r=Object.values(i);for(let i=0;i<r.length;i++){const a=r[i];if(!0!==a){const i=this.safeInteger(a,"id");if(void 0!==i&&i===s){const s=this.safeValue(a,"method");if(void 0!==s)return void s.call(this,e,t)}}}}if("market24h"in t||"spot_market24h"in t)return this.handleTicker(e,t);if("trades"in t)return this.handleTrades(e,t);if("kline"in t)return this.handleOHLCV(e,t);if("book"in t)return this.handleOrderBook(e,t);if("orders"in t){const s=this.safeValue(t,"orders",{});this.handleOrders(e,s)}if("accounts"in t||"wallets"in t){const s="accounts"in t?"swap":"spot",i=this.safeValue2(t,"accounts","wallets",[]);this.handleBalance(s,e,i)}}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),t}async subscribePrivate(e,t,s={}){await this.loadMarkets(),await this.authenticate();const i=this.urls.api.ws,r=this.seconds(),a="spot"===e?"wo.subscribe":"aop.subscribe";let n={id:r,method:a,params:[]};n=this.extend(n,s);const o={id:r,messageHash:t};return await this.watch(i,t,n,a,o)}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,s=this.client(t),i=this.seconds(),r="authenticated",a=s.future(r);if(void 0===this.safeValue(s.subscriptions,r)){const e=this.safeInteger(this.options,"expires",120),s=this.seconds()+e,a=this.apiKey+s.toString(),n=this.hmac(this.encode(a),this.encode(this.secret),"sha256"),o={method:"user.auth",params:["API",this.apiKey,n,s],id:i},c={id:i,method:this.handleAuthenticate};this.spawn(this.watch,t,r,o,r,c)}return await a}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/Precise":127}],52:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r,ArrayCacheBySymbolById:a}=e("./base/Cache");t.exports=class extends i.poloniex{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchBalance:!1,watchOHLCV:!1},urls:{api:{ws:"wss://api2.poloniex.com"}},options:{tradesLimit:1e3,symbolsByOrderId:{}}})}handleTickers(e,t){const s=this.safeString(t,0);if(this.safeValue(t,1))return;const i=this.safeValue(t,2),r=this.safeString(i,0),a=this.safeValue(this.options.marketsByNumericId,r);if(void 0===a)return;const n=this.safeString(a,"symbol"),o=this.milliseconds();let c,d,h;const l=this.safeFloat(i,1),u=this.safeFloat(i,4);-1!==u&&(c=l/this.sum(1,u),d=l-c,h=this.sum(l,c)/2);const f={symbol:n,timestamp:o,datetime:this.iso8601(o),high:this.safeFloat(i,8),low:this.safeFloat(i,9),bid:this.safeFloat(i,3),bidVolume:void 0,ask:this.safeFloat(i,2),askVolume:void 0,vwap:void 0,open:c,close:l,last:l,previousClose:void 0,change:d,percentage:100*u,average:h,baseVolume:this.safeFloat(i,6),quoteVolume:this.safeFloat(i,5),info:i};this.tickers[n]=f;const p=s+":"+r;e.resolve(f,p)}async subscribePrivate(e,t){const s="1000",i=this.urls.api.ws;s in this.client(i).subscriptions||this.spawn(this.fetchAndCacheOpenOrders);const r=this.nonce(),a=this.urlencode({nonce:r}),n=this.hmac(this.encode(a),this.encode(this.secret),"sha512"),o={command:"subscribe",channel:s,key:this.apiKey,payload:a,sign:n};return await this.watch(i,e,o,s,t)}async watchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t=this.urls.api.ws,s=this.client(t),i=this.safeValue(s.subscriptions,"1000",{});return this.safeValue(i,"fetchedBalance",!1)||(this.balance=await this.fetchBalance(),i.fetchedBalance=!0),await this.subscribePrivate("balance",i)}async fetchAndCacheOpenOrders(){const e=await this.fetchOpenOrders();let t=this.orders;const s=this.safeValue(this.options,"symbolsByOrderId",{});if(void 0===t){const e=this.safeInteger(this.options,"ordersLimit",1e3);t=new a(e),this.orders=t}for(let i=0;i<e.length;i++){const r=e[i];t.append(r),s[r.id]=r.symbol}this.options.symbolsByOrderId=s}async watchOrders(e,t,s,i={}){this.checkRequiredCredentials(),await this.loadMarkets();let r="orders";if(e){r=r+":"+this.marketId(e)}const a=await this.subscribePrivate(r,{});return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s)}async watchMyTrades(e,t,s,i={}){this.checkRequiredCredentials(),await this.loadMarkets();let r="myTrades";if(e){r=r+":"+this.marketId(e)}const a=await this.subscribePrivate(r,{});return this.newUpdates&&(s=a.getLimit(e,s)),this.filterBySymbolSinceLimit(a,e,t,s)}async watchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i="1002",r=i+":"+this.safeString(s,"numericId"),a=this.urls.api.ws,n={command:"subscribe",channel:i};return await this.watch(a,r,n,i)}async watchTickers(e,t={}){await this.loadMarkets();const s="1002",i=s,r=this.urls.api.ws,a={command:"subscribe",channel:s},n=await this.watch(r,i,a,s);return this.filterByArray(n,"symbol",e)}async loadMarkets(e=!1,t={}){const s=await super.loadMarkets(e,t);let i=this.safeValue(this.options,"marketsByNumericId");if(void 0===i||e){i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],s=this.markets[t];i[this.safeString(s,"numericId")]=s}this.options.marketsByNumericId=i}let r=this.safeValue(this.options,"marketsByNumericId");if(void 0===r||e){r={};const e=Object.keys(this.currencies);for(let t=0;t<e.length;t++){const s=this.currencies[e[t]];r[this.safeString(s,"numericId")]=s}this.options.currenciesByNumericId=r}return s}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeString(r,"numericId"),n="trades:"+a,o=this.urls.api.ws,c={command:"subscribe",channel:a},d=await this.watch(o,n,c,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.safeString(i,"numericId"),a="orderbook:"+r,n=this.urls.api.ws,o={command:"subscribe",channel:r};return(await this.watch(n,a,o,r)).limit(t)}async watchHeartbeat(e={}){await this.loadMarkets();const t=this.urls.api.ws;return await this.watch(t,"1010")}handleHeartbeat(e,t){e.resolve(t,"1010")}handleTrade(e,t,s){const i=this.safeString(t,1),r=this.safeInteger(t,2)?"buy":"sell",a=this.safeFloat(t,3),n=this.safeFloat(t,4),o=this.safeTimestamp(t,5);let c;return void 0!==s&&(c=s.symbol),{info:t,timestamp:o,datetime:this.iso8601(o),symbol:c,id:i,order:void 0,type:void 0,takerOrMaker:void 0,side:r,price:a,amount:n,cost:a*n,fee:void 0}}handleOrderBookAndTrades(e,t){const s=t[0].toString(),i=t[1],a=t[2],n=this.safeValue(this.options.marketsByNumericId,s),o=this.safeString(n,"symbol");let c=0,d=0,h=this.safeValue(this.trades,o);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new r(e),this.trades[o]=h}for(let t=0;t<a.length;t++){const s=a[t];if("i"===s[0]){const e=this.safeValue(s[1],"orderBook",[]),t=["asks","bids"];this.orderbooks[o]=this.orderBook();const r=this.orderbooks[o];for(let s=0;s<e.length;s++){const i=r[t[s]],a=e[s],n=Object.keys(a);for(let e=0;e<n.length;e++){const t=n[e],s=a[t];i.store(parseFloat(t),parseFloat(s))}}r.nonce=i,c=this.sum(c,1)}else if("o"===s[0]){const e=this.orderbooks[o],t=e[s[1]?"bids":"asks"],r=parseFloat(s[2]),a=parseFloat(s[3]);t.store(r,a),c=this.sum(c,1),e.nonce=i}else if("t"===s[0]){const t=this.handleTrade(e,s,n);h.append(t),d=this.sum(d,1)}}if(c){const t="orderbook:"+s,i=this.orderbooks[o];e.resolve(i,t)}if(d){const t="trades:"+s;e.resolve(h,t)}}handleAccountNotifications(e,t){const s=this.safeValue(t,2,[]),i={b:[this.handleBalance],p:[this.handleOrder,this.handleBalance],n:[this.handleOrder,this.handleBalance],o:[this.handleOrder,this.handleBalance],t:[this.handleMyTrade,this.handleOrder,this.handleBalance]};for(let t=0;t<s.length;t++){const r=s[t],a=this.safeString(r,0),n=this.safeValue(i,a);if(Array.isArray(n))for(let t=0;t<n.length;t++){n[t].call(this,e,r)}}}handleBalance(e,t){const s=this.safeValue(e.subscriptions,"1000",{});if(!this.safeValue(s,"fetchedBalance",!1))return;const i=this.safeString(t,0);if("b"===i){if("e"!==this.safeString(t,2))return;const e=this.safeString(t,1),s=this.safeValue(this.options.currenciesByNumericId,e);if(void 0===s)return;const i=s.code,r=this.safeFloat(t,3);this.balance[i].free=this.sum(this.balance[i].free,r),this.balance[i].total=void 0,this.balance=this.safeBalance(this.balance)}else if("o"===i||"p"===i||"t"===i||"n"===i){let e,s;if("o"===i||"p"===i){s=this.safeString(t,1);const e=this.safeString(t,3);if("o"===i&&"f"===e)return}else"t"===i?s=this.safeString(t,6):"n"===i&&(s=this.safeString(t,2));const r=this.safeValue(this.options,"symbolsByOrderId");if(e=this.safeString(r,s),!(e in this.markets))return;const a=this.market(e),n=this.safeValue(this.orders.hashmap,e,{}),o=this.safeValue(n,s),c=a.quote;let d;d="n"===i?o.filled:"o"===i?this.safeFloat(t,5):o.amount;const h=d*o.price,l=a.base,u=d;let f,p;"buy"===o.side?(f=h,p=c):(f=u,p=l);const m=this.amountToPrecision(e,f),g=parseFloat(m);this.balance[p].used="o"===i||"t"===i||"n"===i?this.balance[p].used-g:this.sum(this.balance[p].used,g),this.balance[p].total=void 0,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,"balance")}handleOrder(e,t){let s=this.orders;const i=this.safeInteger(this.options,"ordersLimit",1e3),r=this.safeValue(this.options,"symbolsByOrderId",{});void 0===s&&(s=new a(i),this.orders=s);const n=s.length,o=this.safeString(t,0);let c;if("p"===o){const e=this.safeString(t,1),a=this.safeString(t,2),o=this.safeValue(this.options.marketsByNumericId,a);if(void 0===o)return;c=o.symbol,r[e]=c;const d=this.safeFloat(t,3),h=this.safeFloat(t,4),l=this.safeInteger(t,5)?"buy":"sell",u=this.safeString(t,6);if(n===i){const e=s[0];e.id in r&&delete r[e.id]}s.append({info:t,symbol:c,id:e,clientOrderId:u,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:l,price:d,stopPrice:void 0,amount:h,cost:void 0,average:void 0,filled:void 0,remaining:h,status:"open",fee:void 0,trades:void 0})}else if("n"===o){const e=this.safeString(t,1),a=this.safeValue(this.options.marketsByNumericId,e);if(void 0===a)return;c=a.symbol;const o=this.safeString(t,2),d=this.safeInteger(t,3)?"buy":"sell",h=this.safeFloat(t,4),l=this.safeFloat(t,5),u=this.safeString(t,6),f=this.parse8601(u),p=this.safeFloat(t,7),m=this.safeString(t,8);let g,y;if(void 0!==p&&void 0!==l&&(g=p-l,y=g*h),n===i){const e=s[0];e.id in r&&delete r[e.id]}s.append({info:t,symbol:c,id:o,clientOrderId:m,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:d,price:h,stopPrice:void 0,amount:p,cost:y,average:void 0,filled:g,remaining:l,status:"open",fee:void 0,trades:void 0})}else if("o"===o){const e=this.safeString(t,1),i=this.safeString(t,3);if("c"===i||"k"===i){const t=this.safeString(r,e),i=this.safeValue(s.hashmap,t,{}),a=this.safeValue(i,e);void 0!==a&&(a.status="canceled")}}else if("t"===o){const e=this.parseWsTrade(t),i=this.safeString(e,"order"),a=this.safeString(r,i),n=this.safeValue(s.hashmap,a,{}),o=this.safeValue(n,i);void 0===o.trades&&(o.trades=[]),o.trades.push(e);let c=o.filled;c=void 0===c?e.amount:o.filled+e.amount,void 0!==o.amount&&(o.remaining=Math.max(o.amount-c,0),0===o.remaining&&(o.status="closed")),o.filled=c,o.cost=c*o.price,void 0===o.fee?o.fee={currency:e.fee.currency,cost:e.fee.cost}:o.fee.cost=this.sum(o.fee.cost,e.fee.cost)}const d="orders";e.resolve(s,d);const h=d+":"+c;e.resolve(s,h)}handleMyTrade(e,t){let s=this.myTrades;if(void 0===s){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new a(e)}let i=this.orders;if(void 0===i){const e=this.safeInteger(this.options,"ordersLimit",1e3);i=new a(e),this.orders=i}const r=this.parseWsTrade(t);s.append(r);const n="myTrades";e.resolve(s,n);const o=n+":"+r.symbol;e.resolve(s,o)}parseWsTrade(e){const t=this.orders,s=this.safeString(e,1),i=this.safeFloat(e,2),r=this.safeFloat(e,3),a=this.safeFloat(e,4),n=this.safeString(e,6),o=this.safeFloat(e,7),c=this.safeString(e,8),d=this.safeFloat(e,10),h=this.parse8601(c),l=this.safeValue(this.options,"symbolsByOrderId",{}),u=this.safeString(l,n),f=this.safeValue(t.hashmap,u,{}),p=this.safeValue(f,n),m=this.market(u),g=this.safeString(p,"side");let y;y="buy"===g?m.base:m.quote;const b={cost:o,rate:a,currency:y};return{info:e,timestamp:h,datetime:this.iso8601(h),symbol:u,id:s,order:n,type:"limit",takerOrMaker:void 0,side:g,price:i,amount:r,cost:d,fee:b}}handleMessage(e,t){const s=this.safeString(t,0),i={1e3:this.handleAccountNotifications,1002:this.handleTickers,1010:this.handleHeartbeat},r=this.safeValue(i,s);if(void 0===r){return void 0===this.safeValue(this.options.marketsByNumericId,s)?t:this.handleOrderBookAndTrades(e,t)}r.call(this,e,t)}}},{"./base/Cache":5,ccxt:123}],53:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r}=e("./base/Cache");t.exports=class extends i.ripio{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0},urls:{api:{ws:"wss://api.exchange.ripio.com/ws/v2/consumer/non-persistent/public/default/"}},options:{tradesLimit:1e3,uuid:this.uuid()}})}async watchTrades(e,t,s,i={}){await this.loadMarkets();const r="trades",a=r+"_"+this.market(e).id.toLowerCase(),n=this.urls.api.ws+a+"/"+this.options.uuid,o={name:r,symbol:e,messageHash:a,method:this.handleTrade},c=await this.watch(n,a,void 0,a,o);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,t,s,"timestamp",!0)}handleTrade(e,t,s){const i=this.safeString(t,"payload");if(void 0===i)return t;const a=JSON.parse(this.base64ToString(i)),n=this.safeString(s,"symbol"),o=this.safeString(s,"messageHash"),c=this.market(n),d=this.parseTrade(a,c);let h=this.safeValue(this.trades,n);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new r(e),this.trades[n]=h}h.append(d),e.resolve(h,o)}async watchTicker(e,t={}){await this.loadMarkets();const s="rate",i=s+"_"+this.market(e).id.toLowerCase(),r=this.urls.api.ws+i+"/"+this.options.uuid,a={name:s,symbol:e,messageHash:i,method:this.handleTicker};return await this.watch(r,i,void 0,i,a)}handleTicker(e,t,s){const i=this.safeString(t,"payload");if(void 0===i)return t;const r=JSON.parse(this.base64ToString(i)),a=this.parseTicker(r),n=this.parse8601(this.safeString(t,"publishTime"));a.timestamp=n,a.datetime=this.iso8601(n);const o=a.symbol;this.tickers[o]=a;const c=this.safeString(s,"messageHash");return void 0!==c&&e.resolve(a,c),t}async watchOrderBook(e,t,s={}){await this.loadMarkets();const i="orderbook",r=i+"_"+this.market(e).id.toLowerCase(),a=this.urls.api.ws+r+"/"+this.options.uuid,n=this.client(a),o={name:i,symbol:e,messageHash:r,method:this.handleOrderBook};if(!(r in n.subscriptions)){this.orderbooks[e]=this.orderBook({}),n.subscriptions[r]=o;const t=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),s=this.safeInteger(t,"delay",this.rateLimit);this.delay(s,this.fetchOrderBookSnapshot,n,o)}return(await this.watch(a,r,void 0,r,o)).limit(t)}async fetchOrderBookSnapshot(e,t){const s=this.safeString(t,"symbol"),i=this.safeString(t,"messageHash");try{const t=await this.fetchOrderBook(s),r=this.orderbooks[s],a=r.cache;r.reset(t);for(let t=0;t<a.length;t++){const s=a[t];this.handleOrderBookMessage(e,s,r)}this.orderbooks[s]=r,e.resolve(r,i)}catch(t){e.reject(t,i)}}handleOrderBook(e,t,s){const i=this.safeString(s,"messageHash"),r=this.safeString(s,"symbol"),a=this.safeValue(this.orderbooks,r);return void 0===a||(void 0===a.nonce?a.cache.push(t):(this.handleOrderBookMessage(e,t,a),e.resolve(a,i))),t}handleOrderBookMessage(e,t,s){const i=this.safeString(t,"payload");if(void 0===i)return t;const r=JSON.parse(this.base64ToString(i)),a=this.safeInteger(r,"updated_id");if(a>s.nonce){const e=this.safeValue(r,"sell",[]),i=this.safeValue(r,"buy",[]);this.handleDeltas(s.asks,e,s.nonce),this.handleDeltas(s.bids,i,s.nonce),s.nonce=a;const n=this.parse8601(this.safeString(t,"publishTime"));s.timestamp=n,s.datetime=this.iso8601(n)}return s}handleDelta(e,t){const s=this.safeFloat(t,"price"),i=this.safeFloat(t,"amount");e.store(s,i)}handleDeltas(e,t){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s])}async ack(e,t){await e.send({messageId:t})}handleMessage(e,t){const s=this.safeString(t,"messageId");void 0!==s&&this.spawn(this.ack,e,s);const i=Object.keys(e.subscriptions),r=this.safeString(i,0),a=this.safeValue(e.subscriptions,r,{}),n=this.safeValue(a,"method");return void 0!==n?n.call(this,e,t,a):t}}},{"./base/Cache":5,ccxt:123}],54:[function(e,t,s){"use strict";const i=e("ccxt"),{ArrayCache:r}=e("./base/Cache");t.exports=class extends i.upbit{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0},urls:{api:{ws:"wss://api.upbit.com/websocket/v1"}},options:{tradesLimit:1e3}})}async watchPublic(e,t,s={}){await this.loadMarkets();const i=this.market(e).id,r=this.urls.api.ws;this.options[t]=this.safeValue(this.options,t,{}),this.options[t][e]=!0;const a=Object.keys(this.options[t]),n=this.marketIds(a),o=[{ticket:this.uuid()},{type:t,codes:n}],c=t+":"+i;return await this.watch(r,c,o,c)}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker")}async watchTrades(e,t,s,i={}){const r=await this.watchPublic(e,"trade");return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}async watchOrderBook(e,t,s={}){return(await this.watchPublic(e,"orderbook")).limit(t)}handleTicker(e,t){const s="ticker:"+this.safeString(t,"code"),i=this.parseTicker(t),r=i.symbol;this.tickers[r]=i,e.resolve(i,s)}handleOrderBook(e,t){const s=this.safeString(t,"code"),i=this.safeSymbol(s,void 0,"-"),r=this.safeString(t,"stream_type"),a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeInteger(a,"limit",15);"SNAPSHOT"===r&&(this.orderbooks[i]=this.orderBook({},n));const o=this.orderbooks[i];o.reset({});const c=o.bids,d=o.asks,h=this.safeValue(t,"orderbook_units",[]);for(let e=0;e<h.length;e++){const t=h[e],s=this.safeFloat(t,"ask_price"),i=this.safeFloat(t,"ask_size"),r=this.safeFloat(t,"bid_price"),a=this.safeFloat(t,"bid_size");d.store(s,i),c.store(r,a)}const l=this.safeInteger(t,"timestamp"),u=this.iso8601(l);o.timestamp=l,o.datetime=u;const f="orderbook:"+s;e.resolve(o,f)}handleTrades(e,t){const s=this.parseTrade(t),i=s.symbol;let a=this.safeValue(this.trades,i);if(void 0===a){const e=this.safeInteger(this.options,"tradesLimit",1e3);a=new r(e),this.trades[i]=a}a.append(s);const n="trade:"+this.safeString(t,"code");e.resolve(a,n)}handleMessage(e,t){const s={ticker:this.handleTicker,orderbook:this.handleOrderBook,trade:this.handleTrades},i=this.safeString(t,"type"),r=this.safeValue(s,i);r&&r.call(this,e,t)}}},{"./base/Cache":5,ccxt:123}],55:[function(e,t,s){"use strict";const i=e("ccxt"),{ExchangeError:r}=e("ccxt/js/base/errors"),{ArrayCache:a}=e("./base/Cache");t.exports=class extends i.zb{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0},urls:{api:{ws:"wss://api.{hostname}/websocket"}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3}})}async watchPublic(e,t,s,i={}){await this.loadMarkets();const r=this.market(t),a=r.baseId+r.quoteId+"_"+e,n=this.implodeHostname(this.urls.api.ws),o={event:"addChannel",channel:a},c=this.extend(o,i),d={name:e,symbol:t,marketId:r.id,messageHash:a,method:s};return await this.watch(n,a,c,a,d)}async watchTicker(e,t={}){return await this.watchPublic("ticker",e,this.handleTicker,t)}handleTicker(e,t,s){const i=this.safeString(s,"symbol"),r=this.safeString(t,"channel"),a=this.market(i),n=this.safeValue(t,"ticker");n.date=this.safeValue(t,"date");const o=this.parseTicker(n,a);return o.symbol=i,this.tickers[i]=o,e.resolve(o,r),t}async watchTrades(e,t,s,i={}){const r=await this.watchPublic("trades",e,this.handleTrades,i);return this.newUpdates&&(s=r.getLimit(e,s)),this.filterBySinceLimit(r,t,s,"timestamp",!0)}handleTrades(e,t,s){const i=this.safeValue(t,"channel"),r=this.safeString(s,"symbol"),n=this.market(r),o=this.safeValue(t,"data"),c=this.parseTrades(o,n);let d=this.safeValue(this.trades,r);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a(e)}for(let e=0;e<c.length;e++)d.append(c[e]);this.trades[r]=d,e.resolve(d,i)}async watchOrderBook(e,t,s={}){if(void 0!==t){if(5!==t&&10!==t&&20!==t)throw new r(this.id+" watchOrderBook limit argument must be undefined, 5, 10 or 20")}else t=5;await this.loadMarkets();const i=this.market(e),a="quick_depth",n=i.baseId+i.quoteId+"_"+a,o=this.urls.api.ws+"/"+i.baseId,c={event:"addChannel",channel:n,length:t},d=this.extend(c,s),h={name:a,symbol:e,marketId:i.id,messageHash:n,method:this.handleOrderBook};return(await this.watch(o,n,d,n,h)).limit(t)}handleOrderBook(e,t,s){const i=this.safeString(t,"channel"),r=this.safeInteger(s,"limit"),a=this.safeString(s,"symbol");let n=this.safeValue(this.orderbooks,a);void 0===n&&(n=this.orderBook({},r),this.orderbooks[a]=n);const o=this.safeInteger(t,"lastTime"),c=this.parseOrderBook(t,a,o,"listDown","listUp");n.reset(c),n.symbol=a,e.resolve(n,i)}handleMessage(e,t){if(void 0!==this.safeString(t,"dataType")){const s=this.safeString(t,"channel"),i=this.safeValue(e.subscriptions,s);if(void 0!==i){const s=this.safeValue(i,"method");if(void 0!==s)return s.call(this,e,t,i)}return t}}}},{"./base/Cache":5,ccxt:123,"ccxt/js/base/errors":129}],56:[function(e,t,s){"use strict";const i=e("./ndax.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"zipmex",name:"Zipmex",countries:["AU","SG","TH","ID"],urls:{logo:"https://user-images.githubusercontent.com/1294454/146103275-c39a34d9-68a4-4cd2-b1f1-c684548d311b.jpg",test:void 0,api:{public:"https://apws.zipmex.com:8443/AP",private:"https://apws.zipmex.com:8443/AP",ws:"wss://apws.zipmex.com/WSGateway"},www:"https://zipmex.com/",referral:"https://trade.zipmex.com/global/accounts/sign-up?aff=KLm7HyCsvN",fees:"https://zipmex.com/fee-schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}}})}}},{"./ndax.js":47}],57:[function(e,t,s){(function(s){"use strict";var i=e("object-assign");
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */function r(e,t){if(e===t)return 0;for(var s=e.length,i=t.length,r=0,a=Math.min(s,i);r<a;++r)if(e[r]!==t[r]){s=e[r],i=t[r];break}return s<i?-1:i<s?1:0}function a(e){return s.Buffer&&"function"==typeof s.Buffer.isBuffer?s.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var n=e("util/"),o=Object.prototype.hasOwnProperty,c=Array.prototype.slice,d="foo"===function(){}.name;function h(e){return Object.prototype.toString.call(e)}function l(e){return!a(e)&&("function"==typeof s.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}var u=t.exports=b,f=/\s*function\s+([^\(\s]*)\s*/;function p(e){if(n.isFunction(e)){if(d)return e.name;var t=e.toString().match(f);return t&&t[1]}}function m(e,t){return"string"==typeof e?e.length<t?e:e.slice(0,t):e}function g(e){if(d||!n.isFunction(e))return n.inspect(e);var t=p(e);return"[Function"+(t?": "+t:"")+"]"}function y(e,t,s,i,r){throw new u.AssertionError({message:s,actual:e,expected:t,operator:i,stackStartFunction:r})}function b(e,t){e||y(e,!0,t,"==",u.ok)}function v(e,t,s,i){if(e===t)return!0;if(a(e)&&a(t))return 0===r(e,t);if(n.isDate(e)&&n.isDate(t))return e.getTime()===t.getTime();if(n.isRegExp(e)&&n.isRegExp(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"==typeof e||null!==t&&"object"==typeof t){if(l(e)&&l(t)&&h(e)===h(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===r(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(a(e)!==a(t))return!1;var o=(i=i||{actual:[],expected:[]}).actual.indexOf(e);return-1!==o&&o===i.expected.indexOf(t)||(i.actual.push(e),i.expected.push(t),function(e,t,s,i){if(null==e||null==t)return!1;if(n.isPrimitive(e)||n.isPrimitive(t))return e===t;if(s&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var r=w(e),a=w(t);if(r&&!a||!r&&a)return!1;if(r)return v(e=c.call(e),t=c.call(t),s);var o,d,h=T(e),l=T(t);if(h.length!==l.length)return!1;for(h.sort(),l.sort(),d=h.length-1;d>=0;d--)if(h[d]!==l[d])return!1;for(d=h.length-1;d>=0;d--)if(!v(e[o=h[d]],t[o],s,i))return!1;return!0}(e,t,s,i))}return s?e===t:e==t}function w(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function S(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function k(e,t,s,i){var r;if("function"!=typeof t)throw new TypeError('"block" argument must be a function');"string"==typeof s&&(i=s,s=null),r=function(e){var t;try{e()}catch(e){t=e}return t}(t),i=(s&&s.name?" ("+s.name+").":".")+(i?" "+i:"."),e&&!r&&y(r,s,"Missing expected exception"+i);var a="string"==typeof i,o=!e&&r&&!s;if((!e&&n.isError(r)&&a&&S(r,s)||o)&&y(r,s,"Got unwanted exception"+i),e&&r&&s&&!S(r,s)||!e&&r)throw r}u.AssertionError=function(e){this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=function(e){return m(g(e.actual),128)+" "+e.operator+" "+m(g(e.expected),128)}(this),this.generatedMessage=!0);var t=e.stackStartFunction||y;if(Error.captureStackTrace)Error.captureStackTrace(this,t);else{var s=new Error;if(s.stack){var i=s.stack,r=p(t),a=i.indexOf("\n"+r);if(a>=0){var n=i.indexOf("\n",a+1);i=i.substring(n+1)}this.stack=i}}},n.inherits(u.AssertionError,Error),u.fail=y,u.ok=b,u.equal=function(e,t,s){e!=t&&y(e,t,s,"==",u.equal)},u.notEqual=function(e,t,s){e==t&&y(e,t,s,"!=",u.notEqual)},u.deepEqual=function(e,t,s){v(e,t,!1)||y(e,t,s,"deepEqual",u.deepEqual)},u.deepStrictEqual=function(e,t,s){v(e,t,!0)||y(e,t,s,"deepStrictEqual",u.deepStrictEqual)},u.notDeepEqual=function(e,t,s){v(e,t,!1)&&y(e,t,s,"notDeepEqual",u.notDeepEqual)},u.notDeepStrictEqual=function e(t,s,i){v(t,s,!0)&&y(t,s,i,"notDeepStrictEqual",e)},u.strictEqual=function(e,t,s){e!==t&&y(e,t,s,"===",u.strictEqual)},u.notStrictEqual=function(e,t,s){e===t&&y(e,t,s,"!==",u.notStrictEqual)},u.throws=function(e,t,s){k(!0,e,t,s)},u.doesNotThrow=function(e,t,s){k(!1,e,t,s)},u.ifError=function(e){if(e)throw e},u.strict=i((function e(t,s){t||y(t,!0,s,"==",e)}),u,{equal:u.strictEqual,deepEqual:u.deepStrictEqual,notEqual:u.notStrictEqual,notDeepEqual:u.notDeepStrictEqual}),u.strict.strict=u.strict;var T=Object.keys||function(e){var t=[];for(var s in e)o.call(e,s)&&t.push(s);return t}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"object-assign":75,"util/":60}],58:[function(e,t,s){"function"==typeof Object.create?t.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(e,t){e.super_=t;var s=function(){};s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e}},{}],59:[function(e,t,s){t.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},{}],60:[function(e,t,s){(function(t,i){var r=/%[sdj%]/g;s.format=function(e){if(!y(e)){for(var t=[],s=0;s<arguments.length;s++)t.push(o(arguments[s]));return t.join(" ")}s=1;for(var i=arguments,a=i.length,n=String(e).replace(r,(function(e){if("%%"===e)return"%";if(s>=a)return e;switch(e){case"%s":return String(i[s++]);case"%d":return Number(i[s++]);case"%j":try{return JSON.stringify(i[s++])}catch(e){return"[Circular]"}default:return e}})),c=i[s];s<a;c=i[++s])m(c)||!w(c)?n+=" "+c:n+=" "+o(c);return n},s.deprecate=function(e,r){if(b(i.process))return function(){return s.deprecate(e,r).apply(this,arguments)};if(!0===t.noDeprecation)return e;var a=!1;return function(){if(!a){if(t.throwDeprecation)throw new Error(r);t.traceDeprecation?console.trace(r):console.error(r),a=!0}return e.apply(this,arguments)}};var a,n={};function o(e,t){var i={seen:[],stylize:d};return arguments.length>=3&&(i.depth=arguments[2]),arguments.length>=4&&(i.colors=arguments[3]),p(t)?i.showHidden=t:t&&s._extend(i,t),b(i.showHidden)&&(i.showHidden=!1),b(i.depth)&&(i.depth=2),b(i.colors)&&(i.colors=!1),b(i.customInspect)&&(i.customInspect=!0),i.colors&&(i.stylize=c),h(i,e,i.depth)}function c(e,t){var s=o.styles[t];return s?"["+o.colors[s][0]+"m"+e+"["+o.colors[s][1]+"m":e}function d(e,t){return e}function h(e,t,i){if(e.customInspect&&t&&T(t.inspect)&&t.inspect!==s.inspect&&(!t.constructor||t.constructor.prototype!==t)){var r=t.inspect(i,e);return y(r)||(r=h(e,r,i)),r}var a=function(e,t){if(b(t))return e.stylize("undefined","undefined");if(y(t)){var s="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(s,"string")}if(g(t))return e.stylize(""+t,"number");if(p(t))return e.stylize(""+t,"boolean");if(m(t))return e.stylize("null","null")}(e,t);if(a)return a;var n=Object.keys(t),o=function(e){var t={};return e.forEach((function(e,s){t[e]=!0})),t}(n);if(e.showHidden&&(n=Object.getOwnPropertyNames(t)),k(t)&&(n.indexOf("message")>=0||n.indexOf("description")>=0))return l(t);if(0===n.length){if(T(t)){var c=t.name?": "+t.name:"";return e.stylize("[Function"+c+"]","special")}if(v(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(S(t))return e.stylize(Date.prototype.toString.call(t),"date");if(k(t))return l(t)}var d,w="",O=!1,_=["{","}"];(f(t)&&(O=!0,_=["[","]"]),T(t))&&(w=" [Function"+(t.name?": "+t.name:"")+"]");return v(t)&&(w=" "+RegExp.prototype.toString.call(t)),S(t)&&(w=" "+Date.prototype.toUTCString.call(t)),k(t)&&(w=" "+l(t)),0!==n.length||O&&0!=t.length?i<0?v(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special"):(e.seen.push(t),d=O?function(e,t,s,i,r){for(var a=[],n=0,o=t.length;n<o;++n)I(t,String(n))?a.push(u(e,t,s,i,String(n),!0)):a.push("");return r.forEach((function(r){r.match(/^\d+$/)||a.push(u(e,t,s,i,r,!0))})),a}(e,t,i,o,n):n.map((function(s){return u(e,t,i,o,s,O)})),e.seen.pop(),function(e,t,s){var i=e.reduce((function(e,t){return t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1}),0);if(i>60)return s[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+s[1];return s[0]+t+" "+e.join(", ")+" "+s[1]}(d,w,_)):_[0]+w+_[1]}function l(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,s,i,r,a){var n,o,c;if((c=Object.getOwnPropertyDescriptor(t,r)||{value:t[r]}).get?o=c.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):c.set&&(o=e.stylize("[Setter]","special")),I(i,r)||(n="["+r+"]"),o||(e.seen.indexOf(c.value)<0?(o=m(s)?h(e,c.value,null):h(e,c.value,s-1)).indexOf("\n")>-1&&(o=a?o.split("\n").map((function(e){return"  "+e})).join("\n").substr(2):"\n"+o.split("\n").map((function(e){return"   "+e})).join("\n")):o=e.stylize("[Circular]","special")),b(n)){if(a&&r.match(/^\d+$/))return o;(n=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(n=n.substr(1,n.length-2),n=e.stylize(n,"name")):(n=n.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),n=e.stylize(n,"string"))}return n+": "+o}function f(e){return Array.isArray(e)}function p(e){return"boolean"==typeof e}function m(e){return null===e}function g(e){return"number"==typeof e}function y(e){return"string"==typeof e}function b(e){return void 0===e}function v(e){return w(e)&&"[object RegExp]"===O(e)}function w(e){return"object"==typeof e&&null!==e}function S(e){return w(e)&&"[object Date]"===O(e)}function k(e){return w(e)&&("[object Error]"===O(e)||e instanceof Error)}function T(e){return"function"==typeof e}function O(e){return Object.prototype.toString.call(e)}function _(e){return e<10?"0"+e.toString(10):e.toString(10)}s.debuglog=function(e){if(b(a)&&(a=t.env.NODE_DEBUG||""),e=e.toUpperCase(),!n[e])if(new RegExp("\\b"+e+"\\b","i").test(a)){var i=t.pid;n[e]=function(){var t=s.format.apply(s,arguments);console.error("%s %d: %s",e,i,t)}}else n[e]=function(){};return n[e]},s.inspect=o,o.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},o.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},s.isArray=f,s.isBoolean=p,s.isNull=m,s.isNullOrUndefined=function(e){return null==e},s.isNumber=g,s.isString=y,s.isSymbol=function(e){return"symbol"==typeof e},s.isUndefined=b,s.isRegExp=v,s.isObject=w,s.isDate=S,s.isError=k,s.isFunction=T,s.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},s.isBuffer=e("./support/isBuffer");var x=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function M(){var e=new Date,t=[_(e.getHours()),_(e.getMinutes()),_(e.getSeconds())].join(":");return[e.getDate(),x[e.getMonth()],t].join(" ")}function I(e,t){return Object.prototype.hasOwnProperty.call(e,t)}s.log=function(){console.log("%s - %s",M(),s.format.apply(s,arguments))},s.inherits=e("inherits"),s._extend=function(e,t){if(!t||!w(t))return e;for(var s=Object.keys(t),i=s.length;i--;)e[s[i]]=t[s[i]];return e}}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./support/isBuffer":59,_process:88,inherits:58}],61:[function(e,t,s){"use strict";s.byteLength=function(e){var t=d(e),s=t[0],i=t[1];return 3*(s+i)/4-i},s.toByteArray=function(e){var t,s,i=d(e),n=i[0],o=i[1],c=new a(function(e,t,s){return 3*(t+s)/4-s}(0,n,o)),h=0,l=o>0?n-4:n;for(s=0;s<l;s+=4)t=r[e.charCodeAt(s)]<<18|r[e.charCodeAt(s+1)]<<12|r[e.charCodeAt(s+2)]<<6|r[e.charCodeAt(s+3)],c[h++]=t>>16&255,c[h++]=t>>8&255,c[h++]=255&t;2===o&&(t=r[e.charCodeAt(s)]<<2|r[e.charCodeAt(s+1)]>>4,c[h++]=255&t);1===o&&(t=r[e.charCodeAt(s)]<<10|r[e.charCodeAt(s+1)]<<4|r[e.charCodeAt(s+2)]>>2,c[h++]=t>>8&255,c[h++]=255&t);return c},s.fromByteArray=function(e){for(var t,s=e.length,r=s%3,a=[],n=16383,o=0,c=s-r;o<c;o+=n)a.push(h(e,o,o+n>c?c:o+n));1===r?(t=e[s-1],a.push(i[t>>2]+i[t<<4&63]+"==")):2===r&&(t=(e[s-2]<<8)+e[s-1],a.push(i[t>>10]+i[t>>4&63]+i[t<<2&63]+"="));return a.join("")};for(var i=[],r=[],a="undefined"!=typeof Uint8Array?Uint8Array:Array,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,c=n.length;o<c;++o)i[o]=n[o],r[n.charCodeAt(o)]=o;function d(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var s=e.indexOf("=");return-1===s&&(s=t),[s,s===t?0:4-s%4]}function h(e,t,s){for(var r,a,n=[],o=t;o<s;o+=3)r=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),n.push(i[(a=r)>>18&63]+i[a>>12&63]+i[a>>6&63]+i[63&a]);return n.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},{}],62:[function(e,t,s){},{}],63:[function(e,t,s){(function(t,i){"use strict";var r=e("assert"),a=e("pako/lib/zlib/zstream"),n=e("pako/lib/zlib/deflate.js"),o=e("pako/lib/zlib/inflate.js"),c=e("pako/lib/zlib/constants");for(var d in c)s[d]=c[d];s.NONE=0,s.DEFLATE=1,s.INFLATE=2,s.GZIP=3,s.GUNZIP=4,s.DEFLATERAW=5,s.INFLATERAW=6,s.UNZIP=7;function h(e){if("number"!=typeof e||e<s.DEFLATE||e>s.UNZIP)throw new TypeError("Bad argument");this.dictionary=null,this.err=0,this.flush=0,this.init_done=!1,this.level=0,this.memLevel=0,this.mode=e,this.strategy=0,this.windowBits=0,this.write_in_progress=!1,this.pending_close=!1,this.gzip_id_bytes_read=0}h.prototype.close=function(){this.write_in_progress?this.pending_close=!0:(this.pending_close=!1,r(this.init_done,"close before init"),r(this.mode<=s.UNZIP),this.mode===s.DEFLATE||this.mode===s.GZIP||this.mode===s.DEFLATERAW?n.deflateEnd(this.strm):this.mode!==s.INFLATE&&this.mode!==s.GUNZIP&&this.mode!==s.INFLATERAW&&this.mode!==s.UNZIP||o.inflateEnd(this.strm),this.mode=s.NONE,this.dictionary=null)},h.prototype.write=function(e,t,s,i,r,a,n){return this._write(!0,e,t,s,i,r,a,n)},h.prototype.writeSync=function(e,t,s,i,r,a,n){return this._write(!1,e,t,s,i,r,a,n)},h.prototype._write=function(e,a,n,o,c,d,h,l){if(r.equal(arguments.length,8),r(this.init_done,"write before init"),r(this.mode!==s.NONE,"already finalized"),r.equal(!1,this.write_in_progress,"write already in progress"),r.equal(!1,this.pending_close,"close is pending"),this.write_in_progress=!0,r.equal(!1,void 0===a,"must provide flush value"),this.write_in_progress=!0,a!==s.Z_NO_FLUSH&&a!==s.Z_PARTIAL_FLUSH&&a!==s.Z_SYNC_FLUSH&&a!==s.Z_FULL_FLUSH&&a!==s.Z_FINISH&&a!==s.Z_BLOCK)throw new Error("Invalid flush value");if(null==n&&(n=i.alloc(0),c=0,o=0),this.strm.avail_in=c,this.strm.input=n,this.strm.next_in=o,this.strm.avail_out=l,this.strm.output=d,this.strm.next_out=h,this.flush=a,!e)return this._process(),this._checkError()?this._afterSync():void 0;var u=this;return t.nextTick((function(){u._process(),u._after()})),this},h.prototype._afterSync=function(){var e=this.strm.avail_out,t=this.strm.avail_in;return this.write_in_progress=!1,[t,e]},h.prototype._process=function(){var e=null;switch(this.mode){case s.DEFLATE:case s.GZIP:case s.DEFLATERAW:this.err=n.deflate(this.strm,this.flush);break;case s.UNZIP:switch(this.strm.avail_in>0&&(e=this.strm.next_in),this.gzip_id_bytes_read){case 0:if(null===e)break;if(31!==this.strm.input[e]){this.mode=s.INFLATE;break}if(this.gzip_id_bytes_read=1,e++,1===this.strm.avail_in)break;case 1:if(null===e)break;139===this.strm.input[e]?(this.gzip_id_bytes_read=2,this.mode=s.GUNZIP):this.mode=s.INFLATE;break;default:throw new Error("invalid number of gzip magic number bytes read")}case s.INFLATE:case s.GUNZIP:case s.INFLATERAW:for(this.err=o.inflate(this.strm,this.flush),this.err===s.Z_NEED_DICT&&this.dictionary&&(this.err=o.inflateSetDictionary(this.strm,this.dictionary),this.err===s.Z_OK?this.err=o.inflate(this.strm,this.flush):this.err===s.Z_DATA_ERROR&&(this.err=s.Z_NEED_DICT));this.strm.avail_in>0&&this.mode===s.GUNZIP&&this.err===s.Z_STREAM_END&&0!==this.strm.next_in[0];)this.reset(),this.err=o.inflate(this.strm,this.flush);break;default:throw new Error("Unknown mode "+this.mode)}},h.prototype._checkError=function(){switch(this.err){case s.Z_OK:case s.Z_BUF_ERROR:if(0!==this.strm.avail_out&&this.flush===s.Z_FINISH)return this._error("unexpected end of file"),!1;break;case s.Z_STREAM_END:break;case s.Z_NEED_DICT:return null==this.dictionary?this._error("Missing dictionary"):this._error("Bad dictionary"),!1;default:return this._error("Zlib error"),!1}return!0},h.prototype._after=function(){if(this._checkError()){var e=this.strm.avail_out,t=this.strm.avail_in;this.write_in_progress=!1,this.callback(t,e),this.pending_close&&this.close()}},h.prototype._error=function(e){this.strm.msg&&(e=this.strm.msg),this.onerror(e,this.err),this.write_in_progress=!1,this.pending_close&&this.close()},h.prototype.init=function(e,t,i,a,n){r(4===arguments.length||5===arguments.length,"init(windowBits, level, memLevel, strategy, [dictionary])"),r(e>=8&&e<=15,"invalid windowBits"),r(t>=-1&&t<=9,"invalid compression level"),r(i>=1&&i<=9,"invalid memlevel"),r(a===s.Z_FILTERED||a===s.Z_HUFFMAN_ONLY||a===s.Z_RLE||a===s.Z_FIXED||a===s.Z_DEFAULT_STRATEGY,"invalid strategy"),this._init(t,e,i,a,n),this._setDictionary()},h.prototype.params=function(){throw new Error("deflateParams Not supported")},h.prototype.reset=function(){this._reset(),this._setDictionary()},h.prototype._init=function(e,t,i,r,c){switch(this.level=e,this.windowBits=t,this.memLevel=i,this.strategy=r,this.flush=s.Z_NO_FLUSH,this.err=s.Z_OK,this.mode!==s.GZIP&&this.mode!==s.GUNZIP||(this.windowBits+=16),this.mode===s.UNZIP&&(this.windowBits+=32),this.mode!==s.DEFLATERAW&&this.mode!==s.INFLATERAW||(this.windowBits=-1*this.windowBits),this.strm=new a,this.mode){case s.DEFLATE:case s.GZIP:case s.DEFLATERAW:this.err=n.deflateInit2(this.strm,this.level,s.Z_DEFLATED,this.windowBits,this.memLevel,this.strategy);break;case s.INFLATE:case s.GUNZIP:case s.INFLATERAW:case s.UNZIP:this.err=o.inflateInit2(this.strm,this.windowBits);break;default:throw new Error("Unknown mode "+this.mode)}this.err!==s.Z_OK&&this._error("Init error"),this.dictionary=c,this.write_in_progress=!1,this.init_done=!0},h.prototype._setDictionary=function(){if(null!=this.dictionary){switch(this.err=s.Z_OK,this.mode){case s.DEFLATE:case s.DEFLATERAW:this.err=n.deflateSetDictionary(this.strm,this.dictionary)}this.err!==s.Z_OK&&this._error("Failed to set dictionary")}},h.prototype._reset=function(){switch(this.err=s.Z_OK,this.mode){case s.DEFLATE:case s.DEFLATERAW:case s.GZIP:this.err=n.deflateReset(this.strm);break;case s.INFLATE:case s.INFLATERAW:case s.GUNZIP:this.err=o.inflateReset(this.strm)}this.err!==s.Z_OK&&this._error("Failed to reset stream")},s.Zlib=h}).call(this,e("_process"),e("buffer").Buffer)},{_process:88,assert:57,buffer:65,"pako/lib/zlib/constants":78,"pako/lib/zlib/deflate.js":80,"pako/lib/zlib/inflate.js":82,"pako/lib/zlib/zstream":86}],64:[function(e,t,s){(function(t){"use strict";var i=e("buffer").Buffer,r=e("stream").Transform,a=e("./binding"),n=e("util"),o=e("assert").ok,c=e("buffer").kMaxLength,d="Cannot create final Buffer. It would be larger than 0x"+c.toString(16)+" bytes";a.Z_MIN_WINDOWBITS=8,a.Z_MAX_WINDOWBITS=15,a.Z_DEFAULT_WINDOWBITS=15,a.Z_MIN_CHUNK=64,a.Z_MAX_CHUNK=1/0,a.Z_DEFAULT_CHUNK=16384,a.Z_MIN_MEMLEVEL=1,a.Z_MAX_MEMLEVEL=9,a.Z_DEFAULT_MEMLEVEL=8,a.Z_MIN_LEVEL=-1,a.Z_MAX_LEVEL=9,a.Z_DEFAULT_LEVEL=a.Z_DEFAULT_COMPRESSION;for(var h=Object.keys(a),l=0;l<h.length;l++){var u=h[l];u.match(/^Z/)&&Object.defineProperty(s,u,{enumerable:!0,value:a[u],writable:!1})}for(var f={Z_OK:a.Z_OK,Z_STREAM_END:a.Z_STREAM_END,Z_NEED_DICT:a.Z_NEED_DICT,Z_ERRNO:a.Z_ERRNO,Z_STREAM_ERROR:a.Z_STREAM_ERROR,Z_DATA_ERROR:a.Z_DATA_ERROR,Z_MEM_ERROR:a.Z_MEM_ERROR,Z_BUF_ERROR:a.Z_BUF_ERROR,Z_VERSION_ERROR:a.Z_VERSION_ERROR},p=Object.keys(f),m=0;m<p.length;m++){var g=p[m];f[f[g]]=g}function y(e,t,s){var r=[],a=0;function n(){for(var t;null!==(t=e.read());)r.push(t),a+=t.length;e.once("readable",n)}function o(){var t,n=null;a>=c?n=new RangeError(d):t=i.concat(r,a),r=[],e.close(),s(n,t)}e.on("error",(function(t){e.removeListener("end",o),e.removeListener("readable",n),s(t)})),e.on("end",o),e.end(t),n()}function b(e,t){if("string"==typeof t&&(t=i.from(t)),!i.isBuffer(t))throw new TypeError("Not a string or buffer");var s=e._finishFlushFlag;return e._processChunk(t,s)}function v(e){if(!(this instanceof v))return new v(e);M.call(this,e,a.DEFLATE)}function w(e){if(!(this instanceof w))return new w(e);M.call(this,e,a.INFLATE)}function S(e){if(!(this instanceof S))return new S(e);M.call(this,e,a.GZIP)}function k(e){if(!(this instanceof k))return new k(e);M.call(this,e,a.GUNZIP)}function T(e){if(!(this instanceof T))return new T(e);M.call(this,e,a.DEFLATERAW)}function O(e){if(!(this instanceof O))return new O(e);M.call(this,e,a.INFLATERAW)}function _(e){if(!(this instanceof _))return new _(e);M.call(this,e,a.UNZIP)}function x(e){return e===a.Z_NO_FLUSH||e===a.Z_PARTIAL_FLUSH||e===a.Z_SYNC_FLUSH||e===a.Z_FULL_FLUSH||e===a.Z_FINISH||e===a.Z_BLOCK}function M(e,t){var n=this;if(this._opts=e=e||{},this._chunkSize=e.chunkSize||s.Z_DEFAULT_CHUNK,r.call(this,e),e.flush&&!x(e.flush))throw new Error("Invalid flush flag: "+e.flush);if(e.finishFlush&&!x(e.finishFlush))throw new Error("Invalid flush flag: "+e.finishFlush);if(this._flushFlag=e.flush||a.Z_NO_FLUSH,this._finishFlushFlag=void 0!==e.finishFlush?e.finishFlush:a.Z_FINISH,e.chunkSize&&(e.chunkSize<s.Z_MIN_CHUNK||e.chunkSize>s.Z_MAX_CHUNK))throw new Error("Invalid chunk size: "+e.chunkSize);if(e.windowBits&&(e.windowBits<s.Z_MIN_WINDOWBITS||e.windowBits>s.Z_MAX_WINDOWBITS))throw new Error("Invalid windowBits: "+e.windowBits);if(e.level&&(e.level<s.Z_MIN_LEVEL||e.level>s.Z_MAX_LEVEL))throw new Error("Invalid compression level: "+e.level);if(e.memLevel&&(e.memLevel<s.Z_MIN_MEMLEVEL||e.memLevel>s.Z_MAX_MEMLEVEL))throw new Error("Invalid memLevel: "+e.memLevel);if(e.strategy&&e.strategy!=s.Z_FILTERED&&e.strategy!=s.Z_HUFFMAN_ONLY&&e.strategy!=s.Z_RLE&&e.strategy!=s.Z_FIXED&&e.strategy!=s.Z_DEFAULT_STRATEGY)throw new Error("Invalid strategy: "+e.strategy);if(e.dictionary&&!i.isBuffer(e.dictionary))throw new Error("Invalid dictionary: it should be a Buffer instance");this._handle=new a.Zlib(t);var o=this;this._hadError=!1,this._handle.onerror=function(e,t){I(o),o._hadError=!0;var i=new Error(e);i.errno=t,i.code=s.codes[t],o.emit("error",i)};var c=s.Z_DEFAULT_COMPRESSION;"number"==typeof e.level&&(c=e.level);var d=s.Z_DEFAULT_STRATEGY;"number"==typeof e.strategy&&(d=e.strategy),this._handle.init(e.windowBits||s.Z_DEFAULT_WINDOWBITS,c,e.memLevel||s.Z_DEFAULT_MEMLEVEL,d,e.dictionary),this._buffer=i.allocUnsafe(this._chunkSize),this._offset=0,this._level=c,this._strategy=d,this.once("end",this.close),Object.defineProperty(this,"_closed",{get:function(){return!n._handle},configurable:!0,enumerable:!0})}function I(e,s){s&&t.nextTick(s),e._handle&&(e._handle.close(),e._handle=null)}function C(e){e.emit("close")}Object.defineProperty(s,"codes",{enumerable:!0,value:Object.freeze(f),writable:!1}),s.Deflate=v,s.Inflate=w,s.Gzip=S,s.Gunzip=k,s.DeflateRaw=T,s.InflateRaw=O,s.Unzip=_,s.createDeflate=function(e){return new v(e)},s.createInflate=function(e){return new w(e)},s.createDeflateRaw=function(e){return new T(e)},s.createInflateRaw=function(e){return new O(e)},s.createGzip=function(e){return new S(e)},s.createGunzip=function(e){return new k(e)},s.createUnzip=function(e){return new _(e)},s.deflate=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new v(t),e,s)},s.deflateSync=function(e,t){return b(new v(t),e)},s.gzip=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new S(t),e,s)},s.gzipSync=function(e,t){return b(new S(t),e)},s.deflateRaw=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new T(t),e,s)},s.deflateRawSync=function(e,t){return b(new T(t),e)},s.unzip=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new _(t),e,s)},s.unzipSync=function(e,t){return b(new _(t),e)},s.inflate=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new w(t),e,s)},s.inflateSync=function(e,t){return b(new w(t),e)},s.gunzip=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new k(t),e,s)},s.gunzipSync=function(e,t){return b(new k(t),e)},s.inflateRaw=function(e,t,s){return"function"==typeof t&&(s=t,t={}),y(new O(t),e,s)},s.inflateRawSync=function(e,t){return b(new O(t),e)},n.inherits(M,r),M.prototype.params=function(e,i,r){if(e<s.Z_MIN_LEVEL||e>s.Z_MAX_LEVEL)throw new RangeError("Invalid compression level: "+e);if(i!=s.Z_FILTERED&&i!=s.Z_HUFFMAN_ONLY&&i!=s.Z_RLE&&i!=s.Z_FIXED&&i!=s.Z_DEFAULT_STRATEGY)throw new TypeError("Invalid strategy: "+i);if(this._level!==e||this._strategy!==i){var n=this;this.flush(a.Z_SYNC_FLUSH,(function(){o(n._handle,"zlib binding closed"),n._handle.params(e,i),n._hadError||(n._level=e,n._strategy=i,r&&r())}))}else t.nextTick(r)},M.prototype.reset=function(){return o(this._handle,"zlib binding closed"),this._handle.reset()},M.prototype._flush=function(e){this._transform(i.alloc(0),"",e)},M.prototype.flush=function(e,s){var r=this,n=this._writableState;("function"==typeof e||void 0===e&&!s)&&(s=e,e=a.Z_FULL_FLUSH),n.ended?s&&t.nextTick(s):n.ending?s&&this.once("end",s):n.needDrain?s&&this.once("drain",(function(){return r.flush(e,s)})):(this._flushFlag=e,this.write(i.alloc(0),"",s))},M.prototype.close=function(e){I(this,e),t.nextTick(C,this)},M.prototype._transform=function(e,t,s){var r,n=this._writableState,o=(n.ending||n.ended)&&(!e||n.length===e.length);return null===e||i.isBuffer(e)?this._handle?(o?r=this._finishFlushFlag:(r=this._flushFlag,e.length>=n.length&&(this._flushFlag=this._opts.flush||a.Z_NO_FLUSH)),void this._processChunk(e,r,s)):s(new Error("zlib binding closed")):s(new Error("invalid input"))},M.prototype._processChunk=function(e,t,s){var r=e&&e.length,a=this._chunkSize-this._offset,n=0,h=this,l="function"==typeof s;if(!l){var u,f=[],p=0;this.on("error",(function(e){u=e})),o(this._handle,"zlib binding closed");do{var m=this._handle.writeSync(t,e,n,r,this._buffer,this._offset,a)}while(!this._hadError&&b(m[0],m[1]));if(this._hadError)throw u;if(p>=c)throw I(this),new RangeError(d);var g=i.concat(f,p);return I(this),g}o(this._handle,"zlib binding closed");var y=this._handle.write(t,e,n,r,this._buffer,this._offset,a);function b(c,d){if(this&&(this.buffer=null,this.callback=null),!h._hadError){var u=a-d;if(o(u>=0,"have should not go down"),u>0){var m=h._buffer.slice(h._offset,h._offset+u);h._offset+=u,l?h.push(m):(f.push(m),p+=m.length)}if((0===d||h._offset>=h._chunkSize)&&(a=h._chunkSize,h._offset=0,h._buffer=i.allocUnsafe(h._chunkSize)),0===d){if(n+=r-c,r=c,!l)return!0;var g=h._handle.write(t,e,n,r,h._buffer,h._offset,h._chunkSize);return g.callback=b,void(g.buffer=e)}if(!l)return!1;s()}}y.buffer=e,y.callback=b},n.inherits(v,M),n.inherits(w,M),n.inherits(S,M),n.inherits(k,M),n.inherits(T,M),n.inherits(O,M),n.inherits(_,M)}).call(this,e("_process"))},{"./binding":63,_process:88,assert:57,buffer:65,stream:108,util:120}],65:[function(e,t,s){(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
"use strict";var i=e("base64-js"),r=e("ieee754"),a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;s.Buffer=t,s.SlowBuffer=function(e){+e!=e&&(e=0);return t.alloc(+e)},s.INSPECT_MAX_BYTES=50;var n=2147483647;function o(e){if(e>n)throw new RangeError('The value "'+e+'" is invalid for option "size"');var s=new Uint8Array(e);return Object.setPrototypeOf(s,t.prototype),s}function t(e,t,s){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return c(e,t,s)}function c(e,s,i){if("string"==typeof e)return function(e,s){"string"==typeof s&&""!==s||(s="utf8");if(!t.isEncoding(s))throw new TypeError("Unknown encoding: "+s);var i=0|f(e,s),r=o(i),a=r.write(e,s);a!==i&&(r=r.slice(0,a));return r}(e,s);if(ArrayBuffer.isView(e))return l(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(G(e,ArrayBuffer)||e&&G(e.buffer,ArrayBuffer))return function(e,s,i){if(s<0||e.byteLength<s)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<s+(i||0))throw new RangeError('"length" is outside of buffer bounds');var r;r=void 0===s&&void 0===i?new Uint8Array(e):void 0===i?new Uint8Array(e,s):new Uint8Array(e,s,i);return Object.setPrototypeOf(r,t.prototype),r}(e,s,i);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return t.from(r,s,i);var a=function(e){if(t.isBuffer(e)){var s=0|u(e.length),i=o(s);return 0===i.length||e.copy(i,0,0,s),i}if(void 0!==e.length)return"number"!=typeof e.length||q(e.length)?o(0):l(e);if("Buffer"===e.type&&Array.isArray(e.data))return l(e.data)}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return t.from(e[Symbol.toPrimitive]("string"),s,i);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function d(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return d(e),o(e<0?0:0|u(e))}function l(e){for(var t=e.length<0?0:0|u(e.length),s=o(t),i=0;i<t;i+=1)s[i]=255&e[i];return s}function u(e){if(e>=n)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n.toString(16)+" bytes");return 0|e}function f(e,s){if(t.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||G(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var i=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===i)return 0;for(var a=!1;;)switch(s){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":return R(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return D(e).length;default:if(a)return r?-1:R(e).length;s=(""+s).toLowerCase(),a=!0}}function p(e,t,s){var i=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===s||s>this.length)&&(s=this.length),s<=0)return"";if((s>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return C(this,t,s);case"utf8":case"utf-8":return _(this,t,s);case"ascii":return M(this,t,s);case"latin1":case"binary":return I(this,t,s);case"base64":return O(this,t,s);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,s);default:if(i)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),i=!0}}function m(e,t,s){var i=e[t];e[t]=e[s],e[s]=i}function g(e,s,i,r,a){if(0===e.length)return-1;if("string"==typeof i?(r=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),q(i=+i)&&(i=a?0:e.length-1),i<0&&(i=e.length+i),i>=e.length){if(a)return-1;i=e.length-1}else if(i<0){if(!a)return-1;i=0}if("string"==typeof s&&(s=t.from(s,r)),t.isBuffer(s))return 0===s.length?-1:y(e,s,i,r,a);if("number"==typeof s)return s&=255,"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,s,i):Uint8Array.prototype.lastIndexOf.call(e,s,i):y(e,[s],i,r,a);throw new TypeError("val must be string, number or Buffer")}function y(e,t,s,i,r){var a,n=1,o=e.length,c=t.length;if(void 0!==i&&("ucs2"===(i=String(i).toLowerCase())||"ucs-2"===i||"utf16le"===i||"utf-16le"===i)){if(e.length<2||t.length<2)return-1;n=2,o/=2,c/=2,s/=2}function d(e,t){return 1===n?e[t]:e.readUInt16BE(t*n)}if(r){var h=-1;for(a=s;a<o;a++)if(d(e,a)===d(t,-1===h?0:a-h)){if(-1===h&&(h=a),a-h+1===c)return h*n}else-1!==h&&(a-=a-h),h=-1}else for(s+c>o&&(s=o-c),a=s;a>=0;a--){for(var l=!0,u=0;u<c;u++)if(d(e,a+u)!==d(t,u)){l=!1;break}if(l)return a}return-1}function b(e,t,s,i){s=Number(s)||0;var r=e.length-s;i?(i=Number(i))>r&&(i=r):i=r;var a=t.length;i>a/2&&(i=a/2);for(var n=0;n<i;++n){var o=parseInt(t.substr(2*n,2),16);if(q(o))return n;e[s+n]=o}return n}function v(e,t,s,i){return F(R(t,e.length-s),e,s,i)}function w(e,t,s,i){return F(function(e){for(var t=[],s=0;s<e.length;++s)t.push(255&e.charCodeAt(s));return t}(t),e,s,i)}function S(e,t,s,i){return w(e,t,s,i)}function k(e,t,s,i){return F(D(t),e,s,i)}function T(e,t,s,i){return F(function(e,t){for(var s,i,r,a=[],n=0;n<e.length&&!((t-=2)<0);++n)i=(s=e.charCodeAt(n))>>8,r=s%256,a.push(r),a.push(i);return a}(t,e.length-s),e,s,i)}function O(e,t,s){return 0===t&&s===e.length?i.fromByteArray(e):i.fromByteArray(e.slice(t,s))}function _(e,t,s){s=Math.min(e.length,s);for(var i=[],r=t;r<s;){var a,n,o,c,d=e[r],h=null,l=d>239?4:d>223?3:d>191?2:1;if(r+l<=s)switch(l){case 1:d<128&&(h=d);break;case 2:128==(192&(a=e[r+1]))&&(c=(31&d)<<6|63&a)>127&&(h=c);break;case 3:a=e[r+1],n=e[r+2],128==(192&a)&&128==(192&n)&&(c=(15&d)<<12|(63&a)<<6|63&n)>2047&&(c<55296||c>57343)&&(h=c);break;case 4:a=e[r+1],n=e[r+2],o=e[r+3],128==(192&a)&&128==(192&n)&&128==(192&o)&&(c=(15&d)<<18|(63&a)<<12|(63&n)<<6|63&o)>65535&&c<1114112&&(h=c)}null===h?(h=65533,l=1):h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h),r+=l}return function(e){var t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);var s="",i=0;for(;i<t;)s+=String.fromCharCode.apply(String,e.slice(i,i+=x));return s}(i)}s.kMaxLength=n,t.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),t.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(t.prototype,"parent",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.buffer}}),Object.defineProperty(t.prototype,"offset",{enumerable:!0,get:function(){if(t.isBuffer(this))return this.byteOffset}}),"undefined"!=typeof Symbol&&null!=Symbol.species&&t[Symbol.species]===t&&Object.defineProperty(t,Symbol.species,{value:null,configurable:!0,enumerable:!1,writable:!1}),t.poolSize=8192,t.from=function(e,t,s){return c(e,t,s)},Object.setPrototypeOf(t.prototype,Uint8Array.prototype),Object.setPrototypeOf(t,Uint8Array),t.alloc=function(e,t,s){return function(e,t,s){return d(e),e<=0?o(e):void 0!==t?"string"==typeof s?o(e).fill(t,s):o(e).fill(t):o(e)}(e,t,s)},t.allocUnsafe=function(e){return h(e)},t.allocUnsafeSlow=function(e){return h(e)},t.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==t.prototype},t.compare=function(e,s){if(G(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),G(s,Uint8Array)&&(s=t.from(s,s.offset,s.byteLength)),!t.isBuffer(e)||!t.isBuffer(s))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===s)return 0;for(var i=e.length,r=s.length,a=0,n=Math.min(i,r);a<n;++a)if(e[a]!==s[a]){i=e[a],r=s[a];break}return i<r?-1:r<i?1:0},t.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},t.concat=function(e,s){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return t.alloc(0);var i;if(void 0===s)for(s=0,i=0;i<e.length;++i)s+=e[i].length;var r=t.allocUnsafe(s),a=0;for(i=0;i<e.length;++i){var n=e[i];if(G(n,Uint8Array)&&(n=t.from(n)),!t.isBuffer(n))throw new TypeError('"list" argument must be an Array of Buffers');n.copy(r,a),a+=n.length}return r},t.byteLength=f,t.prototype._isBuffer=!0,t.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)m(this,t,t+1);return this},t.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)m(this,t,t+3),m(this,t+1,t+2);return this},t.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)m(this,t,t+7),m(this,t+1,t+6),m(this,t+2,t+5),m(this,t+3,t+4);return this},t.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?_(this,0,e):p.apply(this,arguments)},t.prototype.toLocaleString=t.prototype.toString,t.prototype.equals=function(e){if(!t.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===t.compare(this,e)},t.prototype.inspect=function(){var e="",t=s.INSPECT_MAX_BYTES;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},a&&(t.prototype[a]=t.prototype.inspect),t.prototype.compare=function(e,s,i,r,a){if(G(e,Uint8Array)&&(e=t.from(e,e.offset,e.byteLength)),!t.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===s&&(s=0),void 0===i&&(i=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),s<0||i>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&s>=i)return 0;if(r>=a)return-1;if(s>=i)return 1;if(this===e)return 0;for(var n=(a>>>=0)-(r>>>=0),o=(i>>>=0)-(s>>>=0),c=Math.min(n,o),d=this.slice(r,a),h=e.slice(s,i),l=0;l<c;++l)if(d[l]!==h[l]){n=d[l],o=h[l];break}return n<o?-1:o<n?1:0},t.prototype.includes=function(e,t,s){return-1!==this.indexOf(e,t,s)},t.prototype.indexOf=function(e,t,s){return g(this,e,t,s,!0)},t.prototype.lastIndexOf=function(e,t,s){return g(this,e,t,s,!1)},t.prototype.write=function(e,t,s,i){if(void 0===t)i="utf8",s=this.length,t=0;else if(void 0===s&&"string"==typeof t)i=t,s=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(s)?(s>>>=0,void 0===i&&(i="utf8")):(i=s,s=void 0)}var r=this.length-t;if((void 0===s||s>r)&&(s=r),e.length>0&&(s<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var a=!1;;)switch(i){case"hex":return b(this,e,t,s);case"utf8":case"utf-8":return v(this,e,t,s);case"ascii":return w(this,e,t,s);case"latin1":case"binary":return S(this,e,t,s);case"base64":return k(this,e,t,s);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,e,t,s);default:if(a)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),a=!0}},t.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var x=4096;function M(e,t,s){var i="";s=Math.min(e.length,s);for(var r=t;r<s;++r)i+=String.fromCharCode(127&e[r]);return i}function I(e,t,s){var i="";s=Math.min(e.length,s);for(var r=t;r<s;++r)i+=String.fromCharCode(e[r]);return i}function C(e,t,s){var i=e.length;(!t||t<0)&&(t=0),(!s||s<0||s>i)&&(s=i);for(var r="",a=t;a<s;++a)r+=H[e[a]];return r}function P(e,t,s){for(var i=e.slice(t,s),r="",a=0;a<i.length;a+=2)r+=String.fromCharCode(i[a]+256*i[a+1]);return r}function A(e,t,s){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>s)throw new RangeError("Trying to access beyond buffer length")}function N(e,s,i,r,a,n){if(!t.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(s>a||s<n)throw new RangeError('"value" argument is out of bounds');if(i+r>e.length)throw new RangeError("Index out of range")}function V(e,t,s,i,r,a){if(s+i>e.length)throw new RangeError("Index out of range");if(s<0)throw new RangeError("Index out of range")}function B(e,t,s,i,a){return t=+t,s>>>=0,a||V(e,0,s,4),r.write(e,t,s,i,23,4),s+4}function E(e,t,s,i,a){return t=+t,s>>>=0,a||V(e,0,s,8),r.write(e,t,s,i,52,8),s+8}t.prototype.slice=function(e,s){var i=this.length;(e=~~e)<0?(e+=i)<0&&(e=0):e>i&&(e=i),(s=void 0===s?i:~~s)<0?(s+=i)<0&&(s=0):s>i&&(s=i),s<e&&(s=e);var r=this.subarray(e,s);return Object.setPrototypeOf(r,t.prototype),r},t.prototype.readUIntLE=function(e,t,s){e>>>=0,t>>>=0,s||A(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return i},t.prototype.readUIntBE=function(e,t,s){e>>>=0,t>>>=0,s||A(e,t,this.length);for(var i=this[e+--t],r=1;t>0&&(r*=256);)i+=this[e+--t]*r;return i},t.prototype.readUInt8=function(e,t){return e>>>=0,t||A(e,1,this.length),this[e]},t.prototype.readUInt16LE=function(e,t){return e>>>=0,t||A(e,2,this.length),this[e]|this[e+1]<<8},t.prototype.readUInt16BE=function(e,t){return e>>>=0,t||A(e,2,this.length),this[e]<<8|this[e+1]},t.prototype.readUInt32LE=function(e,t){return e>>>=0,t||A(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},t.prototype.readUInt32BE=function(e,t){return e>>>=0,t||A(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},t.prototype.readIntLE=function(e,t,s){e>>>=0,t>>>=0,s||A(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return i>=(r*=128)&&(i-=Math.pow(2,8*t)),i},t.prototype.readIntBE=function(e,t,s){e>>>=0,t>>>=0,s||A(e,t,this.length);for(var i=t,r=1,a=this[e+--i];i>0&&(r*=256);)a+=this[e+--i]*r;return a>=(r*=128)&&(a-=Math.pow(2,8*t)),a},t.prototype.readInt8=function(e,t){return e>>>=0,t||A(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},t.prototype.readInt16LE=function(e,t){e>>>=0,t||A(e,2,this.length);var s=this[e]|this[e+1]<<8;return 32768&s?4294901760|s:s},t.prototype.readInt16BE=function(e,t){e>>>=0,t||A(e,2,this.length);var s=this[e+1]|this[e]<<8;return 32768&s?4294901760|s:s},t.prototype.readInt32LE=function(e,t){return e>>>=0,t||A(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},t.prototype.readInt32BE=function(e,t){return e>>>=0,t||A(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},t.prototype.readFloatLE=function(e,t){return e>>>=0,t||A(e,4,this.length),r.read(this,e,!0,23,4)},t.prototype.readFloatBE=function(e,t){return e>>>=0,t||A(e,4,this.length),r.read(this,e,!1,23,4)},t.prototype.readDoubleLE=function(e,t){return e>>>=0,t||A(e,8,this.length),r.read(this,e,!0,52,8)},t.prototype.readDoubleBE=function(e,t){return e>>>=0,t||A(e,8,this.length),r.read(this,e,!1,52,8)},t.prototype.writeUIntLE=function(e,t,s,i){(e=+e,t>>>=0,s>>>=0,i)||N(this,e,t,s,Math.pow(2,8*s)-1,0);var r=1,a=0;for(this[t]=255&e;++a<s&&(r*=256);)this[t+a]=e/r&255;return t+s},t.prototype.writeUIntBE=function(e,t,s,i){(e=+e,t>>>=0,s>>>=0,i)||N(this,e,t,s,Math.pow(2,8*s)-1,0);var r=s-1,a=1;for(this[t+r]=255&e;--r>=0&&(a*=256);)this[t+r]=e/a&255;return t+s},t.prototype.writeUInt8=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,1,255,0),this[t]=255&e,t+1},t.prototype.writeUInt16LE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeUInt16BE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeUInt32LE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},t.prototype.writeUInt32BE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeIntLE=function(e,t,s,i){if(e=+e,t>>>=0,!i){var r=Math.pow(2,8*s-1);N(this,e,t,s,r-1,-r)}var a=0,n=1,o=0;for(this[t]=255&e;++a<s&&(n*=256);)e<0&&0===o&&0!==this[t+a-1]&&(o=1),this[t+a]=(e/n>>0)-o&255;return t+s},t.prototype.writeIntBE=function(e,t,s,i){if(e=+e,t>>>=0,!i){var r=Math.pow(2,8*s-1);N(this,e,t,s,r-1,-r)}var a=s-1,n=1,o=0;for(this[t+a]=255&e;--a>=0&&(n*=256);)e<0&&0===o&&0!==this[t+a+1]&&(o=1),this[t+a]=(e/n>>0)-o&255;return t+s},t.prototype.writeInt8=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},t.prototype.writeInt16LE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},t.prototype.writeInt16BE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},t.prototype.writeInt32LE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},t.prototype.writeInt32BE=function(e,t,s){return e=+e,t>>>=0,s||N(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},t.prototype.writeFloatLE=function(e,t,s){return B(this,e,t,!0,s)},t.prototype.writeFloatBE=function(e,t,s){return B(this,e,t,!1,s)},t.prototype.writeDoubleLE=function(e,t,s){return E(this,e,t,!0,s)},t.prototype.writeDoubleBE=function(e,t,s){return E(this,e,t,!1,s)},t.prototype.copy=function(e,s,i,r){if(!t.isBuffer(e))throw new TypeError("argument should be a Buffer");if(i||(i=0),r||0===r||(r=this.length),s>=e.length&&(s=e.length),s||(s=0),r>0&&r<i&&(r=i),r===i)return 0;if(0===e.length||0===this.length)return 0;if(s<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-s<r-i&&(r=e.length-s+i);var a=r-i;if(this===e&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(s,i,r);else if(this===e&&i<s&&s<r)for(var n=a-1;n>=0;--n)e[n+s]=this[n+i];else Uint8Array.prototype.set.call(e,this.subarray(i,r),s);return a},t.prototype.fill=function(e,s,i,r){if("string"==typeof e){if("string"==typeof s?(r=s,s=0,i=this.length):"string"==typeof i&&(r=i,i=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!t.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){var a=e.charCodeAt(0);("utf8"===r&&a<128||"latin1"===r)&&(e=a)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(s<0||this.length<s||this.length<i)throw new RangeError("Out of range index");if(i<=s)return this;var n;if(s>>>=0,i=void 0===i?this.length:i>>>0,e||(e=0),"number"==typeof e)for(n=s;n<i;++n)this[n]=e;else{var o=t.isBuffer(e)?e:t.from(e,r),c=o.length;if(0===c)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(n=0;n<i-s;++n)this[n+s]=o[n%c]}return this};var L=/[^+/0-9A-Za-z-_]/g;function R(e,t){var s;t=t||1/0;for(var i=e.length,r=null,a=[],n=0;n<i;++n){if((s=e.charCodeAt(n))>55295&&s<57344){if(!r){if(s>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(n+1===i){(t-=3)>-1&&a.push(239,191,189);continue}r=s;continue}if(s<56320){(t-=3)>-1&&a.push(239,191,189),r=s;continue}s=65536+(r-55296<<10|s-56320)}else r&&(t-=3)>-1&&a.push(239,191,189);if(r=null,s<128){if((t-=1)<0)break;a.push(s)}else if(s<2048){if((t-=2)<0)break;a.push(s>>6|192,63&s|128)}else if(s<65536){if((t-=3)<0)break;a.push(s>>12|224,s>>6&63|128,63&s|128)}else{if(!(s<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(s>>18|240,s>>12&63|128,s>>6&63|128,63&s|128)}}return a}function D(e){return i.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(L,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function F(e,t,s,i){for(var r=0;r<i&&!(r+s>=t.length||r>=e.length);++r)t[r+s]=e[r];return r}function G(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function q(e){return e!=e}var H=function(){for(var e="0123456789abcdef",t=new Array(256),s=0;s<16;++s)for(var i=16*s,r=0;r<16;++r)t[i+r]=e[s]+e[r];return t}()}).call(this,e("buffer").Buffer)},{"base64-js":61,buffer:65,ieee754:71}],66:[function(e,t,s){t.exports={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},{}],67:[function(e,t,s){t.exports={O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:512,O_EXCL:2048,O_NOCTTY:131072,O_TRUNC:1024,O_APPEND:8,O_DIRECTORY:1048576,O_NOFOLLOW:256,O_SYNC:128,O_SYMLINK:2097152,O_NONBLOCK:4,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,E2BIG:7,EACCES:13,EADDRINUSE:48,EADDRNOTAVAIL:49,EAFNOSUPPORT:47,EAGAIN:35,EALREADY:37,EBADF:9,EBADMSG:94,EBUSY:16,ECANCELED:89,ECHILD:10,ECONNABORTED:53,ECONNREFUSED:61,ECONNRESET:54,EDEADLK:11,EDESTADDRREQ:39,EDOM:33,EDQUOT:69,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:65,EIDRM:90,EILSEQ:92,EINPROGRESS:36,EINTR:4,EINVAL:22,EIO:5,EISCONN:56,EISDIR:21,ELOOP:62,EMFILE:24,EMLINK:31,EMSGSIZE:40,EMULTIHOP:95,ENAMETOOLONG:63,ENETDOWN:50,ENETRESET:52,ENETUNREACH:51,ENFILE:23,ENOBUFS:55,ENODATA:96,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:77,ENOLINK:97,ENOMEM:12,ENOMSG:91,ENOPROTOOPT:42,ENOSPC:28,ENOSR:98,ENOSTR:99,ENOSYS:78,ENOTCONN:57,ENOTDIR:20,ENOTEMPTY:66,ENOTSOCK:38,ENOTSUP:45,ENOTTY:25,ENXIO:6,EOPNOTSUPP:102,EOVERFLOW:84,EPERM:1,EPIPE:32,EPROTO:100,EPROTONOSUPPORT:43,EPROTOTYPE:41,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:70,ETIME:101,ETIMEDOUT:60,ETXTBSY:26,EWOULDBLOCK:35,EXDEV:18,SIGHUP:1,SIGINT:2,SIGQUIT:3,SIGILL:4,SIGTRAP:5,SIGABRT:6,SIGIOT:6,SIGBUS:10,SIGFPE:8,SIGKILL:9,SIGUSR1:30,SIGSEGV:11,SIGUSR2:31,SIGPIPE:13,SIGALRM:14,SIGTERM:15,SIGCHLD:20,SIGCONT:19,SIGSTOP:17,SIGTSTP:18,SIGTTIN:21,SIGTTOU:22,SIGURG:16,SIGXCPU:24,SIGXFSZ:25,SIGVTALRM:26,SIGPROF:27,SIGWINCH:28,SIGIO:23,SIGSYS:12,SSL_OP_ALL:2147486719,SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION:262144,SSL_OP_CIPHER_SERVER_PREFERENCE:4194304,SSL_OP_CISCO_ANYCONNECT:32768,SSL_OP_COOKIE_EXCHANGE:8192,SSL_OP_CRYPTOPRO_TLSEXT_BUG:2147483648,SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS:2048,SSL_OP_EPHEMERAL_RSA:0,SSL_OP_LEGACY_SERVER_CONNECT:4,SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER:32,SSL_OP_MICROSOFT_SESS_ID_BUG:1,SSL_OP_MSIE_SSLV2_RSA_PADDING:0,SSL_OP_NETSCAPE_CA_DN_BUG:536870912,SSL_OP_NETSCAPE_CHALLENGE_BUG:2,SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG:1073741824,SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG:8,SSL_OP_NO_COMPRESSION:131072,SSL_OP_NO_QUERY_MTU:4096,SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION:65536,SSL_OP_NO_SSLv2:16777216,SSL_OP_NO_SSLv3:33554432,SSL_OP_NO_TICKET:16384,SSL_OP_NO_TLSv1:67108864,SSL_OP_NO_TLSv1_1:268435456,SSL_OP_NO_TLSv1_2:134217728,SSL_OP_PKCS1_CHECK_1:0,SSL_OP_PKCS1_CHECK_2:0,SSL_OP_SINGLE_DH_USE:1048576,SSL_OP_SINGLE_ECDH_USE:524288,SSL_OP_SSLEAY_080_CLIENT_DH_BUG:128,SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG:0,SSL_OP_TLS_BLOCK_PADDING_BUG:512,SSL_OP_TLS_D5_BUG:256,SSL_OP_TLS_ROLLBACK_BUG:8388608,ENGINE_METHOD_DSA:2,ENGINE_METHOD_DH:4,ENGINE_METHOD_RAND:8,ENGINE_METHOD_ECDH:16,ENGINE_METHOD_ECDSA:32,ENGINE_METHOD_CIPHERS:64,ENGINE_METHOD_DIGESTS:128,ENGINE_METHOD_STORE:256,ENGINE_METHOD_PKEY_METHS:512,ENGINE_METHOD_PKEY_ASN1_METHS:1024,ENGINE_METHOD_ALL:65535,ENGINE_METHOD_NONE:0,DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_UDP_REUSEADDR:4}},{}],68:[function(e,t,s){(function(e){function t(e){return Object.prototype.toString.call(e)}s.isArray=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===t(e)},s.isBoolean=function(e){return"boolean"==typeof e},s.isNull=function(e){return null===e},s.isNullOrUndefined=function(e){return null==e},s.isNumber=function(e){return"number"==typeof e},s.isString=function(e){return"string"==typeof e},s.isSymbol=function(e){return"symbol"==typeof e},s.isUndefined=function(e){return void 0===e},s.isRegExp=function(e){return"[object RegExp]"===t(e)},s.isObject=function(e){return"object"==typeof e&&null!==e},s.isDate=function(e){return"[object Date]"===t(e)},s.isError=function(e){return"[object Error]"===t(e)||e instanceof Error},s.isFunction=function(e){return"function"==typeof e},s.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},s.isBuffer=e.isBuffer}).call(this,{isBuffer:e("../../is-buffer/index.js")})},{"../../is-buffer/index.js":73}],69:[function(e,t,s){function i(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"==typeof e}function a(e){return"object"==typeof e&&null!==e}function n(e){return void 0===e}t.exports=i,i.EventEmitter=i,i.prototype._events=void 0,i.prototype._maxListeners=void 0,i.defaultMaxListeners=10,i.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},i.prototype.emit=function(e){var t,s,i,o,c,d;if(this._events||(this._events={}),"error"===e&&(!this._events.error||a(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var h=new Error('Uncaught, unspecified "error" event. ('+t+")");throw h.context=t,h}if(n(s=this._events[e]))return!1;if(r(s))switch(arguments.length){case 1:s.call(this);break;case 2:s.call(this,arguments[1]);break;case 3:s.call(this,arguments[1],arguments[2]);break;default:o=Array.prototype.slice.call(arguments,1),s.apply(this,o)}else if(a(s))for(o=Array.prototype.slice.call(arguments,1),i=(d=s.slice()).length,c=0;c<i;c++)d[c].apply(this,o);return!0},i.prototype.addListener=function(e,t){var s;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?a(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,a(this._events[e])&&!this._events[e].warned&&(s=n(this._maxListeners)?i.defaultMaxListeners:this._maxListeners)&&s>0&&this._events[e].length>s&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace()),this},i.prototype.on=i.prototype.addListener,i.prototype.once=function(e,t){if(!r(t))throw TypeError("listener must be a function");var s=!1;function i(){this.removeListener(e,i),s||(s=!0,t.apply(this,arguments))}return i.listener=t,this.on(e,i),this},i.prototype.removeListener=function(e,t){var s,i,n,o;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=(s=this._events[e]).length,i=-1,s===t||r(s.listener)&&s.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(a(s)){for(o=n;o-- >0;)if(s[o]===t||s[o].listener&&s[o].listener===t){i=o;break}if(i<0)return this;1===s.length?(s.length=0,delete this._events[e]):s.splice(i,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},i.prototype.removeAllListeners=function(e){var t,s;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(r(s=this._events[e]))this.removeListener(e,s);else if(s)for(;s.length;)this.removeListener(e,s[s.length-1]);return delete this._events[e],this},i.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},i.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},i.listenerCount=function(e,t){return e.listenerCount(t)}},{}],70:[function(e,t,s){var i=e("http"),r=e("url"),a=t.exports;for(var n in i)i.hasOwnProperty(n)&&(a[n]=i[n]);function o(e){if("string"==typeof e&&(e=r.parse(e)),e.protocol||(e.protocol="https:"),"https:"!==e.protocol)throw new Error('Protocol "'+e.protocol+'" not supported. Expected "https:"');return e}a.request=function(e,t){return e=o(e),i.request.call(this,e,t)},a.get=function(e,t){return e=o(e),i.get.call(this,e,t)}},{http:109,url:115}],71:[function(e,t,s){s.read=function(e,t,s,i,r){var a,n,o=8*r-i-1,c=(1<<o)-1,d=c>>1,h=-7,l=s?r-1:0,u=s?-1:1,f=e[t+l];for(l+=u,a=f&(1<<-h)-1,f>>=-h,h+=o;h>0;a=256*a+e[t+l],l+=u,h-=8);for(n=a&(1<<-h)-1,a>>=-h,h+=i;h>0;n=256*n+e[t+l],l+=u,h-=8);if(0===a)a=1-d;else{if(a===c)return n?NaN:1/0*(f?-1:1);n+=Math.pow(2,i),a-=d}return(f?-1:1)*n*Math.pow(2,a-i)},s.write=function(e,t,s,i,r,a){var n,o,c,d=8*a-r-1,h=(1<<d)-1,l=h>>1,u=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=i?0:a-1,p=i?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,n=h):(n=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-n))<1&&(n--,c*=2),(t+=n+l>=1?u/c:u*Math.pow(2,1-l))*c>=2&&(n++,c/=2),n+l>=h?(o=0,n=h):n+l>=1?(o=(t*c-1)*Math.pow(2,r),n+=l):(o=t*Math.pow(2,l-1)*Math.pow(2,r),n=0));r>=8;e[s+f]=255&o,f+=p,o/=256,r-=8);for(n=n<<r|o,d+=r;d>0;e[s+f]=255&n,f+=p,n/=256,d-=8);e[s+f-p]|=128*m}},{}],72:[function(e,t,s){"function"==typeof Object.create?t.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(e,t){if(t){e.super_=t;var s=function(){};s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e}}},{}],73:[function(e,t,s){function i(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
t.exports=function(e){return null!=e&&(i(e)||function(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&i(e.slice(0,0))}(e)||!!e._isBuffer)}},{}],74:[function(e,t,s){var i={}.toString;t.exports=Array.isArray||function(e){return"[object Array]"==i.call(e)}},{}],75:[function(e,t,s){
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
"use strict";var i=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function n(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}t.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},s=0;s<10;s++)t["_"+String.fromCharCode(s)]=s;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var s,o,c=n(e),d=1;d<arguments.length;d++){for(var h in s=Object(arguments[d]))r.call(s,h)&&(c[h]=s[h]);if(i){o=i(s);for(var l=0;l<o.length;l++)a.call(s,o[l])&&(c[o[l]]=s[o[l]])}}return c}},{}],76:[function(e,t,s){"use strict";var i="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}s.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var s=t.shift();if(s){if("object"!=typeof s)throw new TypeError(s+"must be non-object");for(var i in s)r(s,i)&&(e[i]=s[i])}}return e},s.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var a={arraySet:function(e,t,s,i,r){if(t.subarray&&e.subarray)e.set(t.subarray(s,s+i),r);else for(var a=0;a<i;a++)e[r+a]=t[s+a]},flattenChunks:function(e){var t,s,i,r,a,n;for(i=0,t=0,s=e.length;t<s;t++)i+=e[t].length;for(n=new Uint8Array(i),r=0,t=0,s=e.length;t<s;t++)a=e[t],n.set(a,r),r+=a.length;return n}},n={arraySet:function(e,t,s,i,r){for(var a=0;a<i;a++)e[r+a]=t[s+a]},flattenChunks:function(e){return[].concat.apply([],e)}};s.setTyped=function(e){e?(s.Buf8=Uint8Array,s.Buf16=Uint16Array,s.Buf32=Int32Array,s.assign(s,a)):(s.Buf8=Array,s.Buf16=Array,s.Buf32=Array,s.assign(s,n))},s.setTyped(i)},{}],77:[function(e,t,s){"use strict";t.exports=function(e,t,s,i){for(var r=65535&e|0,a=e>>>16&65535|0,n=0;0!==s;){s-=n=s>2e3?2e3:s;do{a=a+(r=r+t[i++]|0)|0}while(--n);r%=65521,a%=65521}return r|a<<16|0}},{}],78:[function(e,t,s){"use strict";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],79:[function(e,t,s){"use strict";var i=function(){for(var e,t=[],s=0;s<256;s++){e=s;for(var i=0;i<8;i++)e=1&e?3988292384^e>>>1:e>>>1;t[s]=e}return t}();t.exports=function(e,t,s,r){var a=i,n=r+s;e^=-1;for(var o=r;o<n;o++)e=e>>>8^a[255&(e^t[o])];return-1^e}},{}],80:[function(e,t,s){"use strict";var i,r=e("../utils/common"),a=e("./trees"),n=e("./adler32"),o=e("./crc32"),c=e("./messages"),d=-2,h=258,l=262,u=103,f=113,p=666;function m(e,t){return e.msg=c[t],t}function g(e){return(e<<1)-(e>4?9:0)}function y(e){for(var t=e.length;--t>=0;)e[t]=0}function b(e){var t=e.state,s=t.pending;s>e.avail_out&&(s=e.avail_out),0!==s&&(r.arraySet(e.output,t.pending_buf,t.pending_out,s,e.next_out),e.next_out+=s,t.pending_out+=s,e.total_out+=s,e.avail_out-=s,t.pending-=s,0===t.pending&&(t.pending_out=0))}function v(e,t){a._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,b(e.strm)}function w(e,t){e.pending_buf[e.pending++]=t}function S(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function k(e,t){var s,i,r=e.max_chain_length,a=e.strstart,n=e.prev_length,o=e.nice_match,c=e.strstart>e.w_size-l?e.strstart-(e.w_size-l):0,d=e.window,u=e.w_mask,f=e.prev,p=e.strstart+h,m=d[a+n-1],g=d[a+n];e.prev_length>=e.good_match&&(r>>=2),o>e.lookahead&&(o=e.lookahead);do{if(d[(s=t)+n]===g&&d[s+n-1]===m&&d[s]===d[a]&&d[++s]===d[a+1]){a+=2,s++;do{}while(d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&d[++a]===d[++s]&&a<p);if(i=h-(p-a),a=p-h,i>n){if(e.match_start=t,n=i,i>=o)break;m=d[a+n-1],g=d[a+n]}}}while((t=f[t&u])>c&&0!=--r);return n<=e.lookahead?n:e.lookahead}function T(e){var t,s,i,a,c,d,h,u,f,p,m=e.w_size;do{if(a=e.window_size-e.lookahead-e.strstart,e.strstart>=m+(m-l)){r.arraySet(e.window,e.window,m,m,0),e.match_start-=m,e.strstart-=m,e.block_start-=m,t=s=e.hash_size;do{i=e.head[--t],e.head[t]=i>=m?i-m:0}while(--s);t=s=m;do{i=e.prev[--t],e.prev[t]=i>=m?i-m:0}while(--s);a+=m}if(0===e.strm.avail_in)break;if(d=e.strm,h=e.window,u=e.strstart+e.lookahead,f=a,p=void 0,(p=d.avail_in)>f&&(p=f),s=0===p?0:(d.avail_in-=p,r.arraySet(h,d.input,d.next_in,p,u),1===d.state.wrap?d.adler=n(d.adler,h,p,u):2===d.state.wrap&&(d.adler=o(d.adler,h,p,u)),d.next_in+=p,d.total_in+=p,p),e.lookahead+=s,e.lookahead+e.insert>=3)for(c=e.strstart-e.insert,e.ins_h=e.window[c],e.ins_h=(e.ins_h<<e.hash_shift^e.window[c+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[c+3-1])&e.hash_mask,e.prev[c&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=c,c++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<l&&0!==e.strm.avail_in)}function O(e,t){for(var s,i;;){if(e.lookahead<l){if(T(e),e.lookahead<l&&0===t)return 1;if(0===e.lookahead)break}if(s=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,s=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==s&&e.strstart-s<=e.w_size-l&&(e.match_length=k(e,s)),e.match_length>=3)if(i=a._tr_tally(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,s=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else i=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(i&&(v(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,4===t?(v(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(v(e,!1),0===e.strm.avail_out)?1:2}function _(e,t){for(var s,i,r;;){if(e.lookahead<l){if(T(e),e.lookahead<l&&0===t)return 1;if(0===e.lookahead)break}if(s=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,s=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==s&&e.prev_length<e.max_lazy_match&&e.strstart-s<=e.w_size-l&&(e.match_length=k(e,s),e.match_length<=5&&(1===e.strategy||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){r=e.strstart+e.lookahead-3,i=a._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=r&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,s=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,i&&(v(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if((i=a._tr_tally(e,0,e.window[e.strstart-1]))&&v(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(i=a._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,4===t?(v(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(v(e,!1),0===e.strm.avail_out)?1:2}function x(e,t,s,i,r){this.good_length=e,this.max_lazy=t,this.nice_length=s,this.max_chain=i,this.func=r}function M(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new r.Buf16(1146),this.dyn_dtree=new r.Buf16(122),this.bl_tree=new r.Buf16(78),y(this.dyn_ltree),y(this.dyn_dtree),y(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new r.Buf16(16),this.heap=new r.Buf16(573),y(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new r.Buf16(573),y(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function I(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=2,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:f,e.adler=2===t.wrap?0:1,t.last_flush=0,a._tr_init(t),0):m(e,d)}function C(e){var t,s=I(e);return 0===s&&((t=e.state).window_size=2*t.w_size,y(t.head),t.max_lazy_match=i[t.level].max_lazy,t.good_match=i[t.level].good_length,t.nice_match=i[t.level].nice_length,t.max_chain_length=i[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0),s}function P(e,t,s,i,a,n){if(!e)return d;var o=1;if(-1===t&&(t=6),i<0?(o=0,i=-i):i>15&&(o=2,i-=16),a<1||a>9||8!==s||i<8||i>15||t<0||t>9||n<0||n>4)return m(e,d);8===i&&(i=9);var c=new M;return e.state=c,c.strm=e,c.wrap=o,c.gzhead=null,c.w_bits=i,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=a+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+3-1)/3),c.window=new r.Buf8(2*c.w_size),c.head=new r.Buf16(c.hash_size),c.prev=new r.Buf16(c.w_size),c.lit_bufsize=1<<a+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new r.Buf8(c.pending_buf_size),c.d_buf=1*c.lit_bufsize,c.l_buf=3*c.lit_bufsize,c.level=t,c.strategy=n,c.method=s,C(e)}i=[new x(0,0,0,0,(function(e,t){var s=65535;for(s>e.pending_buf_size-5&&(s=e.pending_buf_size-5);;){if(e.lookahead<=1){if(T(e),0===e.lookahead&&0===t)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var i=e.block_start+s;if((0===e.strstart||e.strstart>=i)&&(e.lookahead=e.strstart-i,e.strstart=i,v(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-l&&(v(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(v(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(v(e,!1),e.strm.avail_out),1)})),new x(4,4,8,4,O),new x(4,5,16,8,O),new x(4,6,32,32,O),new x(4,4,16,16,_),new x(8,16,32,32,_),new x(8,16,128,128,_),new x(8,32,128,256,_),new x(32,128,258,1024,_),new x(32,258,258,4096,_)],s.deflateInit=function(e,t){return P(e,t,8,15,8,0)},s.deflateInit2=P,s.deflateReset=C,s.deflateResetKeep=I,s.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?d:(e.state.gzhead=t,0):d},s.deflate=function(e,t){var s,r,n,c;if(!e||!e.state||t>5||t<0)return e?m(e,d):d;if(r=e.state,!e.output||!e.input&&0!==e.avail_in||r.status===p&&4!==t)return m(e,0===e.avail_out?-5:d);if(r.strm=e,s=r.last_flush,r.last_flush=t,42===r.status)if(2===r.wrap)e.adler=0,w(r,31),w(r,139),w(r,8),r.gzhead?(w(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),w(r,255&r.gzhead.time),w(r,r.gzhead.time>>8&255),w(r,r.gzhead.time>>16&255),w(r,r.gzhead.time>>24&255),w(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),w(r,255&r.gzhead.os),r.gzhead.extra&&r.gzhead.extra.length&&(w(r,255&r.gzhead.extra.length),w(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=o(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=69):(w(r,0),w(r,0),w(r,0),w(r,0),w(r,0),w(r,9===r.level?2:r.strategy>=2||r.level<2?4:0),w(r,3),r.status=f);else{var l=8+(r.w_bits-8<<4)<<8;l|=(r.strategy>=2||r.level<2?0:r.level<6?1:6===r.level?2:3)<<6,0!==r.strstart&&(l|=32),l+=31-l%31,r.status=f,S(r,l),0!==r.strstart&&(S(r,e.adler>>>16),S(r,65535&e.adler)),e.adler=1}if(69===r.status)if(r.gzhead.extra){for(n=r.pending;r.gzindex<(65535&r.gzhead.extra.length)&&(r.pending!==r.pending_buf_size||(r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),b(e),n=r.pending,r.pending!==r.pending_buf_size));)w(r,255&r.gzhead.extra[r.gzindex]),r.gzindex++;r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=73)}else r.status=73;if(73===r.status)if(r.gzhead.name){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),b(e),n=r.pending,r.pending===r.pending_buf_size)){c=1;break}c=r.gzindex<r.gzhead.name.length?255&r.gzhead.name.charCodeAt(r.gzindex++):0,w(r,c)}while(0!==c);r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),0===c&&(r.gzindex=0,r.status=91)}else r.status=91;if(91===r.status)if(r.gzhead.comment){n=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),b(e),n=r.pending,r.pending===r.pending_buf_size)){c=1;break}c=r.gzindex<r.gzhead.comment.length?255&r.gzhead.comment.charCodeAt(r.gzindex++):0,w(r,c)}while(0!==c);r.gzhead.hcrc&&r.pending>n&&(e.adler=o(e.adler,r.pending_buf,r.pending-n,n)),0===c&&(r.status=u)}else r.status=u;if(r.status===u&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&b(e),r.pending+2<=r.pending_buf_size&&(w(r,255&e.adler),w(r,e.adler>>8&255),e.adler=0,r.status=f)):r.status=f),0!==r.pending){if(b(e),0===e.avail_out)return r.last_flush=-1,0}else if(0===e.avail_in&&g(t)<=g(s)&&4!==t)return m(e,-5);if(r.status===p&&0!==e.avail_in)return m(e,-5);if(0!==e.avail_in||0!==r.lookahead||0!==t&&r.status!==p){var k=2===r.strategy?function(e,t){for(var s;;){if(0===e.lookahead&&(T(e),0===e.lookahead)){if(0===t)return 1;break}if(e.match_length=0,s=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,s&&(v(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(v(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(v(e,!1),0===e.strm.avail_out)?1:2}(r,t):3===r.strategy?function(e,t){for(var s,i,r,n,o=e.window;;){if(e.lookahead<=h){if(T(e),e.lookahead<=h&&0===t)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(i=o[r=e.strstart-1])===o[++r]&&i===o[++r]&&i===o[++r]){n=e.strstart+h;do{}while(i===o[++r]&&i===o[++r]&&i===o[++r]&&i===o[++r]&&i===o[++r]&&i===o[++r]&&i===o[++r]&&i===o[++r]&&r<n);e.match_length=h-(n-r),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(s=a._tr_tally(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(s=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),s&&(v(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(v(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(v(e,!1),0===e.strm.avail_out)?1:2}(r,t):i[r.level].func(r,t);if(3!==k&&4!==k||(r.status=p),1===k||3===k)return 0===e.avail_out&&(r.last_flush=-1),0;if(2===k&&(1===t?a._tr_align(r):5!==t&&(a._tr_stored_block(r,0,0,!1),3===t&&(y(r.head),0===r.lookahead&&(r.strstart=0,r.block_start=0,r.insert=0))),b(e),0===e.avail_out))return r.last_flush=-1,0}return 4!==t?0:r.wrap<=0?1:(2===r.wrap?(w(r,255&e.adler),w(r,e.adler>>8&255),w(r,e.adler>>16&255),w(r,e.adler>>24&255),w(r,255&e.total_in),w(r,e.total_in>>8&255),w(r,e.total_in>>16&255),w(r,e.total_in>>24&255)):(S(r,e.adler>>>16),S(r,65535&e.adler)),b(e),r.wrap>0&&(r.wrap=-r.wrap),0!==r.pending?0:1)},s.deflateEnd=function(e){var t;return e&&e.state?42!==(t=e.state.status)&&69!==t&&73!==t&&91!==t&&t!==u&&t!==f&&t!==p?m(e,d):(e.state=null,t===f?m(e,-3):0):d},s.deflateSetDictionary=function(e,t){var s,i,a,o,c,h,l,u,f=t.length;if(!e||!e.state)return d;if(2===(o=(s=e.state).wrap)||1===o&&42!==s.status||s.lookahead)return d;for(1===o&&(e.adler=n(e.adler,t,f,0)),s.wrap=0,f>=s.w_size&&(0===o&&(y(s.head),s.strstart=0,s.block_start=0,s.insert=0),u=new r.Buf8(s.w_size),r.arraySet(u,t,f-s.w_size,s.w_size,0),t=u,f=s.w_size),c=e.avail_in,h=e.next_in,l=e.input,e.avail_in=f,e.next_in=0,e.input=t,T(s);s.lookahead>=3;){i=s.strstart,a=s.lookahead-2;do{s.ins_h=(s.ins_h<<s.hash_shift^s.window[i+3-1])&s.hash_mask,s.prev[i&s.w_mask]=s.head[s.ins_h],s.head[s.ins_h]=i,i++}while(--a);s.strstart=i,s.lookahead=2,T(s)}return s.strstart+=s.lookahead,s.block_start=s.strstart,s.insert=s.lookahead,s.lookahead=0,s.match_length=s.prev_length=2,s.match_available=0,e.next_in=h,e.input=l,e.avail_in=c,s.wrap=o,0},s.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":76,"./adler32":77,"./crc32":79,"./messages":84,"./trees":85}],81:[function(e,t,s){"use strict";t.exports=function(e,t){var s,i,r,a,n,o,c,d,h,l,u,f,p,m,g,y,b,v,w,S,k,T,O,_,x;s=e.state,i=e.next_in,_=e.input,r=i+(e.avail_in-5),a=e.next_out,x=e.output,n=a-(t-e.avail_out),o=a+(e.avail_out-257),c=s.dmax,d=s.wsize,h=s.whave,l=s.wnext,u=s.window,f=s.hold,p=s.bits,m=s.lencode,g=s.distcode,y=(1<<s.lenbits)-1,b=(1<<s.distbits)-1;e:do{p<15&&(f+=_[i++]<<p,p+=8,f+=_[i++]<<p,p+=8),v=m[f&y];t:for(;;){if(f>>>=w=v>>>24,p-=w,0===(w=v>>>16&255))x[a++]=65535&v;else{if(!(16&w)){if(0==(64&w)){v=m[(65535&v)+(f&(1<<w)-1)];continue t}if(32&w){s.mode=12;break e}e.msg="invalid literal/length code",s.mode=30;break e}S=65535&v,(w&=15)&&(p<w&&(f+=_[i++]<<p,p+=8),S+=f&(1<<w)-1,f>>>=w,p-=w),p<15&&(f+=_[i++]<<p,p+=8,f+=_[i++]<<p,p+=8),v=g[f&b];s:for(;;){if(f>>>=w=v>>>24,p-=w,!(16&(w=v>>>16&255))){if(0==(64&w)){v=g[(65535&v)+(f&(1<<w)-1)];continue s}e.msg="invalid distance code",s.mode=30;break e}if(k=65535&v,p<(w&=15)&&(f+=_[i++]<<p,(p+=8)<w&&(f+=_[i++]<<p,p+=8)),(k+=f&(1<<w)-1)>c){e.msg="invalid distance too far back",s.mode=30;break e}if(f>>>=w,p-=w,k>(w=a-n)){if((w=k-w)>h&&s.sane){e.msg="invalid distance too far back",s.mode=30;break e}if(T=0,O=u,0===l){if(T+=d-w,w<S){S-=w;do{x[a++]=u[T++]}while(--w);T=a-k,O=x}}else if(l<w){if(T+=d+l-w,(w-=l)<S){S-=w;do{x[a++]=u[T++]}while(--w);if(T=0,l<S){S-=w=l;do{x[a++]=u[T++]}while(--w);T=a-k,O=x}}}else if(T+=l-w,w<S){S-=w;do{x[a++]=u[T++]}while(--w);T=a-k,O=x}for(;S>2;)x[a++]=O[T++],x[a++]=O[T++],x[a++]=O[T++],S-=3;S&&(x[a++]=O[T++],S>1&&(x[a++]=O[T++]))}else{T=a-k;do{x[a++]=x[T++],x[a++]=x[T++],x[a++]=x[T++],S-=3}while(S>2);S&&(x[a++]=x[T++],S>1&&(x[a++]=x[T++]))}break}}break}}while(i<r&&a<o);i-=S=p>>3,f&=(1<<(p-=S<<3))-1,e.next_in=i,e.next_out=a,e.avail_in=i<r?r-i+5:5-(i-r),e.avail_out=a<o?o-a+257:257-(a-o),s.hold=f,s.bits=p}},{}],82:[function(e,t,s){"use strict";var i=e("../utils/common"),r=e("./adler32"),a=e("./crc32"),n=e("./inffast"),o=e("./inftrees"),c=-2,d=12,h=30;function l(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function u(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new i.Buf16(320),this.work=new i.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new i.Buf32(852),t.distcode=t.distdyn=new i.Buf32(592),t.sane=1,t.back=-1,0):c}function p(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,f(e)):c}function m(e,t){var s,i;return e&&e.state?(i=e.state,t<0?(s=0,t=-t):(s=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?c:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=s,i.wbits=t,p(e))):c}function g(e,t){var s,i;return e?(i=new u,e.state=i,i.window=null,0!==(s=m(e,t))&&(e.state=null),s):c}var y,b,v=!0;function w(e){if(v){var t;for(y=new i.Buf32(512),b=new i.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(o(1,e.lens,0,288,y,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;o(2,e.lens,0,32,b,0,e.work,{bits:5}),v=!1}e.lencode=y,e.lenbits=9,e.distcode=b,e.distbits=5}function S(e,t,s,r){var a,n=e.state;return null===n.window&&(n.wsize=1<<n.wbits,n.wnext=0,n.whave=0,n.window=new i.Buf8(n.wsize)),r>=n.wsize?(i.arraySet(n.window,t,s-n.wsize,n.wsize,0),n.wnext=0,n.whave=n.wsize):((a=n.wsize-n.wnext)>r&&(a=r),i.arraySet(n.window,t,s-r,a,n.wnext),(r-=a)?(i.arraySet(n.window,t,s-r,r,0),n.wnext=r,n.whave=n.wsize):(n.wnext+=a,n.wnext===n.wsize&&(n.wnext=0),n.whave<n.wsize&&(n.whave+=a))),0}s.inflateReset=p,s.inflateReset2=m,s.inflateResetKeep=f,s.inflateInit=function(e){return g(e,15)},s.inflateInit2=g,s.inflate=function(e,t){var s,u,f,p,m,g,y,b,v,k,T,O,_,x,M,I,C,P,A,N,V,B,E,L,R=0,D=new i.Buf8(4),F=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return c;(s=e.state).mode===d&&(s.mode=13),m=e.next_out,f=e.output,y=e.avail_out,p=e.next_in,u=e.input,g=e.avail_in,b=s.hold,v=s.bits,k=g,T=y,B=0;e:for(;;)switch(s.mode){case 1:if(0===s.wrap){s.mode=13;break}for(;v<16;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(2&s.wrap&&35615===b){s.check=0,D[0]=255&b,D[1]=b>>>8&255,s.check=a(s.check,D,2,0),b=0,v=0,s.mode=2;break}if(s.flags=0,s.head&&(s.head.done=!1),!(1&s.wrap)||(((255&b)<<8)+(b>>8))%31){e.msg="incorrect header check",s.mode=h;break}if(8!=(15&b)){e.msg="unknown compression method",s.mode=h;break}if(v-=4,V=8+(15&(b>>>=4)),0===s.wbits)s.wbits=V;else if(V>s.wbits){e.msg="invalid window size",s.mode=h;break}s.dmax=1<<V,e.adler=s.check=1,s.mode=512&b?10:d,b=0,v=0;break;case 2:for(;v<16;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(s.flags=b,8!=(255&s.flags)){e.msg="unknown compression method",s.mode=h;break}if(57344&s.flags){e.msg="unknown header flags set",s.mode=h;break}s.head&&(s.head.text=b>>8&1),512&s.flags&&(D[0]=255&b,D[1]=b>>>8&255,s.check=a(s.check,D,2,0)),b=0,v=0,s.mode=3;case 3:for(;v<32;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.head&&(s.head.time=b),512&s.flags&&(D[0]=255&b,D[1]=b>>>8&255,D[2]=b>>>16&255,D[3]=b>>>24&255,s.check=a(s.check,D,4,0)),b=0,v=0,s.mode=4;case 4:for(;v<16;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.head&&(s.head.xflags=255&b,s.head.os=b>>8),512&s.flags&&(D[0]=255&b,D[1]=b>>>8&255,s.check=a(s.check,D,2,0)),b=0,v=0,s.mode=5;case 5:if(1024&s.flags){for(;v<16;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.length=b,s.head&&(s.head.extra_len=b),512&s.flags&&(D[0]=255&b,D[1]=b>>>8&255,s.check=a(s.check,D,2,0)),b=0,v=0}else s.head&&(s.head.extra=null);s.mode=6;case 6:if(1024&s.flags&&((O=s.length)>g&&(O=g),O&&(s.head&&(V=s.head.extra_len-s.length,s.head.extra||(s.head.extra=new Array(s.head.extra_len)),i.arraySet(s.head.extra,u,p,O,V)),512&s.flags&&(s.check=a(s.check,u,O,p)),g-=O,p+=O,s.length-=O),s.length))break e;s.length=0,s.mode=7;case 7:if(2048&s.flags){if(0===g)break e;O=0;do{V=u[p+O++],s.head&&V&&s.length<65536&&(s.head.name+=String.fromCharCode(V))}while(V&&O<g);if(512&s.flags&&(s.check=a(s.check,u,O,p)),g-=O,p+=O,V)break e}else s.head&&(s.head.name=null);s.length=0,s.mode=8;case 8:if(4096&s.flags){if(0===g)break e;O=0;do{V=u[p+O++],s.head&&V&&s.length<65536&&(s.head.comment+=String.fromCharCode(V))}while(V&&O<g);if(512&s.flags&&(s.check=a(s.check,u,O,p)),g-=O,p+=O,V)break e}else s.head&&(s.head.comment=null);s.mode=9;case 9:if(512&s.flags){for(;v<16;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(b!==(65535&s.check)){e.msg="header crc mismatch",s.mode=h;break}b=0,v=0}s.head&&(s.head.hcrc=s.flags>>9&1,s.head.done=!0),e.adler=s.check=0,s.mode=d;break;case 10:for(;v<32;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}e.adler=s.check=l(b),b=0,v=0,s.mode=11;case 11:if(0===s.havedict)return e.next_out=m,e.avail_out=y,e.next_in=p,e.avail_in=g,s.hold=b,s.bits=v,2;e.adler=s.check=1,s.mode=d;case d:if(5===t||6===t)break e;case 13:if(s.last){b>>>=7&v,v-=7&v,s.mode=27;break}for(;v<3;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}switch(s.last=1&b,v-=1,3&(b>>>=1)){case 0:s.mode=14;break;case 1:if(w(s),s.mode=20,6===t){b>>>=2,v-=2;break e}break;case 2:s.mode=17;break;case 3:e.msg="invalid block type",s.mode=h}b>>>=2,v-=2;break;case 14:for(b>>>=7&v,v-=7&v;v<32;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if((65535&b)!=(b>>>16^65535)){e.msg="invalid stored block lengths",s.mode=h;break}if(s.length=65535&b,b=0,v=0,s.mode=15,6===t)break e;case 15:s.mode=16;case 16:if(O=s.length){if(O>g&&(O=g),O>y&&(O=y),0===O)break e;i.arraySet(f,u,p,O,m),g-=O,p+=O,y-=O,m+=O,s.length-=O;break}s.mode=d;break;case 17:for(;v<14;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(s.nlen=257+(31&b),b>>>=5,v-=5,s.ndist=1+(31&b),b>>>=5,v-=5,s.ncode=4+(15&b),b>>>=4,v-=4,s.nlen>286||s.ndist>30){e.msg="too many length or distance symbols",s.mode=h;break}s.have=0,s.mode=18;case 18:for(;s.have<s.ncode;){for(;v<3;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.lens[F[s.have++]]=7&b,b>>>=3,v-=3}for(;s.have<19;)s.lens[F[s.have++]]=0;if(s.lencode=s.lendyn,s.lenbits=7,E={bits:s.lenbits},B=o(0,s.lens,0,19,s.lencode,0,s.work,E),s.lenbits=E.bits,B){e.msg="invalid code lengths set",s.mode=h;break}s.have=0,s.mode=19;case 19:for(;s.have<s.nlen+s.ndist;){for(;I=(R=s.lencode[b&(1<<s.lenbits)-1])>>>16&255,C=65535&R,!((M=R>>>24)<=v);){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(C<16)b>>>=M,v-=M,s.lens[s.have++]=C;else{if(16===C){for(L=M+2;v<L;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(b>>>=M,v-=M,0===s.have){e.msg="invalid bit length repeat",s.mode=h;break}V=s.lens[s.have-1],O=3+(3&b),b>>>=2,v-=2}else if(17===C){for(L=M+3;v<L;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}v-=M,V=0,O=3+(7&(b>>>=M)),b>>>=3,v-=3}else{for(L=M+7;v<L;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}v-=M,V=0,O=11+(127&(b>>>=M)),b>>>=7,v-=7}if(s.have+O>s.nlen+s.ndist){e.msg="invalid bit length repeat",s.mode=h;break}for(;O--;)s.lens[s.have++]=V}}if(s.mode===h)break;if(0===s.lens[256]){e.msg="invalid code -- missing end-of-block",s.mode=h;break}if(s.lenbits=9,E={bits:s.lenbits},B=o(1,s.lens,0,s.nlen,s.lencode,0,s.work,E),s.lenbits=E.bits,B){e.msg="invalid literal/lengths set",s.mode=h;break}if(s.distbits=6,s.distcode=s.distdyn,E={bits:s.distbits},B=o(2,s.lens,s.nlen,s.ndist,s.distcode,0,s.work,E),s.distbits=E.bits,B){e.msg="invalid distances set",s.mode=h;break}if(s.mode=20,6===t)break e;case 20:s.mode=21;case 21:if(g>=6&&y>=258){e.next_out=m,e.avail_out=y,e.next_in=p,e.avail_in=g,s.hold=b,s.bits=v,n(e,T),m=e.next_out,f=e.output,y=e.avail_out,p=e.next_in,u=e.input,g=e.avail_in,b=s.hold,v=s.bits,s.mode===d&&(s.back=-1);break}for(s.back=0;I=(R=s.lencode[b&(1<<s.lenbits)-1])>>>16&255,C=65535&R,!((M=R>>>24)<=v);){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(I&&0==(240&I)){for(P=M,A=I,N=C;I=(R=s.lencode[N+((b&(1<<P+A)-1)>>P)])>>>16&255,C=65535&R,!(P+(M=R>>>24)<=v);){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}b>>>=P,v-=P,s.back+=P}if(b>>>=M,v-=M,s.back+=M,s.length=C,0===I){s.mode=26;break}if(32&I){s.back=-1,s.mode=d;break}if(64&I){e.msg="invalid literal/length code",s.mode=h;break}s.extra=15&I,s.mode=22;case 22:if(s.extra){for(L=s.extra;v<L;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.length+=b&(1<<s.extra)-1,b>>>=s.extra,v-=s.extra,s.back+=s.extra}s.was=s.length,s.mode=23;case 23:for(;I=(R=s.distcode[b&(1<<s.distbits)-1])>>>16&255,C=65535&R,!((M=R>>>24)<=v);){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(0==(240&I)){for(P=M,A=I,N=C;I=(R=s.distcode[N+((b&(1<<P+A)-1)>>P)])>>>16&255,C=65535&R,!(P+(M=R>>>24)<=v);){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}b>>>=P,v-=P,s.back+=P}if(b>>>=M,v-=M,s.back+=M,64&I){e.msg="invalid distance code",s.mode=h;break}s.offset=C,s.extra=15&I,s.mode=24;case 24:if(s.extra){for(L=s.extra;v<L;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}s.offset+=b&(1<<s.extra)-1,b>>>=s.extra,v-=s.extra,s.back+=s.extra}if(s.offset>s.dmax){e.msg="invalid distance too far back",s.mode=h;break}s.mode=25;case 25:if(0===y)break e;if(O=T-y,s.offset>O){if((O=s.offset-O)>s.whave&&s.sane){e.msg="invalid distance too far back",s.mode=h;break}O>s.wnext?(O-=s.wnext,_=s.wsize-O):_=s.wnext-O,O>s.length&&(O=s.length),x=s.window}else x=f,_=m-s.offset,O=s.length;O>y&&(O=y),y-=O,s.length-=O;do{f[m++]=x[_++]}while(--O);0===s.length&&(s.mode=21);break;case 26:if(0===y)break e;f[m++]=s.length,y--,s.mode=21;break;case 27:if(s.wrap){for(;v<32;){if(0===g)break e;g--,b|=u[p++]<<v,v+=8}if(T-=y,e.total_out+=T,s.total+=T,T&&(e.adler=s.check=s.flags?a(s.check,f,T,m-T):r(s.check,f,T,m-T)),T=y,(s.flags?b:l(b))!==s.check){e.msg="incorrect data check",s.mode=h;break}b=0,v=0}s.mode=28;case 28:if(s.wrap&&s.flags){for(;v<32;){if(0===g)break e;g--,b+=u[p++]<<v,v+=8}if(b!==(4294967295&s.total)){e.msg="incorrect length check",s.mode=h;break}b=0,v=0}s.mode=29;case 29:B=1;break e;case h:B=-3;break e;case 31:return-4;default:return c}return e.next_out=m,e.avail_out=y,e.next_in=p,e.avail_in=g,s.hold=b,s.bits=v,(s.wsize||T!==e.avail_out&&s.mode<h&&(s.mode<27||4!==t))&&S(e,e.output,e.next_out,T-e.avail_out)?(s.mode=31,-4):(k-=e.avail_in,T-=e.avail_out,e.total_in+=k,e.total_out+=T,s.total+=T,s.wrap&&T&&(e.adler=s.check=s.flags?a(s.check,f,T,e.next_out-T):r(s.check,f,T,e.next_out-T)),e.data_type=s.bits+(s.last?64:0)+(s.mode===d?128:0)+(20===s.mode||15===s.mode?256:0),(0===k&&0===T||4===t)&&0===B&&(B=-5),B)},s.inflateEnd=function(e){if(!e||!e.state)return c;var t=e.state;return t.window&&(t.window=null),e.state=null,0},s.inflateGetHeader=function(e,t){var s;return e&&e.state?0==(2&(s=e.state).wrap)?c:(s.head=t,t.done=!1,0):c},s.inflateSetDictionary=function(e,t){var s,i=t.length;return e&&e.state?0!==(s=e.state).wrap&&11!==s.mode?c:11===s.mode&&r(1,t,i,0)!==s.check?-3:S(e,t,i,i)?(s.mode=31,-4):(s.havedict=1,0):c},s.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":76,"./adler32":77,"./crc32":79,"./inffast":81,"./inftrees":83}],83:[function(e,t,s){"use strict";var i=e("../utils/common"),r=15,a=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],n=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],c=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,s,d,h,l,u,f){var p,m,g,y,b,v,w,S,k,T=f.bits,O=0,_=0,x=0,M=0,I=0,C=0,P=0,A=0,N=0,V=0,B=null,E=0,L=new i.Buf16(16),R=new i.Buf16(16),D=null,F=0;for(O=0;O<=r;O++)L[O]=0;for(_=0;_<d;_++)L[t[s+_]]++;for(I=T,M=r;M>=1&&0===L[M];M--);if(I>M&&(I=M),0===M)return h[l++]=20971520,h[l++]=20971520,f.bits=1,0;for(x=1;x<M&&0===L[x];x++);for(I<x&&(I=x),A=1,O=1;O<=r;O++)if(A<<=1,(A-=L[O])<0)return-1;if(A>0&&(0===e||1!==M))return-1;for(R[1]=0,O=1;O<r;O++)R[O+1]=R[O]+L[O];for(_=0;_<d;_++)0!==t[s+_]&&(u[R[t[s+_]]++]=_);if(0===e?(B=D=u,v=19):1===e?(B=a,E-=257,D=n,F-=257,v=256):(B=o,D=c,v=-1),V=0,_=0,O=x,b=l,C=I,P=0,g=-1,y=(N=1<<I)-1,1===e&&N>852||2===e&&N>592)return 1;for(;;){w=O-P,u[_]<v?(S=0,k=u[_]):u[_]>v?(S=D[F+u[_]],k=B[E+u[_]]):(S=96,k=0),p=1<<O-P,x=m=1<<C;do{h[b+(V>>P)+(m-=p)]=w<<24|S<<16|k|0}while(0!==m);for(p=1<<O-1;V&p;)p>>=1;if(0!==p?(V&=p-1,V+=p):V=0,_++,0==--L[O]){if(O===M)break;O=t[s+u[_]]}if(O>I&&(V&y)!==g){for(0===P&&(P=I),b+=x,A=1<<(C=O-P);C+P<M&&!((A-=L[C+P])<=0);)C++,A<<=1;if(N+=1<<C,1===e&&N>852||2===e&&N>592)return 1;h[g=V&y]=I<<24|C<<16|b-l|0}}return 0!==V&&(h[b+V]=O-P<<24|64<<16|0),f.bits=I,0}},{"../utils/common":76}],84:[function(e,t,s){"use strict";t.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],85:[function(e,t,s){"use strict";var i=e("../utils/common");function r(e){for(var t=e.length;--t>=0;)e[t]=0}var a=256,n=286,o=30,c=15,d=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],h=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],l=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],u=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],f=new Array(576);r(f);var p=new Array(60);r(p);var m=new Array(512);r(m);var g=new Array(256);r(g);var y=new Array(29);r(y);var b,v,w,S=new Array(o);function k(e,t,s,i,r){this.static_tree=e,this.extra_bits=t,this.extra_base=s,this.elems=i,this.max_length=r,this.has_stree=e&&e.length}function T(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function O(e){return e<256?m[e]:m[256+(e>>>7)]}function _(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function x(e,t,s){e.bi_valid>16-s?(e.bi_buf|=t<<e.bi_valid&65535,_(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=s-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=s)}function M(e,t,s){x(e,s[2*t],s[2*t+1])}function I(e,t){var s=0;do{s|=1&e,e>>>=1,s<<=1}while(--t>0);return s>>>1}function C(e,t,s){var i,r,a=new Array(16),n=0;for(i=1;i<=c;i++)a[i]=n=n+s[i-1]<<1;for(r=0;r<=t;r++){var o=e[2*r+1];0!==o&&(e[2*r]=I(a[o]++,o))}}function P(e){var t;for(t=0;t<n;t++)e.dyn_ltree[2*t]=0;for(t=0;t<o;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function A(e){e.bi_valid>8?_(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function N(e,t,s,i){var r=2*t,a=2*s;return e[r]<e[a]||e[r]===e[a]&&i[t]<=i[s]}function V(e,t,s){for(var i=e.heap[s],r=s<<1;r<=e.heap_len&&(r<e.heap_len&&N(t,e.heap[r+1],e.heap[r],e.depth)&&r++,!N(t,i,e.heap[r],e.depth));)e.heap[s]=e.heap[r],s=r,r<<=1;e.heap[s]=i}function B(e,t,s){var i,r,n,o,c=0;if(0!==e.last_lit)do{i=e.pending_buf[e.d_buf+2*c]<<8|e.pending_buf[e.d_buf+2*c+1],r=e.pending_buf[e.l_buf+c],c++,0===i?M(e,r,t):(M(e,(n=g[r])+a+1,t),0!==(o=d[n])&&x(e,r-=y[n],o),M(e,n=O(--i),s),0!==(o=h[n])&&x(e,i-=S[n],o))}while(c<e.last_lit);M(e,256,t)}function E(e,t){var s,i,r,a=t.dyn_tree,n=t.stat_desc.static_tree,o=t.stat_desc.has_stree,d=t.stat_desc.elems,h=-1;for(e.heap_len=0,e.heap_max=573,s=0;s<d;s++)0!==a[2*s]?(e.heap[++e.heap_len]=h=s,e.depth[s]=0):a[2*s+1]=0;for(;e.heap_len<2;)a[2*(r=e.heap[++e.heap_len]=h<2?++h:0)]=1,e.depth[r]=0,e.opt_len--,o&&(e.static_len-=n[2*r+1]);for(t.max_code=h,s=e.heap_len>>1;s>=1;s--)V(e,a,s);r=d;do{s=e.heap[1],e.heap[1]=e.heap[e.heap_len--],V(e,a,1),i=e.heap[1],e.heap[--e.heap_max]=s,e.heap[--e.heap_max]=i,a[2*r]=a[2*s]+a[2*i],e.depth[r]=(e.depth[s]>=e.depth[i]?e.depth[s]:e.depth[i])+1,a[2*s+1]=a[2*i+1]=r,e.heap[1]=r++,V(e,a,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var s,i,r,a,n,o,d=t.dyn_tree,h=t.max_code,l=t.stat_desc.static_tree,u=t.stat_desc.has_stree,f=t.stat_desc.extra_bits,p=t.stat_desc.extra_base,m=t.stat_desc.max_length,g=0;for(a=0;a<=c;a++)e.bl_count[a]=0;for(d[2*e.heap[e.heap_max]+1]=0,s=e.heap_max+1;s<573;s++)(a=d[2*d[2*(i=e.heap[s])+1]+1]+1)>m&&(a=m,g++),d[2*i+1]=a,i>h||(e.bl_count[a]++,n=0,i>=p&&(n=f[i-p]),o=d[2*i],e.opt_len+=o*(a+n),u&&(e.static_len+=o*(l[2*i+1]+n)));if(0!==g){do{for(a=m-1;0===e.bl_count[a];)a--;e.bl_count[a]--,e.bl_count[a+1]+=2,e.bl_count[m]--,g-=2}while(g>0);for(a=m;0!==a;a--)for(i=e.bl_count[a];0!==i;)(r=e.heap[--s])>h||(d[2*r+1]!==a&&(e.opt_len+=(a-d[2*r+1])*d[2*r],d[2*r+1]=a),i--)}}(e,t),C(a,h,e.bl_count)}function L(e,t,s){var i,r,a=-1,n=t[1],o=0,c=7,d=4;for(0===n&&(c=138,d=3),t[2*(s+1)+1]=65535,i=0;i<=s;i++)r=n,n=t[2*(i+1)+1],++o<c&&r===n||(o<d?e.bl_tree[2*r]+=o:0!==r?(r!==a&&e.bl_tree[2*r]++,e.bl_tree[32]++):o<=10?e.bl_tree[34]++:e.bl_tree[36]++,o=0,a=r,0===n?(c=138,d=3):r===n?(c=6,d=3):(c=7,d=4))}function R(e,t,s){var i,r,a=-1,n=t[1],o=0,c=7,d=4;for(0===n&&(c=138,d=3),i=0;i<=s;i++)if(r=n,n=t[2*(i+1)+1],!(++o<c&&r===n)){if(o<d)do{M(e,r,e.bl_tree)}while(0!=--o);else 0!==r?(r!==a&&(M(e,r,e.bl_tree),o--),M(e,16,e.bl_tree),x(e,o-3,2)):o<=10?(M(e,17,e.bl_tree),x(e,o-3,3)):(M(e,18,e.bl_tree),x(e,o-11,7));o=0,a=r,0===n?(c=138,d=3):r===n?(c=6,d=3):(c=7,d=4)}}r(S);var D=!1;function F(e,t,s,r){x(e,0+(r?1:0),3),function(e,t,s,r){A(e),r&&(_(e,s),_(e,~s)),i.arraySet(e.pending_buf,e.window,t,s,e.pending),e.pending+=s}(e,t,s,!0)}s._tr_init=function(e){D||(!function(){var e,t,s,i,r,a=new Array(16);for(s=0,i=0;i<28;i++)for(y[i]=s,e=0;e<1<<d[i];e++)g[s++]=i;for(g[s-1]=i,r=0,i=0;i<16;i++)for(S[i]=r,e=0;e<1<<h[i];e++)m[r++]=i;for(r>>=7;i<o;i++)for(S[i]=r<<7,e=0;e<1<<h[i]-7;e++)m[256+r++]=i;for(t=0;t<=c;t++)a[t]=0;for(e=0;e<=143;)f[2*e+1]=8,e++,a[8]++;for(;e<=255;)f[2*e+1]=9,e++,a[9]++;for(;e<=279;)f[2*e+1]=7,e++,a[7]++;for(;e<=287;)f[2*e+1]=8,e++,a[8]++;for(C(f,287,a),e=0;e<o;e++)p[2*e+1]=5,p[2*e]=I(e,5);b=new k(f,d,257,n,c),v=new k(p,h,0,o,c),w=new k(new Array(0),l,0,19,7)}(),D=!0),e.l_desc=new T(e.dyn_ltree,b),e.d_desc=new T(e.dyn_dtree,v),e.bl_desc=new T(e.bl_tree,w),e.bi_buf=0,e.bi_valid=0,P(e)},s._tr_stored_block=F,s._tr_flush_block=function(e,t,s,i){var r,n,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,s=4093624447;for(t=0;t<=31;t++,s>>>=1)if(1&s&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<a;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),E(e,e.l_desc),E(e,e.d_desc),o=function(e){var t;for(L(e,e.dyn_ltree,e.l_desc.max_code),L(e,e.dyn_dtree,e.d_desc.max_code),E(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*u[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),r=e.opt_len+3+7>>>3,(n=e.static_len+3+7>>>3)<=r&&(r=n)):r=n=s+5,s+4<=r&&-1!==t?F(e,t,s,i):4===e.strategy||n===r?(x(e,2+(i?1:0),3),B(e,f,p)):(x(e,4+(i?1:0),3),function(e,t,s,i){var r;for(x(e,t-257,5),x(e,s-1,5),x(e,i-4,4),r=0;r<i;r++)x(e,e.bl_tree[2*u[r]+1],3);R(e,e.dyn_ltree,t-1),R(e,e.dyn_dtree,s-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),B(e,e.dyn_ltree,e.dyn_dtree)),P(e),i&&A(e)},s._tr_tally=function(e,t,s){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&s,e.last_lit++,0===t?e.dyn_ltree[2*s]++:(e.matches++,t--,e.dyn_ltree[2*(g[s]+a+1)]++,e.dyn_dtree[2*O(t)]++),e.last_lit===e.lit_bufsize-1},s._tr_align=function(e){x(e,2,3),M(e,256,f),function(e){16===e.bi_valid?(_(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{"../utils/common":76}],86:[function(e,t,s){"use strict";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],87:[function(e,t,s){(function(e){"use strict";void 0===e||!e.version||0===e.version.indexOf("v0.")||0===e.version.indexOf("v1.")&&0!==e.version.indexOf("v1.8.")?t.exports={nextTick:function(t,s,i,r){if("function"!=typeof t)throw new TypeError('"callback" argument must be a function');var a,n,o=arguments.length;switch(o){case 0:case 1:return e.nextTick(t);case 2:return e.nextTick((function(){t.call(null,s)}));case 3:return e.nextTick((function(){t.call(null,s,i)}));case 4:return e.nextTick((function(){t.call(null,s,i,r)}));default:for(a=new Array(o-1),n=0;n<a.length;)a[n++]=arguments[n];return e.nextTick((function(){t.apply(null,a)}))}}}:t.exports=e}).call(this,e("_process"))},{_process:88}],88:[function(e,t,s){var i,r,a=t.exports={};function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function c(e){if(i===setTimeout)return setTimeout(e,0);if((i===n||!i)&&setTimeout)return i=setTimeout,setTimeout(e,0);try{return i(e,0)}catch(t){try{return i.call(null,e,0)}catch(t){return i.call(this,e,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:n}catch(e){i=n}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(e){r=o}}();var d,h=[],l=!1,u=-1;function f(){l&&d&&(l=!1,d.length?h=d.concat(h):u=-1,h.length&&p())}function p(){if(!l){var e=c(f);l=!0;for(var t=h.length;t;){for(d=h,h=[];++u<t;)d&&d[u].run();u=-1,t=h.length}d=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function g(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var s=1;s<arguments.length;s++)t[s-1]=arguments[s];h.push(new m(e,t)),1!==h.length||l||c(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=g,a.addListener=g,a.once=g,a.off=g,a.removeListener=g,a.removeAllListeners=g,a.emit=g,a.prependListener=g,a.prependOnceListener=g,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},{}],89:[function(e,t,s){(function(e){!function(i){var r="object"==typeof s&&s&&!s.nodeType&&s,a="object"==typeof t&&t&&!t.nodeType&&t,n="object"==typeof e&&e;n.global!==n&&n.window!==n&&n.self!==n||(i=n);var o,c,d=2147483647,h=36,l=/^xn--/,u=/[^\x20-\x7E]/,f=/[\x2E\u3002\uFF0E\uFF61]/g,p={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},m=Math.floor,g=String.fromCharCode;function y(e){throw new RangeError(p[e])}function b(e,t){for(var s=e.length,i=[];s--;)i[s]=t(e[s]);return i}function v(e,t){var s=e.split("@"),i="";return s.length>1&&(i=s[0]+"@",e=s[1]),i+b((e=e.replace(f,".")).split("."),t).join(".")}function w(e){for(var t,s,i=[],r=0,a=e.length;r<a;)(t=e.charCodeAt(r++))>=55296&&t<=56319&&r<a?56320==(64512&(s=e.charCodeAt(r++)))?i.push(((1023&t)<<10)+(1023&s)+65536):(i.push(t),r--):i.push(t);return i}function S(e){return b(e,(function(e){var t="";return e>65535&&(t+=g((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=g(e)})).join("")}function k(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function T(e,t,s){var i=0;for(e=s?m(e/700):e>>1,e+=m(e/t);e>455;i+=h)e=m(e/35);return m(i+36*e/(e+38))}function O(e){var t,s,i,r,a,n,o,c,l,u,f,p=[],g=e.length,b=0,v=128,w=72;for((s=e.lastIndexOf("-"))<0&&(s=0),i=0;i<s;++i)e.charCodeAt(i)>=128&&y("not-basic"),p.push(e.charCodeAt(i));for(r=s>0?s+1:0;r<g;){for(a=b,n=1,o=h;r>=g&&y("invalid-input"),((c=(f=e.charCodeAt(r++))-48<10?f-22:f-65<26?f-65:f-97<26?f-97:h)>=h||c>m((d-b)/n))&&y("overflow"),b+=c*n,!(c<(l=o<=w?1:o>=w+26?26:o-w));o+=h)n>m(d/(u=h-l))&&y("overflow"),n*=u;w=T(b-a,t=p.length+1,0==a),m(b/t)>d-v&&y("overflow"),v+=m(b/t),b%=t,p.splice(b++,0,v)}return S(p)}function _(e){var t,s,i,r,a,n,o,c,l,u,f,p,b,v,S,O=[];for(p=(e=w(e)).length,t=128,s=0,a=72,n=0;n<p;++n)(f=e[n])<128&&O.push(g(f));for(i=r=O.length,r&&O.push("-");i<p;){for(o=d,n=0;n<p;++n)(f=e[n])>=t&&f<o&&(o=f);for(o-t>m((d-s)/(b=i+1))&&y("overflow"),s+=(o-t)*b,t=o,n=0;n<p;++n)if((f=e[n])<t&&++s>d&&y("overflow"),f==t){for(c=s,l=h;!(c<(u=l<=a?1:l>=a+26?26:l-a));l+=h)S=c-u,v=h-u,O.push(g(k(u+S%v,0))),c=m(S/v);O.push(g(k(c,0))),a=T(s,b,i==r),s=0,++i}++s,++t}return O.join("")}if(o={version:"1.4.1",ucs2:{decode:w,encode:S},decode:O,encode:_,toASCII:function(e){return v(e,(function(e){return u.test(e)?"xn--"+_(e):e}))},toUnicode:function(e){return v(e,(function(e){return l.test(e)?O(e.slice(4).toLowerCase()):e}))}},"function"==typeof define&&"object"==typeof define.amd&&define.amd)define("punycode",(function(){return o}));else if(r&&a)if(t.exports==r)a.exports=o;else for(c in o)o.hasOwnProperty(c)&&(r[c]=o[c]);else i.punycode=o}(this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],90:[function(e,t,s){"use strict";function i(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.exports=function(e,t,s,a){t=t||"&",s=s||"=";var n={};if("string"!=typeof e||0===e.length)return n;var o=/\+/g;e=e.split(t);var c=1e3;a&&"number"==typeof a.maxKeys&&(c=a.maxKeys);var d=e.length;c>0&&d>c&&(d=c);for(var h=0;h<d;++h){var l,u,f,p,m=e[h].replace(o,"%20"),g=m.indexOf(s);g>=0?(l=m.substr(0,g),u=m.substr(g+1)):(l=m,u=""),f=decodeURIComponent(l),p=decodeURIComponent(u),i(n,f)?r(n[f])?n[f].push(p):n[f]=[n[f],p]:n[f]=p}return n};var r=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)}},{}],91:[function(e,t,s){"use strict";var i=function(e){switch(typeof e){case"string":return e;case"boolean":return e?"true":"false";case"number":return isFinite(e)?e:"";default:return""}};t.exports=function(e,t,s,o){return t=t||"&",s=s||"=",null===e&&(e=void 0),"object"==typeof e?a(n(e),(function(n){var o=encodeURIComponent(i(n))+s;return r(e[n])?a(e[n],(function(e){return o+encodeURIComponent(i(e))})).join(t):o+encodeURIComponent(i(e[n]))})).join(t):o?encodeURIComponent(i(o))+s+encodeURIComponent(i(e)):""};var r=Array.isArray||function(e){return"[object Array]"===Object.prototype.toString.call(e)};function a(e,t){if(e.map)return e.map(t);for(var s=[],i=0;i<e.length;i++)s.push(t(e[i],i));return s}var n=Object.keys||function(e){var t=[];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.push(s);return t}},{}],92:[function(e,t,s){"use strict";s.decode=s.parse=e("./decode"),s.encode=s.stringify=e("./encode")},{"./decode":90,"./encode":91}],93:[function(e,t,s){t.exports=e("./lib/_stream_duplex.js")},{"./lib/_stream_duplex.js":94}],94:[function(e,t,s){"use strict";var i=e("process-nextick-args"),r=Object.keys||function(e){var t=[];for(var s in e)t.push(s);return t};t.exports=l;var a=e("core-util-is");a.inherits=e("inherits");var n=e("./_stream_readable"),o=e("./_stream_writable");a.inherits(l,n);for(var c=r(o.prototype),d=0;d<c.length;d++){var h=c[d];l.prototype[h]||(l.prototype[h]=o.prototype[h])}function l(e){if(!(this instanceof l))return new l(e);n.call(this,e),o.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",u)}function u(){this.allowHalfOpen||this._writableState.ended||i.nextTick(f,this)}function f(e){e.end()}Object.defineProperty(l.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(l.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),l.prototype._destroy=function(e,t){this.push(null),this.end(),i.nextTick(t,e)}},{"./_stream_readable":96,"./_stream_writable":98,"core-util-is":68,inherits:72,"process-nextick-args":87}],95:[function(e,t,s){"use strict";t.exports=a;var i=e("./_stream_transform"),r=e("core-util-is");function a(e){if(!(this instanceof a))return new a(e);i.call(this,e)}r.inherits=e("inherits"),r.inherits(a,i),a.prototype._transform=function(e,t,s){s(null,e)}},{"./_stream_transform":97,"core-util-is":68,inherits:72}],96:[function(e,t,s){(function(s,i){"use strict";var r=e("process-nextick-args");t.exports=v;var a,n=e("isarray");v.ReadableState=b;e("events").EventEmitter;var o=function(e,t){return e.listeners(t).length},c=e("./internal/streams/stream"),d=e("safe-buffer").Buffer,h=i.Uint8Array||function(){};var l=e("core-util-is");l.inherits=e("inherits");var u=e("util"),f=void 0;f=u&&u.debuglog?u.debuglog("stream"):function(){};var p,m=e("./internal/streams/BufferList"),g=e("./internal/streams/destroy");l.inherits(v,c);var y=["error","close","destroy","pause","resume"];function b(t,s){t=t||{};var i=s instanceof(a=a||e("./_stream_duplex"));this.objectMode=!!t.objectMode,i&&(this.objectMode=this.objectMode||!!t.readableObjectMode);var r=t.highWaterMark,n=t.readableHighWaterMark,o=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:i&&(n||0===n)?n:o,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new m,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=t.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,t.encoding&&(p||(p=e("string_decoder/").StringDecoder),this.decoder=new p(t.encoding),this.encoding=t.encoding)}function v(t){if(a=a||e("./_stream_duplex"),!(this instanceof v))return new v(t);this._readableState=new b(t,this),this.readable=!0,t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy)),c.call(this)}function w(e,t,s,i,r){var a,n=e._readableState;null===t?(n.reading=!1,function(e,t){if(t.ended)return;if(t.decoder){var s=t.decoder.end();s&&s.length&&(t.buffer.push(s),t.length+=t.objectMode?1:s.length)}t.ended=!0,O(e)}(e,n)):(r||(a=function(e,t){var s;i=t,d.isBuffer(i)||i instanceof h||"string"==typeof t||void 0===t||e.objectMode||(s=new TypeError("Invalid non-string/buffer chunk"));var i;return s}(n,t)),a?e.emit("error",a):n.objectMode||t&&t.length>0?("string"==typeof t||n.objectMode||Object.getPrototypeOf(t)===d.prototype||(t=function(e){return d.from(e)}(t)),i?n.endEmitted?e.emit("error",new Error("stream.unshift() after end event")):S(e,n,t,!0):n.ended?e.emit("error",new Error("stream.push() after EOF")):(n.reading=!1,n.decoder&&!s?(t=n.decoder.write(t),n.objectMode||0!==t.length?S(e,n,t,!1):x(e,n)):S(e,n,t,!1))):i||(n.reading=!1));return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(n)}function S(e,t,s,i){t.flowing&&0===t.length&&!t.sync?(e.emit("data",s),e.read(0)):(t.length+=t.objectMode?1:s.length,i?t.buffer.unshift(s):t.buffer.push(s),t.needReadable&&O(e)),x(e,t)}Object.defineProperty(v.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),v.prototype.destroy=g.destroy,v.prototype._undestroy=g.undestroy,v.prototype._destroy=function(e,t){this.push(null),t(e)},v.prototype.push=function(e,t){var s,i=this._readableState;return i.objectMode?s=!0:"string"==typeof e&&((t=t||i.defaultEncoding)!==i.encoding&&(e=d.from(e,t),t=""),s=!0),w(this,e,t,!1,s)},v.prototype.unshift=function(e){return w(this,e,null,!0,!1)},v.prototype.isPaused=function(){return!1===this._readableState.flowing},v.prototype.setEncoding=function(t){return p||(p=e("string_decoder/").StringDecoder),this._readableState.decoder=new p(t),this._readableState.encoding=t,this};var k=8388608;function T(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!=e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=k?e=k:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function O(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(f("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?r.nextTick(_,e):_(e))}function _(e){f("emit readable"),e.emit("readable"),P(e)}function x(e,t){t.readingMore||(t.readingMore=!0,r.nextTick(M,e,t))}function M(e,t){for(var s=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(f("maybeReadMore read 0"),e.read(0),s!==t.length);)s=t.length;t.readingMore=!1}function I(e){f("readable nexttick read 0"),e.read(0)}function C(e,t){t.reading||(f("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),P(e),t.flowing&&!t.reading&&e.read(0)}function P(e){var t=e._readableState;for(f("flow",t.flowing);t.flowing&&null!==e.read(););}function A(e,t){return 0===t.length?null:(t.objectMode?s=t.buffer.shift():!e||e>=t.length?(s=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):s=function(e,t,s){var i;e<t.head.data.length?(i=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):i=e===t.head.data.length?t.shift():s?function(e,t){var s=t.head,i=1,r=s.data;e-=r.length;for(;s=s.next;){var a=s.data,n=e>a.length?a.length:e;if(n===a.length?r+=a:r+=a.slice(0,e),0===(e-=n)){n===a.length?(++i,s.next?t.head=s.next:t.head=t.tail=null):(t.head=s,s.data=a.slice(n));break}++i}return t.length-=i,r}(e,t):function(e,t){var s=d.allocUnsafe(e),i=t.head,r=1;i.data.copy(s),e-=i.data.length;for(;i=i.next;){var a=i.data,n=e>a.length?a.length:e;if(a.copy(s,s.length-e,0,n),0===(e-=n)){n===a.length?(++r,i.next?t.head=i.next:t.head=t.tail=null):(t.head=i,i.data=a.slice(n));break}++r}return t.length-=r,s}(e,t);return i}(e,t.buffer,t.decoder),s);var s}function N(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,r.nextTick(V,t,e))}function V(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function B(e,t){for(var s=0,i=e.length;s<i;s++)if(e[s]===t)return s;return-1}v.prototype.read=function(e){f("read",e),e=parseInt(e,10);var t=this._readableState,s=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return f("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?N(this):O(this),null;if(0===(e=T(e,t))&&t.ended)return 0===t.length&&N(this),null;var i,r=t.needReadable;return f("need readable",r),(0===t.length||t.length-e<t.highWaterMark)&&f("length less than watermark",r=!0),t.ended||t.reading?f("reading or ended",r=!1):r&&(f("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=T(s,t))),null===(i=e>0?A(e,t):null)?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),s!==e&&t.ended&&N(this)),null!==i&&this.emit("data",i),i},v.prototype._read=function(e){this.emit("error",new Error("_read() is not implemented"))},v.prototype.pipe=function(e,t){var i=this,a=this._readableState;switch(a.pipesCount){case 0:a.pipes=e;break;case 1:a.pipes=[a.pipes,e];break;default:a.pipes.push(e)}a.pipesCount+=1,f("pipe count=%d opts=%j",a.pipesCount,t);var c=(!t||!1!==t.end)&&e!==s.stdout&&e!==s.stderr?h:v;function d(t,s){f("onunpipe"),t===i&&s&&!1===s.hasUnpiped&&(s.hasUnpiped=!0,f("cleanup"),e.removeListener("close",y),e.removeListener("finish",b),e.removeListener("drain",l),e.removeListener("error",g),e.removeListener("unpipe",d),i.removeListener("end",h),i.removeListener("end",v),i.removeListener("data",m),u=!0,!a.awaitDrain||e._writableState&&!e._writableState.needDrain||l())}function h(){f("onend"),e.end()}a.endEmitted?r.nextTick(c):i.once("end",c),e.on("unpipe",d);var l=function(e){return function(){var t=e._readableState;f("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&o(e,"data")&&(t.flowing=!0,P(e))}}(i);e.on("drain",l);var u=!1;var p=!1;function m(t){f("ondata"),p=!1,!1!==e.write(t)||p||((1===a.pipesCount&&a.pipes===e||a.pipesCount>1&&-1!==B(a.pipes,e))&&!u&&(f("false write response, pause",i._readableState.awaitDrain),i._readableState.awaitDrain++,p=!0),i.pause())}function g(t){f("onerror",t),v(),e.removeListener("error",g),0===o(e,"error")&&e.emit("error",t)}function y(){e.removeListener("finish",b),v()}function b(){f("onfinish"),e.removeListener("close",y),v()}function v(){f("unpipe"),i.unpipe(e)}return i.on("data",m),function(e,t,s){if("function"==typeof e.prependListener)return e.prependListener(t,s);e._events&&e._events[t]?n(e._events[t])?e._events[t].unshift(s):e._events[t]=[s,e._events[t]]:e.on(t,s)}(e,"error",g),e.once("close",y),e.once("finish",b),e.emit("pipe",i),a.flowing||(f("pipe resume"),i.resume()),e},v.prototype.unpipe=function(e){var t=this._readableState,s={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes||(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,s)),this;if(!e){var i=t.pipes,r=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var a=0;a<r;a++)i[a].emit("unpipe",this,s);return this}var n=B(t.pipes,e);return-1===n||(t.pipes.splice(n,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,s)),this},v.prototype.on=function(e,t){var s=c.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var i=this._readableState;i.endEmitted||i.readableListening||(i.readableListening=i.needReadable=!0,i.emittedReadable=!1,i.reading?i.length&&O(this):r.nextTick(I,this))}return s},v.prototype.addListener=v.prototype.on,v.prototype.resume=function(){var e=this._readableState;return e.flowing||(f("resume"),e.flowing=!0,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,r.nextTick(C,e,t))}(this,e)),this},v.prototype.pause=function(){return f("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(f("pause"),this._readableState.flowing=!1,this.emit("pause")),this},v.prototype.wrap=function(e){var t=this,s=this._readableState,i=!1;for(var r in e.on("end",(function(){if(f("wrapped end"),s.decoder&&!s.ended){var e=s.decoder.end();e&&e.length&&t.push(e)}t.push(null)})),e.on("data",(function(r){(f("wrapped data"),s.decoder&&(r=s.decoder.write(r)),s.objectMode&&null==r)||(s.objectMode||r&&r.length)&&(t.push(r)||(i=!0,e.pause()))})),e)void 0===this[r]&&"function"==typeof e[r]&&(this[r]=function(t){return function(){return e[t].apply(e,arguments)}}(r));for(var a=0;a<y.length;a++)e.on(y[a],this.emit.bind(this,y[a]));return this._read=function(t){f("wrapped _read",t),i&&(i=!1,e.resume())},this},Object.defineProperty(v.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),v._fromList=A}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./_stream_duplex":94,"./internal/streams/BufferList":99,"./internal/streams/destroy":100,"./internal/streams/stream":101,_process:88,"core-util-is":68,events:69,inherits:72,isarray:74,"process-nextick-args":87,"safe-buffer":102,"string_decoder/":103,util:62}],97:[function(e,t,s){"use strict";t.exports=n;var i=e("./_stream_duplex"),r=e("core-util-is");function a(e,t){var s=this._transformState;s.transforming=!1;var i=s.writecb;if(!i)return this.emit("error",new Error("write callback called multiple times"));s.writechunk=null,s.writecb=null,null!=t&&this.push(t),i(e);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}function n(e){if(!(this instanceof n))return new n(e);i.call(this,e),this._transformState={afterTransform:a.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",o)}function o(){var e=this;"function"==typeof this._flush?this._flush((function(t,s){c(e,t,s)})):c(this,null,null)}function c(e,t,s){if(t)return e.emit("error",t);if(null!=s&&e.push(s),e._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(e._transformState.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}r.inherits=e("inherits"),r.inherits(n,i),n.prototype.push=function(e,t){return this._transformState.needTransform=!1,i.prototype.push.call(this,e,t)},n.prototype._transform=function(e,t,s){throw new Error("_transform() is not implemented")},n.prototype._write=function(e,t,s){var i=this._transformState;if(i.writecb=s,i.writechunk=e,i.writeencoding=t,!i.transforming){var r=this._readableState;(i.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},n.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},n.prototype._destroy=function(e,t){var s=this;i.prototype._destroy.call(this,e,(function(e){t(e),s.emit("close")}))}},{"./_stream_duplex":94,"core-util-is":68,inherits:72}],98:[function(e,t,s){(function(s,i,r){"use strict";var a=e("process-nextick-args");function n(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,s){var i=e.entry;e.entry=null;for(;i;){var r=i.callback;t.pendingcb--,r(s),i=i.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}(t,e)}}t.exports=b;var o,c=!s.browser&&["v0.10","v0.9."].indexOf(s.version.slice(0,5))>-1?r:a.nextTick;b.WritableState=y;var d=e("core-util-is");d.inherits=e("inherits");var h={deprecate:e("util-deprecate")},l=e("./internal/streams/stream"),u=e("safe-buffer").Buffer,f=i.Uint8Array||function(){};var p,m=e("./internal/streams/destroy");function g(){}function y(t,s){o=o||e("./_stream_duplex"),t=t||{};var i=s instanceof o;this.objectMode=!!t.objectMode,i&&(this.objectMode=this.objectMode||!!t.writableObjectMode);var r=t.highWaterMark,d=t.writableHighWaterMark,h=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:i&&(d||0===d)?d:h,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var l=!1===t.decodeStrings;this.decodeStrings=!l,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var s=e._writableState,i=s.sync,r=s.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(s),t)!function(e,t,s,i,r){--t.pendingcb,s?(a.nextTick(r,i),a.nextTick(O,e,t),e._writableState.errorEmitted=!0,e.emit("error",i)):(r(i),e._writableState.errorEmitted=!0,e.emit("error",i),O(e,t))}(e,s,i,t,r);else{var n=k(s);n||s.corked||s.bufferProcessing||!s.bufferedRequest||S(e,s),i?c(w,e,s,n,r):w(e,s,n,r)}}(s,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new n(this)}function b(t){if(o=o||e("./_stream_duplex"),!(p.call(b,this)||this instanceof o))return new b(t);this._writableState=new y(t,this),this.writable=!0,t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final)),l.call(this)}function v(e,t,s,i,r,a,n){t.writelen=i,t.writecb=n,t.writing=!0,t.sync=!0,s?e._writev(r,t.onwrite):e._write(r,a,t.onwrite),t.sync=!1}function w(e,t,s,i){s||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,i(),O(e,t)}function S(e,t){t.bufferProcessing=!0;var s=t.bufferedRequest;if(e._writev&&s&&s.next){var i=t.bufferedRequestCount,r=new Array(i),a=t.corkedRequestsFree;a.entry=s;for(var o=0,c=!0;s;)r[o]=s,s.isBuf||(c=!1),s=s.next,o+=1;r.allBuffers=c,v(e,t,!0,t.length,r,"",a.finish),t.pendingcb++,t.lastBufferedRequest=null,a.next?(t.corkedRequestsFree=a.next,a.next=null):t.corkedRequestsFree=new n(t),t.bufferedRequestCount=0}else{for(;s;){var d=s.chunk,h=s.encoding,l=s.callback;if(v(e,t,!1,t.objectMode?1:d.length,d,h,l),s=s.next,t.bufferedRequestCount--,t.writing)break}null===s&&(t.lastBufferedRequest=null)}t.bufferedRequest=s,t.bufferProcessing=!1}function k(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function T(e,t){e._final((function(s){t.pendingcb--,s&&e.emit("error",s),t.prefinished=!0,e.emit("prefinish"),O(e,t)}))}function O(e,t){var s=k(t);return s&&(!function(e,t){t.prefinished||t.finalCalled||("function"==typeof e._final?(t.pendingcb++,t.finalCalled=!0,a.nextTick(T,e,t)):(t.prefinished=!0,e.emit("prefinish")))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"))),s}d.inherits(b,l),y.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(y.prototype,"buffer",{get:h.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(p=Function.prototype[Symbol.hasInstance],Object.defineProperty(b,Symbol.hasInstance,{value:function(e){return!!p.call(this,e)||this===b&&(e&&e._writableState instanceof y)}})):p=function(e){return e instanceof this},b.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},b.prototype.write=function(e,t,s){var i,r=this._writableState,n=!1,o=!r.objectMode&&(i=e,u.isBuffer(i)||i instanceof f);return o&&!u.isBuffer(e)&&(e=function(e){return u.from(e)}(e)),"function"==typeof t&&(s=t,t=null),o?t="buffer":t||(t=r.defaultEncoding),"function"!=typeof s&&(s=g),r.ended?function(e,t){var s=new Error("write after end");e.emit("error",s),a.nextTick(t,s)}(this,s):(o||function(e,t,s,i){var r=!0,n=!1;return null===s?n=new TypeError("May not write null values to stream"):"string"==typeof s||void 0===s||t.objectMode||(n=new TypeError("Invalid non-string/buffer chunk")),n&&(e.emit("error",n),a.nextTick(i,n),r=!1),r}(this,r,e,s))&&(r.pendingcb++,n=function(e,t,s,i,r,a){if(!s){var n=function(e,t,s){e.objectMode||!1===e.decodeStrings||"string"!=typeof t||(t=u.from(t,s));return t}(t,i,r);i!==n&&(s=!0,r="buffer",i=n)}var o=t.objectMode?1:i.length;t.length+=o;var c=t.length<t.highWaterMark;c||(t.needDrain=!0);if(t.writing||t.corked){var d=t.lastBufferedRequest;t.lastBufferedRequest={chunk:i,encoding:r,isBuf:s,callback:a,next:null},d?d.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else v(e,t,!1,o,i,r,a);return c}(this,r,o,e,t,s)),n},b.prototype.cork=function(){this._writableState.corked++},b.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||S(this,e))},b.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(b.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),b.prototype._write=function(e,t,s){s(new Error("_write() is not implemented"))},b.prototype._writev=null,b.prototype.end=function(e,t,s){var i=this._writableState;"function"==typeof e?(s=e,e=null,t=null):"function"==typeof t&&(s=t,t=null),null!=e&&this.write(e,t),i.corked&&(i.corked=1,this.uncork()),i.ending||i.finished||function(e,t,s){t.ending=!0,O(e,t),s&&(t.finished?a.nextTick(s):e.once("finish",s));t.ended=!0,e.writable=!1}(this,i,s)},Object.defineProperty(b.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),b.prototype.destroy=m.destroy,b.prototype._undestroy=m.undestroy,b.prototype._destroy=function(e,t){this.end(),t(e)}}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("timers").setImmediate)},{"./_stream_duplex":94,"./internal/streams/destroy":100,"./internal/streams/stream":101,_process:88,"core-util-is":68,inherits:72,"process-nextick-args":87,"safe-buffer":102,timers:113,"util-deprecate":117}],99:[function(e,t,s){"use strict";var i=e("safe-buffer").Buffer,r=e("util");t.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}return e.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},e.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},e.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},e.prototype.clear=function(){this.head=this.tail=null,this.length=0},e.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,s=""+t.data;t=t.next;)s+=e+t.data;return s},e.prototype.concat=function(e){if(0===this.length)return i.alloc(0);if(1===this.length)return this.head.data;for(var t,s,r,a=i.allocUnsafe(e>>>0),n=this.head,o=0;n;)t=n.data,s=a,r=o,t.copy(s,r),o+=n.data.length,n=n.next;return a},e}(),r&&r.inspect&&r.inspect.custom&&(t.exports.prototype[r.inspect.custom]=function(){var e=r.inspect({length:this.length});return this.constructor.name+" "+e})},{"safe-buffer":102,util:62}],100:[function(e,t,s){"use strict";var i=e("process-nextick-args");function r(e,t){e.emit("error",t)}t.exports={destroy:function(e,t){var s=this,a=this._readableState&&this._readableState.destroyed,n=this._writableState&&this._writableState.destroyed;return a||n?(t?t(e):!e||this._writableState&&this._writableState.errorEmitted||i.nextTick(r,this,e),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,(function(e){!t&&e?(i.nextTick(r,s,e),s._writableState&&(s._writableState.errorEmitted=!0)):t&&t(e)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},{"process-nextick-args":87}],101:[function(e,t,s){t.exports=e("events").EventEmitter},{events:69}],102:[function(e,t,s){var i=e("buffer"),r=i.Buffer;function a(e,t){for(var s in e)t[s]=e[s]}function n(e,t,s){return r(e,t,s)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?t.exports=i:(a(i,s),s.Buffer=n),a(r,n),n.from=function(e,t,s){if("number"==typeof e)throw new TypeError("Argument must not be a number");return r(e,t,s)},n.alloc=function(e,t,s){if("number"!=typeof e)throw new TypeError("Argument must be a number");var i=r(e);return void 0!==t?"string"==typeof s?i.fill(t,s):i.fill(t):i.fill(0),i},n.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r(e)},n.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i.SlowBuffer(e)}},{buffer:65}],103:[function(e,t,s){"use strict";var i=e("safe-buffer").Buffer,r=i.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function a(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!=typeof t&&(i.isEncoding===r||!r(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=c,this.end=d,t=4;break;case"utf8":this.fillLast=o,t=4;break;case"base64":this.text=h,this.end=l,t=3;break;default:return this.write=u,void(this.end=f)}this.lastNeed=0,this.lastTotal=0,this.lastChar=i.allocUnsafe(t)}function n(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function o(e){var t=this.lastTotal-this.lastNeed,s=function(e,t,s){if(128!=(192&t[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&t.length>1){if(128!=(192&t[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&t.length>2&&128!=(192&t[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==s?s:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function c(e,t){if((e.length-t)%2==0){var s=e.toString("utf16le",t);if(s){var i=s.charCodeAt(s.length-1);if(i>=55296&&i<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],s.slice(0,-1)}return s}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function d(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var s=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,s)}return t}function h(e,t){var s=(e.length-t)%3;return 0===s?e.toString("base64",t):(this.lastNeed=3-s,this.lastTotal=3,1===s?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-s))}function l(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function u(e){return e.toString(this.encoding)}function f(e){return e&&e.length?this.write(e):""}s.StringDecoder=a,a.prototype.write=function(e){if(0===e.length)return"";var t,s;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";s=this.lastNeed,this.lastNeed=0}else s=0;return s<e.length?t?t+this.text(e,s):this.text(e,s):t||""},a.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"�":t},a.prototype.text=function(e,t){var s=function(e,t,s){var i=t.length-1;if(i<s)return 0;var r=n(t[i]);if(r>=0)return r>0&&(e.lastNeed=r-1),r;if(--i<s||-2===r)return 0;if(r=n(t[i]),r>=0)return r>0&&(e.lastNeed=r-2),r;if(--i<s||-2===r)return 0;if(r=n(t[i]),r>=0)return r>0&&(2===r?r=0:e.lastNeed=r-3),r;return 0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=s;var i=e.length-(s-this.lastNeed);return e.copy(this.lastChar,0,i),e.toString("utf8",t,i)},a.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},{"safe-buffer":102}],104:[function(e,t,s){t.exports=e("./readable").PassThrough},{"./readable":105}],105:[function(e,t,s){(s=t.exports=e("./lib/_stream_readable.js")).Stream=s,s.Readable=s,s.Writable=e("./lib/_stream_writable.js"),s.Duplex=e("./lib/_stream_duplex.js"),s.Transform=e("./lib/_stream_transform.js"),s.PassThrough=e("./lib/_stream_passthrough.js")},{"./lib/_stream_duplex.js":94,"./lib/_stream_passthrough.js":95,"./lib/_stream_readable.js":96,"./lib/_stream_transform.js":97,"./lib/_stream_writable.js":98}],106:[function(e,t,s){t.exports=e("./readable").Transform},{"./readable":105}],107:[function(e,t,s){t.exports=e("./lib/_stream_writable.js")},{"./lib/_stream_writable.js":98}],108:[function(e,t,s){t.exports=r;var i=e("events").EventEmitter;function r(){i.call(this)}e("inherits")(r,i),r.Readable=e("readable-stream/readable.js"),r.Writable=e("readable-stream/writable.js"),r.Duplex=e("readable-stream/duplex.js"),r.Transform=e("readable-stream/transform.js"),r.PassThrough=e("readable-stream/passthrough.js"),r.Stream=r,r.prototype.pipe=function(e,t){var s=this;function r(t){e.writable&&!1===e.write(t)&&s.pause&&s.pause()}function a(){s.readable&&s.resume&&s.resume()}s.on("data",r),e.on("drain",a),e._isStdio||t&&!1===t.end||(s.on("end",o),s.on("close",c));var n=!1;function o(){n||(n=!0,e.end())}function c(){n||(n=!0,"function"==typeof e.destroy&&e.destroy())}function d(e){if(h(),0===i.listenerCount(this,"error"))throw e}function h(){s.removeListener("data",r),e.removeListener("drain",a),s.removeListener("end",o),s.removeListener("close",c),s.removeListener("error",d),e.removeListener("error",d),s.removeListener("end",h),s.removeListener("close",h),e.removeListener("close",h)}return s.on("error",d),e.on("error",d),s.on("end",h),s.on("close",h),e.on("close",h),e.emit("pipe",s),e}},{events:69,inherits:72,"readable-stream/duplex.js":93,"readable-stream/passthrough.js":104,"readable-stream/readable.js":105,"readable-stream/transform.js":106,"readable-stream/writable.js":107}],109:[function(e,t,s){(function(t){var i=e("./lib/request"),r=e("./lib/response"),a=e("xtend"),n=e("builtin-status-codes"),o=e("url"),c=s;c.request=function(e,s){e="string"==typeof e?o.parse(e):a(e);var r=-1===t.location.protocol.search(/^https?:$/)?"http:":"",n=e.protocol||r,c=e.hostname||e.host,d=e.port,h=e.path||"/";c&&-1!==c.indexOf(":")&&(c="["+c+"]"),e.url=(c?n+"//"+c:"")+(d?":"+d:"")+h,e.method=(e.method||"GET").toUpperCase(),e.headers=e.headers||{};var l=new i(e);return s&&l.on("response",s),l},c.get=function(e,t){var s=c.request(e,t);return s.end(),s},c.ClientRequest=i,c.IncomingMessage=r.IncomingMessage,c.Agent=function(){},c.Agent.defaultMaxSockets=4,c.globalAgent=new c.Agent,c.STATUS_CODES=n,c.METHODS=["CHECKOUT","CONNECT","COPY","DELETE","GET","HEAD","LOCK","M-SEARCH","MERGE","MKACTIVITY","MKCOL","MOVE","NOTIFY","OPTIONS","PATCH","POST","PROPFIND","PROPPATCH","PURGE","PUT","REPORT","SEARCH","SUBSCRIBE","TRACE","UNLOCK","UNSUBSCRIBE"]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./lib/request":111,"./lib/response":112,"builtin-status-codes":66,url:115,xtend:122}],110:[function(e,t,s){(function(e){s.fetch=o(e.fetch)&&o(e.ReadableStream),s.writableStream=o(e.WritableStream),s.abortController=o(e.AbortController),s.blobConstructor=!1;try{new Blob([new ArrayBuffer(1)]),s.blobConstructor=!0}catch(e){}var t;function i(){if(void 0!==t)return t;if(e.XMLHttpRequest){t=new e.XMLHttpRequest;try{t.open("GET",e.XDomainRequest?"/":"https://example.com")}catch(e){t=null}}else t=null;return t}function r(e){var t=i();if(!t)return!1;try{return t.responseType=e,t.responseType===e}catch(e){}return!1}var a=void 0!==e.ArrayBuffer,n=a&&o(e.ArrayBuffer.prototype.slice);function o(e){return"function"==typeof e}s.arraybuffer=s.fetch||a&&r("arraybuffer"),s.msstream=!s.fetch&&n&&r("ms-stream"),s.mozchunkedarraybuffer=!s.fetch&&a&&r("moz-chunked-arraybuffer"),s.overrideMimeType=s.fetch||!!i()&&o(i().overrideMimeType),s.vbArray=o(e.VBArray),t=null}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],111:[function(e,t,s){(function(s,i,r){var a=e("./capability"),n=e("inherits"),o=e("./response"),c=e("readable-stream"),d=e("to-arraybuffer"),h=o.IncomingMessage,l=o.readyStates;var u=t.exports=function(e){var t,s=this;c.Writable.call(s),s._opts=e,s._body=[],s._headers={},e.auth&&s.setHeader("Authorization","Basic "+new r(e.auth).toString("base64")),Object.keys(e.headers).forEach((function(t){s.setHeader(t,e.headers[t])}));var i=!0;if("disable-fetch"===e.mode||"requestTimeout"in e&&!a.abortController)i=!1,t=!0;else if("prefer-streaming"===e.mode)t=!1;else if("allow-wrong-content-type"===e.mode)t=!a.overrideMimeType;else{if(e.mode&&"default"!==e.mode&&"prefer-fast"!==e.mode)throw new Error("Invalid value for opts.mode");t=!0}s._mode=function(e,t){return a.fetch&&t?"fetch":a.mozchunkedarraybuffer?"moz-chunked-arraybuffer":a.msstream?"ms-stream":a.arraybuffer&&e?"arraybuffer":a.vbArray&&e?"text:vbarray":"text"}(t,i),s._fetchTimer=null,s.on("finish",(function(){s._onFinish()}))};n(u,c.Writable),u.prototype.setHeader=function(e,t){var s=e.toLowerCase();-1===f.indexOf(s)&&(this._headers[s]={name:e,value:t})},u.prototype.getHeader=function(e){var t=this._headers[e.toLowerCase()];return t?t.value:null},u.prototype.removeHeader=function(e){delete this._headers[e.toLowerCase()]},u.prototype._onFinish=function(){var e=this;if(!e._destroyed){var t=e._opts,n=e._headers,o=null;"GET"!==t.method&&"HEAD"!==t.method&&(o=a.arraybuffer?d(r.concat(e._body)):a.blobConstructor?new i.Blob(e._body.map((function(e){return d(e)})),{type:(n["content-type"]||{}).value||""}):r.concat(e._body).toString());var c=[];if(Object.keys(n).forEach((function(e){var t=n[e].name,s=n[e].value;Array.isArray(s)?s.forEach((function(e){c.push([t,e])})):c.push([t,s])})),"fetch"===e._mode){var h=null;if(a.abortController){var u=new AbortController;h=u.signal,e._fetchAbortController=u,"requestTimeout"in t&&0!==t.requestTimeout&&(e._fetchTimer=i.setTimeout((function(){e.emit("requestTimeout"),e._fetchAbortController&&e._fetchAbortController.abort()}),t.requestTimeout))}i.fetch(e._opts.url,{method:e._opts.method,headers:c,body:o||void 0,mode:"cors",credentials:t.withCredentials?"include":"same-origin",signal:h}).then((function(t){e._fetchResponse=t,e._connect()}),(function(t){i.clearTimeout(e._fetchTimer),e._destroyed||e.emit("error",t)}))}else{var f=e._xhr=new i.XMLHttpRequest;try{f.open(e._opts.method,e._opts.url,!0)}catch(t){return void s.nextTick((function(){e.emit("error",t)}))}"responseType"in f&&(f.responseType=e._mode.split(":")[0]),"withCredentials"in f&&(f.withCredentials=!!t.withCredentials),"text"===e._mode&&"overrideMimeType"in f&&f.overrideMimeType("text/plain; charset=x-user-defined"),"requestTimeout"in t&&(f.timeout=t.requestTimeout,f.ontimeout=function(){e.emit("requestTimeout")}),c.forEach((function(e){f.setRequestHeader(e[0],e[1])})),e._response=null,f.onreadystatechange=function(){switch(f.readyState){case l.LOADING:case l.DONE:e._onXHRProgress()}},"moz-chunked-arraybuffer"===e._mode&&(f.onprogress=function(){e._onXHRProgress()}),f.onerror=function(){e._destroyed||e.emit("error",new Error("XHR error"))};try{f.send(o)}catch(t){return void s.nextTick((function(){e.emit("error",t)}))}}}},u.prototype._onXHRProgress=function(){var e=this;(function(e){try{var t=e.status;return null!==t&&0!==t}catch(e){return!1}})(e._xhr)&&!e._destroyed&&(e._response||e._connect(),e._response._onXHRProgress())},u.prototype._connect=function(){var e=this;e._destroyed||(e._response=new h(e._xhr,e._fetchResponse,e._mode,e._fetchTimer),e._response.on("error",(function(t){e.emit("error",t)})),e.emit("response",e._response))},u.prototype._write=function(e,t,s){this._body.push(e),s()},u.prototype.abort=u.prototype.destroy=function(){var e=this;e._destroyed=!0,i.clearTimeout(e._fetchTimer),e._response&&(e._response._destroyed=!0),e._xhr?e._xhr.abort():e._fetchAbortController&&e._fetchAbortController.abort()},u.prototype.end=function(e,t,s){"function"==typeof e&&(s=e,e=void 0),c.Writable.prototype.end.call(this,e,t,s)},u.prototype.flushHeaders=function(){},u.prototype.setTimeout=function(){},u.prototype.setNoDelay=function(){},u.prototype.setSocketKeepAlive=function(){};var f=["accept-charset","accept-encoding","access-control-request-headers","access-control-request-method","connection","content-length","cookie","cookie2","date","dnt","expect","host","keep-alive","origin","referer","te","trailer","transfer-encoding","upgrade","via"]}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer)},{"./capability":110,"./response":112,_process:88,buffer:65,inherits:72,"readable-stream":105,"to-arraybuffer":114}],112:[function(e,t,s){(function(t,i,r){var a=e("./capability"),n=e("inherits"),o=e("readable-stream"),c=s.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4},d=s.IncomingMessage=function(e,s,n,c){var d=this;if(o.Readable.call(d),d._mode=n,d.headers={},d.rawHeaders=[],d.trailers={},d.rawTrailers=[],d.on("end",(function(){t.nextTick((function(){d.emit("close")}))})),"fetch"===n){if(d._fetchResponse=s,d.url=s.url,d.statusCode=s.status,d.statusMessage=s.statusText,s.headers.forEach((function(e,t){d.headers[t.toLowerCase()]=e,d.rawHeaders.push(t,e)})),a.writableStream){var h=new WritableStream({write:function(e){return new Promise((function(t,s){d._destroyed?s():d.push(new r(e))?t():d._resumeFetch=t}))},close:function(){i.clearTimeout(c),d._destroyed||d.push(null)},abort:function(e){d._destroyed||d.emit("error",e)}});try{return void s.body.pipeTo(h).catch((function(e){i.clearTimeout(c),d._destroyed||d.emit("error",e)}))}catch(e){}}var l=s.body.getReader();!function e(){l.read().then((function(t){if(!d._destroyed){if(t.done)return i.clearTimeout(c),void d.push(null);d.push(new r(t.value)),e()}})).catch((function(e){i.clearTimeout(c),d._destroyed||d.emit("error",e)}))}()}else{if(d._xhr=e,d._pos=0,d.url=e.responseURL,d.statusCode=e.status,d.statusMessage=e.statusText,e.getAllResponseHeaders().split(/\r?\n/).forEach((function(e){var t=e.match(/^([^:]+):\s*(.*)/);if(t){var s=t[1].toLowerCase();"set-cookie"===s?(void 0===d.headers[s]&&(d.headers[s]=[]),d.headers[s].push(t[2])):void 0!==d.headers[s]?d.headers[s]+=", "+t[2]:d.headers[s]=t[2],d.rawHeaders.push(t[1],t[2])}})),d._charset="x-user-defined",!a.overrideMimeType){var u=d.rawHeaders["mime-type"];if(u){var f=u.match(/;\s*charset=([^;])(;|$)/);f&&(d._charset=f[1].toLowerCase())}d._charset||(d._charset="utf-8")}}};n(d,o.Readable),d.prototype._read=function(){var e=this._resumeFetch;e&&(this._resumeFetch=null,e())},d.prototype._onXHRProgress=function(){var e=this,t=e._xhr,s=null;switch(e._mode){case"text:vbarray":if(t.readyState!==c.DONE)break;try{s=new i.VBArray(t.responseBody).toArray()}catch(e){}if(null!==s){e.push(new r(s));break}case"text":try{s=t.responseText}catch(t){e._mode="text:vbarray";break}if(s.length>e._pos){var a=s.substr(e._pos);if("x-user-defined"===e._charset){for(var n=new r(a.length),o=0;o<a.length;o++)n[o]=255&a.charCodeAt(o);e.push(n)}else e.push(a,e._charset);e._pos=s.length}break;case"arraybuffer":if(t.readyState!==c.DONE||!t.response)break;s=t.response,e.push(new r(new Uint8Array(s)));break;case"moz-chunked-arraybuffer":if(s=t.response,t.readyState!==c.LOADING||!s)break;e.push(new r(new Uint8Array(s)));break;case"ms-stream":if(s=t.response,t.readyState!==c.LOADING)break;var d=new i.MSStreamReader;d.onprogress=function(){d.result.byteLength>e._pos&&(e.push(new r(new Uint8Array(d.result.slice(e._pos)))),e._pos=d.result.byteLength)},d.onload=function(){e.push(null)},d.readAsArrayBuffer(s)}e._xhr.readyState===c.DONE&&"ms-stream"!==e._mode&&e.push(null)}}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer)},{"./capability":110,_process:88,buffer:65,inherits:72,"readable-stream":105}],113:[function(e,t,s){(function(t,i){var r=e("process/browser.js").nextTick,a=Function.prototype.apply,n=Array.prototype.slice,o={},c=0;function d(e,t){this._id=e,this._clearFn=t}s.setTimeout=function(){return new d(a.call(setTimeout,window,arguments),clearTimeout)},s.setInterval=function(){return new d(a.call(setInterval,window,arguments),clearInterval)},s.clearTimeout=s.clearInterval=function(e){e.close()},d.prototype.unref=d.prototype.ref=function(){},d.prototype.close=function(){this._clearFn.call(window,this._id)},s.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},s.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},s._unrefActive=s.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},s.setImmediate="function"==typeof t?t:function(e){var t=c++,i=!(arguments.length<2)&&n.call(arguments,1);return o[t]=!0,r((function(){o[t]&&(i?e.apply(null,i):e.call(null),s.clearImmediate(t))})),t},s.clearImmediate="function"==typeof i?i:function(e){delete o[e]}}).call(this,e("timers").setImmediate,e("timers").clearImmediate)},{"process/browser.js":88,timers:113}],114:[function(e,t,s){var i=e("buffer").Buffer;t.exports=function(e){if(e instanceof Uint8Array){if(0===e.byteOffset&&e.byteLength===e.buffer.byteLength)return e.buffer;if("function"==typeof e.buffer.slice)return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}if(i.isBuffer(e)){for(var t=new Uint8Array(e.length),s=e.length,r=0;r<s;r++)t[r]=e[r];return t.buffer}throw new Error("Argument must be a Buffer")}},{buffer:65}],115:[function(e,t,s){"use strict";var i=e("punycode"),r=e("./util");function a(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}s.parse=v,s.resolve=function(e,t){return v(e,!1,!0).resolve(t)},s.resolveObject=function(e,t){return e?v(e,!1,!0).resolveObject(t):t},s.format=function(e){r.isString(e)&&(e=v(e));return e instanceof a?e.format():a.prototype.format.call(e)},s.Url=a;var n=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,c=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,d=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),h=["'"].concat(d),l=["%","/","?",";","#"].concat(h),u=["/","?","#"],f=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},g={javascript:!0,"javascript:":!0},y={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},b=e("querystring");function v(e,t,s){if(e&&r.isObject(e)&&e instanceof a)return e;var i=new a;return i.parse(e,t,s),i}a.prototype.parse=function(e,t,s){if(!r.isString(e))throw new TypeError("Parameter 'url' must be a string, not "+typeof e);var a=e.indexOf("?"),o=-1!==a&&a<e.indexOf("#")?"?":"#",d=e.split(o);d[0]=d[0].replace(/\\/g,"/");var v=e=d.join(o);if(v=v.trim(),!s&&1===e.split("#").length){var w=c.exec(v);if(w)return this.path=v,this.href=v,this.pathname=w[1],w[2]?(this.search=w[2],this.query=t?b.parse(this.search.substr(1)):this.search.substr(1)):t&&(this.search="",this.query={}),this}var S=n.exec(v);if(S){var k=(S=S[0]).toLowerCase();this.protocol=k,v=v.substr(S.length)}if(s||S||v.match(/^\/\/[^@\/]+@[^@\/]+/)){var T="//"===v.substr(0,2);!T||S&&g[S]||(v=v.substr(2),this.slashes=!0)}if(!g[S]&&(T||S&&!y[S])){for(var O,_,x=-1,M=0;M<u.length;M++){-1!==(I=v.indexOf(u[M]))&&(-1===x||I<x)&&(x=I)}-1!==(_=-1===x?v.lastIndexOf("@"):v.lastIndexOf("@",x))&&(O=v.slice(0,_),v=v.slice(_+1),this.auth=decodeURIComponent(O)),x=-1;for(M=0;M<l.length;M++){var I;-1!==(I=v.indexOf(l[M]))&&(-1===x||I<x)&&(x=I)}-1===x&&(x=v.length),this.host=v.slice(0,x),v=v.slice(x),this.parseHost(),this.hostname=this.hostname||"";var C="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!C)for(var P=this.hostname.split(/\./),A=(M=0,P.length);M<A;M++){var N=P[M];if(N&&!N.match(f)){for(var V="",B=0,E=N.length;B<E;B++)N.charCodeAt(B)>127?V+="x":V+=N[B];if(!V.match(f)){var L=P.slice(0,M),R=P.slice(M+1),D=N.match(p);D&&(L.push(D[1]),R.unshift(D[2])),R.length&&(v="/"+R.join(".")+v),this.hostname=L.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),C||(this.hostname=i.toASCII(this.hostname));var F=this.port?":"+this.port:"",G=this.hostname||"";this.host=G+F,this.href+=this.host,C&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==v[0]&&(v="/"+v))}if(!m[k])for(M=0,A=h.length;M<A;M++){var q=h[M];if(-1!==v.indexOf(q)){var H=encodeURIComponent(q);H===q&&(H=escape(q)),v=v.split(q).join(H)}}var j=v.indexOf("#");-1!==j&&(this.hash=v.substr(j),v=v.slice(0,j));var U=v.indexOf("?");if(-1!==U?(this.search=v.substr(U),this.query=v.substr(U+1),t&&(this.query=b.parse(this.query)),v=v.slice(0,U)):t&&(this.search="",this.query={}),v&&(this.pathname=v),y[k]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){F=this.pathname||"";var z=this.search||"";this.path=F+z}return this.href=this.format(),this},a.prototype.format=function(){var e=this.auth||"";e&&(e=(e=encodeURIComponent(e)).replace(/%3A/i,":"),e+="@");var t=this.protocol||"",s=this.pathname||"",i=this.hash||"",a=!1,n="";this.host?a=e+this.host:this.hostname&&(a=e+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(a+=":"+this.port)),this.query&&r.isObject(this.query)&&Object.keys(this.query).length&&(n=b.stringify(this.query));var o=this.search||n&&"?"+n||"";return t&&":"!==t.substr(-1)&&(t+=":"),this.slashes||(!t||y[t])&&!1!==a?(a="//"+(a||""),s&&"/"!==s.charAt(0)&&(s="/"+s)):a||(a=""),i&&"#"!==i.charAt(0)&&(i="#"+i),o&&"?"!==o.charAt(0)&&(o="?"+o),t+a+(s=s.replace(/[?#]/g,(function(e){return encodeURIComponent(e)})))+(o=o.replace("#","%23"))+i},a.prototype.resolve=function(e){return this.resolveObject(v(e,!1,!0)).format()},a.prototype.resolveObject=function(e){if(r.isString(e)){var t=new a;t.parse(e,!1,!0),e=t}for(var s=new a,i=Object.keys(this),n=0;n<i.length;n++){var o=i[n];s[o]=this[o]}if(s.hash=e.hash,""===e.href)return s.href=s.format(),s;if(e.slashes&&!e.protocol){for(var c=Object.keys(e),d=0;d<c.length;d++){var h=c[d];"protocol"!==h&&(s[h]=e[h])}return y[s.protocol]&&s.hostname&&!s.pathname&&(s.path=s.pathname="/"),s.href=s.format(),s}if(e.protocol&&e.protocol!==s.protocol){if(!y[e.protocol]){for(var l=Object.keys(e),u=0;u<l.length;u++){var f=l[u];s[f]=e[f]}return s.href=s.format(),s}if(s.protocol=e.protocol,e.host||g[e.protocol])s.pathname=e.pathname;else{for(var p=(e.pathname||"").split("/");p.length&&!(e.host=p.shift()););e.host||(e.host=""),e.hostname||(e.hostname=""),""!==p[0]&&p.unshift(""),p.length<2&&p.unshift(""),s.pathname=p.join("/")}if(s.search=e.search,s.query=e.query,s.host=e.host||"",s.auth=e.auth,s.hostname=e.hostname||e.host,s.port=e.port,s.pathname||s.search){var m=s.pathname||"",b=s.search||"";s.path=m+b}return s.slashes=s.slashes||e.slashes,s.href=s.format(),s}var v=s.pathname&&"/"===s.pathname.charAt(0),w=e.host||e.pathname&&"/"===e.pathname.charAt(0),S=w||v||s.host&&e.pathname,k=S,T=s.pathname&&s.pathname.split("/")||[],O=(p=e.pathname&&e.pathname.split("/")||[],s.protocol&&!y[s.protocol]);if(O&&(s.hostname="",s.port=null,s.host&&(""===T[0]?T[0]=s.host:T.unshift(s.host)),s.host="",e.protocol&&(e.hostname=null,e.port=null,e.host&&(""===p[0]?p[0]=e.host:p.unshift(e.host)),e.host=null),S=S&&(""===p[0]||""===T[0])),w)s.host=e.host||""===e.host?e.host:s.host,s.hostname=e.hostname||""===e.hostname?e.hostname:s.hostname,s.search=e.search,s.query=e.query,T=p;else if(p.length)T||(T=[]),T.pop(),T=T.concat(p),s.search=e.search,s.query=e.query;else if(!r.isNullOrUndefined(e.search)){if(O)s.hostname=s.host=T.shift(),(C=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=C.shift(),s.host=s.hostname=C.shift());return s.search=e.search,s.query=e.query,r.isNull(s.pathname)&&r.isNull(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.href=s.format(),s}if(!T.length)return s.pathname=null,s.search?s.path="/"+s.search:s.path=null,s.href=s.format(),s;for(var _=T.slice(-1)[0],x=(s.host||e.host||T.length>1)&&("."===_||".."===_)||""===_,M=0,I=T.length;I>=0;I--)"."===(_=T[I])?T.splice(I,1):".."===_?(T.splice(I,1),M++):M&&(T.splice(I,1),M--);if(!S&&!k)for(;M--;M)T.unshift("..");!S||""===T[0]||T[0]&&"/"===T[0].charAt(0)||T.unshift(""),x&&"/"!==T.join("/").substr(-1)&&T.push("");var C,P=""===T[0]||T[0]&&"/"===T[0].charAt(0);O&&(s.hostname=s.host=P?"":T.length?T.shift():"",(C=!!(s.host&&s.host.indexOf("@")>0)&&s.host.split("@"))&&(s.auth=C.shift(),s.host=s.hostname=C.shift()));return(S=S||s.host&&T.length)&&!P&&T.unshift(""),T.length?s.pathname=T.join("/"):(s.pathname=null,s.path=null),r.isNull(s.pathname)&&r.isNull(s.search)||(s.path=(s.pathname?s.pathname:"")+(s.search?s.search:"")),s.auth=e.auth||s.auth,s.slashes=s.slashes||e.slashes,s.href=s.format(),s},a.prototype.parseHost=function(){var e=this.host,t=o.exec(e);t&&(":"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)}},{"./util":116,punycode:89,querystring:92}],116:[function(e,t,s){"use strict";t.exports={isString:function(e){return"string"==typeof e},isObject:function(e){return"object"==typeof e&&null!==e},isNull:function(e){return null===e},isNullOrUndefined:function(e){return null==e}}},{}],117:[function(e,t,s){(function(e){function s(t){try{if(!e.localStorage)return!1}catch(e){return!1}var s=e.localStorage[t];return null!=s&&"true"===String(s).toLowerCase()}t.exports=function(e,t){if(s("noDeprecation"))return e;var i=!1;return function(){if(!i){if(s("throwDeprecation"))throw new Error(t);s("traceDeprecation")?console.trace(t):console.warn(t),i=!0}return e.apply(this,arguments)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],118:[function(e,t,s){arguments[4][58][0].apply(s,arguments)},{dup:58}],119:[function(e,t,s){arguments[4][59][0].apply(s,arguments)},{dup:59}],120:[function(e,t,s){arguments[4][60][0].apply(s,arguments)},{"./support/isBuffer":119,_process:88,dup:60,inherits:118}],121:[function(e,t,s){"use strict";t.exports=function(){throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}},{}],122:[function(e,t,s){t.exports=function(){for(var e={},t=0;t<arguments.length;t++){var s=arguments[t];for(var r in s)i.call(s,r)&&(e[r]=s[r])}return e};var i=Object.prototype.hasOwnProperty},{}],123:[function(e,t,s){"use strict";const i=e("./js/base/Exchange"),r=e("./js/base/Precise"),a=e("./js/base/functions"),n=e("./js/base/errors"),o="1.90.50";i.ccxtVersion=o;const c={aax:e("./js/aax.js"),ascendex:e("./js/ascendex.js"),bequant:e("./js/bequant.js"),bibox:e("./js/bibox.js"),bigone:e("./js/bigone.js"),binance:e("./js/binance.js"),binancecoinm:e("./js/binancecoinm.js"),binanceus:e("./js/binanceus.js"),binanceusdm:e("./js/binanceusdm.js"),bit2c:e("./js/bit2c.js"),bitbank:e("./js/bitbank.js"),bitbay:e("./js/bitbay.js"),bitbns:e("./js/bitbns.js"),bitcoincom:e("./js/bitcoincom.js"),bitfinex:e("./js/bitfinex.js"),bitfinex2:e("./js/bitfinex2.js"),bitflyer:e("./js/bitflyer.js"),bitforex:e("./js/bitforex.js"),bitget:e("./js/bitget.js"),bithumb:e("./js/bithumb.js"),bitmart:e("./js/bitmart.js"),bitmex:e("./js/bitmex.js"),bitopro:e("./js/bitopro.js"),bitpanda:e("./js/bitpanda.js"),bitrue:e("./js/bitrue.js"),bitso:e("./js/bitso.js"),bitstamp:e("./js/bitstamp.js"),bitstamp1:e("./js/bitstamp1.js"),bittrex:e("./js/bittrex.js"),bitvavo:e("./js/bitvavo.js"),bkex:e("./js/bkex.js"),bl3p:e("./js/bl3p.js"),blockchaincom:e("./js/blockchaincom.js"),btcalpha:e("./js/btcalpha.js"),btcbox:e("./js/btcbox.js"),btcex:e("./js/btcex.js"),btcmarkets:e("./js/btcmarkets.js"),btctradeua:e("./js/btctradeua.js"),btcturk:e("./js/btcturk.js"),buda:e("./js/buda.js"),bw:e("./js/bw.js"),bybit:e("./js/bybit.js"),bytetrade:e("./js/bytetrade.js"),cdax:e("./js/cdax.js"),cex:e("./js/cex.js"),coinbase:e("./js/coinbase.js"),coinbaseprime:e("./js/coinbaseprime.js"),coinbasepro:e("./js/coinbasepro.js"),coincheck:e("./js/coincheck.js"),coinex:e("./js/coinex.js"),coinfalcon:e("./js/coinfalcon.js"),coinmate:e("./js/coinmate.js"),coinone:e("./js/coinone.js"),coinspot:e("./js/coinspot.js"),crex24:e("./js/crex24.js"),cryptocom:e("./js/cryptocom.js"),currencycom:e("./js/currencycom.js"),delta:e("./js/delta.js"),deribit:e("./js/deribit.js"),digifinex:e("./js/digifinex.js"),eqonex:e("./js/eqonex.js"),exmo:e("./js/exmo.js"),flowbtc:e("./js/flowbtc.js"),fmfwio:e("./js/fmfwio.js"),ftx:e("./js/ftx.js"),ftxus:e("./js/ftxus.js"),gate:e("./js/gate.js"),gateio:e("./js/gateio.js"),gemini:e("./js/gemini.js"),hitbtc:e("./js/hitbtc.js"),hitbtc3:e("./js/hitbtc3.js"),hollaex:e("./js/hollaex.js"),huobi:e("./js/huobi.js"),huobijp:e("./js/huobijp.js"),huobipro:e("./js/huobipro.js"),idex:e("./js/idex.js"),independentreserve:e("./js/independentreserve.js"),indodax:e("./js/indodax.js"),itbit:e("./js/itbit.js"),kraken:e("./js/kraken.js"),kucoin:e("./js/kucoin.js"),kucoinfutures:e("./js/kucoinfutures.js"),kuna:e("./js/kuna.js"),latoken:e("./js/latoken.js"),lbank:e("./js/lbank.js"),lbank2:e("./js/lbank2.js"),liquid:e("./js/liquid.js"),luno:e("./js/luno.js"),lykke:e("./js/lykke.js"),mercado:e("./js/mercado.js"),mexc:e("./js/mexc.js"),mexc3:e("./js/mexc3.js"),ndax:e("./js/ndax.js"),novadax:e("./js/novadax.js"),oceanex:e("./js/oceanex.js"),okcoin:e("./js/okcoin.js"),okex:e("./js/okex.js"),okex5:e("./js/okex5.js"),okx:e("./js/okx.js"),paymium:e("./js/paymium.js"),phemex:e("./js/phemex.js"),poloniex:e("./js/poloniex.js"),probit:e("./js/probit.js"),qtrade:e("./js/qtrade.js"),ripio:e("./js/ripio.js"),stex:e("./js/stex.js"),therock:e("./js/therock.js"),tidebit:e("./js/tidebit.js"),tidex:e("./js/tidex.js"),timex:e("./js/timex.js"),upbit:e("./js/upbit.js"),vcc:e("./js/vcc.js"),wavesexchange:e("./js/wavesexchange.js"),wazirx:e("./js/wazirx.js"),whitebit:e("./js/whitebit.js"),woo:e("./js/woo.js"),xena:e("./js/xena.js"),yobit:e("./js/yobit.js"),zaif:e("./js/zaif.js"),zb:e("./js/zb.js"),zipmex:e("./js/zipmex.js"),zonda:e("./js/zonda.js")};t.exports=Object.assign({version:o,Exchange:i,Precise:r,exchanges:Object.keys(c)},c,a,n)},{"./js/aax.js":124,"./js/ascendex.js":125,"./js/base/Exchange":126,"./js/base/Precise":127,"./js/base/errors":129,"./js/base/functions":130,"./js/bequant.js":141,"./js/bibox.js":142,"./js/bigone.js":143,"./js/binance.js":144,"./js/binancecoinm.js":145,"./js/binanceus.js":146,"./js/binanceusdm.js":147,"./js/bit2c.js":148,"./js/bitbank.js":149,"./js/bitbay.js":150,"./js/bitbns.js":151,"./js/bitcoincom.js":152,"./js/bitfinex.js":153,"./js/bitfinex2.js":154,"./js/bitflyer.js":155,"./js/bitforex.js":156,"./js/bitget.js":157,"./js/bithumb.js":158,"./js/bitmart.js":159,"./js/bitmex.js":160,"./js/bitopro.js":161,"./js/bitpanda.js":162,"./js/bitrue.js":163,"./js/bitso.js":164,"./js/bitstamp.js":165,"./js/bitstamp1.js":166,"./js/bittrex.js":167,"./js/bitvavo.js":168,"./js/bkex.js":169,"./js/bl3p.js":170,"./js/blockchaincom.js":171,"./js/btcalpha.js":172,"./js/btcbox.js":173,"./js/btcex.js":174,"./js/btcmarkets.js":175,"./js/btctradeua.js":176,"./js/btcturk.js":177,"./js/buda.js":178,"./js/bw.js":179,"./js/bybit.js":180,"./js/bytetrade.js":181,"./js/cdax.js":182,"./js/cex.js":183,"./js/coinbase.js":184,"./js/coinbaseprime.js":185,"./js/coinbasepro.js":186,"./js/coincheck.js":187,"./js/coinex.js":188,"./js/coinfalcon.js":189,"./js/coinmate.js":190,"./js/coinone.js":191,"./js/coinspot.js":192,"./js/crex24.js":193,"./js/cryptocom.js":194,"./js/currencycom.js":195,"./js/delta.js":196,"./js/deribit.js":197,"./js/digifinex.js":198,"./js/eqonex.js":199,"./js/exmo.js":200,"./js/flowbtc.js":201,"./js/fmfwio.js":202,"./js/ftx.js":203,"./js/ftxus.js":204,"./js/gate.js":205,"./js/gateio.js":206,"./js/gemini.js":207,"./js/hitbtc.js":208,"./js/hitbtc3.js":209,"./js/hollaex.js":210,"./js/huobi.js":211,"./js/huobijp.js":212,"./js/huobipro.js":213,"./js/idex.js":214,"./js/independentreserve.js":215,"./js/indodax.js":216,"./js/itbit.js":217,"./js/kraken.js":218,"./js/kucoin.js":219,"./js/kucoinfutures.js":220,"./js/kuna.js":221,"./js/latoken.js":222,"./js/lbank.js":223,"./js/lbank2.js":224,"./js/liquid.js":225,"./js/luno.js":226,"./js/lykke.js":227,"./js/mercado.js":228,"./js/mexc.js":229,"./js/mexc3.js":230,"./js/ndax.js":231,"./js/novadax.js":232,"./js/oceanex.js":233,"./js/okcoin.js":234,"./js/okex.js":235,"./js/okex5.js":236,"./js/okx.js":237,"./js/paymium.js":238,"./js/phemex.js":239,"./js/poloniex.js":240,"./js/probit.js":241,"./js/qtrade.js":242,"./js/ripio.js":243,"./js/stex.js":284,"./js/therock.js":285,"./js/tidebit.js":286,"./js/tidex.js":287,"./js/timex.js":288,"./js/upbit.js":289,"./js/vcc.js":290,"./js/wavesexchange.js":291,"./js/wazirx.js":292,"./js/whitebit.js":293,"./js/woo.js":294,"./js/xena.js":295,"./js/yobit.js":296,"./js/zaif.js":297,"./js/zb.js":298,"./js/zipmex.js":299,"./js/zonda.js":300}],124:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,AuthenticationError:a,ExchangeError:n,ExchangeNotAvailable:o,OrderNotFound:c,InvalidOrder:d,CancelPending:h,RateLimitExceeded:l,InsufficientFunds:u,BadRequest:f,BadSymbol:p,PermissionDenied:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"aax",name:"AAX",countries:["MT"],rateLimit:600,version:"v2",hostname:"aaxpro.com",pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:void 0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:void 0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverage:void 0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:void 0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:"emulated",fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,setLeverage:!0,setMargin:!0,setMarginMode:!1,setPositionMode:void 0,signIn:void 0,transfer:!0,withdraw:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","12h":"12h","1d":"1d","3d":"3d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/104140087-a27f2580-53c0-11eb-87c1-5d9e81208fe9.jpg",test:{v1:"https://api.testnet.{hostname}/marketdata/v1",public:"https://api.testnet.{hostname}",private:"https://api.testnet.{hostname}"},api:{v1:"https://api.{hostname}/marketdata/v1",public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://www.aaxpro.com",doc:"https://www.aaxpro.com/apidoc/index.html",fees:"https://www.aaxpro.com/en-US/fees/",referral:"https://www.aaxpro.com/invite/sign-up?inviteCode=JXGm5Fy7R2MB"},api:{v1:{get:["getHistMarketData"]},public:{get:{currencies:1.2,"announcement/maintenance":1.2,time:1.2,instruments:1.2,"market/orderbook":1.2,"futures/position/openInterest":1.2,"market/tickers":1.2,"market/candles":1.2,"market/history/candles":1.2,"market/trades":1.2,"market/markPrice":1.2,"futures/funding/predictedFunding/{symbol}":1.2,"futures/funding/prevFundingRate/{symbol}":1.2,"futures/funding/fundingRate":1.2,"market/candles/index":1.2,"market/index/candles":1.2}},private:{get:{"user/info":1.2,"account/balances":1.2,"account/deposit/address":1.2,"account/deposits":1.2,"account/transfer":1.2,"account/withdraws":1.2,"spot/trades":1.2,"spot/openOrders":1.2,"spot/orders":1.2,"futures/position":1.2,"futures/position/closed":1.2,"futures/trades":1.2,"futures/openOrders":1.2,"futures/orders":1.2,"futures/funding/fundingFee":1.2,"futures/funding/predictedFundingFee/{symbol}":1.2},post:{"account/transfer":1.2,"spot/orders":1.2,"spot/orders/cancelAllOnTimeout":10,"futures/orders":1.2,"futures/orders/cancelAllOnTimeout":10,"futures/position/sltp":1.2,"futures/position/close":1.2,"futures/position/leverage":30,"futures/position/margin":1.2},put:{"spot/orders":1.2,"futures/orders":1.2},delete:{"spot/orders/cancel/{orderID}":1,"spot/orders/cancel/all":10,"futures/orders/cancel/{orderID}":1,"futures/orders/cancel/all":10}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0006"),taker:this.parseNumber("0.001")},funding:{tierBased:!1,percentage:!0,withdraw:{}}},commonCurrencies:{XBT:"XBT"},exceptions:{exact:{2002:u,2003:c,10003:f,10006:a,10007:a,11007:a,20001:u,20009:d,3e4:c,30001:d,30004:d,30005:d,30006:d,30007:d,30008:d,30009:d,30010:d,30011:h,30012:f,30013:p,30014:c,30015:d,30016:n,30017:d,30018:d,30019:d,30020:d,30021:d,30022:d,30023:d,30024:d,30025:d,30026:d,30027:d,30028:p,30029:d,30030:d,30031:d,30032:d,30033:d,30034:l,30035:l,30036:o,30037:d,30038:n,30039:u,30040:d,30041:d,30042:d,30043:d,30044:f,30045:d,30046:d,30047:d,30048:d,30049:d,30050:d,40004:f,40009:l,40102:a,40103:a,40303:m,41001:f,41002:f,42001:o,50001:n,50002:n},broad:{}},precisionMode:g,options:{defaultType:"spot",accountsByType:{spot:"SPTP",future:"FUTP",otc:"F2CP",saving:"VLTP"},accountsById:{SPTP:"spot",FUTP:"future",F2CP:"otc",VLTP:"saving"},networks:{ETH:"ERC20",TRX:"TRC20",SOL:"SPL"},transfer:{fillResponseFromRequest:!0}}})}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){const t=await this.publicGetAnnouncementMaintenance(e),s=this.milliseconds(),i=this.safeInteger(t,"ts",s),r=this.safeValue(t,"data",{});let a,n;if(r){const e=this.parse8601(this.safeString(r,"startTime")),t=this.parse8601(this.safeString(r,"endTime"));if(void 0!==t){n=t,a=i>t||(void 0===e||i<e)?"ok":"maintenance"}else a=r}else n=void 0,a="ok";return{status:a,updated:i,eta:n,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.publicGetInstruments(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"base"),n=this.safeString(t,"quote"),o=this.safeString(t,"settleCurrency"),c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),l=this.safeString(t,"status"),u=this.safeString(t,"type");let f,p,m;const g="spot"===u,b="futures"===u,v=this.safeStringLower(t,"settleType");void 0!==v&&(f="inverse"===v,p="vanilla"===v,m="quanto"===v);let w,S,k,T=c+"/"+d,O="spot";if(b){T=T+":"+h,O="swap",w=this.safeNumber(t,"multiplier"),S="1";const e=this.safeString(t,"imRate");k=y.stringDiv("1",e)}i.push({id:r,symbol:T,base:c,quote:d,settle:h,baseId:a,quoteId:n,settleId:o,type:O,spot:g,margin:!1,swap:b,future:!1,option:!1,active:"enable"===l,contract:b,linear:p,inverse:f,quanto:m,taker:this.safeNumber(t,"takerFee"),maker:this.safeNumber(t,"makerFee"),contractSize:w,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"lotSize"),price:this.safeNumber(t,"tickSize")},limits:{leverage:{min:this.parseNumber(S),max:this.parseNumber(k)},amount:{min:this.safeNumber(t,"minQuantity"),max:this.safeNumber(t,"maxQuantity")},price:{min:this.safeNumber(t,"minPrice"),max:this.safeNumber(t,"maxPrice")},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={},i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"chain"),a=this.safeString(t,"displayName"),n=this.safeCurrencyCode(r),o=this.safeValue(t,"enableWithdraw"),c=this.safeValue(t,"enableDeposit"),d=this.safeNumber(t,"withdrawFee"),h=this.safeValue(t,"visible"),l=o&&c&&h,u=c&&h,f=o&&h,p=this.safeString(t,"network");s[n]={id:r,name:a,code:n,precision:this.safeNumber(t,"withdrawPrecision"),info:t,active:l,deposit:u,withdraw:f,fee:d,network:p,limits:{deposit:{min:this.safeNumber(t,"depositMin"),max:void 0},withdraw:{min:this.safeNumber(t,"withdrawMin"),max:void 0}}}}return s}parseTicker(e,t){const s=this.safeInteger(e,"t"),i=this.safeString(e,"s"),r=this.safeSymbol(i,t),a=this.safeString(e,"c"),n=this.safeString(e,"o"),o=this.safeString(e,"v");return this.safeTicker({symbol:r,timestamp:s,datetime:void 0,high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:o,info:e},t)}async setMargin(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id,margin:t},a=await this.privatePostFuturesPositionMargin(this.extend(r,s)),n=this.safeValue(a,"data",{});return this.parseModifyMargin(n,i)}parseModifyMargin(e,t){const s=this.safeString(e,"symbol"),i=this.safeString(e,"quote");return{info:e,type:"set",amount:void 0,total:this.safeNumber(e,"posMargin"),code:this.safeCurrencyCode(i),symbol:this.safeSymbol(s,t),status:void 0}}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketTickers(t),i=this.safeValue(s,"tickers",[]),r=[],a=this.safeInteger(s,"t");for(let e=0;e<i.length;e++){const t=this.parseTicker(this.extend(i[e],{t:a}));r.push(t)}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);if(void 0===t)t=20;else if(20!==t&&50!==t)throw new f(this.id+" fetchOrderBook() limit argument must be undefined, 20 or 50");const r={symbol:i.id,level:t},a=await this.publicGetMarketOrderbook(this.extend(r,s)),n=this.safeInteger(a,"t");return this.parseOrderBook(a,e,n)}parseTrade(e,t){let s=this.safeInteger(e,"t");void 0===s&&(s=this.parse8601(this.safeString(e,"createTime")));let i=this.safeString2(e,"tid","tradeID");i=this.safeString(e,"i",i);const r=this.safeString(e,"symbol");t=this.safeMarket(r,t);let a=this.safeString2(e,"p","filledPrice");const n=this.safeString2(e,"q","filledQty"),o=this.safeString(e,"orderID"),c=this.safeValue(e,"taker");let d;void 0!==c&&(d=c?"taker":"maker");let h=this.safeString(e,"side");"1"===h?h="buy":"2"===h&&(h="sell"),void 0===h&&(h="-"===a[0]?"sell":"buy"),a=y.stringAbs(a);const l=this.parseOrderType(this.safeString(e,"orderType"));let u;const f=this.safeString(e,"commission");if(void 0!==f){let e;"buy"===h?e=t.base:"sell"===h&&(e=t.quote),u={currency:e,cost:f}}return this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:l,side:h,order:o,takerOrMaker:d,price:a,amount:n,cost:void 0,fee:u},t)}async fetchTransfers(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.startTime=t);const n=await this.privateGetAccountTransfer(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTransfers(o,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);s=void 0===s?2e3:s,s=Math.min(s,2e3);const a={symbol:r.id,limit:s},n=await this.publicGetMarketTrades(a),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,timeFrame:this.timeframes[t]};i=void 0===i?500:i;const o=this.parseTimeframe(t);if(void 0===s){const e=this.seconds();n.start=e-o*i,n.end=e}else{const e=parseInt(s/1e3);n.start=e,n.end=this.sum(e,o*i)}const c=await this.publicGetMarketHistoryCandles(this.extend(n,r)),d=this.safeValue(c,"data",[]);return this.parseOHLCVs(d,a,t,s,i)}async fetchAccounts(e={}){const t=await this.privateGetAccountBalances(e),s=this.safeValue(t,"data",{});return this.parseAccounts(s)}parseAccount(e){const t=this.safeString(e,"currency"),s=this.safeString(e,"purseType"),i=this.safeValue(this.options,"accountsById",{});return{info:e,id:void 0,code:this.safeCurrencyCode(t),type:this.safeString(i,s,s)}}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"fetchBalance","defaultType","spot"),s=this.safeString(e,"type",t),i=this.safeValue(this.options,"accountsByType",{}),r=this.safeString(i,s,s),a={purseType:r};e=this.omit(e,"type");const n=await this.privateGetAccountBalances(this.extend(a,e)),o=this.safeValue(n,"data",[]),c=this.safeInteger(n,"ts"),d={info:n,timestamp:c,datetime:this.iso8601(c)};for(let e=0;e<o.length;e++){const t=o[e];if(this.safeString(t,"purseType")===r){const e=this.safeString(t,"currency"),s=this.safeCurrencyCode(e),i=this.account();i.free=this.safeString(t,"available"),i.used=this.safeString(t,"unavailable"),d[s]=i}}return this.safeBalance(d)}async createOrder(e,t,s,i,a,n={}){let o=t.toUpperCase();const c=s.toUpperCase();await this.loadMarkets();const d=this.market(e),h={symbol:d.id,orderQty:this.amountToPrecision(e,i),side:c},l=this.safeString2(n,"clOrdID","clientOrderId");void 0!==l&&(h.clOrdID=l);void 0!==this.safeValue(n,"postOnly",!1)&&(h.execInst="Post-Only"),n=this.omit(n,["clOrdID","clientOrderId","postOnly"]);const u=this.safeNumber(n,"stopPrice");if(void 0===u){if("STOP-LIMIT"===o||"STOP"===o)throw new r(this.id+" createOrder() requires a stopPrice parameter for "+o+" orders")}else"LIMIT"===o?o="STOP-LIMIT":"MARKET"===o&&(o="STOP"),h.stopPrice=this.priceToPrecision(e,u),n=this.omit(n,"stopPrice");let f;"LIMIT"!==o&&"STOP-LIMIT"!==o||(h.price=this.priceToPrecision(e,a)),h.orderType=o,d.spot?f="privatePostSpotOrders":d.contract&&(f="privatePostFuturesOrders");const p=await this[f](this.extend(h,n)),m=this.safeValue(p,"data",{});return this.parseOrder(m,d)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t),c={orderID:e},d=this.safeNumber(n,"stopPrice");let h;void 0!==d&&(c.stopPrice=this.priceToPrecision(t,d),n=this.omit(n,"stopPrice")),void 0!==a&&(c.price=this.priceToPrecision(t,a)),void 0!==r&&(c.orderQty=this.amountToPrecision(t,r)),o.spot?h="privatePutSpotOrders":o.contract&&(h="privatePutFuturesOrders");const l=await this[h](this.extend(c,n)),u=this.safeValue(l,"data",{});return this.parseOrder(u,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={orderID:e};let r;void 0!==t&&(r=this.market(t));const[a,n]=this.handleMarketTypeAndParams("cancelOrder",r,s),o=this.getSupportedMapping(a,{spot:"privateDeleteSpotOrdersCancelOrderID",swap:"privateDeleteFuturesOrdersCancelOrderID",future:"privateDeleteFuturesOrdersCancelOrderID"}),c=await this[o](this.extend(i,n)),d=this.safeValue(c,"data",{});return this.parseOrder(d,r)}async cancelAllOrders(e,t={}){if(void 0===e)throw new r(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s=this.market(e),i={symbol:s.id};let a;s.spot?a="privateDeleteSpotOrdersCancelAll":s.contract&&(a="privateDeleteFuturesOrdersCancelAll");return await this[a](this.extend(i,t))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.safeString2(this.options,"fetchOrder","defaultType","spot");s.type=this.safeString(s,"type",i);const r={},a=this.safeString2(s,"clOrdID","clientOrderId");void 0===a?r.orderID=e:(r.clOrdID=a,s=this.omit(s,["clOrdID","clientOrderId"]));const n=await this.fetchOrders(t,void 0,void 0,this.extend(r,s)),o=this.safeValue(n,0);if(void 0===o)throw new c(void 0===a?this.id+" fetchOrder() could not find order id "+e:this.id+" fetchOrder() could not find order clientOrderID "+a);return o}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",a,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotOpenOrders",swap:"privateGetFuturesOpenOrders",future:"privateGetFuturesOpenOrders"}),d=this.safeString2(i,"clOrdID","clientOrderId");void 0!==d&&(r.clOrdID=d,i=this.omit(i,["clOrdID","clientOrderId"])),void 0!==s&&(r.pageSize=s);const h=await this[c](this.extend(r,o)),l=this.safeValue(h,"data",{}),u=this.safeValue(l,"list",[]);return this.parseOrders(u,a,t,s)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({orderStatus:"2"},i))}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({orderStatus:"3"},i))}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOrders",a,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotOrders",swap:"privateGetFuturesOrders",future:"privateGetFuturesOrders"}),d=this.safeString2(i,"clOrdID","clientOrderId");void 0!==d&&(r.clOrdID=d,i=this.omit(i,["clOrdID","clientOrderId"])),void 0!==s&&(r.pageSize=s),void 0!==t&&(r.startDate=this.yyyymmdd(t));const h=await this[c](this.extend(r,o)),l=this.safeValue(h,"data",{}),u=this.safeValue(l,"list",[]);return this.parseOrders(u,a,t,s)}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"open",3:"closed",4:"canceled",5:"canceled",6:"rejected",10:"expired",11:"rejected"},e,e)}parseOrderType(e){return this.safeString({1:"market",2:"limit",3:"stop",4:"stop-limit",7:"stop-loss",8:"take-profit"},e,e)}parseTimeInForce(e){return this.safeString({1:"GTC",3:"IOC",4:"FOK"},e,e)}parseOrder(e,t){let s=this.safeValue(e,"createTime");"string"==typeof s&&(s=this.parse8601(s));const i=this.parseOrderStatus(this.safeString(e,"orderStatus")),r=this.parseOrderType(this.safeString(e,"orderType"));let a=this.safeString(e,"side");"1"===a?a="buy":"2"===a&&(a="sell");const n=this.safeString(e,"orderID"),o=this.safeString(e,"clOrdID"),c=this.safeString(e,"symbol");t=this.safeMarket(c,t);const d=this.safeString(e,"price"),h=this.safeNumber(e,"stopPrice"),l=this.parseTimeInForce(this.safeString(e,"timeInForce")),u="Post-Only"===this.safeString(e,"execInst"),f=this.safeString(e,"avgPrice"),p=this.safeString(e,"orderQty"),m=this.safeString(e,"cumQty");let g=this.safeString(e,"leavesQty");y.stringEquals(m,"0")&&y.stringEquals(g,"0")&&(g=void 0);let b,v=this.safeValue(e,"transactTime");"string"==typeof v&&(v=this.parse8601(v));const w=this.safeNumber(e,"commission");if(void 0!==w){let e;"buy"===a?e=t.base:"sell"===a&&(e=t.quote),b={currency:e,cost:w}}return this.safeOrder({id:n,info:e,clientOrderId:o,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:v,status:i,symbol:t.symbol,type:r,timeInForce:l,postOnly:u,side:a,price:d,stopPrice:h,average:f,amount:p,filled:m,remaining:g,cost:void 0,trades:void 0,fee:b},t)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotTrades",swap:"privateGetFuturesTrades",future:"privateGetFuturesTrades"});void 0!==s&&(r.pageSize=s),void 0!==t&&(r.startDate=this.yyyymmdd(t));const d=await this[c](this.extend(r,o)),h=this.safeValue(d,"data",{}),l=this.safeValue(h,"list",[]);return this.parseTrades(l,a,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id};if("network"in t){const e=this.safeValue(this.options,"networks",{}),s=this.safeStringUpper(t,"network");t=this.omit(t,"network"),i.network=this.safeStringUpper(e,s,s)}const r=await this.privateGetAccountDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,s)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t){const e=parseInt(t/1e3);r.startTime=e,r.endTime=this.sum(e,7776e3)}const n=await this.privateGetAccountDeposits(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t){const e=parseInt(t/1e3);r.startTime=e,r.endTime=this.sum(e,7776e3)}const n=await this.privateGetAccountWithdraws(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}parseTransactionStatusByType(e,t){return this.safeString(this.safeValue({deposit:{1:"pending",2:"ok",3:"failed"},withdrawal:{0:"pending",1:"pending",2:"pending",3:"failed",4:"pending",5:"ok",6:"failed"}},t,{}),e,e)}parseAddressByType(e,t,s){let i,r,a,n;return"deposit"===s?(i=e,a=t):"withdrawal"===s&&(r=e,n=t),[i,a,r,n]}parseTransaction(e,t){const s=this.safeString(e,"fee");let i="withdrawal";void 0===s&&(i="deposit");const r=this.safeCurrencyCode(this.safeString(e,"currency")),a=this.safeString(e,"txHash"),n=this.safeString(e,"address"),o=this.safeString(e,"addressTag"),[c,d,h,l]=this.parseAddressByType(n,o,i),u=this.safeString(e,"quantity"),f=this.parse8601(this.safeString(e,"createdTime")),p=this.parse8601(this.safeString(e,"updatedTime")),m=this.parseTransactionStatusByType(this.safeString(e,"status"),i),g=this.safeString(e,"network");return{id:void 0,info:e,txid:a,timestamp:f,datetime:this.iso8601(f),network:g,addressFrom:c,address:n,addressTo:h,amount:this.parseNumber(u),type:i,currency:r,status:m,updated:p,tagFrom:d,tag:o,tagTo:l,comment:void 0,fee:s}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new f("Funding rates only exist for swap contracts");const i={symbol:s.id},r=await this.publicGetFuturesFundingPrevFundingRateSymbol(this.extend(i,t)),a=this.safeValue(r,"data");return this.parseFundingRate(a)}parseFundingRate(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"markPrice"),a=this.safeNumber(e,"fundingRate"),n=this.safeString(e,"fundingTime"),o=this.safeString(e,"nextFundingTime");return{info:e,symbol:i,markPrice:r,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:a,fundingTimestamp:this.parse8601(n),fundingDatetime:n,nextFundingRate:void 0,nextFundingTimestamp:this.parse8601(o),nextFundingDatetime:o,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"tag");let r=this.safeString(e,"currency");const a=this.safeString(e,"network");void 0!==a&&(r=r.replace(a,""));return{info:e,currency:this.safeCurrencyCode(r),address:s,tag:i,network:a}}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t&&(n.startTime=parseInt(t/1e3));const o=this.safeInteger2(i,"until","till");i=this.omit(i,["till","until"]),void 0!==o&&(n.endTime=parseInt(o/1e3)),void 0!==s&&(n.limit=s);const c=await this.publicGetFuturesFundingFundingRate(this.extend(n,i)),d=this.safeValue(c,"data",[]),h=[];for(let e=0;e<d.length;e++){const t=d[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeString(t,"fundingTime");h.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:this.parse8601(r),datetime:r})}const l=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(l,a.symbol,t,s)}async fetchFundingHistory(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new r(this.id+" fetchFundingHistory() requires a symbol argument");if(void 0===s)s=100;else if(s>1e3)throw new f(this.id+" fetchFundingHistory() limit argument cannot exceed 1000");const a={symbol:this.market(e).id,limit:s};void 0!==t&&(a.startTime=t);const n=await this.privateGetFuturesFundingFundingFee(this.extend(a,i)),o=this.safeValue(n,"data",[]),c=[];for(let t=0;t<o.length;t++){const s=o[t],i=this.safeString(s,"fundingTime");c.push({info:s,symbol:e,code:this.safeCurrencyCode(this.safeString(s,"currency")),timestamp:this.parse8601(i),datetime:i,id:void 0,amount:this.safeNumber(s,"fundingFee")})}return c}async setLeverage(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new r(this.id+" setLeverage() requires a symbol argument");if(e<1||e>100)throw new f(this.id+" leverage should be between 1 and 100");const i=this.market(t);if("swap"!==i.type)throw new p(this.id+" setLeverage() supports swap contracts only");const a={symbol:i.id,leverage:e};return await this.privatePostFuturesPositionLeverage(this.extend(a,s))}parseTransfer(e,t){const s=this.safeString(e,"transferID"),i=this.safeNumber(e,"quantity"),r=this.parse8601(this.safeString(e,"transferTime")),a=this.safeValue(this.options,"accounts",{}),n=this.safeString(e,"fromPurse"),o=this.safeString(e,"toPurse"),c=this.safeString(a,n),d=this.safeString(a,o),h=this.safeString(e,"currency"),l=this.safeCurrencyCode(h,t);return{info:e,id:s,timestamp:r,datetime:this.iso8601(r),currency:l,amount:i,fromAccount:c,toAccount:d,status:void 0}}parseTransferStatus(e){return this.safeString({1:"ok"},e,"canceled")}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d={currency:a.id,fromPurse:o,toPurse:c,quantity:t},h=await this.privatePostAccountTransfer(this.extend(d,r)),l=this.safeValue(h,"data",{}),u=this.parseTransfer(l,a),f=this.safeValue(this.options,"transfer",{});return this.safeValue(f,"fillResponseFromRequest",!0)&&(void 0===u.fromAccount&&(u.fromAccount=s),void 0===u.toAccount&&(u.toAccount=i),void 0===u.amount&&(u.amount=t)),u.status=this.parseTransferStatus(this.safeString(h,"code")),u}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeString(e,"currentQty");let r;y.stringGt(i,"0")?r="long":y.stringLt(i,"0")&&(r="short");const a=this.safeString(e,"leverage"),n=this.safeString(e,"unrealisedPnl"),o=this.safeString(e,"currentQty"),c=this.safeString(t,"contractSize"),d=y.stringMul(o,c),h=this.safeString(e,"marketPrice"),l=this.safeInteger(e,"ts"),u=this.safeString(e,"liquidationPrice"),f=this.safeValue(t,"info"),p=this.safeString(f,"multiplier"),m=this.safeString(e,"settleType"),g=this.safeString(e,"avgEntryPrice"),b=this.safeString(e,"commission");let v,w,S;if("VANILLA"===m){S=y.stringMul(d,h),v=y.stringDiv(y.stringMul(y.stringMul(o,g),p),a);const e=y.stringDiv(y.stringMul(o,p),y.stringMul(g,a));w=y.stringAdd(e,b)}else S=y.stringDiv(d,h),v=y.stringDiv(o,y.stringMul(a,g)),w=v;const k=this.safeString(e,"posMargin"),T=y.stringDiv(n,v),O=y.stringDiv(w,k);return{info:e,symbol:this.safeString(t,"symbol"),timestamp:l,datetime:this.iso8601(l),initialMargin:this.parseNumber(v),initialMarginPercentage:this.parseNumber(y.stringDiv(v,S)),maintenanceMargin:this.parseNumber(w),maintenanceMarginPercentage:this.parseNumber(y.stringDiv(w,S)),entryPrice:this.parseNumber(g),notional:this.parseNumber(S),leverage:this.parseNumber(a),unrealizedPnl:this.parseNumber(n),contracts:this.parseNumber(i),contractSize:this.parseNumber(c),marginRatio:this.parseNumber(O),liquidationPrice:u,markPrice:this.safeNumber(e,"marketPrice"),collateral:this.parseNumber(k),marginMode:"isolated",side:r,percentage:this.parseNumber(T)}}async fetchPosition(e,t={}){await this.loadMarkets();const s={symbol:this.market(e).id},i=await this.privateGetFuturesPosition(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=this.safeInteger(i,"ts"),n=this.safeValue(r,0),o=this.parsePosition(n);return this.extend(o,{timestamp:a,datetime:this.iso8601(a)})}async fetchPositions(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){let t;if(Array.isArray(e)){if(e.length>1)throw new f(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;const i=this.market(t);s.symbol=i.id}const i=await this.privateGetFuturesPosition(this.extend(s,t)),r=[],a=this.safeValue(i,"data",[]),n=this.safeInteger(i,"ts");for(let e=0;e<a.length;e++){const t=this.parsePosition(a[e]);r.push(this.extend(t,{timestamp:n,datetime:this.iso8601(n)}))}return this.filterByArray(r,"symbol",e,!1)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("v1"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if(n="/"+this.version+n,"public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();r={"X-ACCESS-KEY":this.apiKey,"X-ACCESS-NONCE":e};let t=e+":"+s;"GET"===s?(Object.keys(o).length&&(n+="?"+this.urlencode(o)),t+=n):(r["Content-Type"]="application/json",t+=n+(a=this.json(o)));const i=this.hmac(this.encode(t),this.encode(this.secret));r["X-ACCESS-SIGN"]=i}return n=this.implodeHostname(this.urls.api[t])+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(void 0===n)return;const d=this.safeString(n,"code");if(void 0!==d&&"1"!==d){const e=this.id+" "+this.json(n);this.throwExactlyMatchedException(this.exceptions.exact,d,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],125:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,AuthenticationError:a,ExchangeError:n,InsufficientFunds:o,InvalidOrder:c,BadSymbol:d,PermissionDenied:h,BadRequest:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number"),f=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ascendex",name:"AscendEX",countries:["SG"],rateLimit:400,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:"emulated",fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"1d","1w":"1w","1M":"1m"},version:"v2",urls:{logo:"https://user-images.githubusercontent.com/1294454/112027508-47984600-8b48-11eb-9e17-d26459cc36c6.jpg",api:{rest:"https://ascendex.com"},test:{rest:"https://api-test.ascendex-sandbox.com"},www:"https://ascendex.com",doc:["https://ascendex.github.io/ascendex-pro-api/#ascendex-pro-api-documentation"],fees:"https://ascendex.com/en/feerate/transactionfee-traderate",referral:{url:"https://ascendex.com/en-us/register?inviteCode=EL6BXBQM",discount:.25}},api:{v1:{public:{get:{assets:1,products:1,ticker:1,"barhist/info":1,barhist:1,depth:1,trades:1,"cash/assets":1,"cash/products":1,"margin/assets":1,"margin/products":1,"futures/collateral":1,"futures/contracts":1,"futures/ref-px":1,"futures/market-data":1,"futures/funding-rates":1,"risk-limit-info":1,"exchange-info":1}},private:{get:{info:1,"wallet/transactions":1,"wallet/deposit/address":1,"data/balance/snapshot":1,"data/balance/history":1},accountCategory:{get:{balance:1,"order/open":1,"order/status":1,"order/hist/current":1,risk:1},post:{order:1,"order/batch":1},delete:{order:1,"order/all":1,"order/batch":1}},accountGroup:{get:{"cash/balance":1,"margin/balance":1,"margin/risk":1,"futures/collateral-balance":1,"futures/position":1,"futures/risk":1,"futures/funding-payments":1,"order/hist":1,"spot/fee":1},post:{transfer:1,"futures/transfer/deposit":1,"futures/transfer/withdraw":1}}}},v2:{public:{get:{assets:1,"futures/contract":1,"futures/collateral":1,"futures/pricing-data":1}},private:{get:{"account/info":1},accountGroup:{get:{"order/hist":1,"futures/position":1,"futures/free-margin":1,"futures/order/hist/current":1,"futures/order/open":1,"futures/order/status":1},post:{"futures/isolated-position-margin":1,"futures/margin-type":1,"futures/leverage":1,"futures/transfer/deposit":1,"futures/transfer/withdraw":1,"futures/order":1,"futures/order/batch":1,"futures/order/open":1,"subuser/subuser-transfer":1,"subuser/subuser-transfer-hist":1},delete:{"futures/order":1,"futures/order/batch":1,"futures/order/all":1}}}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:u,options:{"account-category":"cash","account-group":void 0,fetchClosedOrders:{method:"v1PrivateAccountGroupGetOrderHist"},defaultType:"spot",accountsByType:{spot:"cash",swap:"futures",future:"futures",margin:"margin"},transfer:{fillResponseFromRequest:!0}},exceptions:{exact:{1900:l,2100:a,5002:d,6001:d,6010:o,60060:c,600503:c,100001:l,100002:l,100003:l,100004:l,100005:l,100006:l,100007:l,100008:d,100009:a,100010:l,100011:l,100012:l,100013:l,100101:n,150001:l,200001:a,200002:n,200003:n,200004:n,200005:n,200006:n,200007:n,200008:n,200009:n,200010:a,200011:n,200012:n,200013:n,200014:h,200015:h,300001:c,300002:c,300003:c,300004:c,300005:c,300006:c,300007:c,300008:c,300009:c,300011:o,300012:d,300013:c,300014:c,300020:c,300021:c,300031:c,310001:o,310002:c,310003:c,310004:d,310005:c,510001:n,900001:n},broad:{}},commonCurrencies:{BOND:"BONDED",BTCBEAR:"BEAR",BTCBULL:"BULL",BYN:"BeyondFi",PLN:"Pollen"}})}getAccount(e={}){return this.safeValue(e,"account",this.options.account).toLowerCase().capitalize()}async fetchCurrencies(e={}){const t=await this.v1PublicGetAssets(e),s=await this.v1PublicGetMarginAssets(e),i=await this.v1PublicGetCashAssets(e),r=this.safeValue(t,"data",[]),a=this.safeValue(s,"data",[]),n=this.safeValue(i,"data",[]),o=this.indexBy(r,"assetCode"),c=this.indexBy(a,"assetCode"),d=this.indexBy(n,"assetCode"),h=this.deepExtend(o,c,d),l=Object.keys(h),u={};for(let e=0;e<l.length;e++){const t=l[e],s=h[t],i=this.safeCurrencyCode(t),r=this.safeString2(s,"precisionScale","nativeScale"),a=this.parseNumber(this.parsePrecision(r)),n=this.safeNumber2(s,"withdrawFee","withdrawalFee"),o="Normal"===this.safeString2(s,"status","statusCode"),c="borrowAssetCode"in s;u[i]={id:t,code:i,info:s,type:void 0,margin:c,name:this.safeString(s,"assetName"),active:o,deposit:void 0,withdraw:void 0,fee:n,precision:a,limits:{amount:{min:a,max:void 0},withdraw:{min:this.safeNumber(s,"minWithdrawalAmt"),max:void 0}}}}return u}async fetchMarkets(e={}){const t=await this.v1PublicGetProducts(e),s=await this.v1PublicGetCashProducts(e),i=await this.v2PublicGetFuturesContract(e),r=this.safeValue(t,"data",[]),a=this.indexBy(r,"symbol"),n=this.safeValue(s,"data",[]),o=this.safeValue(i,"data",[]),c=this.arrayConcat(n,o),d=this.indexBy(c,"symbol"),h=this.deepExtend(a,d),l=Object.keys(h),u=[];for(let e=0;e<l.length;e++){const t=l[e],s=h[t];let i=this.safeString(s,"baseAsset"),r=this.safeString(s,"quoteAsset");const a=this.safeValue(s,"settlementAsset");let n=this.safeCurrencyCode(i),o=this.safeCurrencyCode(r);const c=this.safeCurrencyCode(a),d=this.safeString(s,"status");let f=!1;"Normal"!==d&&"InternalTrading"!==d||(f=!0);const p=void 0===c,m=!p,g=!!m||void 0;let y,b=this.safeNumber(s,"minQty"),v=this.safeNumber(s,"maxQty"),w=this.safeNumber(s,"tickSize"),S=n+"/"+o;if(m){const e=this.safeValue(s,"lotSizeFilter");b=this.safeNumber(e,"minQty"),v=this.safeNumber(e,"maxQty");const t=this.safeValue(s,"priceFilter");w=this.safeNumber(t,"minPrice"),y=this.safeNumber(t,"maxPrice");const a=this.safeString(s,"underlying").split("/");i=this.safeString(a,0),r=this.safeString(a,1),n=this.safeCurrencyCode(i),o=this.safeCurrencyCode(r),S=n+"/"+o+":"+c}const k=this.safeNumber(s,"commissionReserveRate"),T=this.safeValue(s,"marginTradable",!1);u.push({id:t,symbol:S,base:n,quote:o,settle:c,baseId:i,quoteId:r,settleId:a,type:m?"swap":"spot",spot:p,margin:p?T:void 0,swap:m,future:!1,option:!1,active:f,contract:m,linear:g,inverse:m?!g:void 0,taker:k,maker:k,contractSize:m?this.parseNumber("1"):void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(s,"lotSize"),price:this.safeNumber(s,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:b,max:v},price:{min:w,max:y},cost:{min:this.safeNumber(s,"minNotional"),max:this.safeNumber(s,"maxNotional")}},info:s})}return u}async fetchTime(e={}){const t={requestTime:this.milliseconds()},s=await this.v1PublicGetExchangeInfo(this.extend(t,e)),i=this.safeValue(s,"data");return this.safeInteger(i,"requestReceiveAt")}async fetchAccounts(e={}){let t,s=this.safeString(this.options,"account-group");if(void 0===s){t=await this.v1PrivateGetInfo(e);const i=this.safeValue(t,"data",{});s=this.safeString(i,"accountGroup"),this.options["account-group"]=s}return[{id:s,type:void 0,currency:void 0,info:t}]}parseBalance(e){const t=this.milliseconds(),s={info:e,timestamp:t,datetime:this.iso8601(t)},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeCurrencyCode(this.safeString(t,"asset")),a=this.account();a.free=this.safeString(t,"availableBalance"),a.total=this.safeString(t,"totalBalance"),s[r]=a}return this.safeBalance(s)}parseSwapBalance(e){const t=this.milliseconds(),s={info:e,timestamp:t,datetime:this.iso8601(t)},i=this.safeValue(e,"data",{}),r=this.safeValue(i,"collaterals",[]);for(let e=0;e<r.length;e++){const t=r[e],i=this.safeCurrencyCode(this.safeString(t,"asset")),a=this.account();a.total=this.safeString(t,"balance"),s[i]=a}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i=this.safeValue(this.options,"fetchBalance",{}),r=this.safeValue(this.options,"accountsByType",{}),a=this.safeString(r,t,"cash"),n=this.safeValue(this.accounts,0,{}),o={"account-group":this.safeString(n,"id")},c=this.safeString(i,"method","v1PrivateAccountCategoryGetBalance"),d=this.getSupportedMapping(t,{spot:c,margin:c,swap:"v2PrivateAccountGroupGetFuturesPosition"});"cash"!==a&&"margin"!==a||(o["account-category"]=a);const h=await this[d](this.extend(o,s));return"swap"===t?this.parseSwapBalance(h):this.parseBalance(h)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id},r=await this.v1PublicGetDepth(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"ts"),c=this.parseOrderBook(n,e,o);return c.nonce=this.safeInteger(n,"seqnum"),c}parseTicker(e,t){const s=this.safeString(e,"symbol"),i="spot"===this.safeString(e,"type")?"/":void 0,r=this.safeSymbol(s,t,i),a=this.safeString(e,"close"),n=this.safeValue(e,"bid",[]),o=this.safeValue(e,"ask",[]),c=this.safeString(e,"open");return this.safeTicker({symbol:r,timestamp:undefined,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(n,0),bidVolume:this.safeString(n,1),ask:this.safeString(o,0),askVolume:this.safeString(o,1),vwap:void 0,open:c,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.v1PublicGetTicker(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.symbol=t.join(",")}const i=await this.v1PublicGetTicker(this.extend(s,t)),r=this.safeValue(i,"data",[]);return this.parseTickers(r,e)}parseOHLCV(e,t){const s=this.safeValue(e,"data",{});return[this.safeInteger(s,"ts"),this.safeNumber(s,"o"),this.safeNumber(s,"h"),this.safeNumber(s,"l"),this.safeNumber(s,"c"),this.safeNumber(s,"v")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.timeframes[t]},o=this.parseTimeframe(t),c=this.safeValue(this.options,"fetchOHLCV",{}),d=this.safeInteger(c,"limit",500);void 0!==s?(n.from=s,i=void 0===i?d:Math.min(i,d),n.to=this.sum(s,i*o*1e3,1)):void 0!==i&&(n.n=i);const h=await this.v1PublicGetBarhist(this.extend(n,r)),l=this.safeValue(h,"data",[]);return this.parseOHLCVs(l,a,t,s,i)}parseTrade(e,t){const s=this.safeInteger(e,"ts"),i=this.safeString2(e,"price","p"),r=this.safeString(e,"q"),a=this.safeValue(e,"bm",!1),n=a?"maker":"taker",o=a?"buy":"sell";return t=this.safeMarket(void 0,t),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:void 0,order:void 0,type:void 0,takerOrMaker:n,side:o,price:i,amount:r,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.n=s);const n=await this.v1PublicGetTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}parseOrderStatus(e){return this.safeString({PendingNew:"open",New:"open",PartiallyFilled:"open",Filled:"closed",Canceled:"canceled",Rejected:"rejected"},e,e)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"status")),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t,"/");let a=this.safeInteger2(e,"timestamp","sendingTime");const n=this.safeInteger(e,"lastExecTime");void 0===a&&(a=n);const o=this.safeString(e,"price"),c=this.safeString(e,"orderQty"),d=this.safeString(e,"avgPx"),h=this.safeString2(e,"cumFilledQty","cumQty"),l=this.safeString(e,"orderId");let u=this.safeString(e,"id");void 0!==u&&u.length<1&&(u=void 0);const f=this.safeStringLower(e,"orderType");let p=f;void 0!==f&&("stoplimit"===f&&(p="limit"),"stopmarket"===f&&(p="market"));const m=this.safeStringLower(e,"side"),g=this.safeNumber(e,"cumFee");let y;if(void 0!==g){const t=this.safeString(e,"feeAsset");y={cost:g,currency:this.safeCurrencyCode(t)}}const b=this.safeNumber(e,"stopPrice");let v;const w=this.safeString(e,"execInst");let S;return"reduceOnly"===w&&(v=!0),"Post"===w&&(S=!0),this.safeOrder({info:e,id:l,clientOrderId:u,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:n,symbol:r,type:p,timeInForce:void 0,postOnly:S,reduceOnly:v,side:m,price:o,stopPrice:b,amount:c,cost:void 0,average:d,filled:h,remaining:void 0,status:s,fee:y,trades:void 0},t)}async fetchTradingFees(e={}){await this.loadMarkets(),await this.loadAccounts();const t=this.safeValue(this.accounts,0,{}),s={"account-group":this.safeString(t,"id")},i=await this.v1PrivateAccountGroupGetSpotFee(this.extend(s,e)),r=this.safeValue(i,"data",{}),a=this.safeValue(r,"fees",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s,void 0,"/"),r=this.safeValue(t,"fee",{});n[i]={info:t,symbol:i,maker:this.safeNumber(r,"maker"),taker:this.safeNumber(r,"taker")}}return n}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),await this.loadAccounts();const n=this.market(e);let o;[o,a]=this.handleMarketTypeAndParams("createOrder",n,a);const d=this.safeValue(this.options,"createOrder",{}),h=this.safeValue(this.options,"accountsByType",{}),l=this.safeString(h,o,"cash"),u=this.safeValue(this.accounts,0,{}),f=this.safeValue(u,"id"),p=this.safeString2(a,"clientOrderId","id"),m={"account-group":f,"account-category":l,symbol:n.id,time:this.milliseconds(),orderQty:this.amountToPrecision(e,i),orderType:t,side:s},g="market"===t||"stop_market"===t,y="limit"===t||"stop_limit"===t,b=this.safeString(a,"timeInForce"),v=this.isPostOnly(g,!1,a),w=this.safeValue(a,"reduceOnly",!1),S=this.safeString2(a,"triggerPrice","stopPrice");if(a=this.omit(a,["timeInForce","postOnly","reduceOnly","stopPrice","triggerPrice"]),w){if("swap"!==o)throw new c(this.id+" createOrder() does not support reduceOnly for "+o+" orders, reduceOnly orders are supported for perpetuals only");m.execInst="ReduceOnly"}y&&(m.orderPrice=this.priceToPrecision(e,r)),"IOC"===b&&(m.timeInForce="IOC"),"FOK"===b&&(m.timeInForce="FOK"),v&&(m.postOnly=!0),void 0!==S&&(m.stopPrice=this.priceToPrecision(e,S),y?m.orderType="stop_limit":g&&(m.orderType="stop_market")),void 0!==p&&(m.id=p);const k=this.safeString(d,"method","v1PrivateAccountCategoryPostOrder"),T=this.getSupportedMapping(o,{spot:k,margin:k,swap:"v2PrivateAccountGroupPostFuturesOrder"});"v1PrivateAccountCategoryPostOrder"===T?void 0!==l&&(m.category=l):m["account-category"]=l;const O=await this[T](this.extend(m,a)),_=this.safeValue(O,"data",{}),x=this.safeValue2(_,"order","info",{});return this.parseOrder(x,n)}async fetchOrder(e,t,s={}){let i;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(i=this.market(t));const[r,a]=this.handleMarketTypeAndParams("fetchOrder",i,s),n=this.safeValue(this.options,"fetchOrder",{}),o=this.safeValue(this.options,"accountsByType",{}),c=this.safeString(o,r,"cash"),d=this.safeValue(this.accounts,0,{}),h={"account-group":this.safeValue(d,"id"),"account-category":c,orderId:e},l=this.safeString(n,"method","v1PrivateAccountCategoryGetOrderStatus"),u=this.getSupportedMapping(r,{spot:l,margin:l,swap:"v2PrivateAccountGroupGetFuturesOrderStatus"});"v1PrivateAccountCategoryGetOrderStatus"===u?void 0!==c&&(h.category=c):h["account-category"]=c;const f=await this[u](this.extend(h,a)),p=this.safeValue(f,"data",{});return this.parseOrder(p,i)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),await this.loadAccounts(),void 0!==e&&(r=this.market(e),e=r.symbol);const a=this.safeValue(this.accounts,0,{}),n=this.safeValue(a,"id"),[o,c]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i),d=this.safeValue(this.options,"accountsByType",{}),h=this.safeString(d,o,"cash"),l={"account-group":n,"account-category":h},u=this.safeValue(this.options,"fetchOpenOrders",{}),f=this.safeString(u,"method","v1PrivateAccountCategoryGetOrderOpen"),p=this.getSupportedMapping(o,{spot:f,margin:f,swap:"v2PrivateAccountGroupGetFuturesOrderOpen"});"v1PrivateAccountCategoryGetOrderOpen"===p?void 0!==h&&(l.category=h):l["account-category"]=h;const m=await this[p](this.extend(l,c)),g=this.safeValue(m,"data",[]);if("futures"===h)return this.parseOrders(g,r,t,s);const y=[];for(let e=0;e<g.length;e++){const t=this.parseOrder(g[e],r);y.push(t)}return this.filterBySymbolSinceLimit(y,e,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r=this.safeValue(this.accounts,0,{}),a={"account-group":this.safeValue(r,"id")};let n;void 0!==e&&(n=this.market(e),a.symbol=n.id);const[o,c]=this.handleMarketTypeAndParams("fetchClosedOrders",n,i),d=this.safeValue(this.options,"fetchClosedOrders",{}),h=this.safeString(d,"method","v1PrivateAccountGroupGetOrderHist"),l=this.getSupportedMapping(o,{spot:h,margin:h,swap:"v2PrivateAccountGroupGetFuturesOrderHistCurrent"}),u=this.safeValue(this.options,"accountsByType",{}),f=this.safeString(u,o,"cash");"v1PrivateAccountGroupGetOrderHist"===l?void 0!==f&&(a.category=f):a["account-category"]=f,void 0!==t&&(a.startTime=t),void 0!==s&&(a.pageSize=s);const p=await this[l](this.extend(a,c));let m=this.safeValue(p,"data");return Array.isArray(m)||(m=this.safeValue(m,"data",[])),this.parseOrders(m,n,t,s)}async cancelOrder(e,t,s={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets(),await this.loadAccounts();const i=this.market(t),[a,n]=this.handleMarketTypeAndParams("cancelOrder",i,s),o=this.safeValue(this.options,"cancelOrder",{}),c=this.safeValue(this.options,"accountsByType",{}),d=this.safeString(c,a,"cash"),h=this.safeValue(this.accounts,0,{}),l={"account-group":this.safeValue(h,"id"),"account-category":d,symbol:i.id,time:this.milliseconds(),id:"foobar"},u=this.safeString(o,"method","v1PrivateAccountCategoryDeleteOrder"),f=this.getSupportedMapping(a,{spot:u,margin:u,swap:"v2PrivateAccountGroupDeleteFuturesOrder"});"v1PrivateAccountCategoryDeleteOrder"===f?void 0!==d&&(l.category=d):l["account-category"]=d;const p=this.safeString2(s,"clientOrderId","id");void 0===p?l.orderId=e:(l.id=p,s=this.omit(s,["clientOrderId","id"]));const m=await this[f](this.extend(l,n)),g=this.safeValue(m,"data",{}),y=this.safeValue2(g,"order","info",{});return this.parseOrder(y,i)}async cancelAllOrders(e,t={}){let s;await this.loadMarkets(),await this.loadAccounts(),void 0!==e&&(s=this.market(e));const[i,r]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),a=this.safeValue(this.options,"cancelAllOrders",{}),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,"cash"),c=this.safeValue(this.accounts,0,{}),d={"account-group":this.safeValue(c,"id"),"account-category":o,time:this.milliseconds()};void 0!==e&&(d.symbol=s.id);const h=this.safeString(a,"method","v1PrivateAccountCategoryDeleteOrderAll"),l=this.getSupportedMapping(i,{spot:h,margin:h,swap:"v2PrivateAccountGroupDeleteFuturesOrderAll"});"v1PrivateAccountCategoryDeleteOrderAll"===l?void 0!==o&&(d.category=o):d["account-category"]=o;return await this[l](this.extend(d,r))}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"tagId"),r=this.safeString(e,i);this.checkAddress(s);const a=void 0===t?void 0:t.code,n=this.safeString(e,"chainName");return{currency:a,address:s,tag:r,network:this.safeNetwork(n),info:e}}safeNetwork(e){return this.safeString({TRC20:"TRC20",ERC20:"ERC20",GO20:"GO20",BEP2:"BEP2","BEP20 (BSC)":"BEP20",Bitcoin:"BTC","Bitcoin ABC":"BCH",Litecoin:"LTC","Matic Network":"MATIC",Solana:"SOL",xDai:"STAKE",Akash:"AKT"},e,e)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i=this.safeString(t,"chainName");t=this.omit(t,"chainName");const a={asset:s.id},n=await this.v1PrivateGetWalletDepositAddress(this.extend(a,t)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"address",[]);let d;if(c.length>1){const e=this.indexBy(c,"chainName");if(void 0===i){const t=Object.keys(e).join(", ");throw new r(this.id+" fetchDepositAddress() returned more than one address, a chainName parameter is required, one of "+t)}d=this.safeValue(e,i,{})}else d=this.safeValue(c,0,{});const h=this.parseDepositAddress(d,s);return this.extend(h,{info:n})}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({txType:"deposit"},i))}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({txType:"withdrawal"},i))}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.startTs=t),void 0!==s&&(r.pageSize=s);const n=await this.v1PrivateGetWalletTransactions(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,a,t,s)}parseTransactionStatus(e){return this.safeString({reviewing:"pending",pending:"pending",confirmed:"ok",rejected:"rejected"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"requestId"),i=this.safeNumber(e,"amount"),r=this.safeValue(e,"destAddress",{}),a=this.safeString(r,"address"),n=this.safeString(r,"destTag"),o=this.safeString(e,"networkTransactionId"),c=this.safeString(e,"transactionType"),d=this.safeInteger(e,"time"),h=this.safeString(e,"asset"),l=this.safeCurrencyCode(h,t),u=this.parseTransactionStatus(this.safeString(e,"status")),f=this.safeNumber(e,"commission");return{info:e,id:s,currency:l,amount:i,network:void 0,address:a,addressTo:a,addressFrom:void 0,tag:n,tagTo:n,tagFrom:void 0,status:u,type:c,updated:void 0,txid:o,timestamp:d,datetime:this.iso8601(d),fee:{currency:l,cost:f}}}async fetchPositions(e,t={}){await this.loadMarkets(),await this.loadAccounts();const s=this.safeValue(this.accounts,0,{}),i={"account-group":this.safeString(s,"id")},r=await this.v2PrivateAccountGroupGetFuturesPosition(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"contracts",[]),o=[];for(let e=0;e<n.length;e++)o.push(this.parsePosition(n[e]));return this.filterByArray(o,"symbol",e,!1)}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let i=this.safeNumber(e,"buyOpenOrderNotional");0===i&&(i=this.safeNumber(e,"sellOpenOrderNotional"));const r=this.safeString(e,"marginType");let a;return"isolated"===r&&(a=this.safeNumber(e,"isolatedMargin")),{info:e,id:void 0,symbol:t.symbol,notional:i,marginMode:r,liquidationPrice:void 0,entryPrice:this.safeNumber(e,"avgOpenPrice"),unrealizedPnl:this.safeNumber(e,"unrealizedPnl"),percentage:void 0,contracts:this.safeNumber(e,"position"),contractSize:this.safeNumber(t,"contractSize"),markPrice:this.safeNumber(e,"markPrice"),side:this.safeStringLower(e,"side"),hedged:void 0,timestamp:void 0,datetime:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:a,initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeInteger(e,"leverage"),marginRatio:void 0}}parseFundingRate(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeInteger(e,"time"),a=this.safeNumber(e,"fundingRate"),n=this.safeInteger(e,"nextFundingTime"),o=void 0;return{info:e,symbol:i,markPrice:this.safeNumber(e,"markPrice"),indexPrice:this.safeNumber(e,"indexPrice"),interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),previousFundingRate:void 0,nextFundingRate:a,previousFundingTimestamp:o,nextFundingTimestamp:n,previousFundingDatetime:this.iso8601(o),nextFundingDatetime:this.iso8601(n)}}async fetchFundingRates(e,t={}){await this.loadMarkets();const s=await this.v2PublicGetFuturesPricingData(t),i=this.safeValue(s,"data",{}),r=this.safeValue(i,"contracts",[]),a=this.parseFundingRates(r);return this.filterByArray(a,"symbol",e)}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r=this.market(e),a=this.safeValue(this.accounts,0,{}),n=this.safeString(a,"id");t=this.amountToPrecision(e,t);const o={"account-group":n,symbol:r.id,amount:t},c=await this.v2PrivateAccountGroupPostFuturesIsolatedPositionMargin(this.extend(o,i));return"reduce"===s&&(t=f.stringAbs(t)),this.extend(this.parseMarginModification(c,r),{amount:this.parseNumber(t),type:s})}parseMarginModification(e,t){const s="0"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:t.quote,symbol:t.symbol,status:s}}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"reduce",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"add",s)}async setLeverage(e,t,s={}){if(void 0===t)throw new r(this.id+" setLeverage() requires a symbol argument");if(e<1||e>100)throw new l(this.id+" leverage should be between 1 and 100");await this.loadMarkets(),await this.loadAccounts();const i=this.market(t);if("future"!==i.type)throw new d(this.id+" setLeverage() supports futures contracts only");const a=this.safeValue(this.accounts,0,{}),n={"account-group":this.safeString(a,"id"),symbol:i.id,leverage:e};return await this.v2PrivateAccountGroupPostFuturesLeverage(this.extend(n,s))}async setMarginMode(e,t,s={}){if("cross"===(e=e.toLowerCase())&&(e="crossed"),"isolated"!==e&&"crossed"!==e)throw new l(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets(),await this.loadAccounts();const i=this.market(t),r=this.safeValue(this.accounts,0,{}),a={"account-group":this.safeString(r,"id"),symbol:i.id,marginMode:e};if("future"!==i.type)throw new d(this.id+" setMarginMode() supports futures contracts only");return await this.v2PrivateAccountGroupPostFuturesMarginType(this.extend(a,s))}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.v2PublicGetFuturesContract(t),i=this.safeValue(s,"data");return this.parseLeverageTiers(i,e,"symbol")}parseMarketLeverageTiers(e,t){const s=this.safeValue(e,"marginRequirements",[]),i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const r=[];for(let e=0;e<s.length;e++){const i=s[e],a=this.safeString(i,"initialMarginRate");r.push({tier:this.sum(e,1),currency:t.quote,minNotional:this.safeNumber(i,"positionNotionalLowerBound"),maxNotional:this.safeNumber(i,"positionNotionalUpperBound"),maintenanceMarginRate:this.safeNumber(i,"maintenanceMarginRate"),maxLeverage:this.parseNumber(f.stringDiv("1",a)),info:i})}return r}async transfer(e,t,s,i,r={}){await this.loadMarkets(),await this.loadAccounts();const a=this.safeValue(this.accounts,0,{}),o=this.safeString(a,"id"),c=this.currency(e);t=this.currencyToPrecision(e,t);const d=this.safeValue(this.options,"accountsByType",{}),h=this.safeString(d,s,s),l=this.safeString(d,i,i);if("cash"!==h&&"cash"!==l)throw new n(this.id+" transfer() only supports direct balance transfer between spot and future, spot and margin");const u={"account-group":o,amount:t,asset:c.id,fromAccount:h,toAccount:l},f=await this.v1PrivateAccountGroupPostTransfer(this.extend(u,r)),p=this.safeValue(this.options,"transfer",{}),m=this.safeValue(p,"fillResponseFromRequest",!0),g=this.parseTransfer(f,c);return m&&(g.fromAccount=s,g.toAccount=i,g.amount=t,g.currency=e),g}parseTransfer(e,t){const s=this.safeInteger(e,"code"),i=this.safeCurrencyCode(void 0,t),r=this.milliseconds();return{info:e,id:void 0,timestamp:r,datetime:this.iso8601(r),currency:i,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(s)}}parseTransferStatus(e){return 0===e?"ok":"failed"}sign(e,t="public",s="GET",i={},r,a){const n=t[0],o=t[1],c=this.safeString(t,2);let d="";const h="accountCategory"===c;(h||"accountGroup"===c)&&(d+=this.implodeParams("/{account-group}",i),i=this.omit(i,"account-group"));let l=this.implodeParams(e,i);if(d+="/api/pro/","v2"===n?l=n+"/"+l:d+=n+"/",h&&(d+=this.implodeParams("{account-category}/",i)),i=this.omit(i,"account-category"),d+=l,("v1"===n&&"cash/balance"===l||"margin/balance"===l)&&(l="balance"),"v1"===n&&"spot/fee"===l&&(l="fee"),l.indexOf("subuser")>=0){const e=l.split("/");l=e[2]}if(i=this.omit(i,this.extractParams(e)),"public"===o)Object.keys(i).length&&(d+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.milliseconds().toString(),t=e+"+"+l,n=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64");r={"x-auth-key":this.apiKey,"x-auth-timestamp":e,"x-auth-signature":n},"GET"===s?Object.keys(i).length&&(d+="?"+this.urlencode(i)):(r["Content-Type"]="application/json",a=this.json(i))}return d=this.urls.api.rest+d,{url:d,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code"),l=this.safeString(o,"message");if(void 0!==h&&"0"!==h||void 0!==l){const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new n(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],126:[function(e,t,s){"use strict";const i=e("./functions"),{isNode:r,clone:a,unCamelCase:n,throttle:o,timeout:c,TimedOut:d,defaultFetch:h}=i,{ExchangeError:l,BadSymbol:u,NullResponse:f,InvalidAddress:p,InvalidOrder:m,NotSupported:g,AuthenticationError:y,DDoSProtection:b,RequestTimeout:v,ExchangeNotAvailable:w,RateLimitExceeded:S,ArgumentsRequired:k}=e("./errors"),{TRUNCATE:T,ROUND:O,DECIMAL_PLACES:_,NO_PADDING:x,TICK_SIZE:M}=i.precisionConstants,I=(e("../static_dependencies/BN/bn"),e("./Precise"));t.exports=class e{describe(){return{id:void 0,name:void 0,countries:void 0,enableRateLimit:!0,rateLimit:2e3,certified:!1,pro:!1,alias:!1,has:{publicAPI:!0,privateAPI:!0,CORS:void 0,spot:void 0,margin:void 0,swap:void 0,future:void 0,option:void 0,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createPostOnlyOrder:void 0,createReduceOnlyOrder:void 0,createStopOrder:void 0,createStopLimitOrder:void 0,createStopMarketOrder:void 0,editOrder:"emulated",fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRatesPerSymbol:void 0,fetchBorrowRates:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:void 0,fetchCurrencies:"emulated",fetchDeposit:void 0,fetchDepositAddress:void 0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:void 0,fetchDeposits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchFundingHistory:void 0,fetchFundingRate:void 0,fetchFundingRateHistory:void 0,fetchFundingRates:void 0,fetchIndexOHLCV:void 0,fetchL2OrderBook:!0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:void 0,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:void 0,fetchMyTrades:void 0,fetchOHLCV:"emulated",fetchOpenOrder:void 0,fetchOpenOrders:void 0,fetchOrder:void 0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPermissions:void 0,fetchPosition:void 0,fetchPositions:void 0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:void 0,fetchStatus:"emulated",fetchTicker:!0,fetchTickers:void 0,fetchTime:void 0,fetchTrades:!0,fetchTradingFee:void 0,fetchTradingFees:void 0,fetchTradingLimits:void 0,fetchTransactions:void 0,fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:void 0,reduceMargin:void 0,setLeverage:void 0,setMargin:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:void 0,withdraw:void 0},urls:{logo:void 0,api:void 0,www:void 0,doc:void 0,fees:void 0},api:void 0,requiredCredentials:{apiKey:!0,secret:!0,uid:!1,login:!1,password:!1,twofa:!1,privateKey:!1,walletAddress:!1,token:!1},markets:void 0,currencies:{},timeframes:void 0,fees:{trading:{tierBased:void 0,percentage:void 0,taker:void 0,maker:void 0},funding:{tierBased:void 0,percentage:void 0,withdraw:{},deposit:{}}},status:{status:"ok",updated:void 0,eta:void 0,url:void 0},exceptions:void 0,httpExceptions:{422:l,418:b,429:S,404:w,409:w,410:w,500:w,501:w,502:w,520:w,521:w,522:w,525:w,526:w,400:w,403:w,405:w,503:w,530:w,408:v,504:v,401:y,511:y},commonCurrencies:{XBT:"BTC",BCC:"BCH",BCHABC:"BCH",BCHSV:"BSV"},precisionMode:_,paddingMode:x,limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}}}constructor(e={}){Object.assign(this,i),this.options={},this.fetchOptions={},this.userAgents={chrome:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",chrome39:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36",chrome100:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36"},this.headers={},this.proxy="",this.origin="*",this.minFundingAddressLength=1,this.substituteCommonCurrencyCodes=!0,this.quoteJsonNumbers=!0,this.number=Number,this.handleContentTypeApplicationZip=!1,this.reduceFees=!0,this.fetchImplementation=h,this.validateServerSsl=!0,this.validateClientSsl=!1,this.timeout=1e4,this.verbose=!1,this.debug=!1,this.userAgent=void 0,this.twofa=void 0,this.apiKey=void 0,this.secret=void 0,this.uid=void 0,this.login=void 0,this.password=void 0,this.privateKey=void 0,this.walletAddress=void 0,this.token=void 0,this.balance={},this.orderbooks={},this.tickers={},this.orders=void 0,this.trades={},this.transactions={},this.ohlcvs={},this.myTrades=void 0,this.positions={},this.requiresWeb3=!1,this.requiresEddsa=!1,this.precision={},this.lastRestRequestTimestamp=0,this.enableLastJsonResponse=!0,this.enableLastHttpResponse=!0,this.enableLastResponseHeaders=!0,this.last_http_response=void 0,this.last_json_response=void 0,this.last_response_headers=void 0;const t=(e=this)=>{if(null!==e){const s=Object.getOwnPropertyNames(e);for(let e=0;e<s.length;e++){const t=s[e];this[n(t)]=this[t]}t(Object.getPrototypeOf(e))}};t();const s=Object.entries(this.describe()).concat(Object.entries(e));for(let e=0;e<s.length;e++){const[t,i]=s[e];i&&Object.getPrototypeOf(i)===Object.prototype?this[t]=this.deepExtend(this[t],i):this[t]=i}const a={keepAlive:!0};this.validateServerSsl||(a.rejectUnauthorized=!1),!this.httpAgent&&h.http&&r&&(this.httpAgent=new h.http.Agent(a)),!this.httpsAgent&&h.https&&r&&(this.httpsAgent=new h.https.Agent(a));const o=Object.keys(this.has);for(let e=0;e<o.length;e++){const t=o[e];this["has"+this.capitalize(t)]=!!this.has[t]}this.api&&this.defineRestApi(this.api,"request"),this.initRestRateLimiter(),this.markets&&this.setMarkets(this.markets)}encodeURIComponent(...e){return encodeURIComponent(...e)}checkRequiredVersion(t,s=!0){let i=!0;const[r,a,n]=t.split("."),[o,c,d]=e.ccxtVersion.split("."),h=parseInt(r),l=parseInt(a),u=parseInt(n),f=parseInt(o),p=parseInt(c),m=parseInt(d);if(h>f&&(i=!1),h===f&&(l>p||l===p&&u>m)&&(i=!1),!i){if(s)throw new g("Your current version of CCXT is "+e.ccxtVersion+", a newer version "+t+" is required, please, upgrade your version of CCXT");return s}return i}checkAddress(e){if(void 0===e)throw new p(this.id+" address is undefined");if(1===this.unique(e).length||e.length<this.minFundingAddressLength||e.includes(" "))throw new p(this.id+" address is invalid or has less than "+this.minFundingAddressLength.toString()+' characters: "'+this.json(e)+'"');return e}initRestRateLimiter(){if(void 0===this.rateLimit)throw new Error(this.id+".rateLimit property is not configured");this.tokenBucket=this.extend({delay:.001,capacity:1,cost:1,maxCapacity:1e3,refillRate:this.rateLimit>0?1/this.rateLimit:Number.MAX_VALUE},this.tokenBucket),this.throttle=o(this.tokenBucket),this.executeRestRequest=(e,t="GET",s,i)=>{const a=this.fetchImplementation,n={method:t,headers:s,body:i,timeout:this.timeout};this.agent?n.agent=this.agent:this.httpAgent&&0===e.indexOf("http://")?n.agent=this.httpAgent:this.httpsAgent&&0===e.indexOf("https://")&&(n.agent=this.httpsAgent);const o=a(e,this.extend(n,this.fetchOptions)).catch((s=>{if(r)throw new w([this.id,t,e,s.type,s.message].join(" "));throw s})).then((r=>this.handleRestResponse(r,e,t,s,i)));return c(this.timeout,o).catch((s=>{if(s instanceof d)throw new v(this.id+" "+t+" "+e+" request timed out ("+this.timeout+" ms)");throw s}))}}setSandboxMode(e){if(e){if(!("test"in this.urls))throw new g(this.id+" does not have a sandbox URL");"string"==typeof this.urls.api?(this.urls.apiBackup=this.urls.api,this.urls.api=this.urls.test):(this.urls.apiBackup=a(this.urls.api),this.urls.api=a(this.urls.test))}else"apiBackup"in this.urls&&("string"==typeof this.urls.api?this.urls.api=this.urls.apiBackup:this.urls.api=a(this.urls.apiBackup))}defineRestApiEndpoint(e,t,s,i,r,a,n={}){const o=r.split(/[^a-zA-Z0-9]/),c=o.map(this.capitalize).join(""),d=o.map((e=>e.trim().toLowerCase())).filter((e=>e.length>0)).join("_"),h=[a[0]].concat(a.slice(1).map(this.capitalize)).join(""),l=[a[0]].concat(a.slice(1).map((e=>e.trim())).filter((e=>e.length>0))).join("_"),u=h+i+this.capitalize(c),f=l+"_"+s+"_"+d,p=a.length>1?a:a[0],m=async(s={},i={})=>this[e](r,p,t,s,void 0,void 0,n,i);this[u]=m,this[f]=m}defineRestApi(e,t,s=[]){const i=Object.keys(e);for(let r=0;r<i.length;r++){const a=i[r],n=e[a],o=a.toUpperCase(),c=a.toLowerCase(),d=this.capitalize(c);if(Array.isArray(n))for(let e=0;e<n.length;e++){const i=n[e].trim();this.defineRestApiEndpoint(t,o,c,d,i,s)}else if(a.match(/^(?:get|post|put|delete|head|patch)$/i)){const e=Object.keys(n);for(let i=0;i<e.length;i++){const r=e[i],a=r.trim(),h=n[r];if("object"==typeof h)this.defineRestApiEndpoint(t,o,c,d,a,s,h);else{if("number"!=typeof h)throw new g(this.id+" defineRestApi() API format is not supported, API leafs must strings, objects or numbers");this.defineRestApiEndpoint(t,o,c,d,a,s,{cost:h})}}}else this.defineRestApi(n,t,s.concat([a]))}}log(...e){console.log(...e)}fetch(e,t="GET",s,i){return r&&this.userAgent&&("string"==typeof this.userAgent?s=this.extend({"User-Agent":this.userAgent},s):"object"==typeof this.userAgent&&"User-Agent"in this.userAgent&&(s=this.extend(this.userAgent,s))),"function"==typeof this.proxy?(e=this.proxy(e),r&&(s=this.extend({Origin:this.origin},s))):"string"==typeof this.proxy&&(this.proxy.length&&r&&(s=this.extend({Origin:this.origin},s)),e=this.proxy+e),s=this.extend(this.headers,s),s=this.setHeaders(s),this.verbose&&this.log("fetch Request:\n",this.id,t,e,"\nRequestHeaders:\n",s,"\nRequestBody:\n",i,"\n"),this.executeRestRequest(e,t,s,i)}parseJson(e){try{if(this.isJsonEncodedObject(e))return JSON.parse(this.onJsonResponse(e))}catch(e){return}}getResponseHeaders(e){const t={};return e.headers.forEach(((e,s)=>{s=s.split("-").map((e=>this.capitalize(e))).join("-"),t[s]=e})),t}handleRestResponse(e,t,s="GET",i,r){const a=this.getResponseHeaders(e);if(this.handleContentTypeApplicationZip&&"application/zip"===a["Content-Type"]){const i=e.buffer();return this.enableLastResponseHeaders&&(this.last_response_headers=a),this.enableLastHttpResponse&&(this.last_http_response=i),this.verbose&&this.log("handleRestResponse:\n",this.id,s,t,e.status,e.statusText,"\nResponseHeaders:\n",a,"ZIP redacted","\n"),i}return e.text().then((n=>{const o=this.onRestResponse(e.status,e.statusText,t,s,a,n,i,r),c=this.parseJson(o);this.enableLastResponseHeaders&&(this.last_response_headers=a),this.enableLastHttpResponse&&(this.last_http_response=n),this.enableLastJsonResponse&&(this.last_json_response=c),this.verbose&&this.log("handleRestResponse:\n",this.id,s,t,e.status,e.statusText,"\nResponseHeaders:\n",a,"\nResponseBody:\n",n,"\n");return this.handleErrors(e.status,e.statusText,t,s,a,n,c,i,r)||this.handleHttpStatusCode(e.status,e.statusText,t,s,n),c||n}))}onRestResponse(e,t,s,i,r,a,n,o){return a.trim()}onJsonResponse(e){return this.quoteJsonNumbers?e.replace(/":([+.0-9eE-]+)([,}])/g,'":"$1"$2'):e}async loadMarketsHelper(e=!1,t={}){if(!e&&this.markets)return this.markets_by_id?this.markets:this.setMarkets(this.markets);let s;!0===this.has.fetchCurrencies&&(s=await this.fetchCurrencies());const i=await this.fetchMarkets(t);return this.setMarkets(i,s)}loadMarkets(e=!1,t={}){return(e&&!this.reloadingMarkets||!this.marketsLoading)&&(this.reloadingMarkets=!0,this.marketsLoading=this.loadMarketsHelper(e,t).then((e=>(this.reloadingMarkets=!1,e)),(e=>{throw this.reloadingMarkets=!1,e}))),this.marketsLoading}fetchCurrencies(e={}){return new Promise(((e,t)=>e(this.currencies)))}fetchMarkets(e={}){return new Promise(((e,t)=>e(Object.values(this.markets))))}filterBySinceLimit(e,t,s,i="timestamp",r=!1){return null!=t&&(e=e.filter((e=>e[i]>=t))),null!=s&&(e=r?e.slice(-s):e.slice(0,s)),e}filterByValueSinceLimit(e,t,s,i,r,a="timestamp",n=!1){const o=null!=s,c=null!=i;return(o||c)&&(e=e.filter((e=>(!o||e[t]===s)&&(!c||e[a]>=i)))),null!=r&&(e=n?e.slice(-r):e.slice(0,r)),e}checkRequiredDependencies(){}remove0xPrefix(e){return"0x"===e.slice(0,2)?e.slice(2):e}hashMessage(e){const t=this.base16ToBinary(this.remove0xPrefix(e)),s=this.stringToBinary("Ethereum Signed Message:\n"+t.sigBytes);return"0x"+this.hash(this.binaryConcat(s,t),"keccak","hex")}signHash(e,t){const s=this.ecdsa(e.slice(-64),t.slice(-64),"secp256k1",void 0);return{r:"0x"+s.r,s:"0x"+s.s,v:27+s.v}}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}signMessageString(e,t){const s=this.signMessage(e,t);return s.r+this.remove0xPrefix(s.s)+this.binaryToBase16(this.numberToBE(s.v))}parseNumber(e,t){if(void 0===e)return t;try{return this.number(e)}catch(e){return t}}checkOrderArguments(e,t,s,i,r,a){if(void 0===r&&"limit"===t)throw new k(this.id+" createOrder() requires a price argument for a limit order");if(i<=0)throw new k(this.id+" createOrder() amount should be above 0")}handleHttpStatusCode(e,t,s,i,r){const a=e.toString();if(a in this.httpExceptions){throw new(0,this.httpExceptions[a])(this.id+" "+i+" "+s+" "+a+" "+t+" "+r)}}safeLedgerEntry(e,t){t=this.safeCurrency(void 0,t);let s=this.safeString(e,"direction"),i=this.safeString(e,"before"),r=this.safeString(e,"after");const a=this.safeString(e,"amount");void 0!==a&&(void 0===i&&void 0!==r?i=I.stringSub(r,a):void 0!==i&&void 0===r&&(r=I.stringAdd(i,a))),void 0!==i&&void 0!==r&&void 0===s&&(I.stringGt(i,r)&&(s="out"),I.stringGt(r,i)&&(s="in"));const n=this.safeValue(e,"fee");void 0!==n&&(n.cost=this.safeNumber(n,"cost"));const o=this.safeInteger(e,"timestamp");return{id:this.safeString(e,"id"),timestamp:o,datetime:this.iso8601(o),direction:s,account:this.safeString(e,"account"),referenceId:this.safeString(e,"referenceId"),referenceAccount:this.safeString(e,"referenceAccount"),type:this.safeString(e,"type"),currency:t.code,amount:this.parseNumber(a),before:this.parseNumber(i),after:this.parseNumber(r),status:this.safeString(e,"status"),fee:n,info:e}}setMarkets(e,t){const s=[],i=this.toArray(e);for(let e=0;e<i.length;e++){const t=this.deepExtend(this.safeMarket(),{precision:this.precision,limits:this.limits},this.fees.trading,i[e]);s.push(t)}this.markets=this.indexBy(s,"symbol"),this.markets_by_id=this.indexBy(e,"id");const r=this.keysort(this.markets),a=this.keysort(this.markets_by_id);if(this.symbols=Object.keys(r),this.ids=Object.keys(a),void 0!==t)this.currencies=this.deepExtend(this.currencies,t);else{let e=[],t=[];for(let i=0;i<s.length;i++){const r=s[i],a=this.precisionMode===_?8:this.parseNumber("0.00000001"),n=this.safeValue(r,"precision",{});if("base"in r){const t=this.safeValue2(n,"base","amount",a),s={id:this.safeString2(r,"baseId","base"),numericId:this.safeString(r,"baseNumericId"),code:this.safeString(r,"base"),precision:t};e.push(s)}if("quote"in r){const e=this.safeValue2(n,"quote","amount",a),s={id:this.safeString2(r,"quoteId","quote"),numericId:this.safeString(r,"quoteNumericId"),code:this.safeString(r,"quote"),precision:e};t.push(s)}}e=this.sortBy(e,"code"),t=this.sortBy(t,"code"),this.baseCurrencies=this.indexBy(e,"code"),this.quoteCurrencies=this.indexBy(t,"code");const i=this.arrayConcat(e,t),r=this.groupBy(i,"code"),a=Object.keys(r),n=[];for(let e=0;e<a.length;e++){const t=a[e],s=this.safeValue(r,t,[]);let i=this.safeValue(s,0);for(let e=1;e<s.length;e++){const t=s[e];i=this.precisionMode===M?t.precision<i.precision?t:i:t.precision>i.precision?t:i}n.push(i)}const o=this.sortBy(n,"code");this.currencies=this.deepExtend(this.currencies,this.indexBy(o,"code"))}this.currencies_by_id=this.indexBy(this.currencies,"id");const n=this.keysort(this.currencies);return this.codes=Object.keys(n),this.markets}safeBalance(e){const t=this.omit(e,["info","timestamp","datetime","free","used","total"]),s=Object.keys(t);e.free={},e.used={},e.total={};for(let t=0;t<s.length;t++){const i=s[t];let r=this.safeString(e[i],"total"),a=this.safeString(e[i],"free"),n=this.safeString(e[i],"used");void 0===r&&void 0!==a&&void 0!==n&&(r=I.stringAdd(a,n)),void 0===a&&void 0!==r&&void 0!==n&&(a=I.stringSub(r,n)),void 0===n&&void 0!==r&&void 0!==a&&(n=I.stringSub(r,a)),e[i].free=this.parseNumber(a),e[i].used=this.parseNumber(n),e[i].total=this.parseNumber(r),e.free[i]=e[i].free,e.used[i]=e[i].used,e.total[i]=e[i].total}return e}safeOrder(e,t){let s=this.omitZero(this.safeString(e,"amount")),i=this.safeString(e,"remaining"),r=this.safeString(e,"filled"),a=this.safeString(e,"cost"),n=this.omitZero(this.safeString(e,"average")),o=this.omitZero(this.safeString(e,"price")),c=this.safeInteger(e,"lastTradeTimestamp");const d=void 0===r,h=void 0===a,l=void 0===c,u=this.safeValue(e,"fee"),f=void 0===u,p=void 0===this.safeValue(e,"fees"),m=f||p,g=this.safeValue(e,"fees",[]);let y=[];if(d||h||m){const s=this.safeValue(e,"trades",y),i=this.number;this.number=String,y=this.parseTrades(s,t,void 0,void 0,{symbol:e.symbol,side:e.side,type:e.type,order:e.id}),this.number=i;let n=0;const o=Array.isArray(y);if(o&&(n=y.length),o&&n>0){void 0===e.symbol&&(e.symbol=y[0].symbol),void 0===e.side&&(e.side=y[0].side),void 0===e.type&&(e.type=y[0].type),void 0===e.id&&(e.id=y[0].order),d&&(r="0"),h&&(a="0");for(let e=0;e<y.length;e++){const t=y[e],s=this.safeString(t,"amount");d&&void 0!==s&&(r=I.stringAdd(r,s));const i=this.safeString(t,"cost");h&&void 0!==i&&(a=I.stringAdd(a,i));const n=this.safeValue(t,"timestamp");if(l&&void 0!==n&&(c=void 0===c?n:Math.max(c,n)),m){const e=this.safeValue(t,"fees");if(void 0!==e)for(let t=0;t<e.length;t++){const s=e[t];g.push(this.extend({},s))}else{const e=this.safeValue(t,"fee");void 0!==e&&g.push(this.extend({},e))}}}}}if(m){const t=this.reduceFees?this.reduceFeesByCurrency(g,!0):g,s=t.length;for(let e=0;e<s;e++)t[e].cost=this.safeNumber(t[e],"cost"),"rate"in t[e]&&(t[e].rate=this.safeNumber(t[e],"rate"));f||0!==s||(u.cost=this.safeNumber(u,"cost"),"rate"in u&&(u.rate=this.safeNumber(u,"rate")),t.push(u)),p&&(e.fees=t),f&&1===s&&(e.fee=t[0])}void 0===s&&(void 0!==r&&void 0!==i?s=I.stringAdd(r,i):"closed"===this.safeString(e,"status")&&(s=r)),void 0===r&&void 0!==s&&void 0!==i&&(r=I.stringSub(s,i)),void 0===i&&void 0!==s&&void 0!==r&&(i=I.stringSub(s,r)),void 0===n&&void 0!==r&&void 0!==a&&I.stringGt(r,"0")&&(n=I.stringDiv(a,r));if(h&&void 0!==r&&(void 0!==n||void 0!==o)){let e;e=void 0===n?o:n;const s=this.safeString(t,"contractSize");if(void 0!==s){this.safeValue(t,"inverse",!1)&&(e=I.stringDiv("1",e)),e=I.stringMul(e,s)}a=I.stringMul(e,r)}const b=this.safeValue(e,"type");(void 0===o||I.stringEquals(o,"0"))&&"market"===b&&(o=n);for(let e=0;e<y.length;e++){const t=y[e];t.amount=this.safeNumber(t,"amount"),t.price=this.safeNumber(t,"price"),t.cost=this.safeNumber(t,"cost");const s=this.safeValue(t,"fee",{});s.cost=this.safeNumber(s,"cost"),"rate"in s&&(s.rate=this.safeNumber(s,"rate")),t.fee=s}let v=this.safeString(e,"timeInForce");return void 0===v&&("market"===this.safeString(e,"type")&&(v="IOC"),this.safeValue(e,"postOnly",!1)&&(v="PO")),this.extend(e,{lastTradeTimestamp:c,price:this.parseNumber(o),amount:this.parseNumber(s),cost:this.parseNumber(a),average:this.parseNumber(n),filled:this.parseNumber(r),remaining:this.parseNumber(i),timeInForce:v,trades:y})}parseOrders(e,t,s,i,r={}){let a=[];if(Array.isArray(e))for(let s=0;s<e.length;s++){const i=this.extend(this.parseOrder(e[s],t),r);a.push(i)}else{const s=Object.keys(e);for(let i=0;i<s.length;i++){const n=s[i],o=this.extend(this.parseOrder(this.extend({id:n},e[n]),t),r);a.push(o)}}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.symbol:void 0,o=void 0===s;return this.filterBySymbolSinceLimit(a,n,s,i,o)}calculateFee(e,t,s,i,r,a="taker",n={}){const o=this.markets[e],c=this.safeString(o,"feeSide","quote");let d,h="quote";"quote"===c?d=i*r:"base"===c?d=i:"get"===c?(d=i,"sell"===s?d*=r:h="base"):"give"===c&&(d=i,"buy"===s?d*=r:h="base");const l=o[a];return void 0!==d&&(d*=l),{type:a,currency:o[h],rate:l,cost:d}}safeTrade(e,t){const s=this.safeString(e,"amount"),i=this.safeString(e,"price");let r=this.safeString(e,"cost");if(void 0===r){const e=this.safeString(t,"contractSize");let a=i;if(void 0!==e){this.safeValue(t,"inverse",!1)&&(a=I.stringDiv("1",i)),a=I.stringMul(a,e)}r=I.stringMul(a,s)}const a=void 0===this.safeValue(e,"fee"),n=void 0===this.safeValue(e,"fees"),o=a||n,c=[];if(o){const t=this.safeValue(e,"fees");if(void 0!==t)for(let e=0;e<t.length;e++){const s=t[e];c.push(this.extend({},s))}else{const t=this.safeValue(e,"fee");void 0!==t&&c.push(this.extend({},t))}}const d=this.safeValue(e,"fee");if(o){const t=this.reduceFees?this.reduceFeesByCurrency(c,!0):c,s=t.length;for(let e=0;e<s;e++)t[e].cost=this.safeNumber(t[e],"cost"),"rate"in t[e]&&(t[e].rate=this.safeNumber(t[e],"rate"));a||0!==s||(d.cost=this.safeNumber(d,"cost"),"rate"in d&&(d.rate=this.safeNumber(d,"rate")),t.push(d)),n&&(e.fees=t),a&&1===s&&(e.fee=t[0]);const i=this.safeValue(e,"fee");void 0!==i&&(i.cost=this.safeNumber(i,"cost"),"rate"in i&&(i.rate=this.safeNumber(i,"rate")),e.fee=i)}return e.amount=this.parseNumber(s),e.price=this.parseNumber(i),e.cost=this.parseNumber(r),e}reduceFeesByCurrency(e,t=!1){const s={};for(let i=0;i<e.length;i++){const r=e[i],a=this.safeString(r,"currency");if(void 0!==a){const e=this.safeString(r,"rate"),i=this.safeValue(r,"cost");a in s||(s[a]={});const n=void 0===e?"":e;n in s[a]?s[a][n].cost=t?I.stringAdd(s[a][n].cost,i):this.sum(s[a][n].cost,i):(s[a][n]={currency:a,cost:t?i:this.parseNumber(i)},void 0!==e&&(s[a][n].rate=t?e:this.parseNumber(e)))}}let i=[];const r=Object.values(s);for(let e=0;e<r.length;e++){const t=Object.values(r[e]);i=this.arrayConcat(i,t)}return i}safeTicker(e,t){let s=this.safeValue(e,"open"),i=this.safeValue(e,"close"),r=this.safeValue(e,"last"),a=this.safeValue(e,"change"),n=this.safeValue(e,"percentage"),o=this.safeValue(e,"average"),c=this.safeValue(e,"vwap");const d=this.safeValue(e,"baseVolume"),h=this.safeValue(e,"quoteVolume");return void 0===c&&(c=I.stringDiv(h,d)),void 0!==r&&void 0===i?i=r:void 0===r&&void 0!==i&&(r=i),void 0!==r&&void 0!==s&&(void 0===a&&(a=I.stringSub(r,s)),void 0===o&&(o=I.stringDiv(I.stringAdd(r,s),"2"))),void 0===n&&void 0!==a&&void 0!==s&&I.stringGt(s,"0")&&(n=I.stringMul(I.stringDiv(a,s),"100")),void 0===a&&void 0!==n&&void 0!==s&&(a=I.stringDiv(I.stringMul(n,s),"100")),void 0===s&&void 0!==r&&void 0!==a&&(s=I.stringSub(r,a)),this.extend(e,{bid:this.safeNumber(e,"bid"),bidVolume:this.safeNumber(e,"bidVolume"),ask:this.safeNumber(e,"ask"),askVolume:this.safeNumber(e,"askVolume"),high:this.safeNumber(e,"high"),low:this.safeNumber(e,"low"),open:this.parseNumber(s),close:this.parseNumber(i),last:this.parseNumber(r),change:this.parseNumber(a),percentage:this.parseNumber(n),average:this.parseNumber(o),vwap:this.parseNumber(c),baseVolume:this.parseNumber(d),quoteVolume:this.parseNumber(h),previousClose:this.safeNumber(e,"previousClose")})}async fetchOHLCV(e,t="1m",s,i,r={}){if(!this.has.fetchTrades)throw new g(this.id+" fetchOHLCV() is not supported yet");await this.loadMarkets();const a=await this.fetchTrades(e,s,i,r),n=this.buildOHLCVC(a,t,s,i),o=[];for(let e=0;e<n.length;e++)o.push([this.safeInteger(n[e],0),this.safeNumber(n[e],1),this.safeNumber(n[e],2),this.safeNumber(n[e],3),this.safeNumber(n[e],4),this.safeNumber(n[e],5)]);return o}convertTradingViewToOHLCV(e,t="t",s="o",i="h",r="l",a="c",n="v",o=!1){const c=[],d=this.safeValue(e,t,[]),h=this.safeValue(e,s,[]),l=this.safeValue(e,i,[]),u=this.safeValue(e,r,[]),f=this.safeValue(e,a,[]),p=this.safeValue(e,n,[]);for(let e=0;e<d.length;e++)c.push([o?this.safeInteger(d,e):this.safeTimestamp(d,e),this.safeValue(h,e),this.safeValue(l,e),this.safeValue(u,e),this.safeValue(f,e),this.safeValue(p,e)]);return c}convertOHLCVToTradingView(e,t="t",s="o",i="h",r="l",a="c",n="v",o=!1){const c={};c[t]=[],c[s]=[],c[i]=[],c[r]=[],c[a]=[],c[n]=[];for(let d=0;d<e.length;d++){const h=o?e[d][0]:parseInt(e[d][0]/1e3);c[t].push(h),c[s].push(e[d][1]),c[i].push(e[d][2]),c[r].push(e[d][3]),c[a].push(e[d][4]),c[n].push(e[d][5])}return c}marketIds(e){const t=[];for(let s=0;s<e.length;s++)t.push(this.marketId(e[s]));return t}marketSymbols(e){if(void 0===e)return e;const t=[];for(let s=0;s<e.length;s++)t.push(this.symbol(e[s]));return t}parseBidsAsks(e,t=0,s=1){e=this.toArray(e);const i=[];for(let r=0;r<e.length;r++)i.push(this.parseBidAsk(e[r],t,s));return i}async fetchL2OrderBook(e,t,s={}){const i=await this.fetchOrderBook(e,t,s);return this.extend(i,{asks:this.sortBy(this.aggregate(i.asks),0),bids:this.sortBy(this.aggregate(i.bids),0,!0)})}filterBySymbol(e,t){if(void 0===t)return e;const s=[];for(let i=0;i<e.length;i++){this.safeString(e[i],"symbol")===t&&s.push(e[i])}return s}parseOHLCV(e,t){return Array.isArray(e)?[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]:e}getNetwork(e,t){const s={ETHEREUM:"ETH",ETHER:"ETH",ERC20:"ETH",ETH:"ETH",TRC20:"TRX",TRON:"TRX",TRX:"TRX",BEP20:"BSC",BSC:"BSC",HRC20:"HT",HECO:"HT",SPL:"SOL",SOL:"SOL",TERRA:"LUNA",LUNA:"LUNA",POLYGON:"MATIC",MATIC:"MATIC",EOS:"EOS",WAVES:"WAVES",AVALANCHE:"AVAX",AVAX:"AVAX",QTUM:"QTUM",CHZ:"CHZ",NEO:"NEO",ONT:"ONT",RON:"RON"};if((e=e.toUpperCase())===t)return e;if(e in s)return s[e];throw new g(this.id+" network "+e+" is not yet supported")}safeNumber2(e,t,s,i){const r=this.safeString2(e,t,s);return this.parseNumber(r,i)}parseOrderBook(e,t,s,i="bids",r="asks",a=0,n=1){const o=this.parseBidsAsks(this.safeValue(e,i,[]),a,n),c=this.parseBidsAsks(this.safeValue(e,r,[]),a,n);return{symbol:t,bids:this.sortBy(o,0,!0),asks:this.sortBy(c,0),timestamp:s,datetime:this.iso8601(s),nonce:void 0}}parseOHLCVs(e,t,s="1m",i,r){const a=[];for(let s=0;s<e.length;s++)a.push(this.parseOHLCV(e[s],t));const n=this.sortBy(a,0),o=void 0===i;return this.filterBySinceLimit(n,i,r,0,o)}parseLeverageTiers(e,t,s){t=this.marketSymbols(t);const i={};for(let r=0;r<e.length;r++){const a=e[r],n=this.safeString(a,s),o=this.safeMarket(n),c=o.symbol;this.safeValue(o,"contract",!1)&&(void 0===t||this.inArray(c,t))&&(i[c]=this.parseMarketLeverageTiers(a,o))}return i}async loadTradingLimits(e,t=!1,s={}){if(this.has.fetchTradingLimits&&(t||!("limitsLoaded"in this.options))){const t=await this.fetchTradingLimits(e);for(let s=0;s<e.length;s++){const i=e[s];this.markets[i]=this.deepExtend(this.markets[i],t[i])}this.options.limitsLoaded=this.milliseconds()}return this.markets}parsePositions(e,t,s={}){t=this.marketSymbols(t),e=this.toArray(e);const i=[];for(let t=0;t<e.length;t++){const r=this.extend(this.parsePosition(e[t],void 0),s);i.push(r)}return this.filterByArray(i,"symbol",t,!1)}parseAccounts(e,t={}){e=this.toArray(e);const s=[];for(let i=0;i<e.length;i++){const r=this.extend(this.parseAccount(e[i]),t);s.push(r)}return s}parseTrades(e,t,s,i,r={}){e=this.toArray(e);let a=[];for(let s=0;s<e.length;s++){const i=this.extend(this.parseTrade(e[s],t),r);a.push(i)}a=this.sortBy2(a,"timestamp","id");const n=void 0!==t?t.symbol:void 0,o=void 0===s;return this.filterBySymbolSinceLimit(a,n,s,i,o)}parseTransactions(e,t,s,i,r={}){e=this.toArray(e);let a=[];for(let s=0;s<e.length;s++){const i=this.extend(this.parseTransaction(e[s],t),r);a.push(i)}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.code:void 0,o=void 0===s;return this.filterByCurrencySinceLimit(a,n,s,i,o)}parseTransfers(e,t,s,i,r={}){e=this.toArray(e);let a=[];for(let s=0;s<e.length;s++){const i=this.extend(this.parseTransfer(e[s],t),r);a.push(i)}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.code:void 0,o=void 0===s;return this.filterByCurrencySinceLimit(a,n,s,i,o)}parseLedger(e,t,s,i,r={}){let a=[];const n=this.toArray(e);for(let e=0;e<n.length;e++){const s=this.parseLedgerEntry(n[e],t);if(Array.isArray(s))for(let e=0;e<s.length;e++)a.push(this.extend(s[e],r));else a.push(this.extend(s,r))}a=this.sortBy(a,"timestamp");const o=void 0!==t?t.code:void 0,c=void 0===s;return this.filterByCurrencySinceLimit(a,o,s,i,c)}nonce(){return this.seconds()}setHeaders(e){return e}marketId(e){const t=this.market(e);return void 0!==t?t.id:e}symbol(e){const t=this.market(e);return this.safeString(t,"symbol",e)}resolvePath(e,t){return[this.implodeParams(e,t),this.omit(t,this.extractParams(e))]}filterByArray(e,t,s,i=!0){if(e=this.toArray(e),void 0===s||!s)return i?this.indexBy(e,t):e;const r=[];for(let i=0;i<e.length;i++)this.inArray(e[i][t],s)&&r.push(e[i]);return i?this.indexBy(r,t):r}async fetch2(e,t="public",s="GET",i={},r,a,n={},o={}){if(this.enableRateLimit){const r=this.calculateRateLimiterCost(t,s,e,i,n,o);await this.throttle(r)}this.lastRestRequestTimestamp=this.milliseconds();const c=this.sign(e,t,s,i,r,a);return await this.fetch(c.url,c.method,c.headers,c.body)}async request(e,t="public",s="GET",i={},r,a,n={},o={}){return await this.fetch2(e,t,s,i,r,a,n,o)}async loadAccounts(e=!1,t={}){if(e)this.accounts=await this.fetchAccounts(t);else{if(this.accounts)return this.accounts;this.accounts=await this.fetchAccounts(t)}return this.accountsById=this.indexBy(this.accounts,"id"),this.accounts}async fetchOHLCVC(e,t="1m",s,i,r={}){if(!this.has.fetchTrades)throw new g(this.id+" fetchOHLCV() is not supported yet");await this.loadMarkets();const a=await this.fetchTrades(e,s,i,r);return this.buildOHLCVC(a,t,s,i)}parseTradingViewOHLCV(e,t,s="1m",i,r){const a=this.convertTradingViewToOHLCV(e);return this.parseOHLCVs(a,t,s,i,r)}async editLimitBuyOrder(e,t,s,i,r={}){return await this.editLimitOrder(e,t,"buy",s,i,r)}async editLimitSellOrder(e,t,s,i,r={}){return await this.editLimitOrder(e,t,"sell",s,i,r)}async editLimitOrder(e,t,s,i,r,a={}){return await this.editOrder(e,t,"limit",s,i,r,a)}async editOrder(e,t,s,i,r,a,n={}){return await this.cancelOrder(e,t),await this.createOrder(t,s,i,r,a,n)}async fetchPermissions(e={}){throw new g(this.id+" fetchPermissions() is not supported yet")}async fetchBidsAsks(e,t={}){throw new g(this.id+" fetchBidsAsks() is not supported yet")}parseBidAsk(e,t=0,s=1){return[this.safeNumber(e,t),this.safeNumber(e,s)]}safeCurrency(e,t){if(void 0===e&&void 0!==t)return t;if(void 0!==this.currencies_by_id&&e in this.currencies_by_id)return this.currencies_by_id[e];let s=e;return void 0!==e&&(s=this.commonCurrencyCode(e.toUpperCase())),{id:e,code:s}}safeMarket(e,t,s){const i={id:e,symbol:e,base:void 0,quote:void 0,baseId:void 0,quoteId:void 0,active:void 0,type:void 0,linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!1,margin:!1,contract:!1,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,settle:void 0,settleId:void 0,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0};if(void 0!==e)if(void 0!==this.markets_by_id&&e in this.markets_by_id)t=this.markets_by_id[e];else if(void 0!==s){const t=e.split(s);return 2===t.length?(i.baseId=this.safeString(t,0),i.quoteId=this.safeString(t,1),i.base=this.safeCurrencyCode(i.baseId),i.quote=this.safeCurrencyCode(i.quoteId),i.symbol=i.base+"/"+i.quote,i):i}return void 0!==t?t:i}checkRequiredCredentials(e=!0){const t=Object.keys(this.requiredCredentials);for(let s=0;s<t.length;s++){const i=t[s];if(this.requiredCredentials[i]&&!this[i]){if(e)throw new y(this.id+' requires "'+i+'" credential');return e}}return!0}oath(){if(void 0!==this.twofa)return this.totp(this.twofa);throw new l(this.id+" exchange.twofa has not been set for 2FA Two-Factor Authentication")}async fetchBalance(e={}){throw new g(this.id+" fetchBalance() is not supported yet")}async fetchPartialBalance(e,t={}){return(await this.fetchBalance(t))[e]}async fetchFreeBalance(e={}){return await this.fetchPartialBalance("free",e)}async fetchUsedBalance(e={}){return await this.fetchPartialBalance("used",e)}async fetchTotalBalance(e={}){return await this.fetchPartialBalance("total",e)}async fetchStatus(e={}){if(this.has.fetchTime){const t=await this.fetchTime(e);this.status=this.extend(this.status,{updated:t})}return this.status}async fetchFundingFee(e,t={}){if(this.safeValue(this.options,"warnOnFetchFundingFee",!0))throw new g(this.id+' fetchFundingFee() method is deprecated, it will be removed in July 2022, please, use fetchTransactionFee() or set exchange.options["warnOnFetchFundingFee"] = false to suppress this warning');return this.fetchTransactionFee(e,t)}async fetchFundingFees(e,t={}){if(this.safeValue(this.options,"warnOnFetchFundingFees",!0))throw new g(this.id+' fetchFundingFees() method is deprecated, it will be removed in July 2022. Please, use fetchTransactionFees() or set exchange.options["warnOnFetchFundingFees"] = false to suppress this warning');return this.fetchTransactionFees(e,t)}async fetchTransactionFee(e,t={}){if(!this.has.fetchTransactionFees)throw new g(this.id+" fetchTransactionFee() is not supported yet");return this.fetchTransactionFees([e],t)}async fetchTransactionFees(e,t={}){throw new g(this.id+" fetchTransactionFees() is not supported yet")}getSupportedMapping(e,t={}){if(e in t)return t[e];throw new g(this.id+" "+e+" does not have a value in mapping")}async fetchBorrowRate(e,t={}){if(await this.loadMarkets(),!this.has.fetchBorrowRates)throw new g(this.id+" fetchBorrowRate() is not supported yet");const s=await this.fetchBorrowRates(t),i=this.safeValue(s,e);if(void 0===i)throw new l(this.id+" fetchBorrowRate() could not find the borrow rate for currency code "+e);return i}handleMarketTypeAndParams(e,t,s={}){const i=this.safeString2(this.options,"defaultType","type","spot"),r=this.safeValue(this.options,e);let a=i;void 0!==r&&(a="string"==typeof r?r:this.safeString2(r,"defaultType","type",a));const n=void 0===t?a:t.type;return[this.safeString2(s,"defaultType","type",n),s=this.omit(s,["defaultType","type"])]}throwExactlyMatchedException(e,t,s){if(t in e)throw new e[t](s)}throwBroadlyMatchedException(e,t,s){const i=this.findBroadlyMatchedKey(e,t);if(void 0!==i)throw new e[i](s)}findBroadlyMatchedKey(e,t){const s=Object.keys(e);for(let e=0;e<s.length;e++){const i=s[e];if(t.indexOf(i)>=0)return i}}handleErrors(e,t,s,i,r,a,n,o,c){}calculateRateLimiterCost(e,t,s,i,r={},a={}){return this.safeValue(r,"cost",1)}async fetchTicker(e,t={}){if(this.has.fetchTickers){const s=await this.fetchTickers([e],t),i=this.safeValue(s,e);if(void 0===i)throw new f(this.id+" fetchTickers() could not find a ticker for "+e);return i}throw new g(this.id+" fetchTicker() is not supported yet")}async fetchTickers(e,t={}){throw new g(this.id+" fetchTickers() is not supported yet")}async fetchOrder(e,t,s={}){throw new g(this.id+" fetchOrder() is not supported yet")}async fetchOrderStatus(e,t,s={}){return(await this.fetchOrder(e,t,s)).status}async fetchUnifiedOrder(e,t={}){return await this.fetchOrder(this.safeValue(e,"id"),this.safeValue(e,"symbol"),t)}async createOrder(e,t,s,i,r,a={}){throw new g(this.id+" createOrder() is not supported yet")}async cancelOrder(e,t,s={}){throw new g(this.id+" cancelOrder() is not supported yet")}async cancelUnifiedOrder(e,t={}){return this.cancelOrder(this.safeValue(e,"id"),this.safeValue(e,"symbol"),t)}async fetchOrders(e,t,s,i={}){throw new g(this.id+" fetchOrders() is not supported yet")}async fetchOpenOrders(e,t,s,i={}){throw new g(this.id+" fetchOpenOrders() is not supported yet")}async fetchClosedOrders(e,t,s,i={}){throw new g(this.id+" fetchClosedOrders() is not supported yet")}async fetchMyTrades(e,t,s,i={}){throw new g(this.id+" fetchMyTrades() is not supported yet")}async fetchTransactions(e,t,s,i={}){throw new g(this.id+" fetchTransactions() is not supported yet")}async fetchDeposits(e,t,s,i={}){throw new g(this.id+" fetchDeposits() is not supported yet")}async fetchWithdrawals(e,t,s,i={}){throw new g(this.id+" fetchWithdrawals() is not supported yet")}async fetchDepositAddress(e,t={}){if(this.has.fetchDepositAddresses){const s=await this.fetchDepositAddresses([e],t),i=this.safeValue(s,e);if(void 0===i)throw new p(this.id+" fetchDepositAddress() could not find a deposit address for "+e+", make sure you have created a corresponding deposit address in your wallet on the exchange website");return i}throw new g(this.id+" fetchDepositAddress() is not supported yet")}account(){return{free:void 0,used:void 0,total:void 0}}commonCurrencyCode(e){return this.substituteCommonCurrencyCodes?this.safeString(this.commonCurrencies,e,e):e}currency(e){if(void 0===this.currencies)throw new l(this.id+" currencies not loaded");if("string"==typeof e){if(e in this.currencies)return this.currencies[e];if(e in this.currencies_by_id)return this.currencies_by_id[e]}throw new l(this.id+" does not have currency code "+e)}market(e){if(void 0===this.markets)throw new l(this.id+" markets not loaded");if(void 0===this.markets_by_id)throw new l(this.id+" markets not loaded");if("string"==typeof e){if(e in this.markets)return this.markets[e];if(e in this.markets_by_id)return this.markets_by_id[e]}throw new u(this.id+" does not have market symbol "+e)}handleWithdrawTagAndParams(e,t){return"object"==typeof e&&(t=this.extend(e,t),e=void 0),void 0===e&&void 0!==(e=this.safeString(t,"tag"))&&(t=this.omit(t,"tag")),[e,t]}async createLimitOrder(e,t,s,i,r={}){return await this.createOrder(e,"limit",t,s,i,r)}async createMarketOrder(e,t,s,i,r={}){return await this.createOrder(e,"market",t,s,i,r)}async createLimitBuyOrder(e,t,s,i={}){return await this.createOrder(e,"limit","buy",t,s,i)}async createLimitSellOrder(e,t,s,i={}){return await this.createOrder(e,"limit","sell",t,s,i)}async createMarketBuyOrder(e,t,s={}){return await this.createOrder(e,"market","buy",t,void 0,s)}async createMarketSellOrder(e,t,s={}){return await this.createOrder(e,"market","sell",t,void 0,s)}costToPrecision(e,t){const s=this.market(e);return this.decimalToPrecision(t,T,s.precision.price,this.precisionMode,this.paddingMode)}priceToPrecision(e,t){const s=this.market(e);return this.decimalToPrecision(t,O,s.precision.price,this.precisionMode,this.paddingMode)}amountToPrecision(e,t){const s=this.market(e);return this.decimalToPrecision(t,T,s.precision.amount,this.precisionMode,this.paddingMode)}feeToPrecision(e,t){const s=this.market(e);return this.decimalToPrecision(t,O,s.precision.price,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,s){const i=this.currencies[e];let r=this.safeValue(i,"precision");if(void 0!==s){const e=this.safeValue(i,"networks",{}),t=this.safeValue(e,s,{});r=this.safeValue(t,"precision",r)}return void 0===r?t:this.decimalToPrecision(t,O,r,this.precisionMode,this.paddingMode)}safeNumber(e,t,s){const i=this.safeString(e,t);return this.parseNumber(i,s)}safeNumberN(e,t,s){const i=this.safeStringN(e,t);return this.parseNumber(i,s)}parsePrecision(e){if(void 0!==e)return"1e"+I.stringNeg(e)}async loadTimeDifference(e={}){const t=await this.fetchTime(e),s=this.milliseconds();return this.options.timeDifference=s-t,this.options.timeDifference}implodeHostname(e){return this.implodeParams(e,{hostname:this.hostname})}async fetchMarketLeverageTiers(e,t={}){if(this.has.fetchLeverageTiers){if(!(await this.market(e)).contract)throw new u(this.id+" fetchMarketLeverageTiers() supports contract markets only");const t=await this.fetchLeverageTiers([e]);return this.safeValue(t,e)}throw new g(this.id+" fetchMarketLeverageTiers() is not supported yet")}async createPostOnlyOrder(e,t,s,i,r,a={}){if(!this.has.createPostOnlyOrder)throw new g(this.id+"createPostOnlyOrder() is not supported yet");const n=this.extend(a,{postOnly:!0});return await this.createOrder(e,t,s,i,r,n)}async createReduceOnlyOrder(e,t,s,i,r,a={}){if(!this.has.createReduceOnlyOrder)throw new g(this.id+"createReduceOnlyOrder() is not supported yet");const n=this.extend(a,{reduceOnly:!0});return await this.createOrder(e,t,s,i,r,n)}async createStopOrder(e,t,s,i,r,a,n={}){if(!this.has.createStopOrder)throw new g(this.id+" createStopOrder() is not supported yet");if(void 0===a)throw new k(this.id+" create_stop_order() requires a stopPrice argument");const o=this.extend(n,{stopPrice:a});return await this.createOrder(e,t,s,i,r,o)}async createStopLimitOrder(e,t,s,i,r,a={}){if(!this.has.createStopLimitOrder)throw new g(this.id+" createStopLimitOrder() is not supported yet");const n=this.extend(a,{stopPrice:r});return await this.createOrder(e,"limit",t,s,i,n)}async createStopMarketOrder(e,t,s,i,r={}){if(!this.has.createStopMarketOrder)throw new g(this.id+" createStopMarketOrder() is not supported yet");const a=this.extend(r,{stopPrice:i});return await this.createOrder(e,"market",t,s,void 0,a)}safeCurrencyCode(e,t){return(t=this.safeCurrency(e,t)).code}filterBySymbolSinceLimit(e,t,s,i,r=!1){return this.filterByValueSinceLimit(e,"symbol",t,s,i,"timestamp",r)}filterByCurrencySinceLimit(e,t,s,i,r=!1){return this.filterByValueSinceLimit(e,"currency",t,s,i,"timestamp",r)}parseTickers(e,t,s={}){const i=[];if(Array.isArray(e))for(let t=0;t<e.length;t++){const r=this.extend(this.parseTicker(e[t]),s);i.push(r)}else{const t=Object.keys(e);for(let r=0;r<t.length;r++){const a=t[r],n=this.safeMarket(a),o=this.extend(this.parseTicker(e[a],n),s);i.push(o)}}return t=this.marketSymbols(t),this.filterByArray(i,"symbol",t)}parseDepositAddresses(e,t,s=!0,i={}){let r=[];for(let t=0;t<e.length;t++){const s=this.extend(this.parseDepositAddress(e[t]),i);r.push(s)}return void 0!==t&&(r=this.filterByArray(r,"currency",t,!1)),r=s?this.indexBy(r,"currency"):r,r}parseBorrowInterests(e,t){const s=[];for(let i=0;i<e.length;i++){const r=e[i];s.push(this.parseBorrowInterest(r,t))}return s}parseFundingRateHistories(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s];r.push(this.parseFundingRateHistory(i,t))}const a=this.sortBy(r,"timestamp"),n=void 0===t?void 0:t.symbol;return this.filterBySymbolSinceLimit(a,n,s,i)}safeSymbol(e,t,s){return(t=this.safeMarket(e,t,s)).symbol}parseFundingRate(e,t){throw new g(this.id+" parseFundingRate() is not supported yet")}parseFundingRates(e,t){const s={};for(let i=0;i<e.length;i++){const r=this.parseFundingRate(e[i],t);s[r.symbol]=r}return s}isPostOnly(e,t,s={}){const i=this.safeStringUpper(s,"timeInForce");let r=this.safeValue2(s,"postOnly","post_only",!1);if(r=r||"PO"===i||t,r){if("IOC"===i||"FOK"===i)throw new m(this.id+" postOnly orders cannot have timeInForce equal to "+i);if(e)throw new m(this.id+" market orders cannot be postOnly");return!0}return!1}async fetchTradingFees(e={}){throw new g(this.id+" fetchTradingFees() is not supported yet")}async fetchTradingFee(e,t={}){if(!this.has.fetchTradingFees)throw new g(this.id+" fetchTradingFee() is not supported yet");return await this.fetchTradingFees(t)}parseOpenInterest(e,t){throw new g(this.id+" parseOpenInterest () is not supported yet")}parseOpenInterests(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s],a=this.parseOpenInterest(i,t);r.push(a)}const a=this.sortBy(r,"timestamp"),n=this.safeString(t,"symbol");return this.filterBySymbolSinceLimit(a,n,s,i)}async fetchFundingRate(e,t={}){if(this.has.fetchFundingRates){if(!(await this.market(e)).contract)throw new u(this.id+" fetchFundingRate() supports contract markets only");const s=await this.fetchFundingRates([e],t),i=this.safeValue(s,e);if(void 0===i)throw new f(this.id+" fetchFundingRate () returned no data for "+e);return i}throw new g(this.id+" fetchFundingRate () is not supported yet")}async fetchMarkOHLCV(e,t="1m",s,i,r={}){if(this.has.fetchMarkOHLCV){const a={price:"mark"};return await this.fetchOHLCV(e,t,s,i,this.extend(a,r))}throw new g(this.id+" fetchMarkOHLCV () is not supported yet")}async fetchIndexOHLCV(e,t="1m",s,i,r={}){if(this.has.fetchIndexOHLCV){const a={price:"index"};return await this.fetchOHLCV(e,t,s,i,this.extend(a,r))}throw new g(this.id+" fetchIndexOHLCV () is not supported yet")}async fetchPremiumIndexOHLCV(e,t="1m",s,i,r={}){if(this.has.fetchPremiumIndexOHLCV){const a={price:"premiumIndex"};return await this.fetchOHLCV(e,t,s,i,this.extend(a,r))}throw new g(this.id+" fetchPremiumIndexOHLCV () is not supported yet")}handleTimeInForce(e={}){const t=this.safeStringUpper(e,"timeInForce");if(void 0!==t){const e=this.safeString(this.options.timeInForce,t);if(void 0===e)throw new l(this.id+' does not support timeInForce "'+t+'"');return e}}}},{"../static_dependencies/BN/bn":244,"./Precise":127,"./errors":129,"./functions":130}],127:[function(e,t,s){"use strict";const i=BigInt(0),r=BigInt(-1),a=BigInt(10);class n{constructor(e,t){if(void 0===t){let t=0;(e=e.toLowerCase()).indexOf("e")>-1&&([e,t]=e.split("e"),t=parseInt(t));const s=e.indexOf(".");this.decimals=s>-1?e.length-s-1:0;const i=e.replace(".","");this.integer=BigInt(i),this.decimals=this.decimals-t}else this.integer=e,this.decimals=t}mul(e){const t=this.integer*e.integer;return new n(t,this.decimals+e.decimals)}div(e,t=18){const s=t-this.decimals+e.decimals;let i;if(0===s)i=this.integer;else if(s<0){const e=a**BigInt(-s);i=this.integer/e}else{const e=a**BigInt(s);i=this.integer*e}const r=i/e.integer;return new n(r,t)}add(e){if(this.decimals===e.decimals){const t=this.integer+e.integer;return new n(t,this.decimals)}{const[t,s]=this.decimals>e.decimals?[e,this]:[this,e],i=s.decimals-t.decimals,r=t.integer*a**BigInt(i)+s.integer;return new n(r,s.decimals)}}mod(e){const t=Math.max(-this.decimals+e.decimals,0),s=this.integer*a**BigInt(t),i=Math.max(-e.decimals+this.decimals,0),r=e.integer*a**BigInt(i);return new n(s%r,i+e.decimals)}sub(e){const t=new n(-e.integer,e.decimals);return this.add(t)}abs(){return new n(this.integer<0?this.integer*r:this.integer,this.decimals)}neg(){return new n(-this.integer,this.decimals)}min(e){return this.lt(e)?this:e}max(e){return this.gt(e)?this:e}gt(e){return this.sub(e).integer>0}ge(e){return this.sub(e).integer>=0}lt(e){return e.gt(this)}le(e){return e.ge(this)}reduce(){const e=this.integer.toString(),t=e.length-1;if(0===t)return"0"===e&&(this.decimals=0),this;let s;for(s=t;s>=0&&"0"===e.charAt(s);s--);const i=t-s;if(0===i)return this;this.decimals-=i,this.integer=BigInt(e.slice(0,s+1))}equals(e){return this.reduce(),e.reduce(),this.decimals===e.decimals&&this.integer===e.integer}toString(){let e,t;this.reduce(),this.integer<0?(e="-",t=-this.integer):(e="",t=this.integer);const s=Array.from(t.toString(this.base).padStart(this.decimals,"0")),i=s.length-this.decimals;let r;return r=0===i?"0.":this.decimals<0?"0".repeat(-this.decimals):0===this.decimals?"":".",s.splice(i,0,r),e+s.join("")}static stringMul(e,t){if(void 0!==e&&void 0!==t)return new n(e).mul(new n(t)).toString()}static stringDiv(e,t,s=18){if(void 0===e||void 0===t)return;const r=new n(t);return r.integer!==i?new n(e).div(r,s).toString():void 0}static stringAdd(e,t){if(void 0!==e||void 0!==t)return void 0===e?t:void 0===t?e:new n(e).add(new n(t)).toString()}static stringSub(e,t){if(void 0!==e&&void 0!==t)return new n(e).sub(new n(t)).toString()}static stringAbs(e){if(void 0!==e)return new n(e).abs().toString()}static stringNeg(e){if(void 0!==e)return new n(e).neg().toString()}static stringMod(e,t){if(void 0!==e&&void 0!==t)return new n(e).mod(new n(t)).toString()}static stringEquals(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringEq(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringMin(e,t){if(void 0!==e&&void 0!==t)return new n(e).min(new n(t)).toString()}static stringMax(e,t){if(void 0!==e&&void 0!==t)return new n(e).max(new n(t)).toString()}static stringGt(e,t){if(void 0!==e&&void 0!==t)return new n(e).gt(new n(t))}static stringGe(e,t){if(void 0!==e&&void 0!==t)return new n(e).ge(new n(t))}static stringLt(e,t){if(void 0!==e&&void 0!==t)return new n(e).lt(new n(t))}static stringLe(e,t){if(void 0!==e&&void 0!==t)return new n(e).le(new n(t))}}t.exports=n},{}],128:[function(e,t,s){"use strict";t.exports={BaseError:{ExchangeError:{AuthenticationError:{PermissionDenied:{AccountNotEnabled:{}},AccountSuspended:{}},ArgumentsRequired:{},BadRequest:{BadSymbol:{},MarginModeAlreadySet:{}},BadResponse:{NullResponse:{}},InsufficientFunds:{},InvalidAddress:{AddressPending:{}},InvalidOrder:{OrderNotFound:{},OrderNotCached:{},CancelPending:{},OrderImmediatelyFillable:{},OrderNotFillable:{},DuplicateOrderId:{}},NotSupported:{}},NetworkError:{DDoSProtection:{RateLimitExceeded:{}},ExchangeNotAvailable:{OnMaintenance:{}},InvalidNonce:{},RequestTimeout:{}}}}},{}],129:[function(e,t,s){"use strict";const i=e("./errorHierarchy.js");t.exports=function e(t,s,i={}){for(const[r,a]of Object.entries(s)){const s=Object.assign(i,{[r]:class extends t{constructor(e){super(e),this.constructor=s,this.__proto__=s.prototype,this.name=r,this.message=e,Object.setPrototypeOf(this,s.prototype)}}})[r];e(s,a,i)}return i}(Error,i)},{"./errorHierarchy.js":128}],130:[function(e,t,s){"use strict";const{unCamelCase:i}=e("./functions/string");t.exports=(e=>{for(const t in e)e[i(t)]=e[t];return e})(Object.assign({},e("./functions/platform"),e("./functions/generic"),e("./functions/string"),e("./functions/type"),e("./functions/number"),e("./functions/encode"),e("./functions/crypto"),e("./functions/time"),e("./functions/throttle"),e("./functions/misc")))},{"./functions/crypto":131,"./functions/encode":132,"./functions/generic":133,"./functions/misc":134,"./functions/number":135,"./functions/platform":136,"./functions/string":137,"./functions/throttle":138,"./functions/time":139,"./functions/type":140}],131:[function(e,t,s){"use strict";const i=e("../../static_dependencies/crypto-js/crypto-js"),{capitalize:r}=e("./string"),{stringToBase64:a,urlencodeBase64:n}=e("./encode"),o=e("./../../static_dependencies/node-rsa/NodeRSA"),{binaryToBase58:c,byteArrayToWordArray:d}=e("./encode"),h=e("./../../static_dependencies/elliptic/lib/elliptic"),l=h.ec,u=h.eddsa,{ArgumentsRequired:f}=e("./../errors"),p=e("../../static_dependencies/BN/bn.js"),m=(e,t="md5",s="hex")=>{const a={};"keccak"===t&&(t="SHA3",a.outputLength=256);const n=i[t.toUpperCase()](e,a);return"binary"===s?n:n.toString(i.enc[r(s)])},g=(e,t,s="sha256",a="hex")=>{const n=i["Hmac"+s.toUpperCase()](e,t);if(a){const e="binary"===a?"Latin1":r(a);return n.toString(i.enc[r(e)])}return n};function y(e,t,s="RS256"){const i={RS256:"pkcs1-sha256",RS512:"pkcs1-sha512"};if(!(s in i))throw new ExchangeError(s+" is not a supported rsa signing algorithm.");return new o(t,{environment:"browser",signingScheme:i[s]}).sign(e,"base64","binary")}t.exports={hash:m,hmac:g,jwt:function(e,t,s="HS256"){const i=[n(a(JSON.stringify({alg:s,typ:"JWT"}))),n(a(JSON.stringify(e)))].join("."),r=s.slice(0,2);let o;return"HS"===r?o=n(g(i,t,{HS256:"sha256",HS384:"sha384",HS512:"sha512"}[s],"base64")):"RS"===r&&(o=n(y(i,t,s))),[i,o].join(".")},totp:e=>{const t=e=>parseInt(e,16),s=(e,t)=>(t+e).slice(-t.length);return(e=>{e=e.replace(" ","");let r=Math.round((new Date).getTime()/1e3),a=s(((n=Math.floor(r/30))<15.5?"0":"")+Math.round(n).toString(16),"0000000000000000");var n;let o=g(i.enc.Hex.parse(a),i.enc.Hex.parse((e=>{let t="",i="";for(let i=0;i<e.length;i++){let r="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567".indexOf(e.charAt(i).toUpperCase());t+=s(r.toString(2),"00000")}for(let e=0;e+4<=t.length;e+=4){let s=t.substr(e,4);i+=parseInt(s,2).toString(16)}return i})(e)),"sha1","hex"),c=t(o.substring(o.length-1)),d=(t(o.substr(2*c,8))&t("7fffffff"))+"";return d=d.substr(d.length-6,6),d})(e)},rsa:y,ecdsa:function(e,t,s="p256",i,r=!1){let a=e;void 0!==i&&(a=m(e,i,"hex"));const n=new l(s);let o=n.sign(a,t,"hex",{canonical:!0}),c=new p("0");const d=new p("1").shln(248).sub(new p("1"));for(;r&&(o.r.gt(n.nh)||o.r.lte(d)||o.s.lte(d));)o=n.sign(a,t,"hex",{canonical:!0,extraEntropy:c.toArray("le",32)}),c=c.add(new p("1"));return{r:o.r.toString(16).padStart(64,"0"),s:o.s.toString(16).padStart(64,"0"),v:o.recoveryParam}},eddsa:function(e,t,s="ed25519"){const i=new u(s).signModified(e,t);return c(d(i.toBytes()))}}},{"../../static_dependencies/BN/bn.js":244,"../../static_dependencies/crypto-js/crypto-js":245,"./../../static_dependencies/elliptic/lib/elliptic":246,"./../../static_dependencies/node-rsa/NodeRSA":264,"./../errors":129,"./encode":132,"./string":137}],132:[function(e,t,s){"use strict";const i=e("../../static_dependencies/crypto-js/crypto-js"),r=e("../../static_dependencies/qs/index"),a=e("../../static_dependencies/BN/bn"),n="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";let o=null,c=null;function d(e){const t=[];for(let s=0;s<e.length;s++)t[s/4|0]|=e[s]<<24-8*s;return i.lib.WordArray.create(t,e.length)}t.exports={json:(e,t)=>JSON.stringify(e),isJsonEncodedObject:e=>"string"==typeof e&&e.length>=2&&("{"===e[0]||"["===e[0]),stringToBinary:e=>i.enc.Latin1.parse(e),stringToBase64:e=>i.enc.Latin1.parse(e).toString(i.enc.Base64),base64ToBinary:e=>i.enc.Base64.parse(e),base64ToString:e=>i.enc.Base64.parse(e).toString(i.enc.Utf8),binaryToBase64:e=>e.toString(i.enc.Base64),base16ToBinary:e=>i.enc.Hex.parse(e),binaryToBase16:e=>e.toString(i.enc.Hex),binaryConcat:(...e)=>e.reduce(((e,t)=>e.concat(t))),binaryConcatArray:e=>e.reduce(((e,t)=>e.concat(t))),urlencode:e=>r.stringify(e),urlencodeNested:e=>r.stringify(e),urlencodeWithArrayRepeat:e=>r.stringify(e,{arrayFormat:"repeat"}),rawencode:e=>r.stringify(e,{encode:!1}),encode:e=>e,decode:e=>e,urlencodeBase64:e=>e.replace(/[=]+$/,"").replace(/\+/g,"-").replace(/\//g,"_"),numberToLE:(e,t)=>d(new a(e).toArray("le",t)),numberToBE:(e,t)=>d(new a(e).toArray("be",t)),base58ToBinary:e=>{if(!o){o={},c={};for(let e=0;e<58;e++){const t=n[e],s=new a(e);o[t]=s,c[s]=t}}let t=new a(0);const s=new a(58);for(let i=0;i<e.length;i++){const r=e[i];t.imul(s),t.iadd(o[r])}return d(t.toArray("be"))},binaryToBase58:e=>{if(!c){o={},c={};for(let e=0;e<58;e++){const t=n[e],s=new a(e);o[t]=s,c[s]=t}}const t=new a(58),s=e.toString(i.enc.Hex);let r=new a(s,16),d=[];for(;!r.isZero();){const{div:e,mod:s}=r.divmod(t);r=e,d.push(c[s])}return d.reverse().join("")}},t.exports.byteArrayToWordArray=d},{"../../static_dependencies/BN/bn":244,"../../static_dependencies/crypto-js/crypto-js":245,"../../static_dependencies/qs/index":280}],133:[function(e,t,s){"use strict";const{isNumber:i,isDictionary:r,isArray:a}=e("./type"),n=Object.keys,o=e=>a(e)?e:Object.values(e),c=e=>new Set(o(e)),d=(...e)=>Object.assign({},...e),h=e=>a(e)?Array.from(e):d(e);t.exports={keys:n,values:o,extend:d,clone:h,index:c,ordered:e=>e,unique:e=>Array.from(c(e)),arrayConcat:(e,t)=>e.concat(t),inArray:(e,t)=>t.includes(e),toArray:e=>Object.values(e),isEmpty:e=>!e||(Array.isArray(e)?e:Object.keys(e)).length<1,keysort(e,t={}){for(const s of n(e).sort())t[s]=e[s];return t},indexBy(e,t,s={}){for(const i of o(e))t in i&&(s[i[t]]=i);return s},groupBy(e,t,s={}){for(const i of o(e))if(t in i){const e=i[t];s[e]=s[e]||[],s[e].push(i)}return s},filterBy(e,t,s,i=[]){for(const r of o(e))r[t]===s&&i.push(r);return i},sortBy:(e,t,s=!1,i=(s?-1:1))=>e.sort(((e,s)=>e[t]<s[t]?-i:e[t]>s[t]?i:0)),sortBy2:(e,t,s,i=!1,r=(i?-1:1))=>e.sort(((e,i)=>e[t]<i[t]?-r:e[t]>i[t]?r:e[s]<i[s]?-r:e[s]>i[s]?r:0)),flatten:function e(t,s=[]){for(const i of t)a(i)?e(i,s):s.push(i);return s},pluck:(e,t)=>o(e).filter((e=>t in e)).map((e=>e[t])),omit(e,...t){if(!Array.isArray(e)){const s=h(e);for(const e of t)if(a(e))for(const t of e)delete s[t];else delete s[e];return s}return e},sum(...e){const t=e.filter(i);return t.length>0?t.reduce(((e,t)=>e+t),0):void 0},deepExtend:function e(...t){let s;for(const i of t)if(r(i)){r(s)||(s={});for(const t in i)s[t]=e(s[t],i[t])}else s=i;return s},merge(e,...t){const s={},i=Object.assign({},...t),r=Object.keys(i);for(let t=0;t<r.length;t++){const a=r[t];void 0===e[a]&&(s[a]=i[a])}return Object.assign({},e,s)}}},{"./type":140}],134:[function(e,t,s){"use strict";const{ROUND_UP:i,ROUND_DOWN:r}=e("./number"),{NotSupported:a}=e("../errors"),n=e=>{const t=e.slice(0,-1),s=e.slice(-1);let i;if("y"===s)i=31536e3;else if("M"===s)i=2592e3;else if("w"===s)i=604800;else if("d"===s)i=86400;else if("h"===s)i=3600;else if("m"===s)i=60;else{if("s"!==s)throw new a("timeframe unit "+s+" is not supported");i=1}return t*i};t.exports={aggregate(e){const t={};for(let s=0;s<e.length;s++){const[i,r]=e[s];r>0&&(t[i]=(t[i]||0)+r)}return Object.keys(t).map((e=>[parseFloat(e),parseFloat(t[e])]))},parseTimeframe:n,roundTimeframe:(e,t,s=r)=>{const a=1e3*n(e);return t-t%a+(s===i?a:0)},buildOHLCVC:(e,t="1m",s=-1/0,i=1/0)=>{const r=1e3*n(t),a=[],[o,,c,d,h,l,u]=[0,1,2,3,4,5,6],f=Math.min(e.length-1,i);for(let t=0;t<=f;t++){const i=e[t];if(i.timestamp<s)continue;const n=Math.floor(i.timestamp/r)*r,f=a.length-1;-1===f||n>=a[f][o]+r?a.push([n,i.price,i.price,i.price,i.price,i.amount,1]):(a[f][c]=Math.max(a[f][c],i.price),a[f][d]=Math.min(a[f][d],i.price),a[f][h]=i.price,a[f][l]+=i.amount,a[f][u]++)}return a},ROUND_UP:i,ROUND_DOWN:r,implodeParams:(e,t)=>{if(!Array.isArray(t)){const s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i];Array.isArray(t[r])||(e=e.replace("{"+r+"}",t[r]))}}return e},extractParams:e=>{const t=/{([\w-]+)}/g,s=[];let i=t.exec(e);for(;i;)s.push(i[1]),i=t.exec(e);return s},vwap:function(e,t){return void 0!==e&&void 0!==t&&e>0?t/e:void 0}}},{"../errors":129,"./number":135}],135:[function(e,t,s){"use strict";const i={ROUND:0,TRUNCATE:1,ROUND_UP:2,ROUND_DOWN:3,DECIMAL_PLACES:0,SIGNIFICANT_DIGITS:1,TICK_SIZE:2,NO_PADDING:0,PAD_WITH_ZERO:1};function r(e){if(void 0===e)return;if("number"!=typeof e)return e.toString();const t=e.toString();if(Math.abs(e)<1){const s=t.split("e-"),i=s[0].replace(".",""),r=parseInt(s[1]),a="-"===t[0];if(r)return e=(a?"-":"")+"0."+new Array(r).join("0")+i.substring(a)}else{const e=t.split("e");if(e[1]){let t=parseInt(e[1]);const s=e[0].split(".");let i="";return s[1]&&(t-=s[1].length,i=s[1]),s[0]+i+new Array(t+1).join("0")}}return t}const a=[],n=(e,t=0)=>{if(e=r(e),t>0){const s=a[t]||(a[t]=new RegExp("([-]*\\d+\\.\\d{"+t+"})(\\d)")),[,i]=e.toString().match(s)||[null,e];return i.toString()}return parseInt(e).toString()};function o(e){const t=e.replace(/0+$/g,"").split(".");return t.length>1?t[1].length:0}const c=(e,t,s,i=0,a=0)=>{if(2===i&&s<=0)throw new Error("TICK_SIZE cant be used with negative or zero numPrecisionDigits");if(s<0){const r=Math.pow(10,-s);if(0===t)return(r*c(e/r,t,0,i,a)).toString();if(1===t)return(e-e%r).toString()}if(2===i){const i=o(c(s,0,22,0,0));let r=e%s;r=Number(c(r,0,8,0,0));return 0!==o(c(r/s,0,Math.max(i,8),0,0))&&(0===t?e>0?r>=s/2?e=e-r+s:e-=r:e=r>=s/2?Number(e)-r:Number(e)-r-s:1===t&&(e-=r)),c(e,0,i,0,a)}const n=r(e),d="-"===n[0],h=d?1:0,l=n.length;for(var u=0;u<l&&"."!==n[u];u++);const f=u<n.length,p=48,m=new Uint8Array(l-h+(f?0:1));m[0]=p;let g=m.length,y=-1,b=-1;for(var v=1,w=h;w<l;w++,v++){const e=n.charCodeAt(w);if(46===e)g=v--;else{if(e<p||e>57)throw new Error(`${n}: invalid number (contains an illegal character '${n[v-1]}')`);m[v]=e,e!==p&&y<0&&(y=v)}}y<0&&(y=1);let S=0===i?g:y,k=S+s;b=-1;let T=!0,O=d;for(let e=m.length-1,i=0;e>=0;e--){let r=m[e];if(0!==e){if(r+=i,e>=S+s){r=0===t&&r>=53&&!(53===r&&i)?58:p}r>57?(r=p,i=1):i=0}else i&&(r=49);m[e]=r,r!==p&&(T=!1,y=e,b=b<0?e+1:b)}1===i&&(S=y,k=S+s),T&&(O=!1);const _=y>=g||T?g-1:y,x=b<g?g:b,M=O?1:0,I=M+(g-_),C=Math.max(x-g,0),P=x-_,A=0===a?P:k-_,N=Math.max(A-P,0),V=I+1+C,B=V+N,E=C+N===0,L=new Uint8Array(I+(E?0:1)+C+N);for(O&&(L[0]=45),v=M,w=_;v<I;v++,w++)L[v]=m[w];for(E||(L[I]=46),v=I+1,w=g;v<V;v++,w++)L[v]=m[w];for(v=V;v<B;v++)L[v]=p;return String.fromCharCode(...L)};t.exports={numberToString:r,precisionFromString:o,decimalToPrecision:c,truncate_to_string:n,truncate:(e,t=0)=>parseFloat(n(e,t)),omitZero:function(e){if(void 0!==e&&""!==e&&0!==parseFloat(e))return e},precisionConstants:i,ROUND:0,TRUNCATE:1,ROUND_UP:2,ROUND_DOWN:3,DECIMAL_PLACES:0,SIGNIFICANT_DIGITS:1,TICK_SIZE:2,NO_PADDING:0,PAD_WITH_ZERO:1}},{}],136:[function(e,t,s){(function(s){"use strict";const i="undefined"!=typeof window,r=void 0!==s&&void 0!==s.versions&&void 0!==s.versions.electron,a="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,n=void 0!==s&&"win32"===s.platform,o=!(i||a),c="undefined"==typeof fetch?e("../../static_dependencies/fetch-ponyfill/fetch-node")().fetch:fetch;t.exports={isBrowser:i,isElectron:r,isWebWorker:a,isNode:o,isWindows:n,defaultFetch:c}}).call(this,e("_process"))},{"../../static_dependencies/fetch-ponyfill/fetch-node":262,_process:88}],137:[function(e,t,s){"use strict";const i=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,i),r=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e5]+100+400+8e3).replace(/[018]/g,r),a=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e7]+1e3+4e3+8e5).replace(/[018]/g,a);t.exports={uuid:i,uuid16:r,uuid22:a,unCamelCase:e=>e.match(/[A-Z]/)?e.replace(/[a-z0-9][A-Z]/g,(e=>e[0]+"_"+e[1])).replace(/[A-Z0-9][A-Z0-9][a-z][^$]/g,(e=>e[0]+"_"+e[1]+e[2]+e[3])).replace(/[a-z][0-9]$/g,(e=>e[0]+"_"+e[1])).toLowerCase():e,capitalize:e=>e.length?e.charAt(0).toUpperCase()+e.slice(1):e,strip:e=>e.replace(/^\s+|\s+$/g,"")}},{}],138:[function(e,t,s){"use strict";const{now:i,sleep:r}=e("./time");class a{constructor(e){this.config={refillRate:1,delay:.001,capacity:1,maxCapacity:2e3,tokens:0,cost:1},Object.assign(this.config,e),this.queue=[],this.running=!1}async loop(){let e=i();for(;this.running;){const{resolver:t,cost:s}=this.queue[0];if(this.config.tokens>=0)this.config.tokens-=s,t(),this.queue.shift(),await Promise.resolve(),0===this.queue.length&&(this.running=!1);else{await r(1e3*this.config.delay);const t=i(),s=t-e;e=t;const a=this.config.tokens+this.config.refillRate*s;this.config.tokens=Math.min(a,this.config.capacity)}}}}t.exports={throttle:function(e){const t=new a(e),s=function(e){let t;const s=new Promise(((e,s)=>{t=e}));if(this.queue.length>this.config.maxCapacity)throw new Error("throttle queue is over maxCapacity");return e=void 0===e?this.config.cost:e,this.queue.push({resolver:t,cost:e}),this.running||(this.running=!0,this.loop()),s}.bind(t);return s.config=t.config,s}}},{"./time":139}],139:[function(e,t,s){"use strict";const i=Date.now,r=()=>1e3*i(),a=i,n=setTimeout,o=(e,t,s=n,r=i()+t)=>{if(t>=2147483647)throw new Exception("setTimeout() function was called with unrealistic value of "+t.toString());let a=()=>{},c=!0;const d=s((()=>{c=!0;const t=r-i();t>0?a=o(e,t,s,r):e()}),t);return function(){c&&(c=!1,clearTimeout(d)),a()}};class c extends Error{constructor(){const e="timed out";super(e),this.constructor=c,this.__proto__=c.prototype,this.message=e}}const d=e=>{if("string"==typeof e&&e&&!e.match(/^[0-9]+$/)&&!(e.indexOf("-")<0||e.indexOf(":")<0))try{const t=Date.parse(e.indexOf("+")>=0||"Z"===e.slice(-1)?e:(e+"Z").replace(/\s(\d\d):/,"T$1:"));if(Number.isNaN(t))return;return t}catch(e){return}},h=(e,t,s=!0)=>{t=t||"";const i=new Date(e),r=i.getUTCFullYear(),a=(s?r:r-2e3).toString();let n=i.getUTCMonth()+1,o=i.getUTCDate();return n=n<10?"0"+n:n.toString(),o=o<10?"0"+o:o.toString(),a+t+n+t+o};t.exports={now:i,microseconds:r,milliseconds:a,seconds:()=>Math.floor(i()/1e3),iso8601:e=>{let t;if(t="number"==typeof e?Math.floor(e):parseInt(e,10),!(Number.isNaN(t)||t<0))try{return new Date(t).toISOString()}catch(e){return}},parse8601:d,rfc2616:e=>new Date(e).toUTCString(),uuidv1:()=>{const e=(10*r()+122192928e9).toString(16);return e.slice(7,15)+e.slice(3,7)+"1"+e.slice(0,3)+"9696"+"ff".repeat(6)},parseDate:e=>{if("string"==typeof e&&e){if(e.indexOf("GMT")>=0)try{return Date.parse(e)}catch(e){return}return d(e)}},mdy:(e,t="-")=>{t=t||"";const s=new Date(e),i=s.getUTCFullYear().toString();let r=s.getUTCMonth()+1,a=s.getUTCDate();return r=r<10?"0"+r:r.toString(),a=a<10?"0"+a:a.toString(),r+t+a+t+i},ymd:h,yymmdd:(e,t="")=>h(e,t,!1),yyyymmdd:(e,t="-")=>h(e,t,!0),ymdhms:(e,t=" ")=>{const s=new Date(e),i=s.getUTCFullYear();let r=s.getUTCMonth()+1,a=s.getUTCDate(),n=s.getUTCHours(),o=s.getUTCMinutes(),c=s.getUTCSeconds();return r=r<10?"0"+r:r,a=a<10?"0"+a:a,n=n<10?"0"+n:n,o=o<10?"0"+o:o,c=c<10?"0"+c:c,i+"-"+r+"-"+a+t+n+":"+o+":"+c},setTimeout_safe:o,sleep:e=>new Promise((t=>o(t,e))),TimedOut:c,timeout:async(e,t)=>{let s=()=>{};const i=new Promise((t=>s=o(t,e)));try{return await Promise.race([t,i.then((()=>{throw new c}))])}finally{s()}}}},{}],140:[function(e,t,s){"use strict";const i=Number.isFinite,r=Number.isInteger,a=Array.isArray,n=e=>null!=e,o=e=>"string"==typeof e,c=e=>null!==e&&"object"==typeof e,d=e=>n(e)&&e.toString||i(e),h=(e,t)=>c(e)&&""!==e[t]&&null!==e[t]?e[t]:void 0,l=(e,t,s)=>c(e)?void 0!==e[t]&&""!==e[t]&&null!==e[t]?e[t]:""!==e[s]&&null!==e[s]?e[s]:void 0:void 0,u=(e,t)=>e[t.find((t=>void 0!==h(e,t)))],f=e=>i(e)||o(e)&&0!==e.length?parseFloat(e):NaN,p=e=>i(e)||o(e)&&0!==e.length?Math.trunc(Number(e)):NaN;t.exports={isNumber:i,isInteger:r,isArray:a,isObject:c,isString:o,isStringCoercible:d,isDictionary:e=>c(e)&&Object.getPrototypeOf(e)===Object.prototype&&!a(e)&&!(e=>e instanceof RegExp)(e),hasProps:n,prop:h,asFloat:f,asInteger:p,safeFloat:(e,t,s,r=f(h(e,t)))=>i(r)?r:s,safeInteger:(e,t,s,r=p(h(e,t)))=>i(r)?r:s,safeIntegerProduct:(e,t,s,r,a=p(h(e,t)))=>i(a)?parseInt(a*s):r,safeTimestamp:(e,t,s,r=f(h(e,t)))=>i(r)?parseInt(1e3*r):s,safeValue:(e,t,s,i=h(e,t))=>n(i)?i:s,safeString:(e,t,s,i=h(e,t))=>d(i)?String(i):s,safeStringLower:(e,t,s,i=h(e,t))=>d(i)?String(i).toLowerCase():s,safeStringUpper:(e,t,s,i=h(e,t))=>d(i)?String(i).toUpperCase():s,safeFloat2:(e,t,s,r,a=f(l(e,t,s)))=>i(a)?a:r,safeInteger2:(e,t,s,r,a=p(l(e,t,s)))=>i(a)?a:r,safeIntegerProduct2:(e,t,s,r,a,n=p(l(e,t,s)))=>i(n)?parseInt(n*r):a,safeTimestamp2:(e,t,s,r,a=f(l(e,t,s)))=>i(a)?parseInt(1e3*a):r,safeValue2:(e,t,s,i,r=l(e,t,s))=>n(r)?r:i,safeString2:(e,t,s,i,r=l(e,t,s))=>d(r)?String(r):i,safeStringLower2:(e,t,s,i,r=l(e,t,s))=>d(r)?String(r).toLowerCase():i,safeStringUpper2:(e,t,s,i,r=l(e,t,s))=>d(r)?String(r).toUpperCase():i,safeFloatN:(e,t,s,r=f(u(e,t)))=>i(r)?r:s,safeIntegerN:(e,t,s,r=p(u(e,t)))=>i(r)?r:s,safeIntegerProductN:(e,t,s,r,a=p(u(e,t)))=>i(a)?parseInt(a*s):r,safeTimestampN:(e,t,s,r=f(u(e,t)))=>i(r)?parseInt(1e3*r):s,safeValueN:(e,t,s,i=u(e,t))=>n(i)?i:s,safeStringN:(e,t,s,i=u(e,t))=>d(i)?String(i):s,safeStringLowerN:(e,t,s,i=u(e,t))=>d(i)?String(i).toLowerCase():s,safeStringUpperN:(e,t,s,i=u(e,t))=>d(i)?String(i).toUpperCase():s}},{}],141:[function(e,t,s){"use strict";const i=e("./hitbtc");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg",api:{public:"https://api.bequant.io",private:"https://api.bequant.io"},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io"}})}}},{"./hitbtc":208}],142:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AccountSuspended:a,ArgumentsRequired:n,AuthenticationError:o,DDoSProtection:c,ExchangeNotAvailable:d,InvalidOrder:h,OrderNotFound:l,PermissionDenied:u,InsufficientFunds:f,BadSymbol:p,RateLimitExceeded:m,BadRequest:g}=e("./base/errors"),{TICK_SIZE:y}=e("./base/functions/number"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bibox",name:"Bibox",countries:["CN","US","KR"],rateLimit:166.667,version:"v3.1",hostname:"bibox.com",has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!0,fetchWithdrawals:!0,transfer:void 0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"day","1w":"week"},urls:{logo:"https://user-images.githubusercontent.com/51840849/77257418-3262b000-6c85-11ea-8fb8-20bdf20b3592.jpg",api:"https://api.{hostname}",www:"https://www.bibox365.com",doc:["https://biboxcom.github.io/en/","https://biboxcom.github.io/v3/spot/en/","https://biboxcom.github.io/api/spot/v4"],fees:"https://bibox.zendesk.com/hc/en-us/articles/360002336133",referral:"https://w2.bibox365.com/login/register?invite_code=05Kj3I"},api:{v1:{public:{get:{cquery:1,mdata:1,cdata:1,orderpending:1},post:{mdata:1}},private:{post:{credit:1,cquery:1,ctrade:1,user:1,orderpending:1,transfer:1}}},"v1.1":{public:{get:["cquery"]},private:{post:["cquery","ctrade"]}},v2:{public:{get:["mdata/kline","mdata/depth"]},private:{post:["assets/transfer/spot"]}},v3:{public:{get:["mdata/ping","mdata/pairList","mdata/kline","mdata/marketAll","mdata/market","mdata/depth","mdata/deals","mdata/ticker","cbc/timestamp","cbu/timestamp"]},private:{post:["assets/transfer/spot","assets/transfer/cbc","cbc/order/open","cbc/order/close","cbc/order/closeBatch","cbc/order/closeAll","cbc/changeMargin","cbc/changeMode","cbc/assets","cbc/position","cbc/order/list","cbc/order/detail","cbc/order/listBatch","cbc/order/listBatchByClientOid","cbuassets/transfer","cbu/order/open","cbu/order/close","cbu/order/closeBatch","cbu/order/closeAll","cbu/order/planOpen","cbu/order/planOrderList","cbu/order/planClose","cbu/order/planCloseAll","cbu/changeMargin","cbu/changeMode","cbu/assets","cbu/position","cbu/order/list","bu/order/detail","cbu/order/listBatch","cbu/order/listBatchByClientOid"]}},"v3.1":{public:{get:["mdata/ping","cquery/buFundRate","cquery/buTagPrice","cquery/buValue","cquery/buUnit","cquery/bcFundRate","cquery/bcTagPrice","cquery/bcValue","cquery/bcUnit"]},private:{get:["orderpending/tradeLimit"],post:["transfer/mainAssets","spot/account/assets","transfer/transferIn","transfer/transferOut","transfer/transferInList","transfer/transferOutList","transfer/coinConfig","transfer/withdrawInfo","orderpending/trade","orderpending/cancelTrade","orderpending/orderPendingList","orderpending/pendingHistoryList","orderpending/orderDetail","orderpending/order","orderpending/orderHistoryList","orderpending/orderDetailsLast","credit/transferAssets/base2credit","credit/transferAssets/credit2base","credit/lendOrder/get","credit/borrowOrder/get","credit/lendOrderbook/get","credit/transferAssets/lendAssets","credit/transferAssets/borrowAssets","credit/borrowOrder/autobook","credit/borrowOrder/refund","credit/lendOrderbook/publish","credit/lendOrderbook/cancel","credit/trade/trade","credit/trade/cancel","cquery/base_u/dealLog","cquery/base_u/orderDetail","cquery/base_u/orderHistory","cquery/base_u/orderById","cquery/base_coin/dealLog","cquery/base_coin/orderDetail","cquery/base_coin/orderHistory","cquery/base_coin/orderById"]}},v4:{public:{get:["marketdata/pairs","marketdata/order_book","marketdata/candles","marketdata/trades","marketdata/tickers"]},private:{get:["userdata/accounts","userdata/ledger","userdata/order","userdata/orders"],post:["userdata/order"],delete:["userdata/order","userdata/orders","userdata/fills"]}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.001")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},precisionMode:y,exceptions:{2011:a,2015:o,2021:f,2027:f,2033:l,2065:h,2066:h,2067:h,2068:h,2078:h,2085:h,2091:m,2092:h,2131:h,3e3:g,3002:g,3012:o,3016:p,3024:u,3025:o,4e3:d,4003:c},commonCurrencies:{"APENFT(NFT)":"NFT",BOX:"DefiBox",BPT:"BlockPool Token",GMT:"GMT Token",KEY:"Bihu",MTC:"MTC Mesh Network",NFT:"NFT Protocol",PAI:"PCHAIN",REVO:"Revo Network",STAR:"Starbase",TERN:"Ternio-ERC20"}})}async fetchMarkets(e={}){const t=await this.v1PublicGetMdata(this.extend({cmd:"pairList"},e)),s=this.safeValue(t,"result",[]),i=await this.v1PublicGetOrderpending(this.extend({cmd:"tradeLimit"},e)),r=this.safeValue(i,"result",{}),a=this.safeValue(r,"min_trade_money",{}),n=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeInteger(t,"id"),r=this.safeString(t,"pair");let o,c;if(void 0!==r){const e=r.split("_");o=this.safeString(e,0),c=this.safeString(e,1)}const d=this.safeCurrencyCode(o),h=this.safeCurrencyCode(c),l=d+"/"+h,u="spot",f=!0;16!==this.safeInteger(t,"area_id")&&n.push({id:r,numericId:i,symbol:l,base:d,quote:h,settle:void 0,baseId:o,quoteId:c,settleId:void 0,type:u,spot:f,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"decimal")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,c),max:void 0}},info:t})}return n}parseTicker(e,t){const s=this.safeInteger(e,"timestamp");let i;const r=this.safeString(e,"coin_symbol"),a=this.safeString(e,"currency_symbol");void 0!==r&&void 0!==a&&(i=r+"_"+a),t=this.safeMarket(i,t);const n=this.safeString(e,"last"),o=this.safeString(e,"change"),c=this.safeString2(e,"vol","vol24H");let d=this.safeString(e,"percent");return void 0!==d&&(d=d.replace("%","")),this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:this.safeString(e,"buy_amount"),ask:this.safeString(e,"sell"),askVolume:this.safeString(e,"sell_amount"),vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:o,percentage:d,average:void 0,baseVolume:c,quoteVolume:this.safeString(e,"amount"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={cmd:"ticker",pair:s.id},r=await this.v1PublicGetMdata(this.extend(i,t));return this.parseTicker(r.result,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.v1PublicGetMdata(this.extend({cmd:"marketAll"},t)),i=this.parseTickers(s.result,e),r=this.indexBy(i,"symbol");return this.filterByArray(r,"symbol",e)}parseTrade(e,t){const s=this.safeInteger2(e,"time","createdAt");let i=this.safeInteger2(e,"side","order_side");i=1===i?"buy":"sell";let r=this.safeString(e,"pair");if(void 0===r){const t=this.safeString(e,"coin_symbol"),s=this.safeString(e,"currency_symbol");void 0!==t&&void 0!==s&&(r=t+"_"+s)}t=this.safeMarket(r,t);const a=this.safeString(e,"price"),n=this.safeString(e,"amount");let o;const c=this.safeString(e,"fee");if(void 0!==c){const t=this.safeString(e,"fee_symbol"),s=this.safeCurrencyCode(t);o={cost:b.stringNeg(c),currency:s}}const d=this.safeString(e,"id");return this.safeTrade({info:e,id:d,order:void 0,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:"limit",takerOrMaker:void 0,side:i,price:a,amount:n,cost:void 0,fee:o},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={cmd:"deals",pair:r.id};void 0!==s&&(a.size=s);const n=await this.v1PublicGetMdata(this.extend(a,i));return this.parseTrades(n.result,r,t,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={cmd:"depth",pair:i.id};void 0!==t&&(r.size=t);const a=await this.publicGetMdata(this.extend(r,s));return this.parseOrderBook(a.result,i.symbol,this.safeNumber(a.result,"update_time"),"bids","asks","price","volume")}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"vol")]}async fetchOHLCV(e,t="1m",s,i=1e3,r={}){await this.loadMarkets();const a=this.market(e),n={cmd:"kline",pair:a.id,period:this.timeframes[t],size:i},o=await this.v1PublicGetMdata(this.extend(n,r)),c=this.safeValue(o,"result",[]);return this.parseOHLCVs(c,a,t,s,i)}async fetchCurrencies(e={}){return this.checkRequiredCredentials(!1)?await this.fetchCurrenciesPrivate(e):await this.fetchCurrenciesPublic(e)}async fetchCurrenciesPublic(e={}){const t=await this.v1PublicGetCdata(this.extend({cmd:"currencies"},e)),s=this.safeValue(t,"result",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"name"),n=this.safeCurrencyCode(r),o=this.parseNumber(this.parsePrecision(this.safeString(t,"valid_decimals"))),c=this.safeValue(t,"enable_deposit"),d=this.safeValue(t,"enable_withdraw"),h=c&&d;i[n]={id:r,code:n,info:t,name:a,active:h,deposit:c,withdraw:d,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:this.safeNumber(t,"withdraw_min"),max:void 0}}}}return i}async fetchCurrenciesPrivate(e={}){if(!this.checkRequiredCredentials(!1))throw new o(this.id+" fetchCurrencies is an authenticated endpoint, therefore it requires 'apiKey' and 'secret' credentials. If you don't need currency details, set exchange.has['fetchCurrencies'] = false before calling its methods.");const t=await this.v1PrivatePostTransfer(this.extend({cmd:"transfer/coinList",body:{}},e)),s=this.safeValue(t,"result"),i=this.safeValue(s,0,{}),r=this.safeValue(i,"result",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"symbol"),i=t.name,n=this.safeCurrencyCode(s),o=this.parseNumber("0.00000001"),c=this.safeValue(t,"enable_deposit"),d=this.safeValue(t,"enable_withdraw"),h=c&&d;a[n]={id:s,code:n,info:t,name:i,active:h,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:void 0,max:void 0}}}}return a}parseBalance(e){const t=this.safeValue(e,"result"),s=this.safeValue(t,0,{}),i=this.safeValue(s,"result"),r={info:e},a=this.safeValue(i,"assets_list",[]);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"coin_symbol"),i=this.safeCurrencyCode(s),n=this.account();n.free=this.safeString(t,"balance"),n.used=this.safeString(t,"freeze"),r[i]=n}return this.safeBalance(r)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"type","assets");e=this.omit(e,"type");const s={cmd:"transfer/"+t,body:this.extend({select:1},e)},i=await this.v1PrivatePostTransfer(s);return this.parseBalance(i)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets(),void 0===s&&(s=100);const r={page:1,size:s};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id);const n=await this.v1PrivatePostTransfer({cmd:"transfer/transferInList",body:this.extend(r,i)}),o=this.safeValue(n,"result"),c=this.safeValue(o,0,{}),d=this.safeValue(c,"result",{}),h=this.safeValue(d,"items",[]);for(let e=0;e<h.length;e++)h[e].type="deposit";return this.parseTransactions(h,a,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets(),void 0===s&&(s=100);const r={page:1,size:s};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id);const n=await this.v1PrivatePostTransfer({cmd:"transfer/transferOutList",body:this.extend(r,i)}),o=this.safeValue(n,"result"),c=this.safeValue(o,0,{}),d=this.safeValue(c,"result",{}),h=this.safeValue(d,"items",[]);for(let e=0;e<h.length;e++)h[e].type="withdrawal";return this.parseTransactions(h,a,t,s)}parseTransaction(e,t){const s=this.safeString2(e,"id","result"),i=this.safeString(e,"to_address"),r=this.safeString(e,"coin_symbol"),a=this.safeCurrencyCode(r,t),n=this.safeInteger(e,"createdAt");let o=this.safeString(e,"addr_remark");const c=this.safeString(e,"type"),d=this.parseTransactionStatusByType(this.safeString(e,"status"),c),h=this.safeNumber(e,"amount");let l=this.safeNumber(e,"fee");"deposit"===c&&(l=0,o=void 0);const u={cost:l,currency:a};return{info:e,id:s,txid:void 0,timestamp:n,datetime:this.iso8601(n),network:void 0,address:i,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,type:c,amount:h,currency:a,status:d,updated:void 0,fee:u}}parseTransactionStatusByType(e,t){return this.safeString(this.safeValue({deposit:{1:"pending",2:"ok"},withdrawal:{0:"pending",3:"ok"}},t,{}),e,e)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o="limit"===t?2:1,c="buy"===s?1:2,d={cmd:"orderpending/trade",body:this.extend({pair:n.id,account_type:0,order_type:o,order_side:c,pay_bix:0,amount:i,price:r},a)},h=await this.v1PrivatePostOrderpending(d),l=this.safeValue(h,"result"),u=this.safeValue(l,0,{});return{info:h,id:this.safeValue(u,"result")}}async cancelOrder(e,t,s={}){const i={cmd:"orderpending/cancelTrade",body:this.extend({orders_id:e},s)},r=await this.v1PrivatePostOrderpending(i),a=this.safeValue(r,"result");return this.safeValue(a,0,{})}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={cmd:"orderpending/order",body:this.extend({id:e.toString(),account_type:0},s)},r=await this.v1PrivatePostOrderpending(i),a=this.safeValue(r,"result"),n=this.safeValue(a,0,{}),o=this.safeValue(n,"result");if(this.isEmpty(o))throw new l(this.id+" order "+e+" not found");return this.parseOrder(o)}parseOrder(e,t){let s;const i=this.safeString(e,"coin_symbol"),r=this.safeString(e,"currency_symbol");void 0!==i&&void 0!==r&&(s=i+"_"+r),t=this.safeMarket(s,t);const a="1"===this.safeString(e,"order_type")?"market":"limit",n=this.safeInteger(e,"createdAt"),o=this.safeString(e,"price"),c=this.safeString(e,"deal_price"),d=this.safeString(e,"deal_amount"),h=this.safeString(e,"amount"),l=this.safeString2(e,"deal_money","money"),u="1"===this.safeString(e,"order_side")?"buy":"sell",f=this.parseOrderStatus(this.safeString(e,"status")),p=this.safeString(e,"id"),m=this.safeString(e,"fee");let g;return void 0!==m&&(g={cost:m,currency:void 0}),this.safeOrder({info:e,id:p,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:t.symbol,type:a,timeInForce:void 0,postOnly:void 0,side:u,price:o,stopPrice:void 0,amount:h,cost:l,average:c,filled:d,remaining:void 0,status:f,fee:g,trades:void 0},t)}parseOrderStatus(e){return this.safeString({1:"open",2:"open",3:"closed",4:"canceled",5:"canceled",6:"canceled"},e,e)}async fetchOpenOrders(e,t,s,i={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e),a=r.id);const n=s||200,o={cmd:"orderpending/orderPendingList",body:this.extend({pair:a,account_type:0,page:1,size:n},i)},c=await this.v1PrivatePostOrderpending(o),d=this.safeValue(c,"result"),h=this.safeValue(d,0,{}),l=this.safeValue(h,"result",{}),u=this.safeValue(l,"items",[]);return this.parseOrders(u,r,t,s)}async fetchClosedOrders(e,t,s=200,i={}){if(void 0===e)throw new n(this.id+" fetchClosedOrders() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),a={cmd:"orderpending/pendingHistoryList",body:this.extend({pair:r.id,account_type:0,page:1,size:s},i)},o=await this.v1PrivatePostOrderpending(a),c=this.safeValue(o,"result"),d=this.safeValue(c,0,{}),h=this.safeValue(d,"result",{}),l=this.safeValue(h,"items",[]);return this.parseOrders(l,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),a=s||200,o={cmd:"orderpending/orderHistoryList",body:this.extend({pair:r.id,account_type:0,page:1,size:a,coin_symbol:r.baseId,currency_symbol:r.quoteId},i)},c=await this.v1PrivatePostOrderpending(o),d=this.safeValue(c,"result"),h=this.safeValue(d,0,{}),l=this.safeValue(h,"result",{}),u=this.safeValue(l,"items",[]);return this.parseTrades(u,r,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={cmd:"transfer/transferIn",body:this.extend({coin_symbol:s.id},t)},r=await this.v1PrivatePostTransfer(i),a=this.safeValue(r,"result"),n=this.safeValue(a,0,{}),o=this.safeValue(n,"result");let c,d=o;if(this.isJsonEncodedObject(o)){const e=JSON.parse(o);d=this.safeString(e,"account"),c=this.safeString(e,"memo")}return{currency:e,address:d,tag:c,network:void 0,info:r}}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e);if(void 0===this.password&&!("trade_pwd"in a))throw new r(this.id+" withdraw() requires this.password set on the exchange instance or a trade_pwd parameter");if(!("totp_code"in a))throw new r(this.id+" withdraw() requires a totp_code parameter for 2FA authentication");const o={trade_pwd:this.password,coin_symbol:n.id,amount:t,addr:s};void 0!==i&&(o.address_remark=i);const c=await this.v1PrivatePostTransfer({cmd:"transfer/transferOut",body:this.extend(o,a)}),d=this.safeValue(c,"result"),h=this.safeValue(d,0,{});return this.parseTransaction(h,n)}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s={},i={};void 0===e&&(e=Object.keys(this.currencies));for(let r=0;r<e.length;r++){const a=e[r],n=this.currency(a),o={cmd:"transfer/coinConfig",body:this.extend({coin_symbol:n.id},t)},c=await this.v1PrivatePostTransfer(o),d=this.safeValue(c,"result",[]),h=this.safeValue(d,0,{}),l=this.safeValue(h,"result",[]),u=this.safeValue(l,0,{});i[a]=u,s[a]=this.safeNumber(u,"withdraw_fee")}return{info:i,withdraw:s,deposit:{}}}sign(e,t="v1Public",s="GET",i={},r,a){const[n,o]=t,c="v1"===n,d="v4"===n?"/api":"";let h=this.implodeHostname(this.urls.api)+d+"/"+n+"/"+e;const l=c?this.json([i]):this.json(i);if(r={"content-type":"application/json"},"public"===o)"GET"!==s?a=c?{cmds:l}:{body:l}:Object.keys(i).length&&(h+="?"+this.urlencode(i));else if(this.checkRequiredCredentials(),"v3"===n||"v3.1"===n||"v4"===n){const e=this.numberToString(this.milliseconds());let t=e;"{}"!==l&&(t+=l);const n=this.hmac(this.encode(t),this.encode(this.secret),"md5");r["bibox-api-key"]=this.apiKey,r["bibox-api-sign"]=n,r["bibox-timestamp"]=e,"GET"===s?h+="?"+this.urlencode(i):"{}"!==l&&(a=i)}else{const e=this.hmac(this.encode(l),this.encode(this.secret),"md5");a={apikey:this.apiKey,sign:e},c?a.cmds=l:a.body=l}return void 0!==a&&(a=this.json(a,{convertArraysToObjects:!0})),{url:h,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o){if("state"in o){if(0===this.safeNumber(o,"state"))return;throw new r(this.id+" "+n)}if("error"in o){if("code"in o.error){const e=this.safeString(o.error,"code"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new r(t)}throw new r(this.id+" "+n)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],143:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,AuthenticationError:n,InsufficientFunds:o,PermissionDenied:c,BadRequest:d,BadSymbol:h,RateLimitExceeded:l,InvalidOrder:u}=e("./base/errors"),{TICK_SIZE:f}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bigone",name:"BigONE",countries:["CN"],version:"v3",rateLimit:1200,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"min1","5m":"min5","15m":"min15","30m":"min30","1h":"hour1","3h":"hour3","4h":"hour4","6h":"hour6","12h":"hour12","1d":"day1","1w":"week1","1M":"month1"},hostname:"big.one",urls:{logo:"https://user-images.githubusercontent.com/1294454/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg",api:{public:"https://{hostname}/api/v3",private:"https://{hostname}/api/v3/viewer"},www:"https://big.one",doc:"https://open.big.one/docs/api.html",fees:"https://bigone.zendesk.com/hc/en-us/articles/115001933374-BigONE-Fee-Policy",referral:"https://b1.run/users/new?code=D3LLBVFT"},api:{public:{get:["ping","asset_pairs","asset_pairs/{asset_pair_name}/depth","asset_pairs/{asset_pair_name}/trades","asset_pairs/{asset_pair_name}/ticker","asset_pairs/{asset_pair_name}/candles","asset_pairs/tickers"]},private:{get:["accounts","fund/accounts","assets/{asset_symbol}/address","orders","orders/{id}","orders/multi","trades","withdrawals","deposits"],post:["orders","orders/{id}/cancel","orders/cancel","withdrawals","transfer"]}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},options:{accountsByType:{spot:"SPOT",funding:"FUND",future:"CONTRACT",swap:"CONTRACT"},transfer:{fillResponseFromRequest:!0}},precisionMode:f,exceptions:{exact:{10001:d,10005:r,"Amount's scale must greater than AssetPair's base scale":u,"Price mulit with amount should larger than AssetPair's min_quote_value":u,10007:d,10011:r,10013:h,10014:o,10403:c,10429:l,40004:n,40103:n,40104:n,40301:c,40302:r,40601:r,40602:r,40603:o,40604:u,40605:u,40120:u,40121:u,60100:h},broad:{}},commonCurrencies:{CRE:"Cybereits",FXT:"FXTTOKEN",FREE:"FreeRossDAO",MBN:"Mobilian Coin",ONE:"BigONE Token"}})}async fetchMarkets(e={}){const t=await this.publicGetAssetPairs(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeString(t,"id"),n=this.safeValue(t,"base_asset",{}),o=this.safeValue(t,"quote_asset",{}),c=this.safeString(n,"symbol"),d=this.safeString(o,"symbol"),h=this.safeCurrencyCode(c),l=this.safeCurrencyCode(d),u={id:r,uuid:a,symbol:h+"/"+l,base:h,quote:l,settle:void 0,baseId:c,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"base_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quote_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_quote_value"),max:this.safeNumber(t,"max_quote_value")}},info:t};i.push(u)}return i}async loadMarkets(e=!1,t={}){const s=await super.loadMarkets(e,t);let i=this.safeValue(this.options,"marketsByUuid");if(void 0===i||e){i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],s=this.markets[t];i[this.safeString(s,"uuid")]=s}this.options.marketsByUuid=i}return s}parseTicker(e,t){const s=this.safeString(e,"asset_pair_name"),i=this.safeSymbol(s,t,"-"),r=void 0,a=this.safeString(e,"close"),n=this.safeValue(e,"bid",{}),o=this.safeValue(e,"ask",{});return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(n,"price"),bidVolume:this.safeString(n,"quantity"),ask:this.safeString(o,"price"),askVolume:this.safeString(o,"quantity"),vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"daily_change"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={asset_pair_name:s.id},r=await this.publicGetAssetPairsAssetPairNameTicker(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.pair_names=t.join(",")}const i=await this.publicGetAssetPairsTickers(this.extend(s,t)),r=this.safeValue(i,"data",[]),a={};for(let e=0;e<r.length;e++){const t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArray(a,"symbol",e)}async fetchTime(e={}){const t=await this.publicGetPing(e),s=this.safeValue(t,"data",{}),i=this.safeInteger(s,"timestamp");return parseInt(i/1e6)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={asset_pair_name:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetAssetPairsAssetPairNameDepth(this.extend(r,s)),n=this.safeValue(a,"data",{});return this.parseOrderBook(n,i.symbol,void 0,"bids","asks","price","quantity")}parseTrade(e,t){const s=this.parse8601(this.safeString2(e,"created_at","inserted_at")),i=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeString(e,"asset_pair_name");t=this.safeMarket(a,t,"-");let n=this.safeString(e,"side");const o=this.safeString(e,"taker_side");let c;void 0!==o&&void 0!==n&&"SELF_TRADING"!==n&&(c=o===n?"taker":"maker"),void 0===n?n="ASK"===o?"sell":"buy":"BID"===n?n="buy":"ASK"===n&&(n="sell");const d=this.safeString(e,"maker_order_id"),h=this.safeString(e,"taker_order_id");let l;void 0!==d?l=void 0!==h?[d,h]:d:void 0!==h&&(l=h);const u={id:this.safeString(e,"id"),timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:l,type:"limit",side:n,takerOrMaker:c,price:i,amount:r,cost:void 0,info:e};let f,p;void 0!==c?"buy"===n?"maker"===c?(f=t.base,p=t.quote):(f=t.quote,p=t.base):"maker"===c?(f=t.quote,p=t.base):(f=t.base,p=t.quote):"SELF_TRADING"===n&&("BID"===o?(f=t.quote,p=t.base):"ASK"===o&&(f=t.base,p=t.quote));const m=this.safeString(e,"maker_fee"),g=this.safeString(e,"taker_fee");return void 0!==m?void 0!==g?u.fees=[{cost:m,currency:f},{cost:g,currency:p}]:u.fee={cost:m,currency:f}:u.fee=void 0!==g?{cost:g,currency:p}:void 0,this.safeTrade(u,t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={asset_pair_name:r.id},n=await this.publicGetAssetPairsAssetPairNameTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);void 0===i&&(i=100);const n={asset_pair_name:a.id,period:this.timeframes[t],limit:i};if(void 0!==s){const e=this.parseTimeframe(t),r=this.sum(s,i*e*1e3);n.time=this.iso8601(r)}const o=await this.publicGetAssetPairsAssetPairNameCandles(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"asset_symbol"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),n.used=this.safeString(i,"locked_balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"type","");e=this.omit(e,"type");const s="privateGet"+this.capitalize(t)+"Accounts",i=await this[s](e);return this.parseBalance(i)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"asset_pair_name"),r=this.safeSymbol(i,t,"-"),a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),c=this.safeString(e,"avg_deal_price"),d=this.safeString(e,"filled_amount"),h=this.parseOrderStatus(this.safeString(e,"state"));let l=this.safeString(e,"side");l="BID"===l?"buy":"sell";const u=this.parse8601(this.safeString(e,"updated_at"));return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:u,symbol:r,type:void 0,timeInForce:void 0,postOnly:void 0,side:l,price:n,stopPrice:void 0,amount:o,cost:void 0,average:c,filled:d,remaining:void 0,status:h,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,n={}){await this.loadMarkets();const o=this.market(e);s="buy"===s?"BID":"ASK";const c=t.toUpperCase(),d={asset_pair_name:o.id,side:s,amount:this.amountToPrecision(e,i),type:c};if("LIMIT"===c)d.price=this.priceToPrecision(e,r);else{const t="STOP_LIMIT"===c;if(t||"STOP_MARKET"===c){const t=this.safeNumber2(n,"stop_price","stopPrice");if(void 0===t)throw new a(this.id+" createOrder() requires a stop_price parameter");d.stop_price=this.priceToPrecision(e,t),n=this.omit(n,["stop_price","stopPrice"])}t&&(d.price=this.priceToPrecision(e,r))}const h=await this.privatePostOrders(this.extend(d,n)),l=this.safeValue(h,"data");return this.parseOrder(l,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostOrdersIdCancel(this.extend(i,s)),a=this.safeValue(r,"data");return this.parseOrder(a)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={asset_pair_name:this.market(e).id};return await this.privatePostOrdersCancel(this.extend(s,t))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrdersId(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={asset_pair_name:r.id};void 0!==s&&(n.limit=s);const o=await this.privateGetOrders(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseOrders(c,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");const r=this.market(e),n={asset_pair_name:r.id};void 0!==s&&(n.limit=s);const o=await this.privateGetTrades(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}parseOrderStatus(e){return this.safeString({PENDING:"open",FILLED:"closed",CANCELLED:"canceled"},e)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({state:"PENDING"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({state:"FILLED"},i))}nonce(){return 1e3*this.microseconds()}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e));let o=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,i);if("public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t={type:"OpenAPIV2",sub:this.apiKey,nonce:e};r={Authorization:"Bearer "+this.jwt(t,this.encode(this.secret))},"GET"===s?Object.keys(n).length&&(o+="?"+this.urlencode(n)):"POST"===s&&(r["Content-Type"]="application/json",a=this.json(n))}return{url:o,method:s,body:a,headers:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={asset_symbol:this.currency(e).id},i=await this.privateGetAssetsAssetSymbolAddress(this.extend(s,t)),a=this.safeValue(i,"data",[]);if(a.length<1)throw new r(this.id+" fetchDepositAddress() returned empty address response");const n=a[0],o=this.safeString(n,"value"),c=this.safeString(n,"memo");return this.checkAddress(o),{currency:e,address:o,tag:c,network:void 0,info:i}}parseTransactionStatus(e){return this.safeString({WITHHOLD:"ok",UNCONFIRMED:"pending",CONFIRMED:"ok",COMPLETED:"ok",PENDING:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"asset_symbol"),i=this.safeCurrencyCode(s),r=this.safeInteger(e,"id"),a=this.safeNumber(e,"amount"),n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.parse8601(this.safeString(e,"inserted_at")),c=this.parse8601(this.safeString2(e,"updated_at","completed_at")),d=this.safeString(e,"txid"),h=this.safeString(e,"target_address"),l=this.safeString(e,"memo"),u="customer_id"in e?"deposit":"withdrawal";return{info:e,id:r,txid:d,timestamp:o,datetime:this.iso8601(o),network:void 0,addressFrom:void 0,address:void 0,addressTo:h,tagFrom:void 0,tag:l,tagTo:void 0,type:u,amount:a,currency:i,status:n,updated:c,fee:void 0}}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_symbol=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetDeposits(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_symbol=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetWithdrawals(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d=this.safeString(r,"guid",this.uuid()),h={symbol:a.id,amount:this.currencyToPrecision(e,t),from:o,to:c,guid:d},l=await this.privatePostTransfer(this.extend(h,r)),u=this.parseTransfer(l,a),f=this.safeValue(this.options,"transfer",{});return this.safeValue(f,"fillResponseFromRequest",!0)&&(u.fromAccount=s,u.toAccount=i,u.amount=t,u.id=d),u}parseTransfer(e,t){const s=this.safeNumber(e,"code");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:s,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(s)}}parseTransferStatus(e){return this.safeString({0:"ok"},e,"failed")}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,target_address:s,amount:this.currencyToPrecision(e,t)};void 0!==i&&(n.memo=i);const o=await this.privatePostWithdrawals(this.extend(n,r)),c=this.safeValue(o,"data",{});return this.parseTransaction(c,a)}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code"),l=this.safeString(o,"message");if("0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new r(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],144:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,ExchangeNotAvailable:n,InsufficientFunds:o,OrderNotFound:c,InvalidOrder:d,DDoSProtection:h,InvalidNonce:l,AuthenticationError:u,RateLimitExceeded:f,PermissionDenied:p,NotSupported:m,BadRequest:g,BadSymbol:y,AccountSuspended:b,OrderImmediatelyFillable:v,OnMaintenance:w,BadResponse:S,RequestTimeout:k,OrderNotFillable:T,MarginModeAlreadySet:O}=e("./base/errors"),{TRUNCATE:_,DECIMAL_PLACES:x}=e("./base/functions/number"),M=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binance",name:"Binance",countries:["JP","MT"],rateLimit:50,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!0,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:"emulated",fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchL3OrderBook:!1,fetchLedger:void 0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:void 0,fetchPositions:!0,fetchPositionsRisk:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg",test:{dapiPublic:"https://testnet.binancefuture.com/dapi/v1",dapiPrivate:"https://testnet.binancefuture.com/dapi/v1",vapiPublic:"https://testnet.binanceops.com/vapi/v1",vapiPrivate:"https://testnet.binanceops.com/vapi/v1",fapiPublic:"https://testnet.binancefuture.com/fapi/v1",fapiPrivate:"https://testnet.binancefuture.com/fapi/v1",fapiPrivateV2:"https://testnet.binancefuture.com/fapi/v2",public:"https://testnet.binance.vision/api/v3",private:"https://testnet.binance.vision/api/v3",v1:"https://testnet.binance.vision/api/v1"},api:{wapi:"https://api.binance.com/wapi/v3",sapi:"https://api.binance.com/sapi/v1",sapiV3:"https://api.binance.com/sapi/v3",dapiPublic:"https://dapi.binance.com/dapi/v1",dapiPrivate:"https://dapi.binance.com/dapi/v1",vapiPublic:"https://vapi.binance.com/vapi/v1",vapiPrivate:"https://vapi.binance.com/vapi/v1",dapiPrivateV2:"https://dapi.binance.com/dapi/v2",dapiData:"https://dapi.binance.com/futures/data",fapiPublic:"https://fapi.binance.com/fapi/v1",fapiPrivate:"https://fapi.binance.com/fapi/v1",fapiData:"https://fapi.binance.com/futures/data",fapiPrivateV2:"https://fapi.binance.com/fapi/v2",public:"https://api.binance.com/api/v3",private:"https://api.binance.com/api/v3",v1:"https://api.binance.com/api/v1"},www:"https://www.binance.com",referral:{url:"https://www.binance.com/en/register?ref=D7YA7CLY",discount:.1},doc:["https://binance-docs.github.io/apidocs/spot/en"],api_management:"https://www.binance.com/en/usercenter/settings/api-management",fees:"https://www.binance.com/en/fee/schedule"},depth:1,api:{sapi:{get:{"system/status":.1,accountSnapshot:240,"margin/asset":1,"margin/pair":1,"margin/allAssets":.1,"margin/allPairs":.1,"margin/priceIndex":1,"asset/assetDividend":1,"asset/dribblet":.1,"asset/transfer":.1,"asset/assetDetail":.1,"asset/tradeFee":.1,"margin/loan":1,"margin/repay":1,"margin/account":1,"margin/transfer":.1,"margin/interestHistory":.1,"margin/forceLiquidationRec":.1,"margin/order":1,"margin/openOrders":1,"margin/allOrders":20,"margin/myTrades":1,"margin/maxBorrowable":5,"margin/maxTransferable":5,"margin/isolated/transfer":.1,"margin/isolated/account":1,"margin/isolated/pair":1,"margin/isolated/allPairs":1,"margin/isolated/accountLimit":.1,"margin/interestRateHistory":.1,"margin/orderList":1,"margin/allOrderList":20,"margin/openOrderList":1,"margin/crossMarginData":{cost:.1,noCoin:.5},"margin/isolatedMarginData":{cost:.1,noCoin:1},"margin/isolatedMarginTier":.1,"margin/rateLimit/order":2,"margin/dribblet":.1,"loan/income":40,"fiat/orders":600.03,"fiat/payments":.1,"futures/transfer":1,"futures/loan/borrow/history":1,"futures/loan/repay/history":1,"futures/loan/wallet":1,"futures/loan/configs":1,"futures/loan/calcAdjustLevel":5,"futures/loan/calcMaxAdjustAmount":5,"futures/loan/adjustCollateral/history":1,"futures/loan/liquidationHistory":1,"rebate/taxQuery":20.001,"capital/config/getall":1,"capital/deposit/address":1,"capital/deposit/hisrec":.1,"capital/deposit/subAddress":.1,"capital/deposit/subHisrec":.1,"capital/withdraw/history":.1,"convert/tradeFlow":.6667,"account/status":.1,"account/apiTradingStatus":.1,"account/apiRestrictions/ipRestriction":.1,bnbBurn:.1,"sub-account/futures/account":1,"sub-account/futures/accountSummary":.1,"sub-account/futures/positionRisk":1,"sub-account/futures/internalTransfer":.1,"sub-account/list":.1,"sub-account/margin/account":1,"sub-account/margin/accountSummary":1,"sub-account/spotSummary":.1,"sub-account/status":1,"sub-account/sub/transfer/history":.1,"sub-account/transfer/subUserHistory":.1,"sub-account/universalTransfer":.1,"managed-subaccount/asset":.1,"managed-subaccount/accountSnapshot":240,"lending/daily/product/list":.1,"lending/daily/userLeftQuota":.1,"lending/daily/userRedemptionQuota":.1,"lending/daily/token/position":.1,"lending/union/account":.1,"lending/union/purchaseRecord":.1,"lending/union/redemptionRecord":.1,"lending/union/interestHistory":.1,"lending/project/list":.1,"lending/project/position/list":.1,"mining/pub/algoList":.1,"mining/pub/coinList":.1,"mining/worker/detail":.5,"mining/worker/list":.5,"mining/payment/list":.5,"mining/statistics/user/status":.5,"mining/statistics/user/list":.5,"mining/payment/uid":.5,"bswap/pools":.1,"bswap/liquidity":{cost:.1,noPoolId:1},"bswap/liquidityOps":20.001,"bswap/quote":1.00005,"bswap/swap":20.001,"bswap/poolConfigure":1.00005,"bswap/addLiquidityPreview":1.00005,"bswap/removeLiquidityPreview":1.00005,"bswap/unclaimedRewards":6.667,"bswap/claimedHistory":6.667,"blvt/tokenInfo":.1,"blvt/subscribe/record":.1,"blvt/redeem/record":.1,"blvt/userLimit":.1,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/recentRecord":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/recentRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccountApi":1,"broker/subAccount":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/info":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/recentRecord":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/status":1,"broker/subAccount/depositHist":1,"broker/subAccount/spotSummary":1,"broker/subAccount/marginSummary":1,"broker/subAccount/futuresSummary":1,"broker/rebate/futures/recentRecord":1,"broker/subAccountApi/ipRestriction":1,"broker/universalTransfer":1,"account/apiRestrictions":.1,"c2c/orderMatch/listUserOrderHistory":.1,"nft/history/transactions":20.001,"nft/history/deposit":20.001,"nft/history/withdraw":20.001,"nft/user/getAsset":20.001,"pay/transactions":20.001,"giftcard/verify":.1,"giftcard/cryptography/rsa-public-key":.1,"algo/futures/openOrders":.1,"algo/futures/historicalOrders":.1,"algo/futures/subOrders":.1,"portfolio/account":.1,"staking/productList":.1,"staking/position":.1,"staking/stakingRecord":.1,"staking/personalLeftQuota":.1},post:{"asset/dust":1,"asset/dust-btc":.1,"asset/transfer":.1,"asset/get-funding-asset":.1,"account/disableFastWithdrawSwitch":.1,"account/enableFastWithdrawSwitch":.1,"capital/withdraw/apply":.1,"margin/transfer":1,"margin/loan":20.001,"margin/repay":20.001,"margin/order":.040002,"margin/order/oco":.040002,"margin/isolated/transfer":4.0002,"margin/isolated/account":2.0001,bnbBurn:.1,"sub-account/margin/transfer":4.0002,"sub-account/margin/enable":.1,"sub-account/futures/enable":.1,"sub-account/futures/transfer":.1,"sub-account/futures/internalTransfer":.1,"sub-account/transfer/subToSub":.1,"sub-account/transfer/subToMaster":.1,"sub-account/universalTransfer":.1,"managed-subaccount/deposit":.1,"managed-subaccount/withdraw":.1,userDataStream:.1,"userDataStream/isolated":.1,"futures/transfer":.1,"futures/loan/borrow":20.001,"futures/loan/repay":20.001,"futures/loan/adjustCollateral":20.001,"lending/customizedFixed/purchase":.1,"lending/daily/purchase":.1,"lending/daily/redeem":.1,"bswap/liquidityAdd":60,"bswap/liquidityRemove":60,"bswap/swap":60,"bswap/claimRewards":6.667,"blvt/subscribe":.1,"blvt/redeem":.1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccount":1,"broker/subAccount/margin":1,"broker/subAccount/futures":1,"broker/subAccountApi":1,"broker/subAccountApi/permission":1,"broker/subAccountApi/commission":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/spot":1,"broker/subAccount/bnbBurn/marginInterest":1,"broker/subAccount/blvt":1,"broker/subAccountApi/ipRestriction":1,"broker/subAccountApi/ipRestriction/ipList":1,"broker/universalTransfer":1,"broker/subAccountApi/permission/universalTransfer":1,"broker/subAccountApi/permission/vanillaOptions":1,"giftcard/createCode":.1,"giftcard/redeemCode":.1,"algo/futures/newOrderVp":20.001,"algo/futures/newOrderTwap":20.001,"staking/purchase":.1,"staking/redeem":.1,"staking/setAutoStaking":.1},put:{userDataStream:.1,"userDataStream/isolated":.1},delete:{"margin/openOrders":.1,"margin/order":.0066667,"margin/orderList":.0066667,"margin/isolated/account":2.0001,userDataStream:.1,"userDataStream/isolated":.1,"broker/subAccountApi":1,"broker/subAccountApi/ipRestriction/ipList":1,"algo/futures/order":.1}},sapiV3:{get:{"sub-account/assets":1},post:{"asset/getUserAsset":.5}},wapi:{post:{withdraw:1,"sub-account/transfer":1},get:{depositHistory:1,withdrawHistory:1,depositAddress:1,accountStatus:1,systemStatus:1,apiTradingStatus:1,userAssetDribbletLog:1,tradeFee:1,assetDetail:1,"sub-account/list":1,"sub-account/transfer/history":1,"sub-account/assets":1}},dapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:1,historicalTrades:20,aggTrades:20,premiumIndex:10,fundingRate:1,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},openInterest:1,pmExchangeInfo:1}},dapiData:{get:{openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerBuySellVol:1,basis:1}},dapiPrivate:{get:{"positionSide/dual":30,order:1,openOrder:1,openOrders:{cost:1,noSymbol:5},allOrders:{cost:20,noSymbol:40},balance:1,account:5,"positionMargin/history":1,positionRisk:1,userTrades:{cost:20,noSymbol:40},income:20,leverageBracket:1,forceOrders:{cost:20,noSymbol:50},adlQuantile:5,orderAmendment:1},post:{"positionSide/dual":1,order:4,batchOrders:5,countdownCancelAll:10,leverage:1,marginType:1,positionMargin:1,listenKey:1},put:{listenKey:1,order:1,batchOrders:5},delete:{order:1,allOpenOrders:1,batchOrders:5,listenKey:1}},dapiPrivateV2:{get:{leverageBracket:1}},fapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:1,historicalTrades:20,aggTrades:20,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},fundingRate:1,premiumIndex:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},openInterest:1,indexInfo:1,apiTradingStatus:{cost:1,noSymbol:10},lvtKlines:1,pmExchangeInfo:1}},fapiData:{get:{openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerlongshortRatio:1}},fapiPrivate:{get:{forceOrders:{cost:20,noSymbol:50},allOrders:5,openOrder:1,openOrders:1,order:1,account:5,balance:5,leverageBracket:1,"positionMargin/history":1,positionRisk:5,"positionSide/dual":30,userTrades:5,income:30,commissionRate:20,apiTradingStatus:1,multiAssetsMargin:30,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/traderNum":1,"apiReferral/overview":1,"apiReferral/tradeVol":1,"apiReferral/rebateVol":1,"apiReferral/traderSummary":1,adlQuantile:5},post:{batchOrders:5,"positionSide/dual":1,positionMargin:1,marginType:1,order:4,leverage:1,listenKey:1,countdownCancelAll:10,multiAssetsMargin:1,"apiReferral/customization":1,"apiReferral/userCustomization":1},put:{listenKey:1},delete:{batchOrders:1,order:1,allOpenOrders:1,listenKey:1}},fapiPrivateV2:{get:{account:1,balance:1,positionRisk:1}},vapiPublic:{get:["ping","time","optionInfo","exchangeInfo","index","ticker","mark","depth","klines","trades","historicalTrades"]},vapiPrivate:{get:["account","position","order","openOrders","historyOrders","userTrades"],post:["transfer","bill","order","batchOrders","userDataStream","openAccount"],put:["userDataStream"],delete:["order","batchOrders","allOpenOrders","userDataStream"]},public:{get:{ping:1,time:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},trades:1,aggTrades:1,historicalTrades:5,klines:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},exchangeInfo:10},put:{userDataStream:1},post:{userDataStream:1},delete:{userDataStream:1}},private:{get:{allOrderList:10,openOrderList:3,orderList:2,order:2,openOrders:{cost:3,noSymbol:40},allOrders:10,account:10,myTrades:10,"rateLimit/order":20},post:{"order/oco":1,order:1,"order/test":1},delete:{openOrders:1,orderList:1,order:1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")},future:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000400"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},delivery:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}},option:{}},commonCurrencies:{BCC:"BCC",YOYO:"YOYOW"},precisionMode:x,options:{fetchCurrencies:!0,defaultTimeInForce:"GTC",defaultType:"spot",defaultMarginMode:"cross",hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,throwMarginModeAlreadySet:!1,fetchPositions:"positionRisk",recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,newOrderRespType:{market:"FULL",limit:"FULL"},settle:{USDT:"linear",BUSD:"linear"},quoteOrderQty:!0,broker:{spot:"x-R4BD3S82",margin:"x-R4BD3S82",future:"x-xcKtGhcu",delivery:"x-xcKtGhcu"},accountsByType:{main:"MAIN",spot:"MAIN",funding:"FUNDING",margin:"MARGIN",future:"UMFUTURE",delivery:"CMFUTURE",mining:"MINING"},accountsById:{MAIN:"spot",FUNDING:"funding",MARGIN:"margin",UMFUTURE:"future",CMFUTURE:"delivery",MINING:"mining"},networks:{ERC20:"ETH",TRC20:"TRX",BEP2:"BNB",BEP20:"BSC",OMNI:"OMNI",EOS:"EOS",SPL:"SOL"},reverseNetworks:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},impliedNetworks:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}},legalMoney:{MXN:!0,UGX:!0,SEK:!0,CHF:!0,VND:!0,AED:!0,DKK:!0,KZT:!0,HUF:!0,PEN:!0,PHP:!0,USD:!0,TRY:!0,EUR:!0,NGN:!0,PLN:!0,BRL:!0,ZAR:!0,KES:!0,ARS:!0,RUB:!0,AUD:!0,NOK:!0,CZK:!0,GBP:!0,UAH:!0,GHS:!0,HKD:!0,CAD:!0,INR:!0,JPY:!0,NZD:!0}},exceptions:{exact:{"System is under maintenance.":w,"System abnormality":r,"You are not authorized to execute this request.":p,"API key does not exist":u,"Order would trigger immediately.":v,"Stop price would trigger immediately.":v,"Order would immediately match and take.":v,"Account has insufficient balance for requested action.":o,"Rest API trading is not enabled.":n,"You don't have permission.":p,"Market is closed.":n,"Too many requests. Please try again later.":h,"This action disabled is on this account.":b,"-1000":n,"-1001":n,"-1002":u,"-1003":f,"-1004":h,"-1005":p,"-1006":S,"-1007":k,"-1010":S,"-1011":p,"-1013":d,"-1014":d,"-1015":f,"-1016":n,"-1020":g,"-1021":l,"-1022":u,"-1023":g,"-1099":u,"-1100":g,"-1101":g,"-1102":g,"-1103":g,"-1104":g,"-1105":g,"-1106":g,"-1108":g,"-1109":u,"-1110":g,"-1111":g,"-1112":d,"-1113":g,"-1114":g,"-1115":g,"-1116":g,"-1117":g,"-1118":g,"-1119":g,"-1120":g,"-1121":y,"-1125":u,"-1127":g,"-1128":g,"-1130":g,"-1131":g,"-1136":g,"-2008":u,"-2010":r,"-2011":c,"-2013":c,"-2014":u,"-2015":u,"-2016":g,"-2018":o,"-2019":o,"-2020":T,"-2021":v,"-2022":d,"-2023":o,"-2024":o,"-2025":d,"-2026":d,"-2027":d,"-2028":o,"-3000":r,"-3001":u,"-3002":y,"-3003":g,"-3004":r,"-3005":o,"-3006":o,"-3007":r,"-3008":o,"-3009":g,"-3010":r,"-3011":g,"-3012":r,"-3013":g,"-3014":b,"-3015":r,"-3016":g,"-3017":r,"-3018":b,"-3019":b,"-3020":o,"-3021":g,"-3022":b,"-3023":g,"-3024":r,"-3025":g,"-3026":g,"-3027":y,"-3028":y,"-3029":r,"-3036":b,"-3037":r,"-3038":g,"-3041":o,"-3042":g,"-3043":g,"-3044":h,"-3045":r,"-3999":r,"-4001":g,"-4002":g,"-4003":g,"-4004":u,"-4005":f,"-4006":g,"-4007":g,"-4008":g,"-4010":g,"-4011":g,"-4012":g,"-4013":u,"-4014":p,"-4015":r,"-4016":p,"-4017":p,"-4018":y,"-4019":y,"-4021":g,"-4022":g,"-4023":r,"-4024":o,"-4025":o,"-4026":o,"-4027":r,"-4028":g,"-4029":g,"-4030":r,"-4031":r,"-4032":r,"-4033":g,"-4034":r,"-4035":p,"-4036":g,"-4037":r,"-4038":r,"-4039":g,"-4040":g,"-4041":r,"-4042":r,"-4043":g,"-4044":g,"-4045":r,"-4046":u,"-4047":g,"-5001":g,"-5002":o,"-5003":o,"-5004":g,"-5005":o,"-5006":g,"-5007":g,"-5008":o,"-5009":g,"-5010":r,"-5011":g,"-5012":r,"-5013":o,"-5021":g,"-6001":g,"-6003":g,"-6004":r,"-6005":d,"-6006":g,"-6007":g,"-6008":g,"-6009":f,"-6011":g,"-6012":o,"-6013":r,"-6014":g,"-6015":g,"-6016":g,"-6017":g,"-6018":g,"-6019":u,"-6020":g,"-7001":g,"-7002":g,"-9000":o,"-10017":g,"-11008":o,"-12014":f,"-13000":g,"-13001":g,"-13002":g,"-13003":g,"-13004":g,"-13005":g,"-13006":d,"-13007":u,"-21001":g,"-21002":g,"-21003":g,100001003:g},broad:{"has no operation privilege":p,MAX_POSITION:d}}})}costToPrecision(e,t){return this.decimalToPrecision(t,_,this.markets[e].precision.quote,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,s){return void 0!==this.safeValue(this.currencies[e],"precision")?this.decimalToPrecision(t,_,this.currencies[e].precision,this.precisionMode,this.paddingMode):this.numberToString(t)}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=this.safeString2(this.options,"fetchTime","defaultType","spot"),s=this.safeString(e,"type",t),i=this.omit(e,"type");let r="publicGetTime";"future"===s?r="fapiPublicGetTime":"delivery"===s&&(r="dapiPublicGetTime");const a=await this[r](i);return this.safeInteger(a,"serverTime")}async fetchCurrencies(e={}){if(!this.safeValue(this.options,"fetchCurrencies"))return;if(!this.checkRequiredCredentials(!1))return;if(void 0!==this.safeString(this.urls,"apiBackup"))return;const t=await this.sapiGetCapitalConfigGetall(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"coin"),a=this.safeString(i,"name"),n=this.safeCurrencyCode(r),o=void 0;let c=!0,d=!0;const h=this.safeValue(i,"networkList",[]),l={};let u;for(let e=0;e<h.length;e++){const t=h[e],s=this.safeString(t,"network"),i=this.safeNumber(t,"withdrawFee"),r=this.safeValue(t,"depositEnable"),a=this.safeValue(t,"withdrawEnable");d=d||r,c=c||a,l[s]=i;(this.safeValue(t,"isDefault")||void 0===u)&&(u=i)}const f=this.safeValue(i,"trading"),p=c&&d&&f;s[n]={id:r,name:a,code:n,precision:o,info:i,active:p,deposit:d,withdraw:c,networks:h,fee:u,fees:l,limits:this.limits}}return s}async fetchMarkets(e={}){const t=this.safeString2(this.options,"fetchMarkets","defaultType","spot"),s=this.safeString(e,"type",t),i=this.omit(e,"type"),a="spot"===s,n="future"===s,o="delivery"===s;if(!(a||"margin"===s||n||o))throw new r(this.id+" does not support '"+s+"' type, set exchange.options['defaultType'] to 'spot', 'margin', 'delivery' or 'future'");let c="publicGetExchangeInfo";n?c="fapiPublicGetExchangeInfo":o&&(c="dapiPublicGetExchangeInfo");const d=await this[c](i);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const h=this.safeValue(d,"symbols",[]),l=this.safeValue(this.options,"settle",{}),u=[];for(let e=0;e<h.length;e++){const t=h[e],i=this.safeString(t,"symbol"),r=this.safeStringLower(t,"symbol"),c=this.safeString(t,"baseAsset"),d=this.safeString(t,"quoteAsset"),f=this.safeString(t,"marginAsset"),p=this.safeCurrencyCode(c),m=this.safeCurrencyCode(d),g=this.safeCurrencyCode(f),y=n||o,b=this.safeString(t,"contractType");let v,w;y&&"PERPETUAL"!==b?(v=i,w=this.safeInteger(t,"deliveryDate")):v=p+"/"+m;const S=this.safeValue(t,"filters",[]),k=this.indexBy(S,"filterType"),T=this.safeString2(t,"status","contractStatus");let O,_=this.fees;y&&(O=this.safeNumber(t,"contractSize",this.parseNumber("1")),_=this.fees[s]);let x="TRADING"===T;if(a){const e=this.safeValue(t,"permissions",[]);for(let t=0;t<e.length;t++)if("TRD_GRP_003"===e[t]){x=!1;break}}const M=this.safeValue(t,"isMarginTradingAllowed",!1),I=this.safeString(l,g,"inverse"),C={id:i,lowercaseId:r,symbol:v,base:p,quote:m,settle:g,baseId:c,quoteId:d,settleId:f,type:s,spot:a,margin:a&&M,swap:n,future:n,delivery:o,option:!1,active:x,contract:y,linear:y?"linear"===I:void 0,inverse:y?"inverse"===I:void 0,taker:_.trading.taker,maker:_.trading.maker,contractSize:O,expiry:w,expiryDatetime:this.iso8601(w),strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(t,"quantityPrecision"),price:this.safeInteger(t,"pricePrecision"),base:this.safeInteger(t,"baseAssetPrecision"),quote:this.safeInteger(t,"quotePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t};if("PRICE_FILTER"in k){const e=this.safeValue(k,"PRICE_FILTER",{}),t=this.safeString(e,"tickSize");C.precision.price=this.precisionFromString(t),C.limits.price={min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},C.precision.price=this.precisionFromString(e.tickSize)}if("LOT_SIZE"in k){const e=this.safeValue(k,"LOT_SIZE",{}),t=this.safeString(e,"stepSize");C.precision.amount=this.precisionFromString(t),C.limits.amount={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MARKET_LOT_SIZE"in k){const e=this.safeValue(k,"MARKET_LOT_SIZE",{});C.limits.market={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in k){const e=this.safeValue(k,"MIN_NOTIONAL",{});C.limits.cost.min=this.safeNumber2(e,"minNotional","notional")}u.push(C)}return u}parseBalance(e,t){const s={info:e};let i;if("spot"===t||"margin"===t){i=this.safeInteger(e,"updateTime");const t=this.safeValue2(e,"balances","userAssets",[]);for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free"),n.used=this.safeString(i,"locked"),s[a]=n}}else if("savings"===t){const t=this.safeValue(e,"positionAmountVos",[]);for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(i,"amount");n.total=o,n.used=o,s[a]=n}}else if("funding"===t)for(let t=0;t<e.length;t++){const i=e[t],r=this.account(),a=this.safeString(i,"asset"),n=this.safeCurrencyCode(a);r.free=this.safeString(i,"free");const o=this.safeString(i,"freeze"),c=this.safeString(i,"withdrawing"),d=this.safeString(i,"locked");r.used=M.stringAdd(o,M.stringAdd(d,c)),s[n]=r}else{let t=e;Array.isArray(e)||(t=this.safeValue(e,"assets",[]));for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"availableBalance"),n.used=this.safeString(i,"initialMargin"),n.total=this.safeString2(i,"marginBalance","balance"),s[a]=n}}return s.timestamp=i,s.datetime=this.iso8601(i),this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"fetchBalance","defaultType","spot"),s=this.safeString(e,"type",t);let i="privateGetAccount";if("future"===s){const e=this.safeValue(this.options,s,{}),t=this.safeValue(e,"fetchBalance",{});i=this.safeString(t,"method","fapiPrivateV2GetAccount")}else if("delivery"===s){const e=this.safeValue(this.options,s,{}),t=this.safeValue(e,"fetchBalance",{});i=this.safeString(t,"method","dapiPrivateGetAccount")}else"margin"===s?i="sapiGetMarginAccount":"savings"===s?i="sapiGetLendingUnionAccount":"funding"===s&&(i="sapiPostAssetGetFundingAsset");const r=this.omit(e,"type"),a=await this[i](r);return this.parseBalance(a,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);let a="publicGetDepth";i.linear?a="fapiPublicGetDepth":i.inverse&&(a="dapiPublicGetDepth");const n=await this[a](this.extend(r,s)),o=this.safeInteger(n,"T"),c=this.parseOrderBook(n,e,o);return c.nonce=this.safeInteger(n,"lastUpdateId"),c}parseTicker(e,t){const s=this.safeInteger(e,"closeTime"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"lastPrice");let n,o;return"baseVolume"in e?(n=this.safeString(e,"baseVolume"),o=this.safeString(e,"volume")):(n=this.safeString(e,"volume"),o=this.safeString(e,"quoteVolume")),this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:a,last:a,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchStatus(e={}){const t=await this.sapiGetSystemStatus(e),s=this.safeString(t,"status");return{status:this.safeString({0:"ok",1:"maintenance"},s,s),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id};let r="publicGetTicker24hr";s.linear?r="fapiPublicGetTicker24hr":s.inverse&&(r="dapiPublicGetTicker24hr");const a=await this[r](this.extend(i,t));if(Array.isArray(a)){const e=this.safeValue(a,0,{});return this.parseTicker(e,s)}return this.parseTicker(a,s)}async fetchBidsAsks(e,t={}){await this.loadMarkets();const s=this.safeString2(this.options,"fetchBidsAsks","defaultType","spot"),i=this.safeString(t,"type",s),r=this.omit(t,"type");let a;a="future"===i?"fapiPublicGetTickerBookTicker":"delivery"===i?"dapiPublicGetTickerBookTicker":"publicGetTickerBookTicker";const n=await this[a](r);return this.parseTickers(n,e)}async fetchTickers(e,t={}){await this.loadMarkets();const s=this.safeString2(this.options,"fetchTickers","defaultType","spot"),i=this.safeString(t,"type",s),r=this.omit(t,"type");let a;a="future"===i?"fapiPublicGetTicker24hr":"delivery"===i?"dapiPublicGetTicker24hr":"publicGetTicker24hr";const n=this.safeString(this.options,"fetchTickersMethod",a),o=await this[n](r);return this.parseTickers(o,e)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price"),o=this.safeInteger(r,"until");r=this.omit(r,["price","until"]),i=void 0===i?500:Math.min(i,1500);const c={interval:this.timeframes[t],limit:i};if("index"===n?c.pair=a.id:c.symbol=a.id,void 0!==s&&(c.startTime=s,a.inverse&&s>0)){const e=this.parseTimeframe(t),r=this.sum(s,i*e*1e3-1),a=this.milliseconds();c.endTime=Math.min(a,r)}void 0!==o&&(c.endTime=o);let d="publicGetKlines";"mark"===n?d=a.inverse?"dapiPublicGetMarkPriceKlines":"fapiPublicGetMarkPriceKlines":"index"===n?d=a.inverse?"dapiPublicGetIndexPriceKlines":"fapiPublicGetIndexPriceKlines":a.linear?d="fapiPublicGetKlines":a.inverse&&(d="dapiPublicGetKlines");const h=await this[d](this.extend(c,r));return this.parseOHLCVs(h,a,t,s,i)}parseTrade(e,t){if("isDustTrade"in e)return this.parseDustTrade(e,t);const s=this.safeInteger2(e,"T","time"),i=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString2(e,"quoteQty","baseQty"),n=this.safeString(e,"symbol"),o=this.safeSymbol(n,t);let c,d=this.safeString2(e,"t","a");d=this.safeString2(e,"id","tradeId",d);const h=this.safeString(e,"orderId"),l=this.safeValue2(e,"m","isBuyerMaker");let u,f;return void 0!==l?(c=l?"sell":"buy",u="taker"):"side"in e?c=this.safeStringLower(e,"side"):"isBuyer"in e&&(c=e.isBuyer?"buy":"sell"),"commission"in e&&(f={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))}),"isMaker"in e&&(u=e.isMaker?"maker":"taker"),"maker"in e&&(u=e.maker?"maker":"taker"),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:o,id:d,order:h,type:void 0,side:c,takerOrMaker:u,price:i,amount:r,cost:a,fee:f},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},[n,o]=this.handleMarketTypeAndParams("fetchTrades",r,i);let c;"future"===n?r.linear?c="fapiPublicGetAggTrades":r.inverse&&(c="dapiPublicGetAggTrades"):c="delivery"===n?"dapiPublicGetAggTrades":"publicGetAggTrades";let d=this.safeString(this.options,"fetchTradesMethod",c);"publicGetAggTrades"===d?"future"===n?r.linear?d="fapiPublicGetAggTrades":r.inverse&&(d="dapiPublicGetAggTrades"):"delivery"===n&&(d="dapiPublicGetAggTrades"):"publicGetHistoricalTrades"===d&&("future"===n?r.linear?d="fapiPublicGetHistoricalTrades":r.inverse&&(d="dapiPublicGetHistoricalTrades"):"delivery"===n&&(d="dapiPublicGetHistoricalTrades")),void 0!==t&&(a.startTime=t,a.endTime=this.sum(t,36e5)),void 0!==s&&(a.limit=s);const h=await this[d](this.extend(a,o));return this.parseTrades(h,r,t,s)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"status")),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"executedQty","0");let n,o;"time"in e?n=this.safeInteger(e,"time"):"transactTime"in e?n=this.safeInteger(e,"transactTime"):"updateTime"in e&&"open"===s&&(M.stringGt(a,"0")?o=this.safeInteger(e,"updateTime"):n=this.safeInteger(e,"updateTime"));const c=this.safeString(e,"avgPrice"),d=this.safeString(e,"price"),h=this.safeString(e,"origQty");let l=this.safeString2(e,"cummulativeQuoteQty","cumQuote");l=this.safeString(e,"cumBase",l);const u=this.safeString(e,"orderId");let f=this.safeStringLower(e,"type");const p=this.safeStringLower(e,"side"),m=this.safeValue(e,"fills",[]),g=this.safeString(e,"clientOrderId");let y=this.safeString(e,"timeInForce");"GTX"===y&&(y="PO");const b="limit_maker"===f||"PO"===y;"limit_maker"===f&&(f="limit");const v=this.safeString(e,"stopPrice"),w=this.parseNumber(this.omitZero(v));return this.safeOrder({info:e,id:u,clientOrderId:g,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:o,symbol:r,type:f,timeInForce:y,postOnly:b,reduceOnly:this.safeValue(e,"reduceOnly"),side:p,price:d,stopPrice:w,amount:h,cost:l,average:c,filled:a,remaining:void 0,status:s,fee:void 0,trades:m},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeString2(this.options,"createOrder","defaultType","spot"),c=this.safeString(a,"type",o),h=this.safeString2(a,"newClientOrderId","clientOrderId"),l=this.safeValue(a,"postOnly",!1);a=this.omit(a,["type","newClientOrderId","clientOrderId","postOnly"]);if(void 0!==this.safeValue(a,"reduceOnly")&&"future"!==c&&"delivery"!==c)throw new d(this.id+" createOrder() does not support reduceOnly for "+c+" orders, reduceOnly orders are supported for future and delivery markets only");let u="privatePostOrder";if("future"===c?u="fapiPrivatePostOrder":"delivery"===c?u="dapiPrivatePostOrder":"margin"===c&&(u="sapiPostMarginOrder"),n.spot){this.safeValue(a,"test",!1)&&(u+="Test"),a=this.omit(a,"test"),l&&(t="LIMIT_MAKER")}const f=t.toUpperCase();let p=f;const m=this.safeNumber(a,"stopPrice");void 0!==m&&(a=this.omit(a,"stopPrice"),"MARKET"===p?p=n.contract?"STOP_MARKET":"STOP_LOSS":"LIMIT"===p&&(p=n.contract?"STOP":"STOP_LOSS_LIMIT"));const g=this.safeValue(n.info,"orderTypes");if(!this.inArray(p,g))throw new d(f!==p?this.id+" stopPrice parameter is not allowed for "+e+" "+t+" orders":this.id+" "+t+" is not a valid order type for the "+e+" market");const y={symbol:n.id,type:p,side:s.toUpperCase()};if(void 0===h){const e=this.safeValue(this.options,"broker");if(void 0!==e){const t=this.safeString(e,c);void 0!==t&&(y.newClientOrderId=t+this.uuid22())}}else y.newClientOrderId=h;y.newOrderRespType="spot"===c||"margin"===c?this.safeValue(this.options.newOrderRespType,t,"RESULT"):"RESULT";let b=!1,v=!1,w=!1,S=!1;if("MARKET"===p)if(n.spot){if(this.safeValue(this.options,"quoteOrderQty",!0)){const e=this.safeValue2(a,"quoteOrderQty","cost"),t=n.precision.price;void 0!==e?(y.quoteOrderQty=this.decimalToPrecision(e,_,t,this.precisionMode),a=this.omit(a,["quoteOrderQty","cost"])):void 0!==r?y.quoteOrderQty=this.decimalToPrecision(i*r,_,t,this.precisionMode):S=!0}else S=!0}else S=!0;else if("LIMIT"===p)v=!0,b=!0,S=!0;else if("STOP_LOSS"===p||"TAKE_PROFIT"===p)w=!0,S=!0,(n.linear||n.inverse)&&(v=!0);else if("STOP_LOSS_LIMIT"===p||"TAKE_PROFIT_LIMIT"===p)S=!0,w=!0,v=!0,b=!0;else if("LIMIT_MAKER"===p)v=!0,S=!0;else if("STOP"===p)S=!0,w=!0,v=!0;else if("STOP_MARKET"===p||"TAKE_PROFIT_MARKET"===p){void 0===this.safeValue(a,"closePosition")&&(S=!0),w=!0}else if("TRAILING_STOP_MARKET"===p){S=!0;if(void 0===this.safeNumber(a,"callbackRate"))throw new d(this.id+" createOrder() requires a callbackRate extra param for a "+t+" order")}if(S&&(y.quantity=this.amountToPrecision(e,i)),v){if(void 0===r)throw new d(this.id+" createOrder() requires a price argument for a "+t+" order");y.price=this.priceToPrecision(e,r)}if(b&&(y.timeInForce=this.options.defaultTimeInForce),w){if(void 0===m)throw new d(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order");y.stopPrice=this.priceToPrecision(e,m)}const k=await this[u](this.extend(y,a));return this.parseOrder(k,n)}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeString2(this.options,"fetchOrder","defaultType","spot"),n=this.safeString(s,"type",r);let o="privateGetOrder";"future"===n?o="fapiPrivateGetOrder":"delivery"===n?o="dapiPrivateGetOrder":"margin"===n&&(o="sapiGetMarginOrder");const c={symbol:i.id},d=this.safeValue2(s,"origClientOrderId","clientOrderId");void 0!==d?c.origClientOrderId=d:c.orderId=e;const h=this.omit(s,["type","clientOrderId","origClientOrderId"]),l=await this[o](this.extend(c,h));return this.parseOrder(l,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n=this.safeString2(this.options,"fetchOrders","defaultType","spot"),o=this.safeString(i,"type",n);let c="privateGetAllOrders";"future"===o?c="fapiPrivateGetAllOrders":"delivery"===o?c="dapiPrivateGetAllOrders":"margin"===o&&(c="sapiGetMarginAllOrders");const d={symbol:r.id};void 0!==t&&(d.startTime=t),void 0!==s&&(d.limit=s);const h=this.omit(i,"type"),l=await this[c](this.extend(d,h));return this.parseOrders(l,r,t,s)}async fetchOpenOrders(e,t,s,i={}){let a,n,o;await this.loadMarkets();const c={};if(void 0!==e){a=this.market(e),c.symbol=a.id;const t=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot"),s="type"in a?a.type:t;o=this.safeString(i,"type",s),n=this.omit(i,"type")}else{if(this.options.warnOnFetchOpenOrdersWithoutSymbol){const e=this.symbols.length,t=parseInt(e/2);throw new r(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}{const e=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot");o=this.safeString(i,"type",e),n=this.omit(i,"type")}}let d="privateGetOpenOrders";"future"===o?d="fapiPrivateGetOpenOrders":"delivery"===o?d="dapiPrivateGetOpenOrders":"margin"===o&&(d="sapiGetMarginOpenOrders");const h=await this[d](this.extend(c,n));return this.parseOrders(h,a,t,s)}async fetchClosedOrders(e,t,s,i={}){const r=await this.fetchOrders(e,t,s,i);return this.filterBy(r,"status","closed")}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeString2(this.options,"cancelOrder","defaultType","spot"),n=this.safeString(s,"type",r),o=this.safeValue2(s,"origClientOrderId","clientOrderId"),c={symbol:i.id};void 0===o?c.orderId=e:c.origClientOrderId=o;let d="privateDeleteOrder";"future"===n?d="fapiPrivateDeleteOrder":"delivery"===n?d="dapiPrivateDeleteOrder":"margin"===n&&(d="sapiDeleteMarginOrder");const h=this.omit(s,["type","origClientOrderId","clientOrderId"]),l=await this[d](this.extend(c,h));return this.parseOrder(l,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new a(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=this.safeString2(this.options,"cancelAllOrders","defaultType","spot"),n=this.safeString(t,"type",r),o=this.omit(t,"type");let c="privateDeleteOpenOrders";"margin"===n?c="sapiDeleteMarginOpenOrders":"future"===n?c="fapiPrivateDeleteAllOpenOrders":"delivery"===n&&(c="dapiPrivateDeleteAllOpenOrders");const d=await this[c](this.extend(i,o));return Array.isArray(d)?this.parseOrders(d,s):d}async fetchOrderTrades(e,t,s,i,r={}){if(void 0===t)throw new a(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const n=this.market(t),o=this.safeString(r,"type",n.type);if(r=this.omit(r,"type"),"spot"!==o)throw new m(this.id+" fetchOrderTrades() supports spot markets only");const c={orderId:e};return await this.fetchMyTrades(t,s,i,this.extend(c,r))}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n=this.safeString(i,"type",r.type);let o;i=this.omit(i,"type"),"spot"===n?o="privateGetMyTrades":"margin"===n?o="sapiGetMarginMyTrades":"future"===n?o="fapiPrivateGetUserTrades":"delivery"===n&&(o="dapiPrivateGetUserTrades");const c={symbol:r.id};void 0!==t&&(c.startTime=t),void 0!==s&&(c.limit=s);const d=await this[o](this.extend(c,i));return this.parseTrades(d,r,t,s)}async fetchMyDustTrades(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.startTime=t,r.endTime=this.sum(t,7776e6));const a=await this.sapiGetAssetDribblet(this.extend(r,i)),n=this.safeValue(a,"userAssetDribblets",[]),o=this.safeInteger(a,"total",0),c=[];for(let e=0;e<o;e++){const t=this.safeValue(n[e],"userAssetDribbletDetails",[]);for(let e=0;e<t.length;e++)t[e].isDustTrade=!0,c.push(t[e])}const d=this.parseTrades(c,void 0,t,s);return this.filterBySinceLimit(d,t,s)}parseDustTrade(e,t){const s=this.safeString(e,"transId"),i=this.safeInteger(e,"operateTime"),r=this.safeString(e,"fromAsset"),a=this.safeCurrencyCode(r),n=this.currency("BNB").code,o=n+"/"+a;let c=!1;o in this.markets&&(c=!0);const d=this.safeString(e,"serviceChargeAmount"),h={currency:n,cost:this.parseNumber(d)};let l,u,f,p,m;c?(l=o,u=this.safeString(e,"transferedAmount"),f=this.safeString(e,"amount"),p="buy"):(l=a+"/"+n,u=this.safeString(e,"amount"),f=this.safeString(e,"transferedAmount"),p="sell"),void 0!==f&&u&&(m=M.stringDiv(f,u));const g=this.parseNumber(u),y=this.parseNumber(m),b=this.parseNumber(f);return{id:undefined,timestamp:i,datetime:this.iso8601(i),symbol:l,order:s,type:undefined,takerOrMaker:undefined,side:p,amount:g,price:y,cost:b,fee:h,info:e}}async fetchDeposits(e,t,s,i={}){let r,a;await this.loadMarkets();const n={},o=this.safeValue(this.options,"legalMoney",{}),c=this.safeInteger(i,"until");if(e in o){void 0!==e&&(r=this.currency(e)),n.transactionType=0,void 0!==t&&(n.beginTime=t),void 0!==c&&(n.endTime=c);const s=await this.sapiGetFiatOrders(this.extend(n,i));a=this.safeValue(s,"data")}else{if(void 0!==e&&(r=this.currency(e),n.coin=r.id),void 0!==t){n.startTime=t;let e=this.sum(t,7776e6);void 0!==c&&(e=Math.min(e,c)),n.endTime=e}void 0!==s&&(n.limit=s),a=await this.sapiGetCapitalDepositHisrec(this.extend(n,i))}return this.parseTransactions(a,r,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;if(e in this.safeValue(this.options,"legalMoney",{})){void 0!==e&&(n=this.currency(e)),r.transactionType=1,void 0!==t&&(r.beginTime=t);const s=await this.sapiGetFiatOrders(this.extend(r,i));a=this.safeValue(s,"data")}else void 0!==e&&(n=this.currency(e),r.coin=n.id),void 0!==t&&(r.startTime=t,r.endTime=this.sum(t,7776e6)),void 0!==s&&(r.limit=s),a=await this.sapiGetCapitalWithdrawHistory(this.extend(r,i));return this.parseTransactions(a,n,t,s)}parseTransactionStatusByType(e,t){const s=this.safeValue({deposit:{0:"pending",1:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"}},t,{});return this.safeString(s,e,e)}parseTransaction(e,t){const s=this.safeString2(e,"id","orderNo"),i=this.safeString(e,"address");let r=this.safeString(e,"addressTag");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeString(e,"txId");void 0!==a&&a.indexOf("Internal transfer ")>=0&&(a=a.slice(18));const n=this.safeString2(e,"coin","fiatCurrency"),o=this.safeCurrencyCode(n,t);let c;const d=this.safeInteger2(e,"insertTime","createTime"),h=this.parse8601(this.safeString(e,"applyTime"));let l=this.safeString(e,"type");void 0===l&&(void 0!==d&&void 0===h?(l="deposit",c=d):void 0===d&&void 0!==h&&(l="withdrawal",c=h));const u=this.parseTransactionStatusByType(this.safeString(e,"status"),l),f=this.safeNumber(e,"amount"),p=this.safeNumber2(e,"transactionFee","totalFee");let m;void 0!==p&&(m={currency:o,cost:p});const g=this.safeInteger2(e,"successTime","updateTime");let y=this.safeInteger(e,"transferType");void 0!==y&&(y=!!y);const b=this.safeString(e,"network");return{info:e,id:s,txid:a,timestamp:c,datetime:this.iso8601(c),network:b,address:i,addressTo:i,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:l,amount:f,currency:o,status:u,updated:g,internal:y,fee:m}}parseTransferStatus(e){return this.safeString({CONFIRMED:"ok"},e,e)}parseTransfer(e,t){const s=this.safeString(e,"tranId"),i=this.safeString(e,"asset"),r=this.safeCurrencyCode(i,t),a=this.safeNumber(e,"amount"),n=this.safeString(e,"type");let o,c;const d=this.safeValue(this.options,"accountsById",{});if(void 0!==n){const e=n.split("_");o=this.safeValue(e,0),c=this.safeValue(e,1),o=this.safeString(d,o,o),c=this.safeString(d,c,c)}const h=this.safeInteger(e,"timestamp"),l=this.parseTransferStatus(this.safeString(e,"status"));return{info:e,id:s,timestamp:h,datetime:this.iso8601(h),currency:r,amount:a,fromAccount:o,toAccount:c,status:l}}parseIncome(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"income"),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a),o=this.safeString(e,"tranId"),c=this.safeInteger(e,"time");return{info:e,symbol:i,code:n,timestamp:c,datetime:this.iso8601(c),id:o,amount:r}}parseIncomes(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s],a=this.parseIncome(i,t);r.push(a)}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,s,i)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);let n=this.safeString(r,"type");if(void 0===n){const e=this.safeValue(this.options,"accountsByType",{});n=this.safeString(e,s,s)+"_"+this.safeString(e,i,i)}const o={asset:a.id,amount:this.currencyToPrecision(e,t),type:n},c=await this.sapiPostAssetTransfer(this.extend(o,r)),d=this.parseTransfer(c,a);return this.extend(d,{amount:t,currency:e,fromAccount:s,toAccount:i})}async fetchTransfers(e,t,s,i={}){let a;await this.loadMarkets(),void 0!==e&&(a=this.currency(e));const n=this.safeString2(this.options,"fetchTransfers","defaultType","spot"),o=this.safeString(i,"fromAccount",n),c="future"===o?"spot":"future",d=this.safeString(i,"toAccount",c);let h=this.safeString(i,"type");const l=this.safeValue(this.options,"accountsByType",{}),u=this.safeString(l,o),f=this.safeString(l,d);if(void 0===h){if(void 0===u){const e=Object.keys(l);throw new r(this.id+" fromAccount parameter must be one of "+e.join(", "))}if(void 0===f){const e=Object.keys(l);throw new r(this.id+" toAccount parameter must be one of "+e.join(", "))}h=u+"_"+f}const p={type:h};void 0!==t&&(p.startTime=t),void 0!==s&&(p.size=s);const m=await this.sapiGetAssetTransfer(this.extend(p,i)),g=this.safeValue(m,"rows",[]);return this.parseTransfers(g,a,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={coin:this.currency(e).id},i=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeString(i,r,r),void 0!==r&&(s.network=r,t=this.omit(t,"network"));const a=await this.sapiGetCapitalDepositAddress(this.extend(s,t)),n=this.safeString(a,"address"),o=this.safeString(a,"url");let c;if(void 0!==o){const t=this.safeValue(this.options,"reverseNetworks",{}),s=o.split("/");let i=this.safeString(s,2);if("blockchair.com"===i||"viewblock.io"===i){const e=this.safeString(s,3);void 0!==e&&(i=i+"/"+e)}c=this.safeString(t,i);const r=this.safeValue(this.options,"impliedNetworks",{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}});if(e in r){const t=this.safeValue(r,e,{});c=this.safeString(t,c,c)}}let d=this.safeString(a,"tag","");return 0===d.length&&(d=void 0),this.checkAddress(n),{currency:e,address:n,tag:d,network:c,info:a}}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.sapiGetCapitalConfigGetall(t),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"networkList",[]);i[a]={};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"network"),r=this.safeCurrencyCode(s),o=this.safeNumber(t,"withdrawFee");i[a][r]=o}}return{withdraw:i,deposit:{},info:s}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={coin:a.id,address:s,amount:t};void 0!==i&&(n.addressTag=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.network=c,r=this.omit(r,"network"));const d=await this.sapiPostCapitalWithdrawApply(this.extend(n,r));return this.parseTransaction(d,a)}parseTradingFee(e,t){const s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s),maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s={symbol:this.market(e).id},i=await this.sapiGetAssetTradeFee(this.extend(s,t)),r=this.safeValue(i,0,{});return this.parseTradingFee(r)}async fetchTradingFees(e={}){let t;await this.loadMarkets();const s=this.safeString2(this.options,"fetchTradingFees","defaultType","future"),i=this.safeString(e,"type",s),r=this.omit(e,"type");"spot"===i||"margin"===i?t="sapiGetAssetTradeFee":"future"===i?t="fapiPrivateGetAccount":"delivery"===i&&(t="dapiPrivateGetAccount");const a=await this[t](r);if("spot"===i||"margin"===i){const e={};for(let t=0;t<a.length;t++){const s=this.parseTradingFee(a[t]);e[s.symbol]=s}return e}if("future"===i){const e=Object.keys(this.markets),t={},s=this.safeInteger(a,"feeTier"),r=this.fees[i].trading.tiers,n=r.maker[s][1],o=r.taker[s][1];for(let i=0;i<e.length;i++){const r=e[i];t[r]={info:{feeTier:s},symbol:r,maker:n,taker:o}}return t}if("delivery"===i){const e=Object.keys(this.markets),t={},s=this.safeInteger(a,"feeTier"),r=this.fees[i].trading.tiers,n=r.maker[s][1],o=r.taker[s][1];for(let i=0;i<e.length;i++){const r=e[i];t[r]={info:{feeTier:s},symbol:r,maker:n,taker:o}}return t}}async futuresTransfer(e,t,s,i={}){if(s<1||s>4)throw new a(this.id+" type must be between 1 and 4");await this.loadMarkets();const r=this.currency(e),n={asset:r.id,amount:t,type:s},o=await this.sapiPostFuturesTransfer(this.extend(n,i));return this.parseTransfer(o,r)}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id};let r;if(s.linear)r="fapiPublicGetPremiumIndex";else{if(!s.inverse)throw new m(this.id+" fetchFundingRate() supports linear and inverse contracts only");r="dapiPublicGetPremiumIndex"}let a=await this[r](this.extend(i,t));return s.inverse&&(a=a[0]),this.parseFundingRate(a,s)}async fetchFundingRateHistory(e,t,s,i={}){await this.loadMarkets();const r={};let a;const n=this.safeString2(this.options,"fetchFundingRateHistory","defaultType","future"),o=this.safeString(i,"type",n);if(i=this.omit(i,"type"),"future"===o?a="fapiPublicGetFundingRate":"delivery"===o&&(a="dapiPublicGetFundingRate"),void 0!==e){const t=this.market(e);e=t.symbol,r.symbol=t.id,t.linear?a="fapiPublicGetFundingRate":t.inverse&&(a="dapiPublicGetFundingRate")}if(void 0===a)throw new m(this.id+" fetchFundingRateHistory() is not supported for "+o+" markets");void 0!==t&&(r.startTime=t);const c=this.safeInteger2(i,"until","till"),d=this.safeString(i,"endTime",c);i=this.omit(i,["endTime","till","until"]),void 0!==d&&(r.endTime=d),void 0!==s&&(r.limit=s);const h=await this[a](this.extend(r,i)),l=[];for(let e=0;e<h.length;e++){const t=h[e],s=this.safeInteger(t,"fundingTime");l.push({info:t,symbol:this.safeSymbol(this.safeString(t,"symbol")),fundingRate:this.safeNumber(t,"fundingRate"),timestamp:s,datetime:this.iso8601(s)})}const u=this.sortBy(l,"timestamp");return this.filterBySymbolSinceLimit(u,e,t,s)}async fetchFundingRates(e,t={}){let s;await this.loadMarkets();const i=this.safeString2(this.options,"fetchFundingRates","defaultType","future"),r=this.safeString(t,"type",i),a=this.omit(t,"type");if("future"===r)s="fapiPublicGetPremiumIndex";else{if("delivery"!==r)throw new m(this.id+" fetchFundingRates() supports linear and inverse contracts only");s="dapiPublicGetPremiumIndex"}const n=await this[s](a),o=[];for(let e=0;e<n.length;e++){const t=n[e],s=this.parseFundingRate(t);o.push(s)}return this.filterByArray(o,"symbol",e)}parseFundingRate(e,t){const s=this.safeInteger(e,"time"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeNumber(e,"markPrice"),n=this.safeNumber(e,"indexPrice"),o=this.safeNumber(e,"interestRate"),c=this.safeNumber(e,"estimatedSettlePrice"),d=this.safeNumber(e,"lastFundingRate"),h=this.safeInteger(e,"nextFundingTime");return{info:e,symbol:r,markPrice:a,indexPrice:n,interestRate:o,estimatedSettlePrice:c,timestamp:s,datetime:this.iso8601(s),fundingRate:d,fundingTimestamp:h,fundingDatetime:this.iso8601(h),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}parseAccountPositions(e){const t=this.safeValue(e,"positions"),s=this.safeValue(e,"assets",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.safeString(t,"crossWalletBalance"),o=this.safeString(t,"crossUnPnl");i[a]={crossMargin:M.stringAdd(n,o),crossWalletBalance:n}}const r=[];for(let e=0;e<t.length;e++){const s=t[e],a=this.safeString(s,"symbol"),n=this.safeMarket(a),o="future"===this.options.defaultType?n.quote:n.base;if(o in i){const e=this.parseAccountPosition(this.extend(s,{crossMargin:i[o].crossMargin,crossWalletBalance:i[o].crossWalletBalance}),n);r.push(e)}}return r}parseAccountPosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeString(t,"symbol"),r=this.safeString(e,"leverage"),a=parseInt(r),n=this.safeString(e,"initialMargin"),o=this.parseNumber(n);let c=M.stringDiv("1",r,8);1e3%a==0||(c=M.stringDiv(M.stringAdd(c,"1e-8"),"1",8));const d="notional"in e,h=this.safeString(e,"maintMargin"),l=this.parseNumber(h),u=this.safeString(e,"entryPrice");let f=this.parseNumber(u);const p=this.safeString2(e,"notional","notionalValue"),m=M.stringAbs(p),g=this.parseNumber(m);let y=this.safeString(e,"positionAmt"),b=M.stringAbs(y);if(void 0===y){const e=M.stringMul(M.stringMul(r,n),u),s=this.safeString(t,"contractSize");y=M.stringDiv(e,s),b=M.stringDiv(M.stringAdd(y,"0.5"),"1",0)}const v=this.parseNumber(b),w=this.safeValue(this.options,"leverageBrackets",{}),S=this.safeValue(w,i,[]);let k;for(let e=0;e<S.length;e++){const t=S[e];if(M.stringLt(m,t[0]))break;k=t[1]}const T=this.parseNumber(k),O=this.safeString(e,"unrealizedProfit"),_=this.parseNumber(O);let x=this.safeInteger(e,"updateTime");0===x&&(x=void 0);let I,C,P;this.safeValue(e,"isolated")?(I="isolated",P=this.safeString(e,"isolatedWallet"),C=M.stringAdd(P,O)):(I="cross",P=this.safeString(e,"crossWalletBalance"),C=this.safeString(e,"crossMargin"));const A=this.parseNumber(C);let N,V,B,E,L;const R=this.safeValue(t,"contractSize"),D=this.numberToString(R);if(M.stringEquals(p,"0"))f=void 0;else{if(V=M.stringLt(p,"0")?"short":"long",N=this.parseNumber(M.stringDiv(M.stringAdd(M.stringDiv(h,C),"5e-5"),"1",4)),B=this.parseNumber(M.stringMul(M.stringDiv(O,n,4),"100")),d){let e,t=u;"short"===V?e=M.stringAdd("1",k):(e=M.stringAdd("-1",k),t=M.stringMul("-1",t));const s=M.stringDiv(P,M.stringMul(b,e)),i=M.stringDiv(t,e);E=M.stringAdd(s,i)}else{let e,t=u;"short"===V?e=M.stringSub("1",k):(e=M.stringSub("-1",k),t=M.stringMul("-1",t));const s=M.stringMul(b,D),i=M.stringMul(s,e),r=M.stringSub(M.stringMul(M.stringDiv("1",t),s),P);E=M.stringDiv(i,r)}const e=t.precision.price,s=(e+1).toString(),i=new M("5e-"+s).toString(),r=M.stringAdd(i,E);let a=M.stringDiv(r,"1",e);"-"===a[0]&&(a=void 0),L=this.parseNumber(a)}const F="BOTH"!==this.safeString(e,"positionSide");return{info:e,symbol:i,timestamp:x,datetime:this.iso8601(x),initialMargin:o,initialMarginPercentage:this.parseNumber(c),maintenanceMargin:l,maintenanceMarginPercentage:T,entryPrice:f,notional:g,leverage:this.parseNumber(r),unrealizedPnl:_,contracts:v,contractSize:R,marginRatio:N,liquidationPrice:L,markPrice:void 0,collateral:A,marginMode:I,side:V,hedged:F,percentage:B}}parsePositionRisk(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeString(t,"symbol"),r=this.safeValue(this.options,"leverageBrackets",{}),a=this.safeValue(r,i,[]),n=this.safeString2(e,"notional","notionalValue"),o=M.stringAbs(n);let c;for(let e=0;e<a.length;e++){const t=a[e];if(M.stringLt(o,t[0]))break;c=t[1]}const d=this.parseNumber(o),h=M.stringAbs(this.safeString(e,"positionAmt")),l=this.parseNumber(h),u=this.safeString(e,"unRealizedProfit"),f=this.parseNumber(u),p=this.safeString(e,"leverage"),m=parseInt(p),g=this.omitZero(this.safeString(e,"liquidationPrice")),y=this.parseNumber(g);let b;const v=this.safeString(e,"marginType");let w;M.stringGt(n,"0")?w="long":M.stringLt(n,"0")&&(w="short");const S=this.safeString(e,"entryPrice"),k=this.parseNumber(S),T=this.safeValue(t,"contractSize"),O=this.numberToString(T),_="notional"in e;if("cross"===v){const e=this.safeValue(t,"precision",{});if(_){let t,s=S;"short"===w?(t=M.stringAdd("1",c),s=M.stringMul("-1",s)):t=M.stringAdd("-1",c);const i=M.stringMul(g,t),r=M.stringAdd(i,s),a=this.safeInteger(e,"price"),n=this.safeInteger(e,"quote",a);void 0!==n&&(b=M.stringDiv(M.stringMul(r,h),"1",n))}else{let t,s=S;"short"===w?t=M.stringSub("1",c):(t=M.stringSub("-1",c),s=M.stringMul("-1",s));const i=M.stringMul(h,O),r=M.stringSub(M.stringDiv("1",s),M.stringDiv(t,g)),a=this.safeInteger(e,"base");void 0!==a&&(b=M.stringDiv(M.stringMul(i,r),"1",a))}}else b=this.safeString(e,"isolatedMargin");b=void 0===b?"0":b;const x=this.parseNumber(b),I=this.parseNumber(this.omitZero(this.safeString(e,"markPrice")));let C=this.safeInteger(e,"updateTime");0===C&&(C=void 0);const P=this.parseNumber(c),A=M.stringMul(c,o),N=this.parseNumber(A);let V=M.stringDiv("1",p,8);1e3%m==0||(V=M.stringAdd(V,"1e-8"));const B=M.stringDiv(M.stringMul(o,V),"1",8),E=this.parseNumber(B);let L,R;M.stringEquals(b,"0")||(L=this.parseNumber(M.stringDiv(M.stringAdd(M.stringDiv(A,b),"5e-5"),"1",4)),R=this.parseNumber(M.stringMul(M.stringDiv(u,B,4),"100")));const D="BOTH"!==this.safeString(e,"positionSide");return{info:e,symbol:i,contracts:l,contractSize:T,unrealizedPnl:f,leverage:this.parseNumber(p),liquidationPrice:y,collateral:x,notional:d,markPrice:I,entryPrice:k,timestamp:C,initialMargin:E,initialMarginPercentage:this.parseNumber(V),maintenanceMargin:N,maintenanceMarginPercentage:P,marginRatio:L,datetime:this.iso8601(C),marginMode:v,marginType:v,side:w,hedged:D,percentage:R}}async loadLeverageBrackets(e=!1,t={}){await this.loadMarkets();if(void 0===this.safeValue(this.options,"leverageBrackets")||e){let e;const s=this.safeString(this.options,"defaultType","future"),i=this.safeString(t,"type",s),r=this.omit(t,"type");if("future"===i)e="fapiPrivateGetLeverageBracket";else{if("delivery"!==i)throw new m(this.id+" loadLeverageBrackets() supports linear and inverse contracts only");e="dapiPrivateV2GetLeverageBracket"}const a=await this[e](r);this.options.leverageBrackets={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeValue(t,"brackets",[]),n=[];for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString2(t,"notionalFloor","qtyFloor"),i=this.safeString(t,"maintMarginRatio");n.push([s,i])}this.options.leverageBrackets[i]=n}}return this.options.leverageBrackets}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t);let r;if("future"===s)r="fapiPrivateGetLeverageBracket";else{if("delivery"!==s)throw new m(this.id+" fetchLeverageTiers() supports linear and inverse contracts only");r="dapiPrivateV2GetLeverageBracket"}const a=await this[r](i);return this.parseLeverageTiers(a,e,"symbol")}parseMarketLeverageTiers(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeValue(e,"brackets",[]),r=[];for(let e=0;e<i.length;e++){const s=i[e];r.push({tier:this.safeNumber(s,"bracket"),currency:t.quote,minNotional:this.safeNumber2(s,"notionalFloor","qtyFloor"),maxNotional:this.safeNumber2(s,"notionalCap","qtyCap"),maintenanceMarginRate:this.safeNumber(s,"maintMarginRatio"),maxLeverage:this.safeNumber(s,"initialLeverage"),info:s})}return r}async fetchPositions(e,t={}){const s=this.safeString(this.options,"fetchPositions","positionRisk");if("positionRisk"===s)return await this.fetchPositionsRisk(e,t);if("account"===s)return await this.fetchAccountPositions(e,t);throw new m(this.id+'.options["fetchPositions"] = "'+s+'" is invalid, please choose between "account" and "positionRisk"')}async fetchAccountPositions(e,t={}){if(void 0!==e&&!Array.isArray(e))throw new a(this.id+" fetchPositions() requires an array argument for symbols");let s;await this.loadMarkets(),await this.loadLeverageBrackets();const i=this.safeString(this.options,"defaultType","future"),r=this.safeString(t,"type",i),n=this.omit(t,"type");if("future"===r)s="fapiPrivateGetAccount";else{if("delivery"!==r)throw new m(this.id+" fetchPositions() supports linear and inverse contracts only");s="dapiPrivateGetAccount"}const o=await this[s](n),c=this.parseAccountPositions(o);return this.filterByArray(c,"symbol",e,!1)}async fetchPositionsRisk(e,t={}){if(void 0!==e&&!Array.isArray(e))throw new a(this.id+" fetchPositionsRisk() requires an array argument for symbols");await this.loadMarkets(),await this.loadLeverageBrackets();let s,i="future";i=this.safeString(this.options,"defaultType",i);const r=this.safeString(t,"type",i);if(t=this.omit(t,"type"),"future"===r||"linear"===r)s="fapiPrivateGetPositionRisk";else{if("delivery"!==r&&"inverse"!==r)throw new m(this.id+" fetchPositionsRisk() supports linear and inverse contracts only");s="dapiPrivateGetPositionRisk"}const n=await this[s](this.extend({},t)),o=[];for(let e=0;e<n.length;e++){const t=this.parsePositionRisk(n[e]);o.push(t)}return this.filterByArray(o,"symbol",e,!1)}async fetchFundingHistory(e,t,s,i={}){let r,a;await this.loadMarkets();let n="future";const o={incomeType:"FUNDING_FEE"};if(void 0!==e)if(r=this.market(e),o.symbol=r.id,r.linear)n="future";else{if(!r.inverse)throw new m(this.id+" fetchFundingHistory() supports linear and inverse contracts only");n="delivery"}void 0!==t&&(o.startTime=t),void 0!==s&&(o.limit=s),n=this.safeString2(this.options,"fetchFundingHistory","defaultType",n);const c=this.safeString(i,"type",n);if(i=this.omit(i,"type"),"future"===c||"linear"===c)a="fapiPrivateGetIncome";else{if("delivery"!==c&&"inverse"!==c)throw new m(this.id+" fetchFundingHistory() supports linear and inverse contracts only");a="dapiPrivateGetIncome"}const d=await this[a](this.extend(o,i));return this.parseIncomes(d,r,t,s)}async setLeverage(e,t,s={}){if(void 0===t)throw new a(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new g(this.id+" leverage should be between 1 and 125");await this.loadMarkets();const i=this.market(t);let r;if(i.linear)r="fapiPrivatePostLeverage";else{if(!i.inverse)throw new m(this.id+" setLeverage() supports linear and inverse contracts only");r="dapiPrivatePostLeverage"}const n={symbol:i.id,leverage:e};return await this[r](this.extend(n,s))}async setMarginMode(e,t,s={}){if(void 0===t)throw new a(this.id+" setMarginMode() requires a symbol argument");if("CROSS"===(e=e.toUpperCase())&&(e="CROSSED"),"ISOLATED"!==e&&"CROSSED"!==e)throw new g(this.id+" marginMode must be either isolated or cross");await this.loadMarkets();const i=this.market(t);let r;if(i.linear)r="fapiPrivatePostMarginType";else{if(!i.inverse)throw new m(this.id+" setMarginMode() supports linear and inverse contracts only");r="dapiPrivatePostMarginType"}const n={symbol:i.id,marginType:e};let o;try{o=await this[r](this.extend(n,s))}catch(e){if(e instanceof O){if(this.safeValue(this.options,"throwMarginModeAlreadySet",!1))throw e;o={code:-4046,msg:"No need to change margin type."}}}return o}async setPositionMode(e,t,s={}){const i=this.safeString(this.options,"defaultType","future"),r=this.safeString(s,"type",i);let a;s=this.omit(s,["type"]),a=e?"true":"false";const n={dualSidePosition:a};let o;return o="delivery"===r?"dapiPrivatePostPositionSideDual":"fapiPrivatePostPositionSideDual",await this[o](this.extend(n,s))}sign(e,t="public",s="GET",i={},r,a){if(!(t in this.urls.api))throw new m(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");let n=this.urls.api[t];if(n+="/"+e,"wapi"===t&&(n+=".html"),"historicalTrades"===e){if(!this.apiKey)throw new u(this.id+" historicalTrades endpoint requires `apiKey` credential");r={"X-MBX-APIKEY":this.apiKey}}if("userDataStream"===e||"listenKey"===e){if(!this.apiKey)throw new u(this.id+" userDataStream endpoint requires `apiKey` credential");r={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"},"GET"!==s&&(a=this.urlencode(i))}else if("private"===t||"sapi"===t&&"system/status"!==e||"sapiV3"===t||"wapi"===t&&"systemStatus"!==e||"dapiPrivate"===t||"dapiPrivateV2"===t||"fapiPrivate"===t||"fapiPrivateV2"===t){let o;this.checkRequiredCredentials();const c=this.safeInteger(this.options,"recvWindow"),d=this.extend({timestamp:this.nonce()},i);void 0!==c&&(d.recvWindow=c);const h=this.safeInteger(i,"recvWindow");void 0!==h&&(d.recvWindow=h),o="sapi"===t&&"asset/dust"===e?this.urlencodeWithArrayRepeat(d):"batchOrders"===e||e.indexOf("sub-account")>=0||"capital/withdraw/apply"===e?this.rawencode(d):this.urlencode(d);o+="&signature="+this.hmac(this.encode(o),this.encode(this.secret)),r={"X-MBX-APIKEY":this.apiKey},"GET"===s||"DELETE"===s||"wapi"===t?n+="?"+o:(a=o,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(i).length&&(n+="?"+this.urlencode(i));return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,l){if(418===e||429===e)throw new h(this.id+" "+e.toString()+" "+t+" "+n);if(e>=400){if(n.indexOf("Price * QTY is zero or less")>=0)throw new d(this.id+" order cost = amount * price is zero or less "+n);if(n.indexOf("LOT_SIZE")>=0)throw new d(this.id+" order amount should be evenly divisible by lot size "+n);if(n.indexOf("PRICE_FILTER")>=0)throw new d(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid value in general, use this.priceToPrecision (symbol, amount) "+n)}if(void 0===o)return;const u=this.safeValue(o,"success",!0);if(!u){const e=this.safeString(o,"msg");let t;if(void 0!==e){try{t=JSON.parse(e)}catch(e){t=void 0}void 0!==t&&(o=t)}}const f=this.safeString(o,"msg");void 0!==f&&(this.throwExactlyMatchedException(this.exceptions.exact,f,this.id+" "+f),this.throwBroadlyMatchedException(this.exceptions.broad,f,this.id+" "+f));const p=this.safeString(o,"code");if(void 0!==p){if("200"===p||M.stringEquals(p,"0"))return;if("-2015"===p&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new h(this.id+" "+n);const e=this.id+" "+n;if("No need to change margin type."===f)throw new O(e);throw this.throwExactlyMatchedException(this.exceptions.exact,p,e),new r(e)}if(!u)throw new r(this.id+" "+n)}calculateRateLimiterCost(e,t,s,i,r={},a={}){if("noCoin"in r&&!("coin"in i))return r.noCoin;if("noSymbol"in r&&!("symbol"in i))return r.noSymbol;if("noPoolId"in r&&!("poolId"in i))return r.noPoolId;if("byLimit"in r&&"limit"in i){const e=i.limit,t=r.byLimit;for(let s=0;s<t.length;s++){const i=t[s];if(e<=i[0])return i[1]}}return this.safeInteger(r,"cost",1)}async request(e,t="public",s="GET",i={},r,a,n={},o={}){const c=await this.fetch2(e,t,s,i,r,a,n,o);return"private"!==t&&"wapi"!==t||(this.options.hasAlreadyAuthenticatedSuccessfully=!0),c}async modifyMarginHelper(e,t,s,i={}){let r=this.safeString(this.options,"defaultType","future");"spot"===r&&(r="future");const a=this.safeString(i,"type",r);if("margin"===a||"spot"===a)throw new m(this.id+" add / reduce margin only supported with type future or delivery");await this.loadMarkets();const n=this.market(e);t=this.amountToPrecision(e,t);const o={type:s,symbol:n.id,amount:t};let c,d;"future"===a?(c="fapiPrivatePostPositionMargin",d=n.quote):(c="dapiPrivatePostPositionMargin",d=n.base);const h=await this[c](this.extend(o,i));return this.extend(this.parseMarginModification(h,n),{code:d})}parseMarginModification(e,t){const s=1===this.safeInteger(e,"type")?"add":"reduce",i=this.safeNumber(e,"amount"),r="200"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:s,amount:i,code:void 0,symbol:t.symbol,status:r}}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,2,s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,1,s)}async fetchBorrowRate(e,t={}){await this.loadMarkets();const s={asset:this.currency(e).id},i=await this.sapiGetMarginInterestRateHistory(this.extend(s,t)),r=this.safeValue(i,0);return this.parseBorrowRate(r)}async fetchBorrowRateHistory(e,t,s,i={}){if(await this.loadMarkets(),void 0===s)s=93;else if(s>93)throw new g(this.id+" fetchBorrowRateHistory() limit parameter cannot exceed 92");const r={asset:this.currency(e).id,limit:s};if(void 0!==t){r.startTime=t;const e=this.sum(t,864e5*s)-1,i=this.milliseconds();r.endTime=Math.min(e,i)}const a=await this.sapiGetMarginInterestRateHistory(this.extend(r,i));return this.parseBorrowRateHistory(a)}parseBorrowRateHistory(e,t,s,i){const r=[];for(let t=0;t<e.length;t++){const s=e[t],i=this.parseBorrowRate(s);r.push(i)}const a=this.sortBy(r,"timestamp");return this.filterByCurrencySinceLimit(a,t,s,i)}parseBorrowRate(e,t){const s=this.safeNumber(e,"timestamp");return t=this.safeString(e,"asset"),{currency:this.safeCurrencyCode(t),rate:this.safeNumber(e,"dailyInterestRate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:e}}async createGiftCode(e,t,s={}){await this.loadMarkets();const i={token:this.currency(e).id,amount:t},r=await this.sapiPostGiftcardCreateCode(this.extend(i,s)),a=this.safeValue(r,"data"),n=this.safeString(a,"code");return{info:r,id:this.safeString(a,"referenceNo"),code:n,currency:e,amount:t}}async redeemGiftCode(e,t={}){const s={code:e};return await this.sapiPostGiftcardRedeemCode(this.extend(s,t))}async verifyGiftCode(e,t={}){const s={referenceNo:e};return await this.sapiGetGiftcardVerify(this.extend(s,t))}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;if(void 0!==e){const t=this.currency(e);a.asset=t.id}void 0!==s&&(a.startTime=s),void 0!==i&&(a.size=i),void 0!==t&&(n=this.market(t),a.isolatedSymbol=n.id);const o=await this.sapiGetMarginInterestHistory(this.extend(a,r)),c=this.safeValue(o,"rows"),d=this.parseBorrowInterests(c,n);return this.filterByCurrencySinceLimit(d,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"isolatedSymbol"),i=this.safeNumber(e,"interestAccuredTime");return{account:void 0===s?"cross":s,symbol:s,marginMode:void 0===s?"cross":"isolated",currency:this.safeCurrencyCode(this.safeString(e,"asset")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"principal"),timestamp:i,datetime:this.iso8601(i),info:e}}async repayMargin(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==s&&(r=this.market(s),s=r.symbol);const n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)},c=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");if("isolated"===this.safeString(i,"marginMode",c)){if(void 0===s)throw new a(this.id+" repayMargin() requires a symbol argument for isolated margin");o.isIsolated="TRUE",o.symbol=r.id}i=this.omit(i,"marginMode");const d=await this.sapiPostMarginRepay(this.extend(o,i)),h=this.parseMarginLoan(d,n);return this.extend(h,{amount:t,symbol:s})}async borrowMargin(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==s&&(r=this.market(s),s=r.symbol);const n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)},c=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");if("isolated"===this.safeString(i,"marginMode",c)){if(void 0===s)throw new a(this.id+" borrowMargin() requires a symbol argument for isolated margin");o.isIsolated="TRUE",o.symbol=r.id}i=this.omit(i,"marginMode");const d=await this.sapiPostMarginLoan(this.extend(o,i)),h=this.parseMarginLoan(d,n);return this.extend(h,{amount:t,symbol:s})}parseMarginLoan(e,t){return{id:this.safeInteger(e,"tranId"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchOpenInterestHistory(e,t="5m",s,i,r={}){if("1m"===t)throw new g(this.id+"fetchOpenInterestHistory cannot use the 1m timeframe");await this.loadMarkets();const a=this.market(e),n={period:this.timeframes[t]};void 0!==i&&(n.limit=i);n[a.linear?"symbol":"pair"]=a.id,a.delivery&&(n.contractType=this.safeString(r,"contractType","CURRENT_QUARTER")),void 0!==s&&(n.startTime=s);const o=this.safeInteger2(r,"until","till"),c=this.safeString(r,"endTime",o);if(r=this.omit(r,["endTime","until","till"]),c)n.endTime=c;else if(s){void 0===i&&(i=30);const e=this.parseTimeframe(t);n.endTime=this.sum(s,e*i*1e3)}let d="fapiDataGetOpenInterestHist";a.inverse&&(d="dapiDataGetOpenInterestHist");const h=await this[d](this.extend(n,r));return this.parseOpenInterests(h,e,s,i)}parseOpenInterest(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"symbol");return t=this.safeMarket(i,t),{symbol:this.safeSymbol(i),baseVolume:this.safeNumber(e,"sumOpenInterest"),quoteVolume:this.safeNumber(e,"sumOpenInterestValue"),timestamp:s,datetime:this.iso8601(s),info:e}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],145:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:["https://binance-docs.github.io/apidocs/delivery/en/","https://binance-docs.github.io/apidocs/spot/en"]},has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,createStopMarketOrder:!0},options:{defaultType:"delivery",leverageBrackets:void 0}})}async transferIn(e,t,s={}){return await this.futuresTransfer(e,t,3,s)}async transferOut(e,t,s={}){return await this.futuresTransfer(e,t,4,s)}}},{"./binance.js":144}],146:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binanceus",name:"Binance US",countries:["US"],certified:!1,pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",api:{web:"https://www.binance.us",sapi:"https://api.binance.us/sapi/v1",wapi:"https://api.binance.us/wapi/v3",public:"https://api.binance.us/api/v3",private:"https://api.binance.us/api/v3"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{fetchCurrencies:!1,quoteOrderQty:!1}})}}},{"./binance.js":144}],147:[function(e,t,s){"use strict";const i=e("./binance.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:["https://binance-docs.github.io/apidocs/futures/en/","https://binance-docs.github.io/apidocs/spot/en"]},has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,createStopMarketOrder:!0},options:{defaultType:"future",leverageBrackets:void 0,marginTypes:{},marginModes:{}}})}async transferIn(e,t,s={}){return await this.futuresTransfer(e,t,1,s)}async transferOut(e,t,s={}){return await this.futuresTransfer(e,t,2,s)}}},{"./binance.js":144}],148:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,ExchangeError:a,InvalidNonce:n,AuthenticationError:o,PermissionDenied:c,NotSupported:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bit2c",name:"Bit2C",countries:["IL"],rateLimit:3e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg",api:"https://bit2c.co.il",www:"https://www.bit2c.co.il",referral:"https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf",doc:["https://www.bit2c.co.il/home/api","https://github.com/OferE/bit2c"]},api:{public:{get:["Exchanges/{pair}/Ticker","Exchanges/{pair}/orderbook","Exchanges/{pair}/trades","Exchanges/{pair}/lasttrades"]},private:{post:["Merchant/CreateCheckout","Funds/AddCoinFundsRequest","Order/AddFund","Order/AddOrder","Order/AddOrderMarketPriceBuy","Order/AddOrderMarketPriceSell","Order/CancelOrder","Order/AddCoinFundsRequest","Order/AddStopOrder","Payment/GetMyId","Payment/Send","Payment/Pay"],get:["Account/Balance","Account/Balance/v2","Order/MyOrders","Order/GetById","Order/AccountHistory","Order/OrderHistory"]}},markets:{"BTC/NIS":{id:"BtcNis",symbol:"BTC/NIS",base:"BTC",quote:"NIS",baseId:"Btc",quoteId:"Nis",type:"spot",spot:!0},"ETH/NIS":{id:"EthNis",symbol:"ETH/NIS",base:"ETH",quote:"NIS",baseId:"Eth",quoteId:"Nis",type:"spot",spot:!0},"BCH/NIS":{id:"BchabcNis",symbol:"BCH/NIS",base:"BCH",quote:"NIS",baseId:"Bchabc",quoteId:"Nis",type:"spot",spot:!0},"LTC/NIS":{id:"LtcNis",symbol:"LTC/NIS",base:"LTC",quote:"NIS",baseId:"Ltc",quoteId:"Nis",type:"spot",spot:!0},"ETC/NIS":{id:"EtcNis",symbol:"ETC/NIS",base:"ETC",quote:"NIS",baseId:"Etc",quoteId:"Nis",type:"spot",spot:!0},"BTG/NIS":{id:"BtgNis",symbol:"BTG/NIS",base:"BTG",quote:"NIS",baseId:"Btg",quoteId:"Nis",type:"spot",spot:!0},"BSV/NIS":{id:"BchsvNis",symbol:"BSV/NIS",base:"BSV",quote:"NIS",baseId:"Bchsv",quoteId:"Nis",type:"spot",spot:!0},"GRIN/NIS":{id:"GrinNis",symbol:"GRIN/NIS",base:"GRIN",quote:"NIS",baseId:"Grin",quoteId:"Nis",type:"spot",spot:!0}},fees:{trading:{maker:this.parseNumber("0.005"),taker:this.parseNumber("0.005")}},options:{fetchTradesMethod:"public_get_exchanges_pair_trades"},precisionMode:h,exceptions:{exact:{"Please provide valid APIkey":o},broad:{"Please provide valid nonce":n,"please approve new terms of use on site":c}}})}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.account(),n=this.currency(r).id.toUpperCase();n in e&&(a.free=this.safeString(e,"AVAILABLE_"+n),a.total=this.safeString(e,n)),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalanceV2(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetExchangesPairOrderbook(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.milliseconds(),r=this.safeString(e,"av"),a=this.safeString(e,"a"),n=this.safeString(e,"ll");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"h"),bidVolume:void 0,ask:this.safeString(e,"l"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:r,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetExchangesPairTicker(this.extend(i,t));return this.parseTicker(r,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),n=this.options.fetchTradesMethod,o={pair:r.id};void 0!==t&&(o.date=parseInt(t)),void 0!==s&&(o.limit=s);const c=await this[n](this.extend(o,i));if("string"==typeof c)throw new a(c);return this.parseTrades(c,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalance(e),s=this.safeValue(t,"Fees",{}),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeSymbol(t),n=this.safeValue(s,t),o=this.safeString(n,"FeeMaker"),c=this.safeString(n,"FeeTaker"),d=this.parseNumber(l.stringDiv(o,"100")),h=this.parseNumber(l.stringDiv(c,"100"));r[a]={info:n,symbol:a,taker:h,maker:d,percentage:!0,tierBased:!1}}return r}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();let n="privatePostOrderAddOrder";const o={Amount:i,Pair:this.market(e).id};"market"===t?n+="MarketPrice"+this.capitalize(s):(o.Price=r,o.Total=i*r,o.IsBid="buy"===s);const c=await this[n](this.extend(o,a));return{info:c,id:c.NewOrder.id}}async cancelOrder(e,t,s={}){const i={id:e};return await this.privatePostOrderCancelOrder(this.extend(i,s))}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id},o=await this.privateGetOrderMyOrders(this.extend(n,i)),c=this.safeValue(o,a.id,{}),d=this.safeValue(c,"ask",[]),h=this.safeValue(c,"bid",[]);return this.parseOrders(this.arrayConcat(d,h),a,t,s)}parseOrder(e,t){const s=this.safeInteger(e,"created"),i=this.safeString(e,"price"),r=this.safeString(e,"amount");t=this.safeMarket(void 0,t);let a=this.safeValue(e,"type");0===a?a="buy":1===a&&(a="sell");const n=this.safeString(e,"id"),o=this.safeString(e,"status");return this.safeOrder({id:n,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:o,symbol:t.symbol,type:void 0,timeInForce:void 0,postOnly:void 0,side:a,price:i,stopPrice:void 0,amount:r,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==s&&(a.take=s),a.take=s,void 0!==t&&(a.toTime=this.yyyymmdd(this.milliseconds(),"."),a.fromTime=this.yyyymmdd(t,".")),void 0!==e&&(r=this.market(e),a.pair=r.id);const n=await this.privateGetOrderOrderHistory(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseTrade(e,t){let s,i,r,a,n,o,c;const d=this.safeString(e,"reference");if(void 0!==d){s=this.safeTimestamp(e,"ticks"),r=this.safeString(e,"price"),a=this.safeString(e,"firstAmount");const h=d.split("|"),l=this.safeString(e,"pair");t=this.safeMarket(l,t),t=this.safeMarket(h[0],t),n=h[1],i=h[2],c=this.safeInteger(e,"action"),0===c?c="buy":1===c&&(c="sell");const u=this.safeString(e,"feeAmount");void 0!==u&&(o={cost:u,currency:"NIS"})}else s=this.safeTimestamp(e,"date"),i=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),c=this.safeValue(e,"isBid"),void 0!==c&&(c=c?"buy":"sell");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:n,type:void 0,side:c,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:o},t)}isFiat(e){return"NIS"===e}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e);if(this.isFiat(e))throw new d(this.id+" fetchDepositAddress() does not support fiat currencies");const i={Coin:s.id},r=await this.privatePostFundsAddCoinFundsRequest(this.extend(i,t));return this.parseDepositAddress(r,s)}parseDepositAddress(e,t){const s=this.safeString(e,"address");this.checkAddress(s);return{currency:this.safeCurrencyCode(void 0,t),network:void 0,address:s,tag:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i);if("public"===t)n+=".json";else{this.checkRequiredCredentials();const e=this.nonce(),t=this.extend({nonce:e},i),o=this.urlencode(t);"GET"===s?Object.keys(t).length&&(n+="?"+o):a=o;const c=this.hmac(this.encode(o),this.encode(this.secret),"sha512","base64");r={"Content-Type":"application/x-www-form-urlencoded",key:this.apiKey,sign:c}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),new a(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],149:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,InvalidNonce:n,InsufficientFunds:o,InvalidOrder:c,OrderNotFound:d,PermissionDenied:h,ArgumentsRequired:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitbank",name:"bitbank",countries:["JP"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","4h":"4hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},hostname:"bitbank.cc",urls:{logo:"https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg",api:{public:"https://public.{hostname}",private:"https://api.{hostname}",markets:"https://api.{hostname}"},www:"https://bitbank.cc/",doc:"https://docs.bitbank.cc/",fees:"https://bitbank.cc/docs/fees/"},api:{public:{get:["{pair}/ticker","{pair}/depth","{pair}/transactions","{pair}/transactions/{yyyymmdd}","{pair}/candlestick/{candletype}/{yyyymmdd}"]},private:{get:["user/assets","user/spot/order","user/spot/active_orders","user/spot/trade_history","user/withdrawal_account"],post:["user/spot/order","user/spot/cancel_order","user/spot/cancel_orders","user/spot/orders_info","user/request_withdrawal"]},markets:{get:["spot/pairs"]}},precisionMode:u,exceptions:{20001:a,20002:a,20003:a,20005:a,20004:n,40020:c,40021:c,40025:r,40013:d,40014:d,50008:h,50009:d,50010:d,60001:o,60005:c}})}async fetchMarkets(e={}){const t=await this.marketsGetSpotPairs(e),s=this.safeValue(t,"data"),i=this.safeValue(s,"pairs",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"name"),a=this.safeString(t,"base_asset"),n=this.safeString(t,"quote_asset"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);r.push({id:s,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"is_enabled"),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate_quote"),maker:this.safeNumber(t,"maker_fee_rate_quote"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_digits"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_digits")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"unit_amount"),max:this.safeNumber(t,"limit_max_amount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return r}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeInteger(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetPairTicker(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetPairDepth(this.extend(r,s)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,i.symbol,o)}parseTrade(e,t){const s=this.safeInteger(e,"executed_at");t=this.safeMarket(void 0,t);const i=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeString2(e,"transaction_id","trade_id"),n=this.safeString(e,"maker_taker");let o;const c=this.safeString(e,"fee_amount_quote");void 0!==c&&(o={currency:t.quote,cost:c});const d=this.safeString(e,"order_id"),h=this.safeString(e,"type"),l=this.safeString(e,"side");return this.safeTrade({timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:a,order:d,type:h,side:l,takerOrMaker:n,price:i,amount:r,cost:void 0,fee:o,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetPairTransactions(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"transactions",[]);return this.parseTrades(c,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.marketsGetSpotPairs(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"pairs",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"name"),a=this.safeMarket(s).symbol;r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_rate_quote"),taker:this.safeNumber(t,"taker_fee_rate_quote"),percentage:!0,tierBased:!1}}return r}parseOHLCV(e,t){return[this.safeInteger(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]}async fetchOHLCV(e,t="5m",s,i,r={}){if(void 0===s)throw new l(this.id+" fetchOHLCV() requires a since argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id,candletype:this.timeframes[t],yyyymmdd:this.yyyymmdd(s,"")},o=await this.publicGetPairCandlestickCandletypeYyyymmdd(this.extend(n,r)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"candlestick",[]),h=this.safeValue(d,0,{}),u=this.safeValue(h,"ohlcv",[]);return this.parseOHLCVs(u,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"data",{}),i=this.safeValue(s,"assets",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free_amount"),n.used=this.safeString(s,"locked_amount"),n.total=this.safeString(s,"onhand_amount"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserAssets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({UNFILLED:"open",PARTIALLY_FILLED:"open",FULLY_FILLED:"closed",CANCELED_UNFILLED:"canceled",CANCELED_PARTIALLY_FILLED:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"order_id"),i=this.safeString(e,"pair");t=this.safeMarket(i,t);const r=this.safeInteger(e,"ordered_at"),a=this.safeString(e,"price"),n=this.safeString(e,"start_amount"),o=this.safeString(e,"executed_amount"),c=this.safeString(e,"remaining_amount"),d=this.safeString(e,"average_price"),h=this.parseOrderStatus(this.safeString(e,"status")),l=this.safeStringLower(e,"type"),u=this.safeStringLower(e,"side");return this.safeOrder({id:s,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:h,symbol:t.symbol,type:l,timeInForce:void 0,postOnly:void 0,side:u,price:a,stopPrice:void 0,cost:void 0,average:d,amount:n,filled:o,remaining:c,trades:void 0,fee:void 0,info:e},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={pair:n.id,amount:this.amountToPrecision(e,i),side:s,type:t};"limit"===t&&(o.price=this.priceToPrecision(e,r));const c=await this.privatePostUserSpotOrder(this.extend(o,a)),d=this.safeValue(c,"data");return this.parseOrder(d,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e,pair:this.market(t).id},r=await this.privatePostUserSpotCancelOrder(this.extend(i,s));return this.safeValue(r,"data")}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.market(t),r={order_id:e,pair:i.id},a=await this.privateGetUserSpotOrder(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseOrder(n,i)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.count=s),void 0!==t&&(a.since=parseInt(t/1e3));const n=await this.privateGetUserSpotActiveOrders(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"orders",[]);return this.parseOrders(c,r,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id),void 0!==s&&(r.count=s),void 0!==t&&(r.since=parseInt(t/1e3));const n=await this.privateGetUserSpotTradeHistory(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,a,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={asset:s.id},r=await this.privateGetUserWithdrawalAccount(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"accounts",[]),o=this.safeValue(n,0,{});return{currency:s,address:this.safeString(o,"address"),tag:void 0,network:void 0,info:r}}async withdraw(e,t,s,i,a={}){if([i,a]=this.handleWithdrawTagAndParams(i,a),!("uuid"in a))throw new r(this.id+" uuid is required for withdrawal");await this.loadMarkets();const n=this.currency(e),o={asset:n.id,amount:t},c=await this.privatePostUserRequestWithdrawal(this.extend(o,a)),d=this.safeValue(c,"data",{});return this.parseTransaction(d,n)}parseTransaction(e,t){const s=this.safeString(e,"txid");return{id:s,txid:s,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.omit(i,this.extractParams(e)),o=this.implodeHostname(this.urls.api[t])+"/";if("public"===t||"markets"===t)o+=this.implodeParams(e,i),Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();const t=this.nonce().toString();let c=t;o+=this.version+"/"+this.implodeParams(e,i),"POST"===s?c+=a=this.json(n):(c+="/"+this.version+"/"+e,Object.keys(n).length&&(n=this.urlencode(n),o+="?"+n,c+="?"+n)),r={"Content-Type":"application/json","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":t,"ACCESS-SIGNATURE":this.hmac(this.encode(c),this.encode(this.secret))}}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeInteger(o,"success"),l=this.safeValue(o,"data");if(!h||!l){const e={1e4:"URL does not exist",10001:"A system error occurred. Please contact support",10002:"Invalid JSON format. Please check the contents of transmission",10003:"A system error occurred. Please contact support",10005:"A timeout error occurred. Please wait for a while and try again",20001:"API authentication failed",20002:"Illegal API key",20003:"API key does not exist",20004:"API Nonce does not exist",20005:"API signature does not exist",20011:"Two-step verification failed",20014:"SMS authentication failed",30001:"Please specify the order quantity",30006:"Please specify the order ID",30007:"Please specify the order ID array",30009:"Please specify the stock",30012:"Please specify the order price",30013:"Trade Please specify either",30015:"Please specify the order type",30016:"Please specify asset name",30019:"Please specify uuid",30039:"Please specify the amount to be withdrawn",40001:"The order quantity is invalid",40006:"Count value is invalid",40007:"End time is invalid",40008:"end_id Value is invalid",40009:"The from_id value is invalid",40013:"The order ID is invalid",40014:"The order ID array is invalid",40015:"Too many specified orders",40017:"Incorrect issue name",40020:"The order price is invalid",40021:"The trading classification is invalid",40022:"Start date is invalid",40024:"The order type is invalid",40025:"Incorrect asset name",40028:"uuid is invalid",40048:"The amount of withdrawal is illegal",50003:"Currently, this account is in a state where you can not perform the operation you specified. Please contact support",50004:"Currently, this account is temporarily registered. Please try again after registering your account",50005:"Currently, this account is locked. Please contact support",50006:"Currently, this account is locked. Please contact support",50008:"User identification has not been completed",50009:"Your order does not exist",50010:"Can not cancel specified order",50011:"API not found",60001:"The number of possessions is insufficient",60002:"It exceeds the quantity upper limit of the tender buying order",60003:"The specified quantity exceeds the limit",60004:"The specified quantity is below the threshold",60005:"The specified price is above the limit",60006:"The specified price is below the lower limit",70001:"A system error occurred. Please contact support",70002:"A system error occurred. Please contact support",70003:"A system error occurred. Please contact support",70004:"We are unable to accept orders as the transaction is currently suspended",70005:"Order can not be accepted because purchase order is currently suspended",70006:"We can not accept orders because we are currently unsubscribed ",70009:"We are currently temporarily restricting orders to be carried out. Please use the limit order.",70010:"We are temporarily raising the minimum order quantity as the system load is now rising."},t=this.exceptions,s=this.safeString(l,"code"),i=this.safeString(e,s,"Error"),a=this.safeValue(t,s);throw void 0!==a?new a(i):new r(this.id+" "+this.json(o))}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],150:[function(e,t,s){"use strict";const i=e("./zonda.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitbay",alias:!0})}}},{"./zonda.js":300}],151:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,InsufficientFunds:n,OrderNotFound:o,BadRequest:c,BadSymbol:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitbns",name:"Bitbns",countries:["IN"],rateLimit:1e3,certified:!1,pro:!1,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:void 0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:"emulated",fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!1},timeframes:{},urls:{logo:"https://user-images.githubusercontent.com/1294454/117201933-e7a6e780-adf5-11eb-9d80-98fc2a21c3d6.jpg",api:{www:"https://bitbns.com",v1:"https://api.bitbns.com/api/trade/v1",v2:"https://api.bitbns.com/api/trade/v2"},www:"https://bitbns.com",referral:"https://ref.bitbns.com/1090961",doc:["https://bitbns.com/trade/#/api-trading/"],fees:"https://bitbns.com/fees"},api:{www:{get:["order/fetchMarkets","order/fetchTickers","order/fetchOrderbook","order/getTickerWithVolume","exchangeData/ohlc","exchangeData/orderBook","exchangeData/tradedetails"]},v1:{get:["platform/status","tickers","orderbook/sell/{symbol}","orderbook/buy/{symbol}"],post:["currentCoinBalance/EVERYTHING","getApiUsageStatus/USAGE","getOrderSocketToken/USAGE","currentCoinBalance/{symbol}","orderStatus/{symbol}","depositHistory/{symbol}","withdrawHistory/{symbol}","withdrawHistoryAll/{symbol}","depositHistoryAll/{symbol}","listOpenOrders/{symbol}","listOpenStopOrders/{symbol}","getCoinAddress/{symbol}","placeSellOrder/{symbol}","placeBuyOrder/{symbol}","buyStopLoss/{symbol}","sellStopLoss/{symbol}","placeSellOrder/{symbol}","cancelOrder/{symbol}","cancelStopLossOrder/{symbol}","listExecutedOrders/{symbol}","placeMarketOrder/{symbol}","placeMarketOrderQnty/{symbol}"]},v2:{post:["orders","cancel","getordersnew","marginOrders"]}},fees:{trading:{feeSide:"quote",tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")}},precisionMode:h,exceptions:{exact:{400:c,409:d,416:n,417:o},broad:{}}})}async fetchStatus(e={}){const t=await this.v1GetPlatformStatus(e),s=this.safeString(t,"status");return{status:this.safeString({1:"ok"},s,s),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.wwwGetOrderFetchMarkets(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"base"),n=this.safeString(i,"quote"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeValue(i,"precision",{}),h=this.safeValue(i,"limits",{}),l=this.safeValue(h,"amount",{}),u=this.safeValue(h,"price",{}),f=this.safeValue(h,"cost",{}),p="USDT"===n?a+"_"+n:a;s.push({id:r,uppercaseId:p,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(d,"amount"))),price:this.parseNumber(this.parsePrecision(this.safeString(d,"price")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(l,"min"),max:this.safeNumber(l,"max")},price:{min:this.safeNumber(u,"min"),max:this.safeNumber(u,"max")},cost:{min:this.safeNumber(f,"min"),max:this.safeNumber(f,"max")}},info:i})}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);const a=await this.wwwGetOrderFetchOrderbook(this.extend(r,s)),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,i.symbol,n)}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"last");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidVolume"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askVolume"),vwap:this.safeString(e,"vwap"),open:this.safeString(e,"open"),close:a,last:a,previousClose:this.safeString(e,"previousClose"),change:this.safeString(e,"change"),percentage:this.safeString(e,"percentage"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.wwwGetOrderFetchTickers(t);return this.parseTickers(s,e)}parseBalance(e){const t=void 0,s={info:e,timestamp:t,datetime:this.iso8601(t)},i=this.safeValue(e,"data",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=t.split("availableorder");if(a.length>1){let e=this.safeString(a,1);"Money"===e&&(e="INR");const r=this.safeCurrencyCode(e),n=this.account();n.free=this.safeString(i,t),n.used=this.safeString(i,"inorder"+e),s[r]=n}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1PostCurrentCoinBalanceEVERYTHING(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({0:"open"},e,e)}parseOrder(e,t){const s=this.safeString2(e,"id","entry_id"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.parse8601(this.safeString(e,"time")),n=this.safeString(e,"rate"),o=this.safeString2(e,"amount","btc"),c=this.safeString(e,"filled"),d=this.safeString(e,"remaining"),h=this.safeString(e,"avg_cost"),l=this.safeString(e,"cost");let u=this.safeStringLower(e,"type");"0"===u&&(u="limit");const f=this.parseOrderStatus(this.safeString(e,"status")),p=this.safeStringLower(e,"side"),m=this.safeNumber(e,"fee");let g;if(void 0!==m){g={cost:m,currency:void 0}}return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:u,timeInForce:void 0,postOnly:void 0,side:p,price:n,stopPrice:void 0,amount:o,cost:l,average:h,filled:c,remaining:d,status:f,fee:g,trades:void 0},t)}async createOrder(e,t,s,i,a,n={}){if("limit"!==t&&"market"!==t)throw new r(this.id+" allows limit and market orders only");await this.loadMarkets();const o=this.market(e),c={side:s.toUpperCase(),symbol:o.uppercaseId,quantity:this.amountToPrecision(e,i)};let d="v2PostOrders";if("limit"===t)c.rate=this.priceToPrecision(e,a);else{if("market"!==t)throw new r(this.id+" allows limit and market orders only");d="v1PostPlaceMarketOrderQntySymbol",c.market=o.quoteId}const h=await this[d](this.extend(c,n));return this.parseOrder(h,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r="USDT"===i.quoteId?"usdtcancelOrder":"cancelOrder",n={entry_id:e,symbol:i.uppercaseId,side:r},o=await this.v2PostCancel(this.extend(n,s));return this.parseOrder(o,i)}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={symbol:i.id,entry_id:e},n=await this.v1PostOrderStatusSymbol(this.extend(r,s)),o=this.safeValue(n,"data",[]),c=this.safeValue(o,0);return this.parseOrder(c,i)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n="USDT"===r.quoteId?"usdtListOpenOrders":"listOpenOrders",o={symbol:r.uppercaseId,side:n,page:0},c=await this.v2PostGetordersnew(this.extend(o,i)),d=this.safeValue(c,"data",[]);return this.parseOrders(d,r,t,s)}parseTrade(e,t){t=this.safeMarket(void 0,t);const s=this.safeString2(e,"id","tradeId");let i=this.parse8601(this.safeString(e,"date"));i=this.safeInteger(e,"timestamp",i);const r=this.safeString2(e,"rate","price");let a=this.safeString(e,"amount"),n=this.safeStringLower(e,"type");void 0!==n&&(n.indexOf("buy")>=0?n="buy":n.indexOf("sell")>=0&&(n="sell"));const o=this.safeString(e,"factor");let c;void 0!==o?a=l.stringDiv(a,o):(a=this.safeString(e,"base_volume"),c=this.safeString(e,"quote_volume"));const d=t.symbol;let h;const u=this.safeString(e,"fee");if(void 0!==u){h={cost:u,currency:t.quote}}return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:d,id:s,order:s,type:void 0,side:n,takerOrMaker:void 0,price:r,amount:a,cost:c,fee:h},t)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id,page:0};void 0!==t&&(n.since=this.iso8601(t));const o=await this.v1PostListExecutedOrdersSymbol(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}async fetchTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={coin:r.baseId,market:r.quoteId},o=await this.wwwGetExchangeDataTradedetails(this.extend(n,i));return this.parseTrades(o,r,t,s)}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={symbol:r.id,page:0},o=await this.v1PostDepositHistorySymbol(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,r,t,s)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={symbol:r.id,page:0},o=await this.v1PostWithdrawHistorySymbol(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,r,t,s)}parseTransactionStatusByType(e,t){const s=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok"}},t,{});return this.safeString(s,e,e)}parseTransaction(e,t){const s=this.safeString(e,"unit"),i=this.safeCurrencyCode(s,t),r=this.parse8601(this.safeString(e,"date"));let a,n=this.safeString(e,"type");void 0!==n&&(n.indexOf("deposit")>=0?(n="deposit",a="ok"):n.indexOf("withdraw")>=0&&(n="withdrawal"));const o=this.safeNumber(e,"amount"),c=this.safeNumber(e,"fee");let d;return void 0!==c&&(d={currency:i,cost:c}),{info:e,id:void 0,txid:void 0,timestamp:r,datetime:this.iso8601(r),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:n,amount:o,currency:i,status:a,updated:void 0,internal:void 0,fee:d}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={symbol:this.currency(e).id},i=await this.v1PostGetCoinAddressSymbol(this.extend(s,t)),r=this.safeValue(i,"data",{}),a=this.safeString(r,"token"),n=this.safeString(r,"tag");return this.checkAddress(a),{currency:e,address:a,tag:n,network:void 0,info:i}}nonce(){return this.milliseconds()}sign(e,t="www",s="GET",i={},a,n){if(!(t in this.urls.api))throw new r(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");"www"!==t&&(this.checkRequiredCredentials(),a={"X-BITBNS-APIKEY":this.apiKey});let o=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,i);const c=this.omit(i,this.extractParams(e)),d=this.nonce().toString();if("GET"===s)Object.keys(c).length&&(o+="?"+this.urlencode(c));else if("POST"===s){const e={timeStamp_nonce:d,body:n=Object.keys(c).length?this.json(c):"{}"},t=this.stringToBase64(this.json(e)),s=this.hmac(t,this.encode(this.secret),"sha512");a["X-BITBNS-PAYLOAD"]=this.decode(t),a["X-BITBNS-SIGNATURE"]=s,a["Content-Type"]="application/x-www-form-urlencoded"}return{url:o,method:s,body:n,headers:a}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code"),l=this.safeString(o,"msg");if(void 0!==h&&"200"!==h&&"204"!==h||void 0!==l){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],152:[function(e,t,s){"use strict";const i=e("./fmfwio.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitcoincom"})}}},{"./fmfwio.js":202}],153:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{NotSupported:r,RateLimitExceeded:a,AuthenticationError:n,PermissionDenied:o,ArgumentsRequired:c,ExchangeError:d,ExchangeNotAvailable:h,InsufficientFunds:l,InvalidOrder:u,OrderNotFound:f,InvalidNonce:p,BadSymbol:m}=e("./base/errors"),{SIGNIFICANT_DIGITS:g,DECIMAL_PLACES:y,TRUNCATE:b,ROUND:v}=e("./base/functions/number"),w=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitfinex",name:"Bitfinex",countries:["VG"],version:"v1",rateLimit:666.666,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDeposits:void 0,fetchIndexOHLCV:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchWithdrawals:void 0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:{v2:"https://api-pub.bitfinex.com",public:"https://api.bitfinex.com",private:"https://api.bitfinex.com"},www:"https://www.bitfinex.com",referral:"https://www.bitfinex.com/?refcode=P61eYxFL",doc:["https://docs.bitfinex.com/v1/docs","https://github.com/bitfinexcom/bitfinex-api-node"]},api:{v2:{get:{"platform/status":3,tickers:1,"ticker/{symbol}":1,"tickers/hist":1,"trades/{symbol}/hist":1,"book/{symbol}/{precision}":.375,"book/{symbol}/P0":.375,"book/{symbol}/P1":.375,"book/{symbol}/P2":.375,"book/{symbol}/P3":.375,"book/{symbol}/R0":.375,"stats1/{key}:{size}:{symbol}:{side}/{section}":1,"stats1/{key}:{size}:{symbol}/{section}":1,"stats1/{key}:{size}:{symbol}:long/last":1,"stats1/{key}:{size}:{symbol}:long/hist":1,"stats1/{key}:{size}:{symbol}:short/last":1,"stats1/{key}:{size}:{symbol}:short/hist":1,"candles/trade:{timeframe}:{symbol}/{section}":1,"candles/trade:{timeframe}:{symbol}/last":1,"candles/trade:{timeframe}:{symbol}/hist":1}},public:{get:{"book/{symbol}":1,"lendbook/{currency}":6,"lends/{currency}":3,"pubticker/{symbol}":3,"stats/{symbol}":6,symbols:18,symbols_details:18,tickers:1,"trades/{symbol}":3}},private:{post:{account_fees:18,account_infos:6,balances:9.036,basket_manage:6,credits:6,"deposit/new":18,"funding/close":6,history:6,"history/movements":6,key_info:6,margin_infos:3,mytrades:3,mytrades_funding:6,"offer/cancel":6,"offer/new":6,"offer/status":6,offers:6,"offers/hist":90.03,"order/cancel":.2,"order/cancel/all":.2,"order/cancel/multi":.2,"order/cancel/replace":.2,"order/new":.2,"order/new/multi":.2,"order/status":.2,orders:.2,"orders/hist":90.03,"position/claim":18,"position/close":18,positions:18,summary:18,taken_funds:6,total_taken_funds:6,transfer:18,unused_taken_funds:6,withdraw:18}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.002")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("7500000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("20000000"),this.parseNumber("0.0014")],[this.parseNumber("25000000"),this.parseNumber("0.0012")],[this.parseNumber("30000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("7500000"),this.parseNumber("0")],[this.parseNumber("10000000"),this.parseNumber("0")],[this.parseNumber("15000000"),this.parseNumber("0")],[this.parseNumber("20000000"),this.parseNumber("0")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("30000000"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,deposit:{},withdraw:{}}},commonCurrencies:{ALG:"ALGO",AMP:"AMPL",ATO:"ATOM",BCHABC:"XEC",BCHN:"BCH",DAT:"DATA",DOG:"MDOGE",DSH:"DASH",EDO:"PNT",EUS:"EURS",EUT:"EURT",IDX:"ID",IOT:"IOTA",IQX:"IQ",LUNA:"LUNC",LUNA2:"LUNA",MNA:"MANA",ORS:"ORS Group",PAS:"PASS",QSH:"QASH",QTM:"QTUM",RBT:"RBTC",SNG:"SNGLS",STJ:"STORJ",TERRAUST:"USTC",TSD:"TUSD",YGG:"YEED",YYW:"YOYOW",UDC:"USDC",UST:"USDT",VSY:"VSYS",WAX:"WAXP",XCH:"XCHF",ZBT:"ZB"},exceptions:{exact:{temporarily_unavailable:h,"Order could not be cancelled.":f,"No such order found.":f,"Order price must be positive.":u,"Could not find a key matching the given X-BFX-APIKEY.":n,'Key price should be a decimal number, e.g. "123.456"':u,'Key amount should be a decimal number, e.g. "123.456"':u,ERR_RATE_LIMIT:a,Ratelimit:a,"Nonce is too small.":p,"No summary found.":d,"Cannot evaluate your available balance, please try again":h,"Unknown symbol":m,"Cannot complete transfer. Exchange balance insufficient.":l,"Momentary balance check. Please wait few seconds and try the transfer again.":d},broad:{"Invalid X-BFX-SIGNATURE":n,"This API key does not have permission":o,"not enough exchange balance for ":l,"minimum size for ":u,"Invalid order":u,"The available balance is only":l}},precisionMode:g,options:{currencyNames:{AGI:"agi",AID:"aid",AIO:"aio",ANT:"ant",AVT:"aventus",BAT:"bat",BCH:"bab",BCI:"bci",BFT:"bft",BSV:"bsv",BTC:"bitcoin",BTG:"bgold",CFI:"cfi",COMP:"comp",DAI:"dai",DADI:"dad",DASH:"dash",DATA:"datacoin",DTH:"dth",EDO:"eidoo",ELF:"elf",EOS:"eos",ETC:"ethereumc",ETH:"ethereum",ETP:"metaverse",FUN:"fun",GNT:"golem",IOST:"ios",IOTA:"iota",LEO:"let",LINK:"link",LRC:"lrc",LTC:"litecoin",LYM:"lym",MANA:"mna",MIT:"mit",MKR:"mkr",MTN:"mtn",NEO:"neo",ODE:"ode",OMG:"omisego",OMNI:"mastercoin",QASH:"qash",QTUM:"qtum",RCN:"rcn",RDN:"rdn",REP:"rep",REQ:"req",RLC:"rlc",SAN:"santiment",SNGLS:"sng",SNT:"status",SPANK:"spk",STORJ:"stj",TNB:"tnb",TRX:"trx",TUSD:"tsd",USD:"wire",USDC:"udc",UTK:"utk",USDT:"tetheruso",VEE:"vee",WAX:"wax",XLM:"xlm",XMR:"monero",XRP:"ripple",XVG:"xvg",YOYOW:"yoyow",ZEC:"zcash",ZRX:"zrx",XTZ:"xtz"},orderTypes:{limit:"exchange limit",market:"exchange market"},fiat:{USD:"USD",EUR:"EUR",JPY:"JPY",GBP:"GBP",CNH:"CNH"},accountsByType:{spot:"exchange",margin:"trading",funding:"deposit",swap:"trading"}}})}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.privatePostAccountFees(t),i=s.withdraw,r={},a=Object.keys(i);for(let e=0;e<a.length;e++){const t=a[e];r[this.safeCurrencyCode(t)]=this.safeNumber(i,t)}return{info:s,withdraw:r,deposit:r}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostSummary(e),s={},i=this.safeValue(this.options,"fiat",{}),r=this.safeNumber(t,"maker_fee"),a=this.safeNumber(t,"taker_fee"),n=this.safeNumber(t,"maker_fee_2fiat"),o=this.safeNumber(t,"taker_fee_2fiat"),c=this.safeNumber(t,"maker_fee_2deriv"),d=this.safeNumber(t,"taker_fee_2deriv");for(let e=0;e<this.symbols.length;e++){const h=this.symbols[e],l=this.market(h),u={info:t,symbol:h,percentage:!0,tierBased:!0};l.quote in i?(u.maker=n,u.taker=o):l.contract?(u.maker=c,u.taker=d):(u.maker=r,u.taker=a),s[h]=u}return s}async fetchMarkets(e={}){const t=await this.publicGetSymbols(),s=await this.publicGetSymbolsDetails(),i=[];for(let e=0;e<s.length;e++){const r=s[e];let a,n,o=this.safeString(r,"pair");if(!this.inArray(o,t))continue;if(o=o.toUpperCase(),o.indexOf(":")>=0){const e=o.split(":");a=e[0],n=e[1]}else a=o.slice(0,3),n=o.slice(3,6);const c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n);i.push({id:o,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(r,"margin"),swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("8"),price:this.safeInteger(r,"price_precision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(r,"minimum_order_size"),max:this.safeNumber(r,"maximum_order_size")},price:{min:this.parseNumber("1e-8"),max:void 0},cost:{min:void 0,max:void 0}},info:r})}return i}amountToPrecision(e,t){return this.decimalToPrecision(t,b,this.markets[e].precision.amount,y)}priceToPrecision(e,t){return t=this.decimalToPrecision(t,v,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,b,8,y)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeValue(this.options,"accountsByType",{}),s=this.safeString(e,"type","exchange"),i=this.safeString(t,s,s);if(void 0===i){const e=Object.keys(t);throw new d(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}const r=this.omit(e,"type"),a=await this.privatePostBalances(r),n={info:a},o="derivatives"===s;for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"type"),r=this.safeStringLower(t,"currency",""),c=r.length-2,d="f0"===r.slice(c);if(i===s&&(!o||d)){const e=this.safeCurrencyCode(r);if(!(e in n)){const s=this.account();s.free=this.safeString(t,"available"),s.total=this.safeString(t,"amount"),n[e]=s}}}return this.safeBalance(n)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.safeValue(this.options,"accountsByType",{}),n=this.safeString(a,s,s),o=this.safeString(a,i,i),c=this.currency(e),h=this.convertDerivativesId(c.id,s),l=this.convertDerivativesId(c.id,i),u=this.currencyToPrecision(e,t),f={amount:u,currency:h,currency_to:l,walletfrom:n,walletto:o},p=await this.privatePostTransfer(this.extend(f,r)),m=this.safeValue(p,0);if(void 0===this.safeString(m,"message"))throw new d(this.id+" transfer failed");return this.extend(this.parseTransfer(m,c),{fromAccount:s,toAccount:i,amount:this.parseNumber(u)})}parseTransfer(e,t){const s=this.milliseconds();return{info:e,id:void 0,timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(this.safeString(e,"status"))}}parseTransferStatus(e){return this.safeString({SUCCESS:"ok"},e,e)}convertDerivativesId(e,t){const s=e.length-2,i="F0"===e.slice(s);return"derivatives"!==t&&"trading"!==t&&"margin"!==t&&i?e=e.slice(0,s):"derivatives"!==t||i||(e+="F0"),e}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);const a=await this.publicGetBookSymbol(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","price","amount")}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetPubtickerSymbol(this.extend(i,t));return this.parseTicker(r,s)}parseTicker(e,t){const s=this.safeTimestamp(e,"timestamp");let i;if(void 0!==t)i=t.symbol;else if("pair"in e){const s=this.safeString(e,"pair");if(void 0!==s)if(s in this.markets_by_id)i=(t=this.markets_by_id[s]).symbol;else{const e=s.slice(0,3),t=s.slice(3,6);i=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t)}}const r=this.safeString(e,"last_price");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"mid"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}parseTrade(e,t){const s=this.safeString(e,"tid"),i=this.safeTimestamp(e,"timestamp"),r=this.safeStringLower(e,"type"),a=this.safeString(e,"order_id"),n=this.safeString(e,"price"),o=this.safeString(e,"amount");let c;if("fee_amount"in e){const t=w.stringNeg(this.safeString(e,"fee_amount")),s=this.safeString(e,"fee_currency");c={cost:t,currency:this.safeCurrencyCode(s)}}return this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:undefined,order:a,side:r,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:c},t)}async fetchTrades(e,t,s=50,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id,limit_trades:s};void 0!==t&&(a.timestamp=parseInt(t/1e3));const n=await this.publicGetTradesSymbol(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new c(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit_trades=s),void 0!==t&&(a.timestamp=parseInt(t/1e3));const n=await this.privatePostMytrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeValue(a,"postOnly",!1);a=this.omit(a,["postOnly"]);const c={symbol:n.id,side:s,amount:this.amountToPrecision(e,i),type:this.safeString(this.options.orderTypes,t,t),ocoorder:!1,buy_price_oco:0,sell_price_oco:0};c.price="market"===t?this.nonce().toString():this.priceToPrecision(e,r),o&&(c.is_postonly=!0);const d=await this.privatePostOrderNew(this.extend(c,a));return this.parseOrder(d,n)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o={order_id:parseInt(e)};void 0!==a&&(o.price=this.priceToPrecision(t,a)),void 0!==r&&(o.amount=this.numberToString(r)),void 0!==t&&(o.symbol=this.marketId(t)),void 0!==i&&(o.side=i),void 0!==s&&(o.type=this.safeString(this.options.orderTypes,s,s));const c=await this.privatePostOrderCancelReplace(this.extend(o,n));return this.parseOrder(c)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)};return await this.privatePostOrderCancel(this.extend(i,s))}async cancelAllOrders(e,t={}){return await this.privatePostOrderCancelAll(t)}parseOrder(e,t){const s=this.safeString(e,"side"),i=this.safeValue(e,"is_live"),r=this.safeValue(e,"is_cancelled");let a;a=i?"open":r?"canceled":"closed";const n=this.safeStringUpper(e,"symbol"),o=this.safeSymbol(n,t);let c=this.safeString(e,"type","");if(c.indexOf("exchange ")>=0){c=e.type.split(" ")[1]}const d=this.safeTimestamp(e,"timestamp"),h=this.safeString(e,"id");return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:o,type:c,timeInForce:void 0,postOnly:void 0,side:s,price:this.safeString(e,"price"),stopPrice:void 0,average:this.safeString(e,"avg_execution_price"),amount:this.safeString(e,"original_amount"),remaining:this.safeString(e,"remaining_amount"),filled:this.safeString(e,"executed_amount"),status:a,fee:void 0,cost:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,s,i={}){if(await this.loadMarkets(),void 0!==e&&!(e in this.markets))throw new d(this.id+" has no symbol "+e);const r=await this.privatePostOrders(i);let a=this.parseOrders(r,void 0,t,s);return void 0!==e&&(a=this.filterBy(a,"symbol",e)),a}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.limit=s);const a=await this.privatePostOrdersHist(this.extend(r,i));let n=this.parseOrders(a,void 0,t,s);return void 0!==e&&(n=this.filterBy(n,"symbol",e)),n=this.filterByArray(n,"status",["closed","canceled"],!1),n}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)},r=await this.privatePostOrderStatus(this.extend(i,s));return this.parseOrder(r)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets(),void 0===i&&(i=100);const a=this.market(e),n={symbol:"t"+a.id,timeframe:this.timeframes[t],sort:1,limit:i};void 0!==s&&(n.start=s);const o=await this.v2GetCandlesTradeTimeframeSymbolHist(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new r(this.id+" "+e+" not supported for withdrawal")}async createDepositAddress(e,t={}){await this.loadMarkets();return await this.fetchDepositAddress(e,this.extend({renew:1},t))}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={method:this.getCurrencyName(e),wallet_name:"exchange",renew:0},i=await this.privatePostDepositNew(this.extend(s,t));let r,a=this.safeValue(i,"address");return"address_pool"in i&&(r=a,a=i.address_pool),this.checkAddress(a),{currency:e,address:a,tag:r,network:void 0,info:i}}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();let r=this.safeString(i,"currency");const a=this.omit(i,"currency");let n;if(void 0===r){if(void 0===e)throw new c(this.id+" fetchTransactions() requires a currency `code` argument or a `currency` parameter");n=this.currency(e),r=n.id}a.currency=r,void 0!==t&&(a.since=parseInt(t/1e3));const o=await this.privatePostHistoryMovements(this.extend(a,i));return this.parseTransactions(o,n,t,s)}parseTransaction(e,t){const s=this.safeTimestamp(e,"timestamp_created"),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.safeStringLower(e,"type"),o=this.parseTransactionStatus(this.safeString(e,"status"));let c=this.safeNumber(e,"fee");void 0!==c&&(c=Math.abs(c));const d=this.safeString(e,"description");return{info:e,id:this.safeString2(e,"id","withdrawal_id"),txid:this.safeString(e,"txid"),timestamp:s,datetime:this.iso8601(s),network:void 0,address:this.safeString(e,"address"),addressTo:void 0,addressFrom:void 0,tag:d,tagTo:void 0,tagFrom:void 0,type:n,amount:this.safeNumber(e,"amount"),currency:a,status:o,updated:i,fee:{currency:a,cost:c,rate:void 0}}}parseTransactionStatus(e){return this.safeString({SENDING:"pending",CANCELED:"canceled",ZEROCONFIRMED:"failed",COMPLETED:"ok"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.getCurrencyName(e),n=this.currency(e),o={withdraw_type:a,walletselected:"exchange",amount:this.numberToString(t),address:s};void 0!==i&&(o.payment_id=i);const c=await this.privatePostWithdraw(this.extend(o,r)),h=this.safeValue(c,0,{}),l=this.safeNumber(h,"withdrawal_id"),u=this.safeString(h,"message"),f=this.findBroadlyMatchedKey(this.exceptions.broad,u);if(0===l){if(void 0!==f){throw new(0,this.exceptions.broad[f])(this.id+" "+u)}throw new d(this.id+" withdraw returned an id of zero: "+this.json(h))}return this.parseTransaction(h,n)}async fetchPositions(e,t={}){await this.loadMarkets();return await this.privatePostPositions(t)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);n="v2"===t?"/"+t+n:"/"+this.version+n;let o=this.omit(i,this.extractParams(e)),c=this.urls.api[t]+n;if(("public"===t||e.indexOf("/hist")>=0)&&Object.keys(o).length){const e="?"+this.urlencode(o);c+=e,n+=e}if("private"===t){this.checkRequiredCredentials();const e=this.nonce();o=this.extend({nonce:e.toString(),request:n},o),a=this.json(o);const t=this.stringToBase64(a),s=this.encode(this.secret),i=this.hmac(t,s,"sha384");r={"X-BFX-APIKEY":this.apiKey,"X-BFX-PAYLOAD":this.decode(t),"X-BFX-SIGNATURE":i,"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(void 0===n)return;let h=!1;if(e>=400){"{"===this.safeString(a,0)&&(h=!0)}else{const e=this.safeValue(n,0,{});"error"===this.safeString(e,"status","")&&(h=!0)}if(h){const e=this.id+" "+a,t=this.safeString2(n,"message","error");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new d(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],154:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InvalidAddress:a,ArgumentsRequired:n,InsufficientFunds:o,AuthenticationError:c,OrderNotFound:d,InvalidOrder:h,BadRequest:l,InvalidNonce:u,BadSymbol:f,OnMaintenance:p,NotSupported:m,PermissionDenied:g,ExchangeNotAvailable:y}=e("./base/errors"),b=e("./base/Precise"),{SIGNIFICANT_DIGITS:v,DECIMAL_PLACES:w,TRUNCATE:S,ROUND:k}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitfinex2",name:"Bitfinex",countries:["VG"],version:"v2",certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:void 0,fetchBalance:!0,fetchClosedOrder:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchStatus:!0,fetchTickers:!0,fetchTime:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:void 0,fetchTransactions:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},rateLimit:250,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:{v1:"https://api.bitfinex.com",public:"https://api-pub.bitfinex.com",private:"https://api.bitfinex.com"},www:"https://www.bitfinex.com",doc:["https://docs.bitfinex.com/v2/docs/","https://github.com/bitfinexcom/bitfinex-api-node"],fees:"https://www.bitfinex.com/fees"},api:{public:{get:{"conf/{config}":2.66,"conf/pub:{action}:{object}":2.66,"conf/pub:{action}:{object}:{detail}":2.66,"conf/pub:map:{object}":2.66,"conf/pub:map:{object}:{detail}":2.66,"conf/pub:map:currency:{detail}":2.66,"conf/pub:map:currency:sym":2.66,"conf/pub:map:currency:label":2.66,"conf/pub:map:currency:unit":2.66,"conf/pub:map:currency:undl":2.66,"conf/pub:map:currency:pool":2.66,"conf/pub:map:currency:explorer":2.66,"conf/pub:map:currency:tx:fee":2.66,"conf/pub:map:tx:method":2.66,"conf/pub:list:{object}":2.66,"conf/pub:list:{object}:{detail}":2.66,"conf/pub:list:currency":2.66,"conf/pub:list:pair:exchange":2.66,"conf/pub:list:pair:margin":2.66,"conf/pub:list:pair:futures":2.66,"conf/pub:list:competitions":2.66,"conf/pub:info:{object}":2.66,"conf/pub:info:{object}:{detail}":2.66,"conf/pub:info:pair":2.66,"conf/pub:info:pair:futures":2.66,"conf/pub:info:tx:status":2.66,"conf/pub:fees":2.66,"platform/status":8,tickers:2.66,"ticker/{symbol}":2.66,"tickers/hist":2.66,"trades/{symbol}/hist":2.66,"book/{symbol}/{precision}":1,"book/{symbol}/P0":1,"book/{symbol}/P1":1,"book/{symbol}/P2":1,"book/{symbol}/P3":1,"book/{symbol}/R0":1,"stats1/{key}:{size}:{symbol}:{side}/{section}":2.66,"stats1/{key}:{size}:{symbol}:{side}/last":2.66,"stats1/{key}:{size}:{symbol}:{side}/hist":2.66,"stats1/{key}:{size}:{symbol}/{section}":2.66,"stats1/{key}:{size}:{symbol}/last":2.66,"stats1/{key}:{size}:{symbol}/hist":2.66,"stats1/{key}:{size}:{symbol}:long/last":2.66,"stats1/{key}:{size}:{symbol}:long/hist":2.66,"stats1/{key}:{size}:{symbol}:short/last":2.66,"stats1/{key}:{size}:{symbol}:short/hist":2.66,"candles/trade:{timeframe}:{symbol}:{period}/{section}":2.66,"candles/trade:{timeframe}:{symbol}/{section}":2.66,"candles/trade:{timeframe}:{symbol}/last":2.66,"candles/trade:{timeframe}:{symbol}/hist":2.66,"status/{type}":2.66,"status/deriv":2.66,"liquidations/hist":80,"rankings/{key}:{timeframe}:{symbol}/{section}":2.66,"rankings/{key}:{timeframe}:{symbol}/hist":2.66,"pulse/hist":2.66,"pulse/profile/{nickname}":2.66,"funding/stats/{symbol}/hist":10},post:{"calc/trade/avg":2.66,"calc/fx":2.66}},private:{post:{"auth/r/wallets":2.66,"auth/r/wallets/hist":2.66,"auth/r/orders":2.66,"auth/r/orders/{symbol}":2.66,"auth/w/order/submit":2.66,"auth/w/order/update":2.66,"auth/w/order/cancel":2.66,"auth/w/order/multi":2.66,"auth/w/order/cancel/multi":2.66,"auth/r/orders/{symbol}/hist":2.66,"auth/r/orders/hist":2.66,"auth/r/order/{symbol}:{id}/trades":2.66,"auth/r/trades/{symbol}/hist":2.66,"auth/r/trades/hist":2.66,"auth/r/ledgers/{currency}/hist":2.66,"auth/r/ledgers/hist":2.66,"auth/r/info/margin/{key}":2.66,"auth/r/info/margin/base":2.66,"auth/r/info/margin/sym_all":2.66,"auth/r/positions":2.66,"auth/w/position/claim":2.66,"auth/w/position/increase:":2.66,"auth/r/position/increase/info":2.66,"auth/r/positions/hist":2.66,"auth/r/positions/audit":2.66,"auth/r/positions/snap":2.66,"auth/w/deriv/collateral/set":2.66,"auth/w/deriv/collateral/limits":2.66,"auth/r/funding/offers":2.66,"auth/r/funding/offers/{symbol}":2.66,"auth/w/funding/offer/submit":2.66,"auth/w/funding/offer/cancel":2.66,"auth/w/funding/offer/cancel/all":2.66,"auth/w/funding/close":2.66,"auth/w/funding/auto":2.66,"auth/w/funding/keep":2.66,"auth/r/funding/offers/{symbol}/hist":2.66,"auth/r/funding/offers/hist":2.66,"auth/r/funding/loans":2.66,"auth/r/funding/loans/hist":2.66,"auth/r/funding/loans/{symbol}":2.66,"auth/r/funding/loans/{symbol}/hist":2.66,"auth/r/funding/credits":2.66,"auth/r/funding/credits/hist":2.66,"auth/r/funding/credits/{symbol}":2.66,"auth/r/funding/credits/{symbol}/hist":2.66,"auth/r/funding/trades/{symbol}/hist":2.66,"auth/r/funding/trades/hist":2.66,"auth/r/info/funding/{key}":2.66,"auth/r/info/user":2.66,"auth/r/summary":2.66,"auth/r/logins/hist":2.66,"auth/r/permissions":2.66,"auth/w/token":2.66,"auth/r/audit/hist":2.66,"auth/w/transfer":2.66,"auth/w/deposit/address":24,"auth/w/deposit/invoice":24,"auth/w/withdraw":24,"auth/r/movements/{currency}/hist":2.66,"auth/r/movements/hist":2.66,"auth/r/alerts":5.33,"auth/w/alert/set":2.66,"auth/w/alert/price:{symbol}:{price}/del":2.66,"auth/w/alert/{type}:{symbol}:{price}/del":2.66,"auth/calc/order/avail":2.66,"auth/w/settings/set":2.66,"auth/r/settings":2.66,"auth/w/settings/del":2.66,"auth/r/pulse/hist":2.66,"auth/w/pulse/add":16,"auth/w/pulse/del":2.66}}},fees:{trading:{feeSide:"get",percentage:!0,tierBased:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.002")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("7500000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("20000000"),this.parseNumber("0.0014")],[this.parseNumber("25000000"),this.parseNumber("0.0012")],[this.parseNumber("30000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("7500000"),this.parseNumber("0")],[this.parseNumber("10000000"),this.parseNumber("0")],[this.parseNumber("15000000"),this.parseNumber("0")],[this.parseNumber("20000000"),this.parseNumber("0")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("30000000"),this.parseNumber("0")]]}},funding:{withdraw:{}}},precisionMode:v,options:{precision:"R0",exchangeTypes:{"EXCHANGE MARKET":"market","EXCHANGE LIMIT":"limit","EXCHANGE STOP":"market","EXCHANGE FOK":"limit","EXCHANGE STOP LIMIT":"limit","EXCHANGE IOC":"limit"},orderTypes:{market:"EXCHANGE MARKET",limit:"EXCHANGE LIMIT"},fiat:{USD:"USD",EUR:"EUR",JPY:"JPY",GBP:"GBP",CHN:"CHN"},v2AccountsByType:{spot:"exchange",exchange:"exchange",funding:"funding",margin:"margin",derivatives:"margin",future:"margin"}},exceptions:{exact:{10001:g,10020:l,10100:c,10114:u,20060:p,temporarily_unavailable:y},broad:{address:a,"available balance is only":o,"not enough exchange balance":o,"Order not found":d,"symbol: invalid":f,"Invalid order":h}},commonCurrencies:{UST:"USDT",EUTF0:"EURT",USTF0:"USDT",ALG:"ALGO",AMP:"AMPL",ATO:"ATOM",BCHABC:"XEC",BCHN:"BCH",DAT:"DATA",DOG:"MDOGE",DSH:"DASH",EDO:"PNT",EUS:"EURS",EUT:"EURT",IDX:"ID",IOT:"IOTA",IQX:"IQ",LUNA:"LUNC",LUNA2:"LUNA",MNA:"MANA",ORS:"ORS Group",PAS:"PASS",QSH:"QASH",QTM:"QTUM",RBT:"RBTC",SNG:"SNGLS",STJ:"STORJ",TERRAUST:"USTC",TSD:"TUSD",YGG:"YEED",YYW:"YOYOW",UDC:"USDC",VSY:"VSYS",WAX:"WAXP",XCH:"XCHF",ZBT:"ZB"}})}isFiat(e){return e in this.options.fiat}getCurrencyId(e){return"f"+e}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new m(this.id+" "+e+" not supported for withdrawal")}amountToPrecision(e,t){return this.decimalToPrecision(t,S,this.markets[e].precision.amount,w)}priceToPrecision(e,t){return t=this.decimalToPrecision(t,k,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,S,8,w)}async fetchStatus(e={}){const t=await this.publicGetPlatformStatus(e),s=this.safeString(t,0);return{status:this.safeString({0:"maintenance",1:"ok"},s,s),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t=await this.publicGetConfPubInfoPair(e),s=await this.publicGetConfPubInfoPairFutures(e);t=this.safeValue(t,0,[]),s=this.safeValue(s,0,[]);const i=this.arrayConcat(t,s);let r=await this.publicGetConfPubListPairMargin(e);r=this.safeValue(r,0,[]);const a=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeStringUpper(t,0),n=this.safeValue(t,1,{});let o=!0;s.indexOf("F0")>=0&&(o=!1);const c=!o;let d,h;if(s.indexOf(":")>=0){const e=s.split(":");d=e[0],h=e[1]}else d=s.slice(0,3),h=s.slice(3,6);let l=this.safeCurrencyCode(d),u=this.safeCurrencyCode(h);const f=l.split("F0"),p=u.split("F0");l=this.safeString(f,0),u=this.safeString(p,0);let m,g=l+"/"+u;d=this.getCurrencyId(d),h=this.getCurrencyId(h),c&&(m=u,g=g+":"+m);const y=this.safeString(n,3),b=this.safeString(n,4);let v=!1;this.inArray(s,r)&&(v=!0),a.push({id:"t"+s,symbol:g,base:l,quote:u,settle:m,baseId:d,quoteId:h,settleId:h,type:o?"spot":"swap",spot:o,margin:v,swap:c,future:!1,option:!1,active:!0,contract:c,linear:!!c||void 0,inverse:!c&&void 0,contractSize:c?this.parseNumber("1"):void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("8"),price:parseInt("5")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(y),max:this.parseNumber(b)},price:{min:this.parseNumber("1e-8"),max:void 0},cost:{min:void 0,max:void 0}},info:n})}return a}async fetchCurrencies(e={}){const t={config:["pub:list:currency","pub:map:currency:sym","pub:map:currency:label","pub:map:currency:unit","pub:map:currency:undl","pub:map:currency:pool","pub:map:currency:explorer","pub:map:currency:tx:fee","pub:map:tx:method"].join(",")},s=await this.publicGetConfConfig(this.extend(t,e)),i={sym:this.indexBy(this.safeValue(s,1,[]),0),label:this.indexBy(this.safeValue(s,2,[]),0),unit:this.indexBy(this.safeValue(s,3,[]),0),undl:this.indexBy(this.safeValue(s,4,[]),0),pool:this.indexBy(this.safeValue(s,5,[]),0),explorer:this.indexBy(this.safeValue(s,6,[]),0),fees:this.indexBy(this.safeValue(s,7,[]),0)},r=this.safeValue(s,0,[]),a={};for(let e=0;e<r.length;e++){const t=r[e];if(t.indexOf("F0")>=0)continue;const n=this.safeCurrencyCode(t),o=this.safeValue(i.label,t,[]),c=this.safeString(o,1),d=this.safeValue(i.pool,t,[]),h=this.safeString(d,1),l=this.safeValue(i.fees,t,[]),u=this.safeValue(l,1,[]),f=this.safeNumber(u,1),p=this.safeValue(i.undl,t,[]),m=8,g="f"+t;a[n]={id:g,uppercaseId:t,code:n,info:[t,o,d,l,p],type:h,name:c,active:!0,deposit:void 0,withdraw:void 0,fee:f,precision:m,limits:{amount:{min:1/Math.pow(10,m),max:void 0},withdraw:{min:f,max:void 0}}};const y={},b=this.safeValue(s,8,[]),v=t.replace("F0","");for(let e=0;e<b.length;e++){const t=b[e],s=this.safeString(t,0);if(this.safeString(this.safeValue(t,1,[]),0)===v){y[this.safeNetwork(s)]={info:s,id:s.toLowerCase(),network:s,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{withdraw:{min:void 0,max:void 0}}}}}Object.keys(y).length>0&&(a[n].networks=y)}return a}safeNetwork(e){return this.safeString({BITCOIN:"BTC",LITECOIN:"LTC",ETHEREUM:"ERC20",TETHERUSE:"ERC20",TETHERUSO:"OMNI",TETHERUSL:"LIQUID",TETHERUSX:"TRC20",TETHERUSS:"EOS",TETHERUSDTAVAX:"AVAX",TETHERUSDTSOL:"SOL",TETHERUSDTALG:"ALGO",TETHERUSDTBCH:"BCH",TETHERUSDTKSM:"KSM",TETHERUSDTDVF:"DVF",TETHERUSDTOMG:"OMG"},e,e)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeValue(this.options,"v2AccountsByType",{}),s=this.safeString(e,"type","exchange"),i=this.safeString(t,s,s);if(void 0===i){const e=Object.keys(t);throw new r(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}const a="derivatives"===s,n=this.omit(e,"type"),o=await this.privatePostAuthRWallets(n),c={info:o};for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,0),r=this.safeStringLower(t,1,""),n=r.length-2,d="f0"===r.slice(n);if(i===s&&(!a||d)){const e=this.safeCurrencyCode(r),s=this.account();s.total=this.safeString(t,2),s.free=this.safeString(t,4),c[e]=s}}return this.safeBalance(c)}async transfer(e,t,s,i,a={}){await this.loadMarkets();const o=this.safeValue(this.options,"v2AccountsByType",{}),c=this.safeString(o,s);if(void 0===c){const e=Object.keys(o);throw new n(this.id+" transfer() fromAccount must be one of "+e.join(", "))}const d=this.safeString(o,i);if(void 0===d){const e=Object.keys(o);throw new n(this.id+" transfer() toAccount must be one of "+e.join(", "))}const h=this.currency(e),l=this.convertDerivativesId(h,s),u=this.convertDerivativesId(h,i),f={amount:this.currencyToPrecision(e,t),currency:l,currency_to:u,from:c,to:d},p=await this.privatePostAuthWTransfer(this.extend(f,a));if("error"===this.safeString(p,0)){const e=this.safeString(p,2,"");throw this.throwExactlyMatchedException(this.exceptions.exact,e,this.id+" "+e),new r(this.id+" "+e)}return this.parseTransfer(p,h)}parseTransfer(e,t){const s=this.safeInteger(e,0),i=this.safeValue(e,4),r=this.safeString(i,1),a=this.safeString(i,2),n=this.safeString(i,5),o=this.safeString(e,6);return{id:void 0,timestamp:s,datetime:this.iso8601(s),status:this.parseTransferStatus(o),amount:this.safeNumber(e,7),currency:this.safeCurrencyCode(n,t),fromAccount:r,toAccount:a,info:e}}parseTransferStatus(e){return this.safeString({SUCCESS:"ok",ERROR:"failed",FAILURE:"failed"},e,e)}convertDerivativesId(e,t){const s=this.safeValue(e,"info"),i=this.safeString(s,0),r=this.safeValue(s,4,[]);let a;if("derivatives"===t){a=this.safeString(r,0,i);const e=a.length-2;"F0"===a.slice(e)||(a+="F0")}else a="margin"!==t?this.safeString(r,1,i):i;return a}async fetchOrder(e,t,s={}){throw new m(this.id+" fetchOrder() is not supported yet. Consider using fetchOpenOrder() or fetchClosedOrder() instead.")}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.safeValue(this.options,"precision","R0"),r=this.market(e),a={symbol:r.id,precision:i};void 0!==t&&(a.len=t);const n=this.extend(a,s),o=await this.publicGetBookSymbolPrecision(n),c=this.milliseconds(),d={symbol:r.symbol,bids:[],asks:[],timestamp:c,datetime:this.iso8601(c),nonce:void 0},h="R0"===n.precision?1:0;for(let e=0;e<o.length;e++){const t=o[e],s=this.safeNumber(t,h),i=this.safeNumber(t,2),r=Math.abs(i);d[i>0?"bids":"asks"].push([s,r])}return d.bids=this.sortBy(d.bids,0,!0),d.asks=this.sortBy(d.asks,0),d}parseTicker(e,t){const s=this.milliseconds(),i=this.safeSymbol(void 0,t),r=e.length,a=this.safeString(e,r-4),n=this.safeString(e,r-5);return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,r-2),low:this.safeString(e,r-1),bid:this.safeString(e,r-10),bidVolume:void 0,ask:this.safeString(e,r-8),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:this.safeString(e,r-6),percentage:b.stringMul(n,"100"),average:void 0,baseVolume:this.safeString(e,r-3),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.symbols=t.join(",")}else s.symbols="ALL";const i=await this.publicGetTickers(this.extend(s,t)),r={};for(let e=0;e<i.length;e++){const t=i[e],s=t[0];if(s in this.markets_by_id){const e=this.markets_by_id[s];r[e.symbol]=this.parseTicker(t,e)}}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTickerSymbol(this.extend(i,t));return this.parseTicker(r,s)}parseSymbol(e){if(void 0===e)return e;let t,s;if((e=e.replace("t","")).indexOf(":")>=0){const i=e.split(":");t=i[0],s=i[1]}else t=e.slice(0,3),s=e.slice(3,6);return this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(s)}parseTrade(e,t){const s=e.length>5,i=this.safeString(e,0),r=s?4:2;let a,n=this.safeString(e,r);const o=s?5:3,c=this.safeString(e,o);let d,h,l,u,f;"-"===n[0]?(a="sell",n=b.stringAbs(n)):a="buy";const p=s?2:1,m=this.safeInteger(e,p);if(s){const s=e[1];f=s in this.markets_by_id?(t=this.markets_by_id[s]).symbol:this.parseSymbol(s),d=this.safeString(e,3);h=1===this.safeInteger(e,8)?"maker":"taker";let i=this.safeString(e,9);i=b.stringNeg(i);const r=this.safeString(e,10);u={cost:i,currency:this.safeCurrencyCode(r)};const a=e[6];l=this.safeString(this.options.exchangeTypes,a)}return void 0===f&&void 0!==t&&(f=t.symbol),this.safeTrade({id:i,timestamp:m,datetime:this.iso8601(m),symbol:f,order:d,side:a,type:l,takerOrMaker:h,price:c,amount:n,cost:void 0,fee:u,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);let a="-1";const n={symbol:r.id};void 0!==t&&(n.start=t,a="1"),void 0!==s&&(n.limit=s),n.sort=a;const o=await this.publicGetTradesSymbolHist(this.extend(n,i)),c=this.sortBy(o,1);return this.parseTrades(c,r,void 0,s)}async fetchOHLCV(e,t="1m",s,i=100,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===i&&(i=100),void 0===s){const e=this.parseTimeframe(t);s=this.milliseconds()-e*i*1e3}const n={symbol:a.id,timeframe:this.timeframes[t],sort:1,start:s,limit:i},o=await this.publicGetCandlesTradeTimeframeSymbolHist(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}parseOrderStatus(e){if(void 0===e)return e;const t=e.split(" "),s=this.safeString(t,0);return this.safeString({ACTIVE:"open",PARTIALLY:"open",EXECUTED:"closed",CANCELED:"canceled",INSUFFICIENT:"canceled","POSTONLY CANCELED":"canceled",RSN_DUST:"rejected",RSN_PAUSE:"rejected","IOC CANCELED":"canceled","FILLORKILL CANCELED":"canceled"},s,e)}parseOrderFlags(e){return this.safeValue({1024:["reduceOnly"],4096:["postOnly"],5120:["reduceOnly","postOnly"]},e,void 0)}parseTimeInForce(e){return this.safeString({"EXCHANGE IOC":"IOC","EXCHANGE FOK":"FOK",IOC:"IOC",FOK:"FOK"},e,"GTC")}parseOrder(e,t){const s=this.safeString(e,0);let i;const r=this.safeString(e,3);r in this.markets_by_id?t=this.markets_by_id[r]:i=this.parseSymbol(r),void 0===i&&void 0!==t&&(i=t.symbol);const a=this.safeInteger(e,5),n=b.stringAbs(this.safeString(e,6)),o=this.safeString(e,7),c=b.stringAbs(o),d=b.stringLt(o,"0")?"sell":"buy",h=this.safeString(e,8),l=this.safeString(this.safeValue(this.options,"exchangeTypes"),h),u=this.parseTimeInForce(h),f=this.safeString(e,12),p=this.parseOrderFlags(f);let m=!1;if(void 0!==p)for(let e=0;e<p.length;e++)"postOnly"===p[e]&&(m=!0);let g,y,v=this.safeString(e,16);"EXCHANGE STOP"!==h&&"EXCHANGE STOP LIMIT"!==h||(v=void 0,g=this.safeNumber(e,16),"EXCHANGE STOP LIMIT"===h&&(v=this.safeNumber(e,19)));const w=this.safeString(e,13);if(void 0!==w){const e=w.split(" @ ");y=this.parseOrderStatus(this.safeString(e,0))}const S=this.safeString(e,17),k=this.safeString(e,2);return this.safeOrder({info:e,id:s,clientOrderId:k,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:i,type:l,timeInForce:u,postOnly:m,side:d,price:v,stopPrice:g,amount:c,cost:void 0,average:S,filled:void 0,remaining:n,status:y,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.market(e),c=this.safeValue(this.options,"orderTypes",{}),d=this.safeStringUpper(c,t,t),l=this.safeString2(n,"stopPrice","triggerPrice"),u=this.safeString(n,"timeInForce"),f=this.safeValue(n,"postOnly",!1),p=this.safeValue(n,"reduceOnly",!1),m=this.safeValue2(n,"cid","clientOrderId");n=this.omit(n,["triggerPrice","stopPrice","timeInForce","postOnly","reduceOnly","price_aux_limit"]);let g=this.amountToPrecision(e,i);g="buy"===s?g:b.stringNeg(i);const y={type:d,symbol:o.id,amount:g},v="EXCHANGE STOP LIMIT"===d||"EXCHANGE LIMIT"===d&&void 0!==l,w="EXCHANGE STOP"===d,S="EXCHANGE MARKET"===d,k=w||S&&void 0!==l,T="EXCHANGE IOC"===d||"IOC"===u,O="EXCHANGE FOK"===d||"FOK"===u,_=f||"PO"===u;if((T||O)&&void 0===a)throw new h(this.id+" createOrder() requires a price argument with IOC and FOK orders");if((T||O)&&S)throw new h(this.id+" createOrder() does not allow market IOC and FOK orders");"MARKET"===d||S||w||(y.price=this.priceToPrecision(e,a)),(v||k)&&(y.price=this.priceToPrecision(e,l),k?y.type="EXCHANGE STOP":v&&(y.type="EXCHANGE STOP LIMIT",y.price_aux_limit=this.priceToPrecision(e,a))),T?y.type="EXCHANGE IOC":O&&(y.type="EXCHANGE FOK");let x=0;_&&(x=this.sum(x,4096)),p&&(x=this.sum(x,1024)),0!==x&&(y.flags=x),void 0!==m&&(y.cid=m,n=this.omit(n,["cid","clientOrderId"]));const M=await this.privatePostAuthWOrderSubmit(this.extend(y,n));if("SUCCESS"!==this.safeString(M,6)){const e=M[5],t=M[7];throw new r(this.id+" "+M[6]+": "+t+" (#"+e+")")}const I=this.safeValue(M,4,[]),C=this.safeValue(I,0);return this.parseOrder(C,o)}async cancelAllOrders(e,t={}){const s=await this.privatePostAuthWOrderCancelMulti(this.extend({all:1},t)),i=this.safeValue(s,4,[]);return this.parseOrders(i)}async cancelOrder(e,t,s={}){const i=this.safeValue2(s,"cid","clientOrderId");let r;if(void 0!==i){const e=this.safeValue(s,"cidDate");if(void 0===e)throw new h(this.id+" canceling an order by clientOrderId ('cid') requires both 'cid' and 'cid_date' ('YYYY-MM-DD')");r={cid:i,cid_date:e},s=this.omit(s,["cid","clientOrderId"])}else r={id:parseInt(e)};const a=await this.privatePostAuthWOrderCancel(this.extend(r,s)),n=this.safeValue(a,4);return this.parseOrder(n)}async fetchOpenOrder(e,t,s={}){const i={id:[parseInt(e)]},r=await this.fetchOpenOrders(t,void 0,void 0,this.extend(i,s)),a=this.safeValue(r,0);if(void 0===a)throw new d(this.id+" order "+e+" not found");return a}async fetchClosedOrder(e,t,s={}){const i={id:[parseInt(e)]},r=await this.fetchClosedOrders(t,void 0,void 0,this.extend(i,s)),a=this.safeValue(r,0);if(void 0===a)throw new d(this.id+" order "+e+" not found");return a}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;return void 0===e?n=await this.privatePostAuthROrders(this.extend(r,i)):(a=this.market(e),r.symbol=a.id,n=await this.privatePostAuthROrdersSymbol(this.extend(r,i))),this.parseOrders(n,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;return void 0!==t&&(r.start=t),void 0!==s&&(r.limit=s),void 0===e?n=await this.privatePostAuthROrdersHist(this.extend(r,i)):(a=this.market(e),r.symbol=a.id,n=await this.privatePostAuthROrdersSymbolHist(this.extend(r,i))),this.parseOrders(n,a,t,s)}async fetchOrderTrades(e,t,s,i,r={}){if(void 0===t)throw new n(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(t),o={id:parseInt(e),symbol:a.id},c=await this.privatePostAuthROrderSymbolIdTrades(this.extend(o,r));return this.parseTrades(c,a,s,i)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={end:this.milliseconds()};void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);let n="privatePostAuthRTradesHist";void 0!==e&&(r=this.market(e),a.symbol=r.id,n="privatePostAuthRTradesSymbolHist");const o=await this[n](this.extend(a,i));return this.parseTrades(o,r,t,s)}async createDepositAddress(e,t={}){await this.loadMarkets();return await this.fetchDepositAddress(e,this.extend({op_renew:1},t))}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i=this.safeString(t,"network",e),r=this.safeValue(s,"networks",{}),a=this.safeValue(r,i),o=this.safeString(a,"id");if(void 0===o)throw new n(this.id+" fetchDepositAddress() could not find a network for '"+e+"'. You can specify it by providing the 'network' value inside params");const c=this.safeString(t,"wallet","exchange");t=this.omit(t,"network","wallet");const d={method:o,wallet:c,op_renew:0},h=await this.privatePostAuthWDepositAddress(this.extend(d,t)),l=this.safeValue(h,4,[]),u=this.safeString(l,5),f=void 0===u?this.safeString(l,4):u,p=void 0===u?void 0:this.safeString(l,4);return this.checkAddress(f),{currency:e,address:f,tag:p,network:void 0,info:h}}parseTransactionStatus(e){return this.safeString({SUCCESS:"ok",ERROR:"failed",FAILURE:"failed",CANCELED:"canceled",COMPLETED:"ok"},e,e)}parseTransaction(e,t){const s=e.length;let i,r,a,n,o,c,d,h,l,u,f;if(8===s){const s=this.safeValue(e,4,[]);i=this.safeInteger(e,0),void 0!==t&&(a=t.code),l=this.safeNumber(s,8),void 0!==l&&(l=-l),n=this.safeNumber(s,5),o=this.safeValue(s,0),c="ok",0===o&&(o=void 0,c="failed"),d=this.safeString(s,3),h="withdrawal"}else if(22===s){o=this.safeString(e,0);const s=this.safeString(e,1);a=this.safeCurrencyCode(s,t),i=this.safeInteger(e,5),r=this.safeInteger(e,6),c=this.parseTransactionStatus(this.safeString(e,9)),n=this.safeNumber(e,12),void 0!==n&&(h=n<0?"withdrawal":"deposit"),l=this.safeNumber(e,13),void 0!==l&&(l=-l),f=this.safeString(e,16),u=this.safeString(e,20)}return{info:e,id:o,txid:u,timestamp:i,datetime:this.iso8601(i),network:void 0,addressFrom:void 0,address:f,addressTo:f,tagFrom:void 0,tag:d,tagTo:d,type:h,amount:n,currency:a,status:c,updated:r,fee:{currency:a,cost:l,rate:void 0}}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostAuthRSummary(e),s={},i=this.safeValue(this.options,"fiat",{}),r=this.safeValue(t,4,[]),a=this.safeValue(r,0,[]),n=this.safeValue(r,1,[]),o=this.safeNumber(a,0),c=this.safeNumber(a,2),d=this.safeNumber(a,5),h=this.safeNumber(n,0),l=this.safeNumber(n,2),u=this.safeNumber(n,5);for(let e=0;e<this.symbols.length;e++){const r=this.symbols[e],a=this.market(r),n={info:t,symbol:r,percentage:!0,tierBased:!0};a.quote in i?(n.maker=c,n.taker=l):a.contract?(n.maker=d,n.taker=u):(n.maker=o,n.taker=h),s[r]=n}return s}async fetchTransactions(e,t,s,i={}){let r;await this.loadMarkets();const a={};let n="privatePostAuthRMovementsHist";void 0!==e&&(r=this.currency(e),a.currency=r.uppercaseId,n="privatePostAuthRMovementsCurrencyHist"),void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const o=await this[n](this.extend(a,i));return this.parseTransactions(o,r,t,s)}async withdraw(e,t,s,i,a={}){this.checkAddress(s),await this.loadMarkets();const o=this.currency(e),c=this.safeString(a,"network",e);a=this.omit(a,"network");const d=this.safeValue(o,"networks",{}),h=this.safeValue(d,c),l=this.safeString(h,"id");if(void 0===l)throw new n(this.id+" fetchDepositAddress() could not find a network for '"+e+"'. You can specify it by providing the 'network' value inside params");const u=this.safeString(a,"wallet","exchange");a=this.omit(a,"network","wallet");const f={method:l,wallet:u,amount:this.numberToString(t),address:s};void 0!==i&&(f.payment_id=i);const p=await this.privatePostAuthWWithdraw(this.extend(f,a));if("error"===this.safeString(p,0)){const e=this.id+" "+p,t=this.safeString(p,2,"");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new r(e)}const m=this.safeString(p,7);"success"!==m&&this.throwBroadlyMatchedException(this.exceptions.broad,m,m);const g=this.parseTransaction(p,o);return this.extend(g,{address:s})}async fetchPositions(e,t={}){await this.loadMarkets();return await this.privatePostAuthRPositions(t)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));n="v1"===t?t+n:this.version+n;let c=this.urls.api[t]+"/"+n;if("public"===t&&Object.keys(o).length&&(c+="?"+this.urlencode(o)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t="/api/"+n+e+(a=this.json(o)),s=this.hmac(this.encode(t),this.encode(this.secret),"sha384");r={"bfx-nonce":e,"bfx-apikey":this.apiKey,"bfx-signature":s,"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o){if(!Array.isArray(o)){const e=this.safeString2(o,"message","error"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r(this.id+" "+n)}}else if(""===o)throw new r(this.id+" returned empty response");if(500===e){const e=this.numberToString(o[1]),t=o[2],s=this.id+" "+t;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r(this.id+" "+t+" (#"+e+")")}return o}parseLedgerEntryType(e){return void 0===e?void 0:e.indexOf("fee")>=0||e.indexOf("charged")>=0?"fee":e.indexOf("exchange")>=0||e.indexOf("position")>=0?"trade":e.indexOf("rebate")>=0?"rebate":e.indexOf("deposit")>=0||e.indexOf("withdrawal")>=0?"transaction":e.indexOf("transfer")>=0?"transfer":e.indexOf("payment")>=0?"payout":e}parseLedgerEntry(e,t){let s;const i=this.safeString(e,0),r=this.safeString(e,1),a=this.safeCurrencyCode(r,t),n=this.safeInteger(e,3),o=this.safeNumber(e,5),c=this.safeNumber(e,6),d=this.safeString(e,8);if(void 0!==d){const e=d.split(" @ "),t=this.safeStringLower(e,0);s=this.parseLedgerEntryType(t)}return{id:i,direction:void 0,account:void 0,referenceId:i,referenceAccount:void 0,type:s,currency:a,amount:o,timestamp:n,datetime:this.iso8601(n),before:void 0,after:c,status:void 0,fee:void 0,info:e}}async fetchLedger(e,t,s,i={}){let r;await this.loadMarkets(),await this.loadMarkets();const a={};let n="privatePostAuthRLedgersHist";void 0!==e&&(r=this.currency(e),a.currency=r.uppercaseId,n="privatePostAuthRLedgersCurrencyHist"),void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const o=await this[n](this.extend(a,i));return this.parseLedger(o,r,t,s)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],155:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,OrderNotFound:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitflyer",name:"bitFlyer",countries:["JP"],version:"v1",rateLimit:1e3,hostname:"bitflyer.com",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:"emulated",fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:"emulated",fetchOrder:"emulated",fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPositions:!0,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg",api:"https://api.{hostname}",www:"https://bitflyer.com",doc:"https://lightning.bitflyer.com/docs?lang=en"},api:{public:{get:["getmarkets/usa","getmarkets/eu","getmarkets","getboard","getticker","getexecutions","gethealth","getboardstate","getchats"]},private:{get:["getpermissions","getbalance","getbalancehistory","getcollateral","getcollateralhistory","getcollateralaccounts","getaddresses","getcoinins","getcoinouts","getbankaccounts","getdeposits","getwithdrawals","getchildorders","getparentorders","getparentorder","getexecutions","getpositions","gettradingcommission"],post:["sendcoin","withdraw","sendchildorder","cancelchildorder","sendparentorder","cancelparentorder","cancelallchildorders"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:o})}parseExpiryDate(e){const t=e.slice(0,2),s=e.slice(2,5),i=e.slice(5,9),r=this.safeString({JAN:"01",FEB:"02",MAR:"03",APR:"04",MAY:"05",JUN:"06",JUL:"07",AUG:"08",SEP:"09",OCT:"10",NOV:"11",DEC:"12"},s);return this.parse8601(i+"-"+r+"-"+t+"T00:00:00Z")}async fetchMarkets(e={}){const t=await this.publicGetGetmarkets(e),s=await this.publicGetGetmarketsUsa(e),i=await this.publicGetGetmarketsEu(e);let r=this.arrayConcat(t,s);r=this.arrayConcat(r,i);const a=[];for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"product_code"),i=s.split("_"),n=this.safeString(t,"market_type"),o="FX"===n,c="Futures"===n,d=!o&&!c;let h,l,u,f,p="spot";if(d)l=this.safeString(i,0),u=this.safeString(i,1);else if(o)p="swap",l=this.safeString(i,1),u=this.safeString(i,2);else if(c){const e=this.safeString(t,"alias");if(void 0===e){l=s.slice(0,3),u=s.slice(3,6);const e=s.slice(-9);f=this.parseExpiryDate(e)}else{const t=e.split("_"),i=this.safeString(t,0);l=i.slice(0,-3),u=i.slice(-3);const r=s.split(i),a=this.safeString(r,1);f=this.parseExpiryDate(a)}p="future"}const m=this.safeCurrencyCode(l),g=this.safeCurrencyCode(u);let y=m+"/"+g,b=this.fees.trading.taker,v=this.fees.trading.maker;const w=o||c;w&&(v=0,b=0,h="JPY",y=y+":"+h,c&&(y=y+"-"+this.yymmdd(f))),a.push({id:s,symbol:y,base:m,quote:g,settle:h,baseId:l,quoteId:u,settleId:void 0,type:p,spot:d,margin:!1,swap:o,future:c,option:!1,active:!0,contract:w,linear:!d||void 0,inverse:!!d&&void 0,taker:b,maker:v,contractSize:void 0,expiry:f,expiryDatetime:this.iso8601(f),strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return a}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"amount"),n.free=this.safeString(i,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetGetbalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={product_code:i.id},a=await this.publicGetGetboard(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","price","size")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"ltp");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_by_product"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={product_code:s.id},r=await this.publicGetGetticker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){let s,i=this.safeStringLower(e,"side");if(void 0!==i&&i.length<1&&(i=void 0),void 0!==i){const t=i+"_child_order_acceptance_id";t in e&&(s=e[t])}void 0===s&&(s=this.safeString(e,"child_order_acceptance_id"));const r=this.parse8601(this.safeString(e,"exec_date")),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeString(e,"id");return t=this.safeMarket(void 0,t),this.safeTrade({id:o,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:s,type:void 0,side:i,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={product_code:r.id},n=await this.publicGetGetexecutions(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={product_code:s.id},r=await this.privateGetGettradingcommission(this.extend(i,t)),a=this.safeNumber(r,"commission_rate");return{info:r,symbol:s.symbol,maker:a,taker:a}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n={product_code:this.marketId(e),child_order_type:t.toUpperCase(),side:s.toUpperCase(),price:r,size:i},o=await this.privatePostSendchildorder(this.extend(n,a));return{info:o,id:this.safeString(o,"child_order_acceptance_id")}}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a `symbol` argument");await this.loadMarkets();const i={product_code:this.marketId(t),child_order_acceptance_id:e};return await this.privatePostCancelchildorder(this.extend(i,s))}parseOrderStatus(e){return this.safeString({ACTIVE:"open",COMPLETED:"closed",CANCELED:"canceled",EXPIRED:"canceled",REJECTED:"canceled"},e,e)}parseOrder(e,t){const s=this.parse8601(this.safeString(e,"child_order_date")),i=this.safeString(e,"price"),r=this.safeString(e,"size"),a=this.safeString(e,"executed_size"),n=this.safeString(e,"outstanding_size"),o=this.parseOrderStatus(this.safeString(e,"child_order_state")),c=this.safeStringLower(e,"child_order_type"),d=this.safeStringLower(e,"side"),h=this.safeString(e,"product_code"),l=this.safeSymbol(h,t);let u;const f=this.safeNumber(e,"total_commission");void 0!==f&&(u={cost:f,currency:void 0,rate:void 0});const p=this.safeString(e,"child_order_acceptance_id");return this.safeOrder({id:p,clientOrderId:void 0,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:o,symbol:l,type:c,timeInForce:void 0,postOnly:void 0,side:d,price:i,stopPrice:void 0,cost:void 0,amount:r,filled:a,remaining:n,fee:u,average:void 0,trades:void 0},t)}async fetchOrders(e,t,s=100,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),n={product_code:r.id,count:s},o=await this.privateGetGetchildorders(this.extend(n,i));let c=this.parseOrders(o,r,t,s);return void 0!==e&&(c=this.filterBy(c,"symbol",e)),c}async fetchOpenOrders(e,t,s=100,i={}){return await this.fetchOrders(e,t,s,this.extend({child_order_state:"ACTIVE"},i))}async fetchClosedOrders(e,t,s=100,i={}){return await this.fetchOrders(e,t,s,this.extend({child_order_state:"COMPLETED"},i))}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a `symbol` argument");const i=await this.fetchOrders(t),r=this.indexBy(i,"id");if(e in r)return r[e];throw new n(this.id+" No order found with id "+e)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),n={product_code:r.id};void 0!==s&&(n.count=s);const o=await this.privateGetGetexecutions(this.extend(n,i));return this.parseTrades(o,r,t,s)}async fetchPositions(e,t={}){if(void 0===e)throw new a(this.id+" fetchPositions() requires a `symbols` argument, exactly one symbol in an array");await this.loadMarkets();const s={product_code:this.marketIds(e)};return await this.privateGetpositions(this.extend(s,t))}async withdraw(e,t,s,i,a={}){if(this.checkAddress(s),await this.loadMarkets(),"JPY"!==e&&"USD"!==e&&"EUR"!==e)throw new r(this.id+" allows withdrawing JPY, USD, EUR only, "+e+" is not supported");const n=this.currency(e),o={currency_code:n.id,amount:t},c=await this.privatePostWithdraw(this.extend(o,a));return this.parseTransaction(c,n)}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e)),void 0!==s&&(a.count=s);const n=await this.privateGetGetcoinins(this.extend(a,i));return this.parseTransactions(n,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e)),void 0!==s&&(a.count=s);const n=await this.privateGetGetcoinouts(this.extend(a,i));return this.parseTransactions(n,r,t,s)}parseDepositStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseWithdrawalStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"id","message_id"),i=this.safeString(e,"address"),r=this.safeString(e,"currency_code"),a=this.safeCurrencyCode(r,t),n=this.parse8601(this.safeString(e,"event_date")),o=this.safeNumber(e,"amount"),c=this.safeString(e,"tx_hash"),d=this.safeString(e,"status");let h,l,u;if("fee"in e){h="withdrawal",l=this.parseWithdrawalStatus(d);u={currency:a,cost:this.safeNumber(e,"fee")+this.safeNumber(e,"additional_fee")}}else h="deposit",l=this.parseDepositStatus(d);return{info:e,id:s,txid:c,timestamp:n,datetime:this.iso8601(n),network:void 0,address:i,addressTo:i,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:o,currency:a,status:l,updated:void 0,internal:void 0,fee:u}}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/";"private"===t&&(n+="me/"),n+=e,"GET"===s&&Object.keys(i).length&&(n+="?"+this.urlencode(i));const o=this.implodeHostname(this.urls.api)+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t=[e,s,n].join("");Object.keys(i).length&&"GET"!==s&&(t+=a=this.json(i)),r={"ACCESS-KEY":this.apiKey,"ACCESS-TIMESTAMP":e,"ACCESS-SIGN":this.hmac(this.encode(t),this.encode(this.secret)),"Content-Type":"application/json"}}return{url:o,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],156:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,OrderNotFound:n,InsufficientFunds:o,DDoSProtection:c,PermissionDenied:d,BadSymbol:h,InvalidOrder:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitforex",name:"Bitforex",countries:["CN"],rateLimit:500,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:!1,option:!1,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:void 0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","12h":"12hour","1d":"1day","1w":"1week","1M":"1month"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295553-1160ec00-c50e-11ea-8ea0-df79276a9646.jpg",api:"https://api.bitforex.com",www:"https://www.bitforex.com",doc:"https://github.com/githubdev2020/API_Doc_en/wiki",fees:"https://help.bitforex.com/en_us/?cat=13",referral:"https://www.bitforex.com/en/invitationRegister?inviterId=1867438"},api:{public:{get:{"api/v1/market/symbols":20,"api/v1/market/ticker":4,"api/v1/market/ticker-all":4,"api/v1/market/depth":4,"api/v1/market/depth-all":4,"api/v1/market/trades":20,"api/v1/market/kline":20}},private:{post:{"api/v1/fund/mainAccount":1,"api/v1/fund/allAccount":30,"api/v1/trade/placeOrder":1,"api/v1/trade/placeMultiOrder":10,"api/v1/trade/cancelOrder":1,"api/v1/trade/cancelMultiOrder":20,"api/v1/trade/cancelAllOrder":20,"api/v1/trade/orderInfo":1,"api/v1/trade/multiOrderInfo":10,"api/v1/trade/orderInfos":20}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{tierBased:!1,percentage:!0,deposit:{},withdraw:{}}},commonCurrencies:{BKC:"Bank Coin",CAPP:"Crypto Application Token",CREDIT:"TerraCredit",CTC:"Culture Ticket Chain",EWT:"EcoWatt Token",IQ:"IQ.Cash",MIR:"MIR COIN",NOIA:"METANOIA",TON:"To The Moon"},precisionMode:u,exceptions:{1e3:n,1003:h,1013:a,1016:a,1017:d,1019:h,3002:o,4002:l,4003:l,4004:n,10204:c}})}async fetchMarkets(e={}){const t=(await this.publicGetApiV1MarketSymbols(e)).data,s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=r.split("-"),n=a[2],o=a[1],c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);s.push({id:r,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDateTime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"amountPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(i,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"minOrderAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}parseTrade(e,t){t=this.safeMarket(void 0,t);const s=this.safeInteger(e,"time"),i=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeInteger(e,"direction"),o=this.parseSide(n);return this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:o,price:r,amount:a,cost:void 0,order:undefined,fee:void 0,takerOrMaker:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r={symbol:this.marketId(e)};void 0!==s&&(r.size=s);const a=this.market(e),n=await this.publicGetApiV1MarketTrades(this.extend(r,i));return this.parseTrades(n.data,a,t,s)}parseBalance(e){const t=e.data,s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(i,"frozen"),n.free=this.safeString(i,"active"),n.total=this.safeString(i,"fix"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostApiV1FundAllAccount(e);return this.parseBalance(t)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeInteger(e,"date");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"last"),last:this.safeString(e,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.markets[e],i={symbol:s.id},r=await this.publicGetApiV1MarketTickerAll(this.extend(i,t)),a=this.safeValue(r,"data");return this.parseTicker(a,s)}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"vol")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,ktype:this.timeframes[t]};void 0!==i&&(n.size=i);const o=await this.publicGetApiV1MarketKline(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.size=t);const a=await this.publicGetApiV1MarketDepthAll(this.extend(r,s)),n=this.safeValue(a,"data"),o=this.safeInteger(a,"time");return this.parseOrderBook(n,i.symbol,o,"bids","asks","price","amount")}parseOrderStatus(e){const t={0:"open",1:"open",2:"closed",3:"canceled",4:"canceled"};return e in t?t[e]:e}parseSide(e){return 1===e?"buy":2===e?"sell":void 0}parseOrder(e,t){const s=this.safeString(e,"orderId"),i=this.safeNumber(e,"createTime"),r=this.safeNumber(e,"lastTime"),a=t.symbol,n=this.safeInteger(e,"tradeType"),o=this.parseSide(n),c=this.safeString(e,"orderPrice"),d=this.safeString(e,"avgPrice"),h=this.safeString(e,"orderAmount"),l=this.safeString(e,"dealAmount"),u=this.parseOrderStatus(this.safeString(e,"orderState")),f=t["buy"===o?"base":"quote"],p={cost:this.safeNumber(e,"tradeFee"),currency:f};return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:r,symbol:a,type:undefined,timeInForce:void 0,postOnly:void 0,side:o,price:c,stopPrice:void 0,cost:void 0,average:d,amount:h,filled:l,remaining:void 0,status:u,fee:p,trades:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.market(t),r={symbol:this.marketId(t),orderId:e},a=await this.privatePostApiV1TradeOrderInfo(this.extend(r,s));return this.parseOrder(a.data,i)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:this.marketId(e),state:0},n=await this.privatePostApiV1TradeOrderInfos(this.extend(a,i));return this.parseOrders(n.data,r,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:this.marketId(e),state:1},n=await this.privatePostApiV1TradeOrderInfos(this.extend(a,i));return this.parseOrders(n.data,r,t,s)}async createOrder(e,t,s,i,r,a={}){let n;await this.loadMarkets(),"buy"===s?n=1:"sell"===s&&(n=2);const o={symbol:this.market(e).id,price:r,amount:i,tradeType:n},c=await this.privatePostApiV1TradePlaceOrder(this.extend(o,a)),d=c.data;return{info:c,id:this.safeString(d,"orderId")}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e};void 0!==t&&(i.symbol=this.marketId(t));const r=await this.privatePostApiV1TradeCancelOrder(this.extend(i,s));return{info:r,success:r.success}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();let t=this.urlencode({accessKey:this.apiKey});o.nonce=this.milliseconds(),Object.keys(o).length&&(t+="&"+this.urlencode(this.keysort(o)));const s="/"+e+"?"+t;a=t+"&signData="+this.hmac(this.encode(s),this.encode(this.secret)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if("string"==typeof n&&("{"===n[0]||"["===n[0])){const e=this.id+" "+n,t=this.safeValue(o,"success");if(void 0!==t&&!t){const t=this.safeString(o,"code");throw this.throwExactlyMatchedException(this.exceptions,t,e),new r(e)}}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],157:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,OnMaintenance:n,ArgumentsRequired:o,BadRequest:c,AccountSuspended:d,InvalidAddress:h,PermissionDenied:l,DDoSProtection:u,InsufficientFunds:f,InvalidNonce:p,CancelPending:m,InvalidOrder:g,OrderNotFound:y,AuthenticationError:b,RequestTimeout:v,BadSymbol:w,RateLimitExceeded:S}=e("./base/errors"),{TICK_SIZE:k}=e("./base/functions/number"),T=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitget",name:"Bitget",countries:["SG"],version:"v1",rateLimit:50,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:void 0,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:void 0,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{spot:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1h","4h":"4h","12h":"12h","1d":"1day","1w":"7day"},swap:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","12h":"43200","1d":"86400","1w":"604800"}},hostname:"bitget.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/88317935-a8a21c80-cd22-11ea-8e2b-4b9fac5975eb.jpg",api:{spot:"https://api.{hostname}",mix:"https://api.{hostname}"},www:"https://www.bitget.com",doc:["https://bitgetlimited.github.io/apidoc/en/mix","https://bitgetlimited.github.io/apidoc/en/spot","https://bitgetlimited.github.io/apidoc/en/broker"],fees:"https://www.bitget.cc/zh-CN/rate?tab=1",test:{rest:"https://testnet.bitget.com"},referral:"https://www.bitget.com/expressly?languageType=0&channelCode=ccxt&vipCode=tg9j"},api:{public:{spot:{get:{"public/time":1,"public/currencies":1,"public/products":1,"public/product":1,"market/ticker":1,"market/tickers":1,"market/fills":1,"market/candles":1,"market/depth":1}},mix:{get:{"market/contracts":1,"market/depth":1,"market/ticker":1,"market/tickers":1,"market/fills":1,"market/candles":1,"market/index":1,"market/funding-time":1,"market/history-fundRate":1,"market/current-fundRate":1,"market/open-interest":1,"market/mark-price":1,"market/symbol-leverage":1}}},private:{spot:{get:{"account/assets":2,"account/transferRecords":1},post:{"account/bills":2,"trade/orders":2,"trade/batch-orders":4,"trade/cancel-order":2,"trade/cancel-batch-orders":4,"trade/orderInfo":1,"trade/open-orders":1,"trade/history":1,"trade/fills":1}},mix:{get:{"account/account":2,"account/accounts":2,"account/open-count":1,"order/current":2,"order/history":2,"order/detail":2,"order/fills":2,"plan/currentPlan":2,"plan/historyPlan":2,"position/singlePosition":2,"position/allPosition":2,"trace/currentTrack":2,"trace/followerOrder":2,"trace/historyTrack":2,"trace/summary":2,"trace/profitSettleTokenIdGroup":2,"trace/profitDateGroupList":2,"trade/profitDateList":2,"trace/waitProfitDateList":2,"trace/traderSymbols":2},post:{"account/setLeverage":8,"account/setMargin":8,"account/setMarginMode":8,"order/placeOrder":2,"order/batch-orders":2,"order/cancel-order":2,"order/cancel-batch-orders":2,"plan/placePlan":2,"plan/modifyPlan":2,"plan/modifyPlanPreset":2,"plan/placeTPSL":2,"plan/modifyTPSLPlan":2,"plan/cancelPlan":2,"trace/closeTrackOrder":2,"trace/setUpCopySymbols":2}}}},fees:{spot:{taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")},swap:{taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0004")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r,"failure to get a peer from the ring-balancer":a,4010:l,4001:r,4002:r,30001:b,30002:b,30003:b,30004:b,30005:p,30006:b,30007:c,30008:v,30009:r,30010:b,30011:l,30012:b,30013:b,30014:u,30015:b,30016:r,30017:r,30018:r,30019:a,30020:c,30021:c,30022:l,30023:c,30024:w,30025:c,30026:u,30027:b,30028:l,30029:d,30030:r,30031:c,30032:w,30033:c,30034:r,30035:r,30036:r,30037:a,30038:n,32001:d,32002:l,32003:m,32004:r,32005:g,32006:g,32007:g,32008:g,32009:g,32010:r,32011:r,32012:r,32013:r,32014:r,32015:r,32016:r,32017:r,32018:r,32019:r,32020:r,32021:r,32022:r,32023:r,32024:r,32025:r,32026:r,32027:r,32028:d,32029:r,32030:g,32031:o,32038:b,32040:r,32044:r,32045:r,32046:r,32047:r,32048:g,32049:r,32050:g,32051:g,32052:r,32053:r,32057:r,32054:r,32055:g,32056:r,32058:r,32059:g,32060:g,32061:g,32062:g,32063:g,32064:r,32065:r,32066:r,32067:r,32068:r,32069:r,32070:r,32071:r,32072:r,32073:r,32074:r,32075:r,32076:r,32077:r,32078:r,32079:r,32080:r,32083:r,33001:l,33002:d,33003:f,33004:r,33005:r,33006:r,33007:r,33008:f,33009:r,33010:r,33011:r,33012:r,33013:g,33014:y,33015:g,33016:r,33017:f,33018:r,33020:r,33021:c,33022:g,33023:r,33024:g,33025:g,33026:r,33027:g,33028:g,33029:g,33034:r,33035:r,33036:r,33037:r,33038:r,33039:r,33040:r,33041:r,33042:r,33043:r,33044:r,33045:r,33046:r,33047:r,33048:r,33049:r,33050:r,33051:r,33059:c,33060:c,33061:r,33062:r,33063:r,33064:r,33065:r,21009:r,34001:l,34002:h,34003:r,34004:r,34005:r,34006:r,34007:r,34008:f,34009:r,34010:r,34011:r,34012:r,34013:r,34014:r,34015:r,34016:l,34017:d,34018:b,34019:l,34020:l,34021:h,34022:r,34023:l,34026:r,34036:r,34037:r,34038:r,34039:r,35001:r,35002:r,35003:r,35004:r,35005:b,35008:g,35010:g,35012:g,35014:g,35015:g,35017:r,35019:g,35020:g,35021:g,35022:r,35024:r,35025:f,35026:r,35029:y,35030:g,35031:g,35032:r,35037:r,35039:r,35040:g,35044:r,35046:f,35047:f,35048:r,35049:g,35050:g,35052:f,35053:r,35055:f,35057:r,35058:r,35059:c,35060:c,35061:c,35062:g,35063:g,35064:g,35066:g,35067:g,35068:g,35069:g,35070:g,35071:g,35072:g,35073:g,35074:g,35075:g,35076:g,35077:g,35078:g,35079:g,35080:g,35081:g,35082:g,35083:g,35084:g,35085:g,35086:g,35087:g,35088:g,35089:g,35090:r,35091:r,35092:r,35093:r,35094:r,35095:c,35096:r,35097:r,35098:r,35099:r,36001:c,36002:c,36005:r,36101:b,36102:l,36103:d,36104:l,36105:l,36106:d,36107:l,36108:f,36109:l,36201:l,36202:l,36203:g,36204:r,36205:c,36206:c,36207:g,36208:g,36209:g,36210:g,36211:g,36212:g,36213:g,36214:r,36216:y,36217:g,36218:g,36219:g,36220:g,36221:g,36222:g,36223:g,36224:g,36225:g,36226:g,36227:g,36228:g,36229:g,36230:g,400:c,401:b,403:l,404:c,405:c,415:c,429:u,500:a,1001:S,1002:r,1003:r,40001:b,40002:b,40003:b,40004:p,40005:p,40006:b,40007:c,40008:p,40009:b,40010:b,40011:b,40012:b,40013:r,40014:l,40015:r,40016:l,40017:r,40018:l,40102:c,40103:c,40104:r,40105:r,40106:r,40107:r,40108:g,40109:y,40200:n,40201:g,40202:r,40203:c,40204:c,40205:c,40206:c,40207:c,40208:c,40209:c,40300:r,40301:l,40302:c,40303:c,40304:c,40305:c,40306:r,40308:n,40309:w,40400:r,40401:r,40402:c,40403:c,40404:c,40405:c,40406:c,40407:r,40408:r,40409:r,40500:g,40501:r,40502:r,40503:r,40504:r,40505:r,40506:b,40507:b,40508:r,40509:r,40600:r,40601:r,40602:r,40603:r,40604:a,40605:r,40606:r,40607:r,40608:r,40609:r,40700:c,40701:r,40702:r,40703:r,40704:r,40705:c,40706:g,40707:c,40708:c,40709:r,40710:r,40711:f,40712:f,40713:r,40714:r,"invalid sign":b,"invalid currency":w,"invalid symbol":w,"invalid period":c,"invalid user":r,"invalid amount":g,"invalid type":g,"invalid orderId":g,"invalid record":r,"invalid accountId":c,"invalid address":c,"accesskey not null":b,"illegal accesskey":b,"sign not null":b,"req_time is too much difference from server time":p,"permissions not right":l,"illegal sign invalid":b,"user locked":d,"Request Frequency Is Too High":S,"more than a daily rate of cash":c,"more than the maximum daily withdrawal amount":c,"need to bind email or mobile":r,"user forbid":l,"User Prohibited Cash Withdrawal":l,"Cash Withdrawal Is Less Than The Minimum Value":c,"Cash Withdrawal Is More Than The Maximum Value":c,"the account with in 24 hours ban coin":l,"order cancel fail":c,"base symbol error":w,"base date error":r,"api signature not valid":b,"gateway internal error":r,"audit failed":r,"order queryorder invalid":c,"market no need price":g,"limit need price":g,"userid not equal to account_id":r,"your balance is low":f,"address invalid cointype":r,"system exception":r,50003:r,50004:w,50006:l,50007:l,50008:v,50009:S,50010:r,50014:g,50015:g,50016:g,50017:g,50018:g,50019:g,50020:f,50021:g,50026:g,"invalid order query time":r,"invalid start time":c,"invalid end time":c,20003:r,"01001":r},broad:{"invalid size, valid range":r}},precisionMode:k,commonCurrencies:{JADE:"Jade Protocol"},options:{fetchMarkets:["spot","swap"],defaultType:"spot",defaultSubType:"linear",broker:{spot:"iauIBf#",swap:"iauIBf#"}}})}async fetchTime(e={}){const t=await this.publicSpotGetPublicTime(e);return this.safeInteger(t,"data")}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets",["spot","swap"]);let s=[];for(let i=0;i<t.length;i++){const r=t[i];if("swap"===r){const t=["umcbl","dmcbl"];for(let i=0;i<t.length;i++){const a=await this.fetchMarketsByType(r,this.extend(e,{productType:t[i]}));s=this.arrayConcat(s,a)}}else{const r=await this.fetchMarketsByType(t[i],e);s=this.arrayConcat(s,r)}}return s}parseMarkets(e){const t=[];for(let s=0;s<e.length;s++)t.push(this.parseMarket(e[s]));return t}parseMarket(e){const t=this.safeString(e,"symbol"),s=this.safeString(e,"quoteCoin"),i=this.safeString(e,"baseCoin"),r=this.safeCurrencyCode(s),a=this.safeCurrencyCode(i),n=this.safeValue(e,"supportMarginCoins",[]),o=this.safeString(n,0),c=this.safeCurrencyCode(o);let d=a+"/"+r;const h=t.split("_"),l=this.safeString(h,1);let u,f,p,m,g,y=!1,b=!1,v=!1;if("SPBL"===l)u="spot",b=!0,m=this.parseNumber(this.parsePrecision(this.safeString(e,"priceScale"))),g=this.parseNumber(this.parsePrecision(this.safeString(e,"quantityScale")));else{u="swap",y=!0,v=!0,d=d+":"+c,"UMCBL"===l?(f=!0,p=!1):"DMCBL"===l&&(p=!0,f=!1);const t=this.safeInteger(e,"pricePlace"),s=this.safeInteger(e,"volumePlace"),i=this.safeString(e,"priceEndStep"),r=this.safeString(e,"minTradeNum"),a=new T(i);a.decimals=this.sum(a.decimals,t),a.reduce();const n=a.toString();m=this.parseNumber(n);const o=new T(r);o.decimals=this.sum(o.decimals,s),o.reduce();const h=o.toString();g=this.parseNumber(h)}const w=this.safeString(e,"status");let S;void 0!==w&&(S="online"===w);return{info:e,id:t,symbol:d,quoteId:s,baseId:i,quote:r,base:a,type:u,spot:b,swap:y,future:!1,option:!1,margin:!1,contract:v,contractSize:void 0,linear:f,inverse:p,settleId:o,settle:c,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,active:S,maker:this.safeNumber(e,"makerFeeRate"),taker:this.safeNumber(e,"takerFeeRate"),precision:{price:m,amount:g},limits:{amount:{min:this.safeNumber(e,"minTradeAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}}}async fetchMarketsByType(e,t={}){const s=this.getSupportedMapping(e,{spot:"publicSpotGetPublicProducts",swap:"publicMixGetMarketContracts"}),i=await this[s](t),r=this.safeValue(i,"data",[]);return this.parseMarkets(r)}async fetchCurrencies(e={}){const t=await this.publicSpotGetPublicCurrencies(e),s={},i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"coinId"),a=this.safeCurrencyCode(this.safeString(t,"coinName")),n=this.safeValue(t,"chains",[]),o={};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"chain"),i=this.safeCurrencyCode(s),r=this.safeString(t,"withdrawable"),a=this.safeString(t,"rechargeable");o[i]={info:t,id:s,network:i,limits:{withdraw:{min:this.safeNumber(t,"minWithdrawAmount"),max:void 0},deposit:{min:this.safeNumber(t,"minDepositAmount"),max:void 0}},active:void 0,withdraw:"true"===r,deposit:"true"===a,fee:this.safeNumber(t,"withdrawFee"),precision:void 0}}s[a]={info:t,id:r,code:a,networks:o,type:void 0,name:void 0,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),[r,a]=this.handleMarketTypeAndParams("fetchOrderBook",i,s),n=this.getSupportedMapping(r,{spot:"publicSpotGetMarketDepth",swap:"publicMixGetMarketDepth"}),o={symbol:i.id};void 0!==t&&(o.limit=t);const c=await this[n](this.extend(o,a)),d=this.safeValue(c,"data"),h=this.safeInteger(d,"timestamp");return this.parseOrderBook(d,e,h)}parseTicker(e,t){let s=this.safeString(e,"symbol");s in this.markets_by_id||(s+="_SPBL");const i=this.safeSymbol(s,t),r=this.safeString(e,"high24h"),a=this.safeString(e,"low24h"),n=this.safeString2(e,"close","last"),o=this.safeString2(e,"quoteVol","quoteVolume"),c=this.safeString2(e,"baseVol","baseVolume"),d=this.safeInteger2(e,"ts","timestamp"),h=this.iso8601(d),l=this.safeString2(e,"buyOne","bestBid"),u=this.safeString2(e,"sellOne","bestAsk"),f=T.stringMul(this.safeString(e,"priceChangePercent"),"100");return this.safeTicker({symbol:i,timestamp:d,datetime:h,high:r,low:a,bid:l,bidVolume:void 0,ask:u,askVolume:void 0,vwap:void 0,open:void 0,close:n,last:void 0,previousClose:void 0,change:void 0,percentage:f,average:void 0,baseVolume:c,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},[r,a]=this.handleMarketTypeAndParams("fetchTicker",s,t),n=this.getSupportedMapping(r,{spot:"publicSpotGetMarketTicker",swap:"publicMixGetMarketTicker"}),o=await this[n](this.extend(i,a)),c=this.safeValue(o,"data");return this.parseTicker(c,s)}async fetchTickers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),r=this.getSupportedMapping(s,{spot:"publicSpotGetMarketTickers",swap:"publicMixGetMarketTickers"}),a={};if("publicMixGetMarketTickers"===r){const e=this.safeString(this.options,"defaultSubType");a.productType="linear"===e?"UMCBL":"DMCBL"}const n=await this[r](this.extend(a,i)),o=this.safeValue(n,"data");return this.parseTickers(o,e)}parseTrade(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeString2(e,"tradeId","fillId"),a=this.safeString(e,"orderId"),n=this.safeString(e,"side"),o=this.safeString2(e,"fillPrice","price");let c=this.safeString2(e,"fillQuantity","size");c=this.safeString(e,"sizeQty",c);let d,h=this.safeInteger2(e,"fillTime","timestamp");h=this.safeInteger(e,"cTime",h);const l=this.safeString(e,"fees"),u=this.safeString(e,"orderType");void 0!==l&&(d={code:this.safeCurrencyCode(this.safeString(e,"feeCcy")),cost:l});const f=this.iso8601(h);return this.safeTrade({info:e,id:r,order:a,symbol:i,side:n,type:u,takerOrMaker:void 0,price:o,amount:c,cost:void 0,fee:d,timestamp:h,datetime:f},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.limit=t);const[n,o]=this.handleMarketTypeAndParams("fetchTrades",r,i),c=this.getSupportedMapping(n,{spot:"publicSpotGetMarketFills",swap:"publicMixGetMarketFills"}),d=await this[c](this.extend(a,o)),h=this.safeValue(d,"data",[]);return this.parseTrades(h,r,s,t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicSpotGetPublicProduct(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTradingFee(a,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicSpotGetPublicProducts(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.parseTradingFee(t);i[r.symbol]=r}return i}parseTradingFee(e,t){const s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),maker:this.safeNumber(e,"makerFeeRate"),taker:this.safeNumber(e,"takerFeeRate")}}parseOHLCV(e,t,s="1m"){return[this.safeInteger2(e,0,"ts"),this.safeNumber2(e,1,"open"),this.safeNumber2(e,2,"high"),this.safeNumber2(e,3,"low"),this.safeNumber2(e,4,"close"),this.safeNumber2(e,5,"baseVol")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id},[o,c]=this.handleMarketTypeAndParams("fetchOHLCV",a,r),d=this.getSupportedMapping(o,{spot:"publicSpotGetMarketCandles",swap:"publicMixGetMarketCandles"}),h=this.safeInteger2(r,"until","till");if(r=this.omit(r,["until","till"]),void 0===i&&(i=100),"spot"===a.type){if(n.period=this.timeframes.spot[t],n.limit=i,void 0!==s&&(n.after=s,void 0===h)){const e=1e3*this.timeframes.swap[t];n.before=this.sum(s,e*i)}void 0!==h&&(n.before=h)}else if("swap"===a.type){n.granularity=this.timeframes.swap[t];const e=this.parseTimeframe(t),r=this.milliseconds();void 0===s?(n.startTime=r-1e3*e*(i-1),n.endTime=r):(n.startTime=this.sum(s,1e3*e),n.endTime=void 0!==h?h:this.sum(s,i*e*1e3))}const l=await this[d](this.extend(n,c)),u=this.safeValue(l,"data",l);return this.parseOHLCVs(u,a,t,s,i)}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i=this.getSupportedMapping(t,{spot:"privateSpotGetAccountAssets",swap:"privateMixGetAccountAccounts"}),r={};if("swap"===t){const e=this.safeString(this.options,"defaultSubType");r.productType="linear"===e?"UMCBL":"DMCBL"}const a=await this[i](this.extend(r,s)),n=this.safeValue(a,"data");return this.parseBalance(n)}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString2(i,"coinId","marginCoin"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString2(i,"lock","locked"),n.free=this.safeString(i,"available"),t[a]=n}return this.safeBalance(t)}parseOrderStatus(e){return this.safeString({new:"open",full_fill:"closed",filled:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s)).symbol,r=this.safeString(e,"orderId"),a=this.safeString2(e,"price","executePrice"),n=this.safeString2(e,"quantity","size"),o=this.safeString2(e,"fillQuantity","filledQty"),c=this.safeString2(e,"fillTotalAmount","filledAmount"),d=this.safeString(e,"fillPrice"),h=this.safeString(e,"orderType"),l=this.safeInteger(e,"cTime");let u=this.safeString2(e,"side","posSide");"open_long"===u||"close_short"===u?u="buy":"close_long"!==u&&"open_short"!==u||(u="sell");const f=this.safeString2(e,"clientOrderId","clientOid"),p=this.safeString2(e,"status","state"),m=this.parseOrderStatus(p),g=this.safeInteger(e,"uTime");return this.safeOrder({info:e,id:r,clientOrderId:f,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:g,symbol:i,type:h,timeInForce:void 0,postOnly:void 0,side:u,price:a,stopPrice:this.safeNumber(e,"triggerPrice"),average:d,cost:c,amount:n,filled:o,remaining:void 0,status:m,fee:undefined,trades:void 0},t)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.market(e),[c,d]=this.handleMarketTypeAndParams("createOrder",o,n),h={symbol:o.id,orderType:t},l="market"===t,u=this.safeValue2(n,"stopPrice","triggerPrice"),f=void 0!==u,p=this.safeValue(n,"stopLossPrice"),m=void 0!==p,g=this.safeValue(n,"takeProfitPrice"),y=void 0!==g,b=m||y;if(this.sum(f,m,y)>1)throw new r(this.id+" createOrder() params can only contain one of triggerPrice, stopLossPrice, takeProfitPrice");"limit"===t&&void 0===u&&(h.price=this.priceToPrecision(e,a));let v=this.safeString2(n,"client_oid","clientOrderId");if(void 0===v){const e=this.safeValue(this.options,"broker");if(void 0!==e){const t=this.safeString(e,o.type);void 0!==t&&(v=t+this.uuid22())}}let w=this.getSupportedMapping(c,{spot:"privateSpotPostTradeOrders",swap:"privateMixPostOrderPlaceOrder"});const S=this.safeString2(n,"force","timeInForceValue"),k=this.isPostOnly(l,"post_only"===S,n);if("spot"===c)h.clientOrderId=v,h.quantity=this.amountToPrecision(e,i),h.side=s,h.force=k?"post_only":"gtc";else{h.clientOid=v,h.size=this.amountToPrecision(e,i),k&&(h.timeInForceValue="post_only");const t=this.safeValue(n,"reduceOnly",!1);if(void 0!==u){const t=this.safeString(n,"triggerType","market_price");h.triggerType=t,h.triggerPrice=this.priceToPrecision(e,u),h.executePrice=this.priceToPrecision(e,a),w="privateMixPostPlanPlacePlan"}if(b){if(!l)throw new r(this.id+" createOrder() bitget stopLoss or takeProfit orders must be market orders");m?(h.triggerPrice=this.priceToPrecision(e,p),h.planType="loss_plan"):y&&(h.triggerPrice=this.priceToPrecision(e,g),h.planType="profit_plan"),h.holdSide="buy"===s?"long":"short",w="privateMixPostPlanPlaceTPSL"}else h.side=t?"buy"===s?"close_short":"close_long":"buy"===s?"open_long":"open_short";h.marginCoin=o.settleId}const T=this.omit(d,["stopPrice","triggerType","stopLossPrice","takeProfitPrice","postOnly"]),O=await this[w](this.extend(h,T)),_=this.safeValue(O,"data");return this.parseOrder(_,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument for spot orders");await this.loadMarkets();const i=this.market(t),[r,a]=this.handleMarketTypeAndParams("cancelOrder",i,s);let n=this.getSupportedMapping(r,{spot:"privateSpotPostTradeCancelOrder",swap:"privateMixPostOrderCancelOrder"});const c={symbol:i.id,orderId:e};if(this.safeValue(s,"stop")){const e=this.safeString(s,"planType");if(void 0===e)throw new o(this.id+" cancelOrder() requires a planType parameter for stop orders, either normal_plan, profit_plan or loss_plan");c.planType=e,n="privateMixPostPlanCancelPlan",s=this.omit(s,["stop","planType"])}"swap"===r&&(c.marginCoin=i.settleId);const d=await this[n](this.extend(c,a));return this.parseOrder(d,i)}async cancelOrders(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeString(s,"type",i.type);if(void 0===r)throw new o(this.id+" cancelOrders() requires a type parameter (one of 'spot', 'swap').");s=this.omit(s,"type");const a={};let n;if("spot"===r){n="apiPostOrderOrdersBatchcancel",a.method="batchcancel";const t=this.json(e).split('"');a.order_ids=t.join("")}else"swap"===r&&(n="swapPostOrderCancelBatchOrders",a.symbol=i.id,a.ids=e);return await this[n](this.extend(a,s))}async fetchOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),[r,a]=this.handleMarketTypeAndParams("fetchOrder",i,s),n=this.getSupportedMapping(r,{spot:"privateSpotPostTradeOrderInfo",swap:"privateMixGetOrderDetail"}),c={symbol:i.id,orderId:e},d=await this[n](this.extend(c,a)),h=this.safeValue(d,"data"),l=this.safeValue(h,0,h);return this.parseOrder(l,i)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i),c={symbol:r.id};let d=this.getSupportedMapping(a,{spot:"privateSpotPostTradeOpenOrders",swap:"privateMixGetOrderCurrent"});this.safeValue(i,"stop")&&(d="privateMixGetPlanCurrentPlan",i=this.omit(i,"stop"));const h=await this[d](this.extend(c,n)),l=this.safeValue(h,"data",[]);return this.parseOrders(l,r,t,s)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchClosedOrders",r,i),c={symbol:r.id},d=this.getSupportedMapping(a,{spot:"privateSpotPostTradeHistory",swap:"privateMixGetOrderHistory"});"swap"===a&&(void 0===s&&(s=100),c.pageSize=s,void 0===t&&(t=0),c.startTime=t,c.endTime=this.milliseconds());const h=await this[d](this.extend(c,n)),l=this.safeValue(h,"data"),u=this.safeValue(l,"orderList",l);return this.parseOrders(u,r,t,s)}async fetchLedger(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.coinId=r.id);const n=await this.privateSpotPostAccountBills(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseLedger(o,r,t,s)}parseLedgerEntry(e,t){const s=this.safeString(e,"billId"),i=this.safeString(e,"coinId"),r=this.safeCurrencyCode(i),a=this.parseNumber(T.stringAbs(this.safeString(e,"quantity"))),n=this.safeInteger(e,"cTime"),o=this.safeString(e,"bizType");let c;if(void 0!==o){c=o.split("-")[1]}const d=this.safeString(e,"groupType"),h=this.safeNumber(e,"fees"),l=this.safeNumber(e,"balance");return{info:e,id:s,timestamp:n,datetime:this.iso8601(n),direction:c,account:void 0,referenceId:void 0,referenceAccount:void 0,type:d,currency:r,amount:a,before:void 0,after:l,status:void 0,fee:h}}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e);if(r.swap)throw new w(this.id+" fetchMyTrades() only supports spot markets");const a={symbol:r.id};void 0!==s&&(a.limit=s);const n=await this.privateSpotPostTradeFills(this.extend(a,i)),c=this.safeValue(n,"data");return this.parseTrades(c,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){if(void 0===t)throw new o(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(t),[n,c]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r),d=this.getSupportedMapping(n,{spot:"privateSpotPostTradeFills",swap:"privateMixGetOrderFills"}),h={symbol:a.id,orderId:e},l=await this[d](this.extend(h,c)),u=this.safeValue(l,"data");return await this.parseTrades(u,a,s,i)}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id,marginCoin:s.settleId},r=await this.privateMixGetPositionSinglePosition(this.extend(i,t)),a=this.safeValue(r,"data",[]);return this.parsePosition(a[0],s)}async fetchPositions(e,t={}){await this.loadMarkets();const s={productType:"linear"===this.safeString(this.options,"defaultSubType")?"UMCBL":"DMCBL"},i=await this.privateMixGetPositionAllPosition(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=[];for(let e=0;e<r.length;e++)a.push(this.parsePosition(r[e]));return this.filterByArray(a,"symbol",e,!1)}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeInteger(e,"cTime");let r=this.safeString(e,"marginMode");"fixed"===r?r="isolated":"crossed"===r&&(r="cross");let a=this.safeString(e,"holdMode");"double_hold"===a?a=!0:"single_hold"===a&&(a=!1);let n=this.safeInteger(e,"openDelegateCount"),o=this.safeNumber(e,"liquidationPrice");return 0===n&&(n=void 0),0===o&&(o=void 0),{info:e,id:void 0,symbol:t.symbol,notional:void 0,marginMode:r,liquidationPrice:o,entryPrice:this.safeNumber(e,"averageOpenPrice"),unrealizedPnl:this.safeNumber(e,"unrealizedPL"),percentage:void 0,contracts:n,contractSize:this.safeNumber(e,"total"),markPrice:void 0,side:this.safeString(e,"holdSide"),hedged:a,timestamp:i,datetime:this.iso8601(i),maintenanceMargin:void 0,maintenanceMarginPercentage:this.safeNumber(e,"keepMarginRate"),collateral:this.safeNumber(e,"margin"),initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeNumber(e,"leverage"),marginRatio:void 0}}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.pageSize=s);const n=await this.publicMixGetMarketHistoryFundRate(this.extend(a,i)),c=this.safeValue(n,"data",[]),d=[];for(let e=0;e<c.length;e++){const t=c[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s,r),a=this.safeInteger(t,"settleTime");d.push({info:t,symbol:i,fundingRate:this.safeString(t,"fundingRate"),timestamp:a,datetime:this.iso8601(a)})}const h=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,s)}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new w(this.id+" fetchFundingRate() supports swap contracts only");const i={symbol:s.id},r=await this.publicMixGetMarketCurrentFundRate(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseFundingRate(a,s)}parseFundingRate(e,t){const s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets();const r=this.safeString(i,"holdSide"),a=this.market(e),n=a.linear?a.quote:a.base,o={symbol:a.id,marginCoin:n,amount:this.amountToPrecision(e,t),holdSide:r};i=this.omit(i,"holdSide");const c=await this.privateMixPostAccountSetMargin(this.extend(o,i));return this.extend(this.parseMarginModification(c,a),{amount:this.parseNumber(t),type:s})}parseMarginModification(e,t){const s="00000"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:t.linear?t.quote:t.base,symbol:t.symbol,status:s}}async reduceMargin(e,t,s={}){if(t>0)throw new c(this.id+" reduceMargin() amount parameter must be a negative value");if(void 0===this.safeString(s,"holdSide"))throw new o(this.id+" reduceMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"reduce",s)}async addMargin(e,t,s={}){if(void 0===this.safeString(s,"holdSide"))throw new o(this.id+" addMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"add",s)}sign(e,t=[],s="GET",i={},r,a){const n="private"===t[0],o=t[1],c=("spot"===o?"/api/spot/v1":"/api/mix/v1")+("/"+this.implodeParams(e,i));let d=this.implodeHostname(this.urls.api[o])+c;const h=this.omit(i,this.extractParams(e));if(!n&&"GET"===s){Object.keys(h).length>0&&(d=d+"?"+this.urlencode(h))}if(n){this.checkRequiredCredentials();const e=this.milliseconds().toString();let t=e+s+c;if("POST"===s)t+=a=this.json(i);else if(Object.keys(i).length){const e="?"+this.urlencode(this.keysort(i));d+=e,t+=e}const n=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64");r={"ACCESS-KEY":this.apiKey,"ACCESS-SIGN":n,"ACCESS-TIMESTAMP":e,"ACCESS-PASSPHRASE":this.password},"POST"===s&&(r["Content-Type"]="application/json")}return{url:d,method:s,body:a,headers:r}}async fetchLeverage(e,t={}){await this.loadMarkets();const s={symbol:this.market(e).id};return await this.publicMixGetMarketSymbolLeverage(this.extend(s,t))}async setLeverage(e,t,s={}){if(void 0===t)throw new o(this.id+" setLeverage() requires a symbol argument");const i=this.safeString(s,"holdSide");if(void 0===i)throw new o(this.id+" setLeverage() requires a holdSide param");await this.loadMarkets();const r=this.market(t),a={symbol:r.id,marginCoin:r.settleId,leverage:e,holdSide:i};return await this.privateMixPostAccountSetLeverage(this.extend(a,s))}async setMarginMode(e,t,s={}){if(void 0===t)throw new o(this.id+" setMarginMode() requires a symbol argument");if("fixed"!==(e=e.toLowerCase())&&"crossed"!==e)throw new o(this.id+' setMarginMode() marginMode must be "fixed" or "crossed"');await this.loadMarkets();const i=this.market(t),r={symbol:i.id,marginCoin:i.settleId,marginMode:e};return await this.privateMixPostAccountSetMarginMode(this.extend(r,s))}handleErrors(e,t,s,i,a,n,o,c,d){if(!o)return;const h=this.safeString(o,"err_msg"),l=this.safeString2(o,"code","err_code"),u=this.id+" "+n,f=void 0!==h&&""!==h;f&&(this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwBroadlyMatchedException(this.exceptions.broad,h,u));const p=void 0!==l&&"00000"!==l;if(p&&this.throwExactlyMatchedException(this.exceptions.exact,l,u),p||f)throw new r(u)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],158:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,AuthenticationError:n,BadRequest:o,PermissionDenied:c,InvalidAddress:d,ArgumentsRequired:h,InvalidOrder:l}=e("./base/errors"),{DECIMAL_PLACES:u,SIGNIFICANT_DIGITS:f,TRUNCATE:p}=e("./base/functions/number"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bithumb",name:"Bithumb",countries:["KR"],rateLimit:500,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},hostname:"bithumb.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg",api:{public:"https://api.{hostname}/public",private:"https://api.{hostname}"},www:"https://www.bithumb.com",doc:"https://apidocs.bithumb.com",fees:"https://en.bithumb.com/customer_support/info_fee"},api:{public:{get:["ticker/{currency}","ticker/all","ticker/ALL_BTC","ticker/ALL_KRW","orderbook/{currency}","orderbook/all","transaction_history/{currency}","transaction_history/all","candlestick/{currency}/{interval}"]},private:{post:["info/account","info/balance","info/wallet_address","info/ticker","info/orders","info/user_transactions","info/order_detail","trade/place","trade/cancel","trade/btc_withdrawal","trade/krw_deposit","trade/krw_withdrawal","trade/market_buy","trade/market_sell"]}},fees:{trading:{maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")}},precisionMode:f,exceptions:{"Bad Request(SSL)":o,"Bad Request(Bad Method)":o,"Bad Request.(Auth Data)":n,"Not Member":n,"Invalid Apikey":n,"Method Not Allowed.(Access IP)":c,"Method Not Allowed.(BTC Adress)":d,"Method Not Allowed.(Access)":c,"Database Fail":a,"Invalid Parameter":o,5600:r,"Unknown Error":r,"After May 23th, recent_transactions is no longer, hence users will not be able to connect to recent_transactions":r},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","30m":"30m","1h":"1h","6h":"6h","12h":"12h","1d":"24h"},options:{quoteCurrencies:{BTC:{limits:{cost:{min:2e-4,max:100}}},KRW:{limits:{cost:{min:500,max:5e9}}}}},commonCurrencies:{FTC:"FTC2",SOC:"Soda Coin"}})}amountToPrecision(e,t){return this.decimalToPrecision(t,p,this.markets[e].precision.amount,u)}async fetchMarkets(e={}){const t=[],s=this.safeValue(this.options,"quoteCurrencies",{}),i=Object.keys(s);for(let r=0;r<i.length;r++){const a=i[r],n=a,o=this.safeValue(s,a,{}),c="publicGetTickerALL"+a,d=await this[c](e),h=this.safeValue(d,"data"),l=Object.keys(h);for(let e=0;e<l.length;e++){const s=l[e];if("date"===s)continue;const i=h[s],r=this.safeCurrencyCode(s);let c=!0;if(Array.isArray(i)){0===i.length&&(c=!1)}const d=this.deepExtend({id:s,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:s,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDateTime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("4"),price:parseInt("4")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{}},info:i},o);t.push(d)}}return t}parseBalance(e){const t={info:e},s=this.safeValue(e,"data"),i=Object.keys(this.currencies);for(let e=0;e<i.length;e++){const r=i[e],a=this.account(),n=this.currency(r),o=this.safeStringLower(n,"id");a.total=this.safeString(s,"total_"+o),a.used=this.safeString(s,"in_use_"+o),a.free=this.safeString(s,"available_"+o),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostInfoBalance(this.extend({currency:"ALL"},e));return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currency:i.base+"_"+i.quote};void 0!==t&&(r.count=t);const a=await this.publicGetOrderbookCurrency(this.extend(r,s)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,e,o,"bids","asks","price","quantity")}parseTicker(e,t){const s=this.safeInteger(e,"date"),i=this.safeSymbol(void 0,t),r=this.safeString(e,"opening_price"),a=this.safeString(e,"closing_price"),n=this.safeString(e,"units_traded_24H"),o=this.safeString(e,"acc_trade_value_24H");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"max_price"),low:this.safeString(e,"min_price"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:r,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickerAll(t),i={},r=this.safeValue(s,"data",{}),a=this.safeInteger(r,"date"),n=this.omit(r,"date"),o=Object.keys(n);for(let e=0;e<o.length;e++){const t=o[e];let s,r=t;t in this.markets_by_id&&(s=this.markets_by_id[t],r=s.symbol);const c=n[t];Array.isArray(c)||(c.date=a,i[r]=this.parseTicker(c,s))}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency:s.base},r=await this.publicGetTickerCurrency(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={currency:a.base,interval:this.timeframes[t]},o=await this.publicGetCandlestickCurrencyInterval(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}parseTrade(e,t){let s;const i=this.safeString(e,"transaction_date");if(void 0!==i){const t=i.split(" ");if(t.length>1){const e=t[0];let i=t[1];i.length<8&&(i="0"+i),s=this.parse8601(e+" "+i)}else s=this.safeIntegerProduct(e,"transaction_date",.001)}void 0!==s&&(s-=324e5);let r=this.safeString(e,"type");r="ask"===r?"sell":"buy";const a=this.safeString(e,"cont_no");t=this.safeMarket(void 0,t);const n=this.safeString(e,"price"),o=this.safeString2(e,"units_traded","units"),c=this.safeString(e,"total");let d;const h=this.safeString(e,"fee");if(void 0!==h){const t=this.safeString(e,"fee_currency");d={cost:h,currency:this.commonCurrencyCode(t)}}return this.safeTrade({id:a,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:undefined,side:r,takerOrMaker:void 0,price:n,amount:o,cost:c,fee:d},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currency:r.base};void 0===s&&(a.count=s);const n=await this.publicGetTransactionHistoryCurrency(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={order_currency:n.id,payment_currency:n.quote,units:i};let c="privatePostTradePlace";"limit"===t?(o.price=r,o.type="buy"===s?"bid":"ask"):c="privatePostTradeMarket"+this.capitalize(s);const d=await this[c](this.extend(o,a)),h=this.safeString(d,"order_id");if(void 0===h)throw new l(this.id+" createOrder() did not return an order id");return{info:d,symbol:e,type:t,side:s,id:h}}async fetchOrder(e,t,s={}){if(void 0===t)throw new h(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={order_id:e,count:1,order_currency:i.base,payment_currency:i.quote},a=await this.privatePostInfoOrderDetail(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseOrder(this.extend(n,{order_id:e}),i)}parseOrderStatus(e){return this.safeString({Pending:"open",Completed:"closed",Cancel:"canceled"},e,e)}parseOrder(e,t){const s=this.safeIntegerProduct(e,"order_date",.001),i="bid"===this.safeValue2(e,"type","side")?"buy":"sell",r=this.parseOrderStatus(this.safeString(e,"order_status")),a=this.safeString2(e,"order_price","price");let n="limit";m.stringEquals(a,"0")&&(n="market");const o=this.safeString2(e,"order_qty","units");let c,d=this.safeString(e,"units_remaining");void 0===d&&("closed"===r?d="0":"canceled"!==r&&(d=o));const h=this.safeString(e,"order_currency"),l=this.safeString(e,"payment_currency"),u=this.safeCurrencyCode(h),f=this.safeCurrencyCode(l);void 0!==u&&void 0!==f&&(c=u+"/"+f),void 0===c&&(c=(t=this.safeMarket(void 0,t)).symbol);const p=this.safeString(e,"order_id"),g=this.safeValue(e,"contract",[]);return this.safeOrder({info:e,id:p,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:c,type:n,timeInForce:void 0,postOnly:void 0,side:i,price:a,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:void 0,remaining:d,status:r,fee:void 0,trades:g},t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new h(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);void 0===s&&(s=100);const a={count:s,order_currency:r.base,payment_currency:r.quote};void 0!==t&&(a.after=t);const n=await this.privatePostInfoOrders(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseOrders(o,r,t,s)}async cancelOrder(e,t,s={}){if(!("side"in s))throw new h(this.id+" cancelOrder() requires a `side` parameter (sell or buy)");if(void 0===t)throw new h(this.id+" cancelOrder() requires a `symbol` argument");const i=this.market(t),r="buy"===s.side?"bid":"ask";s=this.omit(s,["side","currency"]);const a={order_id:e,type:r,order_currency:i.base,payment_currency:i.quote};return await this.privatePostTradeCancel(this.extend(a,s))}cancelUnifiedOrder(e,t={}){const s={side:e.side};return this.cancelOrder(e.id,e.symbol,this.extend(s,t))}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={units:t,address:s,currency:a.id};if("XRP"===a||"XMR"===a||"EOS"===a||"STEEM"===a){const t=this.safeString(r,"destination");if(void 0===i&&void 0===t)throw new h(this.id+" "+e+" withdraw() requires a tag argument or an extra destination param");void 0!==i&&(n.destination=i)}const o=await this.privatePostTradeBtcWithdrawal(this.extend(n,r));return this.parseTransaction(o,a)}parseTransaction(e,t){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const n="/"+this.implodeParams(e,i);let o=this.implodeHostname(this.urls.api[t])+n;const c=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(c).length&&(o+="?"+this.urlencode(c));else{this.checkRequiredCredentials(),a=this.urlencode(this.extend({endpoint:n},c));const e=this.nonce().toString(),t=n+"\0"+a+"\0"+e,s=this.hmac(this.encode(t),this.encode(this.secret),"sha512"),i=this.decode(this.stringToBase64(s));r={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded","Api-Key":this.apiKey,"Api-Sign":i,"Api-Nonce":e}}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"status"in o){const e=this.safeString(o,"status"),t=this.safeString(o,"message");if(void 0!==e){if("0000"===e)return;if("거래 진행중인 내역이 존재하지 않습니다"===t)return;const s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,s),this.throwExactlyMatchedException(this.exceptions,t,s),new r(s)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],159:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeNotAvailable:a,AccountSuspended:n,PermissionDenied:o,RateLimitExceeded:c,InvalidNonce:d,InvalidAddress:h,ArgumentsRequired:l,ExchangeError:u,InvalidOrder:f,InsufficientFunds:p,BadRequest:m,OrderNotFound:g,BadSymbol:y,NotSupported:b}=e("./base/errors"),{TICK_SIZE:v,TRUNCATE:w}=e("./base/functions/number"),S=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitmart",name:"BitMart",countries:["US","CN","HK","KR"],rateLimit:250,version:"v1",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createOrder:!0,createPostOnlyOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:void 0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransactionFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawAddressesByNetwork:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!0},hostname:"bitmart.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/129991357-8f47464b-d0f4-41d6-8a82-34122f0d1398.jpg",api:{rest:"https://api-cloud.{hostname}"},www:"https://www.bitmart.com/",doc:"https://developer-pro.bitmart.com/",referral:{url:"http://www.bitmart.com/?r=rQCFLh",discount:.3},fees:"https://www.bitmart.com/fee/en"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{system:{get:{time:5,service:5}},account:{get:{currencies:10}},spot:{get:{currencies:1,symbols:1,"symbols/details":1,ticker:1,steps:1,"symbols/kline":1,"symbols/book":1,"symbols/trades":1}},contract:{get:{tickers:.5}}},private:{account:{get:{wallet:.5,"deposit/address":1,"withdraw/charge":1,"deposit-withdraw/history":1,"deposit-withdraw/detail":1},post:{"withdraw/apply":1}},spot:{get:{wallet:.5,order_detail:.1,orders:.5,trades:.5},post:{submit_order:.1,cancel_order:.1,cancel_orders:.1}}}},timeframes:{"1m":1,"3m":3,"5m":5,"15m":15,"30m":30,"45m":45,"1h":60,"2h":120,"3h":180,"4h":240,"1d":1440,"1w":10080,"1M":43200},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0020")],[this.parseNumber("10"),this.parseNumber("0.18")],[this.parseNumber("50"),this.parseNumber("0.0016")],[this.parseNumber("250"),this.parseNumber("0.0014")],[this.parseNumber("1000"),this.parseNumber("0.0012")],[this.parseNumber("5000"),this.parseNumber("0.0010")],[this.parseNumber("25000"),this.parseNumber("0.0008")],[this.parseNumber("50000"),this.parseNumber("0.0006")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("10"),this.parseNumber("0.0009")],[this.parseNumber("50"),this.parseNumber("0.0008")],[this.parseNumber("250"),this.parseNumber("0.0007")],[this.parseNumber("1000"),this.parseNumber("0.0006")],[this.parseNumber("5000"),this.parseNumber("0.0005")],[this.parseNumber("25000"),this.parseNumber("0.0004")],[this.parseNumber("50000"),this.parseNumber("0.0003")]]}}},precisionMode:v,exceptions:{exact:{3e4:u,30001:r,30002:r,30003:n,30004:r,30005:r,30006:r,30007:r,30008:r,30010:o,30011:r,30012:r,30013:c,30014:a,6e4:m,60001:m,60002:m,60003:u,60004:u,60005:u,60006:u,60007:h,60008:p,60009:u,60010:u,60011:h,60012:u,60020:o,60021:o,60022:o,60030:m,60031:m,60050:u,60051:u,5e4:m,50001:y,50002:m,50003:m,50004:m,50005:g,50006:f,50007:f,50008:f,50009:f,50010:f,50011:f,50012:f,50013:f,50014:m,50015:m,50016:m,50017:m,50018:m,50019:m,50020:p,50021:m,50022:a,50023:y,50029:f,50030:f,50035:f,50034:f,53e3:n,53001:n,57001:m,58001:m,59001:u,59002:u,40001:u,40002:u,40003:u,40004:u,40005:u,40006:o,40007:m,40008:d,40009:m,40010:m,40011:m,40012:u,40013:u,40014:y,40015:y,40016:f,40017:f,40018:f,40019:u,40020:f,40021:u,40022:u,40023:u,40024:u,40025:u,40026:u,40027:p,40028:o,40029:f,40030:f,40031:f,40032:f,40033:f,40034:y,53002:o},broad:{}},commonCurrencies:{$GM:"GOLDMINER",$HERO:"Step Hero",$PAC:"PAC",AUR:"Aurum",BP:"BEYOND",COT:"Community Coin",CPC:"CPCoin",DMS:"DimSum",FOX:"Fox Finance",GDT:"Gorilla Diamond",GLD:"Goldario",MIM:"MIM Swarm",MVP:"MVP Coin",ONE:"Menlo One",PLA:"Plair",TCT:"TacoCat Token",TRU:"Truebit",ULT:"Ultiledger"},options:{networks:{TRX:"TRC20",ETH:"ERC20"},defaultNetworks:{USDT:"ERC20"},defaultType:"spot",fetchBalance:{type:"spot"},createMarketBuyOrderRequiresPrice:!0}})}async fetchTime(e={}){const t=await this.publicSystemGetTime(e),s=this.safeValue(t,"data",{});return this.safeInteger(s,"server_time")}async fetchStatus(e={}){const t=this.safeValue(this.options,"fetchStatus",{}),s=this.safeString(this.options,"defaultType");let i=this.safeString(t,"type",s);i=this.safeString(e,"type",i),e=this.omit(e,"type");const r=await this.publicSystemGetService(e),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"service",[]),o=this.indexBy(n,"service_type");"swap"!==i&&"future"!==i||(i="contract");const c=this.safeValue(o,i);let d,h;if(void 0!==c){2===this.safeInteger(c,"status")?d="ok":(d="maintenance",h=this.safeInteger(c,"end_time"))}return{status:d,updated:void 0,eta:h,url:void 0,info:r}}async fetchSpotMarkets(e={}){const t=await this.publicSpotGetSymbolsDetails(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"symbols",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"symbol"),a=this.safeInteger(t,"symbol_id"),n=this.safeString(t,"base_currency"),o=this.safeString(t,"quote_currency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=c+"/"+d,l=this.safeString(t,"min_buy_amount"),u=this.safeString(t,"min_sell_amount"),f=S.stringMax(l,u),p=this.safeNumber(t,"base_min_size");r.push({id:s,numericId:a,symbol:h,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:p,price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_max_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:p,max:this.safeNumber(t,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:this.parseNumber(f),max:void 0}},info:t})}return r}async fetchContractMarkets(e={}){const t=await this.publicContractGetTickers(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"tickers",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"contract_symbol"),a=s.slice(0,-4),n=s.slice(-4),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=s.split("_"),h=this.safeString(d,1);let l,u="USDT",f=o+"/"+c+":"+u,p="swap",m=!0,g=!1;if(void 0!==h&&(u="BTC",f=o+"/"+c+":"+u,"PERP"!==h)){const e=this.iso8601(this.milliseconds()).split("-")[0],t=e.slice(0,2),s=h.slice(0,2),i=h.slice(2,4);l=this.parse8601(e+"-"+s+"-"+i+"T00:00:00Z"),f=f+"-"+t+h,p="future",m=!1,g=!0}r.push({id:s,numericId:void 0,symbol:f,base:o,quote:c,settle:u,baseId:a,quoteId:n,settleId:void 0,type:p,spot:!1,margin:!1,swap:m,future:g,option:!1,active:!0,contract:!0,linear:!0,inverse:!1,contractSize:void 0,expiry:l,expiryDatetime:this.iso8601(l),strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return r}async fetchMarkets(e={}){const t=await this.fetchSpotMarkets(e),s=await this.fetchContractMarkets(e);return this.arrayConcat(t,s)}async fetchTransactionFee(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateAccountGetWithdrawCharge(this.extend(s,t)),r=i.data,a={};return a[e]=this.safeNumber(r,"withdraw_fee"),{info:i,withdraw:a,deposit:{}}}parseTicker(e,t){const s=this.safeTimestamp2(e,"timestamp","s_t",this.milliseconds()),i=this.safeString2(e,"symbol","contract_symbol"),r=(t=this.safeMarket(i,t)).symbol,a=this.safeString2(e,"close_24h","last_price");let n=this.safeString(e,"price_change_percent_24h");if(void 0===n){const t=this.safeString(e,"fluctuation");if(void 0!==t&&"0"!==t){const e=t[0];n=e+S.stringMul(t.replace(e,""),"100")}else"0"===t&&(n="0")}const o=this.safeString(e,"base_volume_24h");let c=this.safeString(e,"quote_volume_24h");c=this.safeString(e,"volume_24h",c);const d=this.safeString2(e,"avg_price","index_price"),h=this.safeString2(e,"high_24h","high_price"),l=this.safeString2(e,"low_24h","low_price");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:h,low:l,bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:this.safeString(e,"open_24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:n,average:d,baseVolume:o,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={};let r;s.swap||s.future?(r="publicContractGetTickers",i.contract_symbol=s.id):s.spot&&(r="publicSpotGetTicker",i.symbol=s.id);const a=await this[r](this.extend(i,t)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"tickers",[]);let c;s.spot?c=this.indexBy(o,"symbol"):(s.swap||s.future)&&(c=this.indexBy(o,"contract_symbol"));const d=this.safeValue(c,s.id);return this.parseTicker(d,s)}async fetchTickers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),r=this.getSupportedMapping(s,{spot:"publicSpotGetTicker",swap:"publicContractGetTickers",future:"publicContractGetTickers"}),a=await this[r](i),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"tickers",[]),c={};for(let e=0;e<o.length;e++){const t=this.parseTicker(o[e]);c[t.symbol]=t}return this.filterByArray(c,"symbol",e)}async fetchCurrencies(e={}){const t=await this.publicAccountGetCurrencies(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"currencies",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"currency"),a=this.safeCurrencyCode(s),n=this.safeString(t,"name"),o=this.safeValue(t,"withdraw_enabled"),c=this.safeValue(t,"deposit_enabled"),d=o&&c;r[a]={id:s,code:a,name:n,info:t,active:d,deposit:c,withdraw:o,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return r}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={};if(i.spot)r.symbol=i.id,void 0!==t&&(r.size=t);else if(i.swap||i.future)throw new b(this.id+" fetchOrderBook () does not accept swap or future markets, only spot markets are allowed");const a=await this.publicSpotGetSymbolsBook(this.extend(r,s)),n=this.safeValue(a,"data",{});return this.parseOrderBook(n,e,void 0,"buys","sells","price","amount")}parseTrade(e,t){const s=this.safeString2(e,"trade_id","detail_id");let i=this.safeInteger2(e,"order_time","create_time");void 0===i&&(i=this.safeTimestamp(e,"s_t")),void 0===i&&(i=this.parse8601(this.safeString(e,"created_at")));const r=this.safeInteger(e,"way");let a,n=this.safeStringLower2(e,"type","side");void 0===n&&void 0!==r&&(n=r<5?"buy":"sell");const o=this.safeString(e,"exec_type");void 0!==o&&(a="M"===o?"maker":"taker");let c=this.safeString2(e,"price","deal_price");c=this.safeString(e,"price_avg",c);let d=this.safeString2(e,"count","deal_vol");d=this.safeString(e,"size",d);const h=this.safeString2(e,"amount","notional"),l=this.safeInteger(e,"order_id"),u=this.safeString2(e,"contract_id","symbol");t=this.safeMarket(u,t,"_");const f=this.safeString(e,"fees");let p;if(void 0!==f){const s=this.safeString(e,"fee_coin_name");let i=this.safeCurrencyCode(s);void 0===i&&(i="buy"===n?t.base:t.quote),p={cost:f,currency:i}}return this.safeTrade({info:e,id:s,order:l,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:undefined,side:n,price:c,amount:d,cost:h,takerOrMaker:a,fee:p},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};if(r.spot)a.symbol=r.id;else if(r.swap||r.future)throw new b(this.id+" fetchTrades () does not accept swap or future markets, only spot markets are allowed");const n=await this.publicSpotGetSymbolsTrades(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}parseOHLCV(e,t){return Array.isArray(e)?[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]:[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=a.type,o={},c=this.parseTimeframe(t);if("spot"===n){o.symbol=a.id,o.step=this.timeframes[t];const e=500;if(void 0===i&&(i=e),i=Math.min(e,i),void 0===s){const e=parseInt(this.milliseconds()/1e3),t=e-i*c;o.from=t,o.to=e}else{const e=parseInt(s/1e3)-1,t=this.sum(e,i*c);o.from=e,o.to=t}}else if("swap"===n||"future"===n)throw new b(this.id+" fetchOHLCV () does not accept swap or future markets, only spot markets are allowed");const d=await this.publicSpotGetSymbolsKline(this.extend(o,r)),h=this.safeValue(d,"data",{}),l=this.safeValue(h,"klines",[]);return this.parseOHLCVs(l,a,t,s,i)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new l(this.id+" fetchMyTrades () requires a symbol argument");await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchMyTrades",r,i);if("swap"===a||"future"===a)throw new b(this.id+" fetchMyTrades () does not accept swap or future markets, only spot markets are allowed");const o={};if(r.spot)o.symbol=r.id,o.offset=1,void 0===s&&(s=100),o.limit=s;else if(r.swap||r.future)throw new b(this.id+" fetchMyTrades () does not accept swap or future markets, only spot markets are allowed");const c=await this.privateSpotGetTrades(this.extend(o,n)),d=this.safeValue(c,"data",{}),h=this.safeValue(d,"trades",[]);return this.parseTrades(h,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){if(void 0===t)throw new l(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(t),[n,o]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r);if("swap"===n||"future"===n)throw new b(this.id+" fetchOrderTrades () does not accept swap or future orders, only spot orders are allowed");const c={};if(a.spot)c.symbol=a.id,c.order_id=e;else if(a.swap||a.future)throw new b(this.id+" fetchOrderTrades () does not accept swap or future orders, only spot orders are allowed");const d=await this.privateSpotGetTrades(this.extend(c,o)),h=this.safeValue(d,"data",{}),u=this.safeValue(h,"trades",[]);return this.parseTrades(u,a,s,i)}parseBalance(e){const t=this.safeValue(e,"data",{}),s=this.safeValue2(t,"wallet","accounts",[]),i={info:e};for(let e=0;e<s.length;e++){const t=s[e];let r=this.safeString2(t,"id","currency");r=this.safeString(t,"coin_code",r);const a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString2(t,"available","available_vol"),n.used=this.safeString2(t,"frozen","freeze_vol"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);if("swap"===t||"future"===t)throw new b(this.id+" fetchBalance () does not accept swap or future balances, only spot and account balances are allowed");const i=this.getSupportedMapping(t,{spot:"privateSpotGetWallet",account:"privateAccountGetWallet"}),r=await this[i](s);return this.parseBalance(r)}parseOrder(e,t){let s;"string"==typeof e&&(s=e,e={}),s=this.safeString(e,"order_id",s);let i=this.parse8601(this.safeString(e,"created_at"));i=this.safeInteger(e,"create_time",i);const r=this.safeString2(e,"symbol","contract_id"),a=this.safeSymbol(r,t,"_");let n;void 0!==t&&(n=this.parseOrderStatusByType(t.type,this.safeString(e,"status")));const o=this.safeString2(e,"size","vol"),c=this.safeString2(e,"filled_size","done_vol"),d=this.safeString2(e,"price_avg","done_avg_price"),h=this.safeString(e,"price"),l=this.safeString2(e,"way","side"),u=this.safeInteger(e,"category");let f,p,m=this.safeString(e,"type");return 1===u?m="limit":2===u&&(m="market"),"limit_maker"===m&&(m="limit",p=!0,f="PO"),"ioc"===m&&(m="limit",f="IOC"),this.safeOrder({id:s,clientOrderId:void 0,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:a,type:m,timeInForce:f,postOnly:p,side:l,price:h,stopPrice:void 0,amount:o,cost:void 0,average:d,filled:c,remaining:void 0,status:n,fee:void 0,trades:void 0},t)}parseOrderStatusByType(e,t){const s=this.safeValue({spot:{1:"failed",2:"open",3:"failed",4:"open",5:"open",6:"closed",7:"canceling",8:"canceled"},swap:{1:"open",2:"open",4:"closed"}},e,{});return this.safeString(s,t,t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={},c=this.safeString(a,"timeInForce");if("FOK"===c)throw new f(this.id+" createOrder () only accepts timeInForce parameter values of IOC or PO");const d="market"===t,h=this.isPostOnly(d,"limit_maker"===t,a);a=this.omit(a,["timeInForce","postOnly"]);const l="IOC"===c||"ioc"===t,u="limit"===t||h||l;let p;if(n.spot){if(o.symbol=n.id,o.side=s,o.type=t,p="privateSpotPostSubmitOrder",u)o.size=this.amountToPrecision(e,i),o.price=this.priceToPrecision(e,r);else if(d)if("buy"===s){let e=this.safeNumber(a,"notional");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==r)void 0===e&&(e=i*r);else if(void 0===e)throw new f(this.id+" createOrder () requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'notional' extra parameter (the exchange-specific behaviour)")}else e=void 0===e?i:e;o.notional=this.decimalToPrecision(e,w,n.precision.price,this.precisionMode)}else"sell"===s&&(o.size=this.amountToPrecision(e,i))}else if(n.swap||n.future)throw new b(this.id+" createOrder () does not accept swap or future orders, only spot orders are allowed");h&&(o.type="limit_maker"),l&&(o.type="ioc");const m=await this[p](this.extend(o,a)),g=this.safeValue(m,"data",{});return this.parseOrder(g,n)}async cancelOrder(e,t,s={}){if(void 0===t)throw new l(this.id+" cancelOrder () requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={};if(i.spot)r.order_id=parseInt(e),r.symbol=i.id;else if(i.swap||i.future)throw new b(this.id+" cancelOrder () does not accept swap or future orders, only spot orders are allowed");const a=await this.privateSpotPostCancelOrder(this.extend(r,s)),n=this.safeValue(a,"data");if(!0===n)return this.parseOrder(e,i);const o=this.safeValue(n,"succeed");if(void 0!==o){if(void 0===(e=this.safeString(o,0)))throw new f(this.id+" cancelOrder() failed to cancel "+t+" order id "+e)}else{if(!this.safeValue(n,"result"))throw new f(this.id+" cancelOrder() "+t+" order id "+e+" is filled or canceled")}const c=this.parseOrder(e,i);return this.extend(c,{id:e})}async cancelAllOrders(e,t={}){if(void 0===e)throw new l(this.id+" cancelAllOrders() requires a symbol argument");const s=this.safeString(t,"side");if(void 0===s)throw new l(this.id+" cancelAllOrders() requires a `side` parameter ('buy' or 'sell')");await this.loadMarkets();const i=this.market(e);if(!i.spot)throw new b(this.id+" cancelAllOrders() does not support "+i.type+" orders, only spot orders are accepted");const r={symbol:i.id,side:s};return await this.privateSpotPostCancelOrders(this.extend(r,t))}async fetchOrdersByStatus(e,t,s,i,r={}){if(void 0===t)throw new l(this.id+" fetchOrdersByStatus() requires a symbol argument");await this.loadMarkets();const a=this.market(t),[n,o]=this.handleMarketTypeAndParams("fetchOrdersByStatus",a,r);if("swap"===n||"future"===n)throw new b(this.id+" fetchOrdersByStatus () does not support swap or futures orders, only spot orders are allowed");const c={};if(a.spot)c.symbol=a.id,c.offset=1,c.limit=100,c.status="open"===e?9:"closed"===e?6:"canceled"===e?8:e;else if(a.swap||a.future)throw new b(this.id+" fetchOrdersByStatus () does not support swap or futures orders, only spot orders are allowed");const d=await this.privateSpotGetOrders(this.extend(c,o)),h=this.safeValue(d,"data",{}),u=this.safeValue(h,"orders",[]);return this.parseOrders(u,a,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("open",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("closed",e,t,s,i)}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("canceled",e,t,s,i)}async fetchOrder(e,t,s={}){if(void 0===t)throw new l(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i={},r=this.market(t);"string"!=typeof e&&(e=e.toString());const[a,n]=this.handleMarketTypeAndParams("fetchOrder",r,s);if("swap"===a||"future"===a)throw new b(this.id+" fetchOrder () does not support swap or futures orders, only spot orders are allowed");if(r.spot)i.symbol=r.id,i.order_id=e;else if(r.swap||r.future)throw new b(this.id+" fetchOrder () does not support swap or futures orders, only spot orders are allowed");const o=await this.privateSpotGetOrderDetail(this.extend(i,n)),c=this.safeValue(o,"data");if("orders"in c){const s=this.safeValue(c,"orders",[]),i=this.safeValue(s,0);if(void 0===i)throw new g(this.id+" fetchOrder() could not find "+t+" order id "+e);return this.parseOrder(i,r)}return this.parseOrder(c,r)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id};if("USDT"===e){const i=this.safeValue(this.options,"defaultNetworks"),r=this.safeStringUpper(i,e),a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper(t,"network",r);n=this.safeString(a,n,n),void 0!==n&&(s.currency+="-"+n,t=this.omit(t,"network"))}const i=await this.privateAccountGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data",{}),a=this.safeString(r,"address"),n=this.safeString(r,"address_memo"),o=this.safeString(r,"chain");let c;if(void 0!==o){const e=o.split("-"),t=this.safeString(e,1);c=this.safeNetwork(t)}return this.checkAddress(a),{currency:e,address:a,tag:n,network:c,info:i}}safeNetwork(e){return e}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,destination:"To Digital Address",address:s};if(void 0!==i&&(n.address_memo=i),"USDT"===e){const t=this.safeValue(this.options,"defaultNetworks"),s=this.safeStringUpper(t,e),i=this.safeValue(this.options,"networks",{});let a=this.safeStringUpper(r,"network",s);a=this.safeString(i,a,a),void 0!==a&&(n.currency+="-"+a,r=this.omit(r,"network"))}const o=await this.privateAccountPostWithdrawApply(this.extend(n,r)),c=this.safeValue(o,"data"),d=this.parseTransaction(c,a);return this.extend(d,{code:e,address:s,tag:i})}async fetchTransactionsByType(e,t,s,i,r={}){await this.loadMarkets(),void 0===i&&(i=50);const a={operation_type:e,offset:1,limit:i};let n;void 0!==t&&(n=this.currency(t),a.currency=n.id);const o=await this.privateAccountGetDepositWithdrawHistory(this.extend(a,r)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"records",[]);return this.parseTransactions(d,n,s,i)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateAccountGetDepositWithdrawDetail(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"record",{});return this.parseTransaction(n)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsByType("deposit",e,t,s,i)}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateAccountGetDepositWithdrawDetail(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"record",{});return this.parseTransaction(n)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsByType("withdraw",e,t,s,i)}parseTransactionStatus(e){return this.safeString({0:"pending",1:"pending",2:"pending",3:"ok",4:"canceled",5:"failed"},e,e)}parseTransaction(e,t){let s;const i=this.safeString(e,"withdraw_id"),r=this.safeString(e,"deposit_id");let a;void 0!==i&&""!==i?(a="withdraw",s=i):void 0!==r&&""!==r&&(a="deposit",s=r);const n=this.safeNumber(e,"arrival_amount"),o=this.safeInteger(e,"apply_time"),c=this.safeString(e,"currency"),d=this.safeCurrencyCode(c,t),h=this.parseTransactionStatus(this.safeString(e,"status")),l=this.safeNumber(e,"fee");let u;void 0!==l&&(u={cost:l,currency:d});const f=this.safeString(e,"tx_id");return{info:e,id:s,currency:d,amount:n,network:void 0,address:this.safeString(e,"address"),addressFrom:void 0,addressTo:void 0,tag:this.safeString(e,"address_memo"),tagFrom:void 0,tagTo:void 0,status:h,type:a,updated:void 0,txid:f,timestamp:o,datetime:this.iso8601(o),fee:u}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const n=this.safeString(t,0),o=this.safeString(t,1);let c=this.implodeHostname(this.urls.api.rest)+"/"+o;"system"!==o&&(c+="/"+this.version),c+="/"+this.implodeParams(e,i);const d=this.omit(i,this.extractParams(e));let h="";const l="GET"===s||"DELETE"===s;if(l&&Object.keys(d).length&&(h=this.urlencode(d),c+="?"+h),"private"===n){this.checkRequiredCredentials();const e=this.milliseconds().toString();r={"X-BM-KEY":this.apiKey,"X-BM-TIMESTAMP":e,"Content-Type":"application/json"},l||(h=a=this.json(d));const t=e+"#"+this.uid+"#"+h,s=this.hmac(this.encode(t),this.encode(this.secret));r["X-BM-SIGN"]=s}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(void 0===n)return;const d=this.safeString(n,"message"),h=this.safeString(n,"code");if(void 0!==h&&"1000"!==h||void 0!==d&&"OK"!==d){const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),this.throwExactlyMatchedException(this.exceptions.exact,d,e),this.throwBroadlyMatchedException(this.exceptions.broad,d,e),new u(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],160:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{AuthenticationError:a,BadRequest:n,DDoSProtection:o,ExchangeError:c,ExchangeNotAvailable:d,InsufficientFunds:h,InvalidOrder:l,OrderNotFound:u,PermissionDenied:f,ArgumentsRequired:p,BadSymbol:m}=e("./base/errors"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitmex",name:"BitMEX",countries:["SC"],version:"v1",userAgent:void 0,rateLimit:2e3,pro:!0,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,addMargin:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,reduceMargin:void 0,setLeverage:!0,setMargin:void 0,setMarginMode:!0,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","1h":"1h","1d":"1d"},urls:{test:{public:"https://testnet.bitmex.com",private:"https://testnet.bitmex.com"},logo:"https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg",api:{public:"https://www.bitmex.com",private:"https://www.bitmex.com"},www:"https://www.bitmex.com",doc:["https://www.bitmex.com/app/apiOverview","https://github.com/BitMEX/api-connectors/tree/master/official-http"],fees:"https://www.bitmex.com/app/fees",referral:"https://www.bitmex.com/register/upZpOX"},api:{public:{get:["announcement","announcement/urgent","funding","instrument","instrument/active","instrument/activeAndIndices","instrument/activeIntervals","instrument/compositeIndex","instrument/indices","insurance","leaderboard","liquidation","orderBook","orderBook/L2","quote","quote/bucketed","schema","schema/websocketHelp","settlement","stats","stats/history","trade","trade/bucketed"]},private:{get:["apiKey","chat","chat/channels","chat/connected","execution","execution/tradeHistory","notification","order","position","user","user/affiliateStatus","user/checkReferralCode","user/commission","user/depositAddress","user/executionHistory","user/margin","user/minWithdrawalFee","user/wallet","user/walletHistory","user/walletSummary"],post:["apiKey","apiKey/disable","apiKey/enable","chat","order","order/bulk","order/cancelAllAfter","order/closePosition","position/isolate","position/leverage","position/riskLimit","position/transferMargin","user/cancelWithdrawal","user/confirmEmail","user/confirmEnableTFA","user/confirmWithdrawal","user/disableTFA","user/logout","user/logoutAll","user/preferences","user/requestEnableTFA","user/requestWithdrawal"],put:["order","order/bulk","user"],delete:["apiKey","order","order/all"]}},exceptions:{exact:{"Invalid API Key.":a,"This key is disabled.":f,"Access Denied":f,"Duplicate clOrdID":l,"orderQty is invalid":l,"Invalid price":l,"Invalid stopPx for ordType":l},broad:{"Signature not valid":a,overloaded:d,"Account has insufficient Available Balance":h,"Service unavailable":d,"Server Error":c,"Unable to cancel order due to existing state":l,"We require all new traders to verify":f}},precisionMode:r,options:{"api-expires":5,fetchOHLCVOpenTimestamp:!0},commonCurrencies:{USDt:"USDT",XBt:"BTC",XBT:"BTC"}})}async fetchMarkets(e={}){const t=await this.publicGetInstrumentActiveAndIndices(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=this.safeString(i,"underlying"),n=this.safeString(i,"quoteCurrency"),o=this.safeString(i,"settlCurrency",""),c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),l=r===a+n;let u,f=!1,p=!1,m=!1,y=c+"/"+d+":"+h;const b=this.safeString(i,"expiry"),v=this.parse8601(b),w=this.safeValue(i,"isInverse");let S="Unlisted"!==this.safeString(i,"state");l?u="swap":r.indexOf("B_")>=0?(p=!0,u="prediction",y=r):void 0!==v?(f=!0,u="future",y=y+"-"+this.yymmdd(v)):(m=!0,u="index",y=r,S=!1);const k=this.safeString2(i,"positionCurrency","underlying"),T=this.safeCurrencyCode(k)===d,O=this.safeNumber(i,"maxOrderQty"),_=!m,x=this.safeString(i,"initMargin","1"),M=this.parseNumber(g.stringDiv("1",x));s.push({id:r,symbol:y,base:c,quote:d,settle:h,baseId:a,quoteId:n,settleId:o,type:u,spot:!1,margin:!1,swap:l,future:f,option:!1,prediction:p,index:m,active:S,contract:_,linear:_?!w:void 0,inverse:_?w:void 0,taker:this.safeNumber(i,"takerFee"),maker:this.safeNumber(i,"makerFee"),contractSize:this.safeNumber(i,"multiplier"),expiry:v,expiryDatetime:b,strike:this.safeNumber(i,"optionStrikePrice"),optionType:void 0,precision:{amount:this.safeNumber(i,"lotSize"),price:this.safeNumber(i,"tickSize")},limits:{leverage:{min:_?this.parseNumber("1"):void 0,max:_?M:void 0},amount:{min:void 0,max:T?void 0:O},price:{min:void 0,max:this.safeNumber(i,"maxPrice")},cost:{min:void 0,max:T?O:void 0}},info:i})}return s}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();let o=this.safeString(i,"availableMargin"),c=this.safeString(i,"marginBalance");"USDT"!==a?(o=g.stringDiv(o,"1e8"),c=g.stringDiv(c,"1e8")):(o=g.stringDiv(o,"1e6"),c=g.stringDiv(c,"1e6")),n.free=o,n.total=c,t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserMargin(this.extend({currency:"all"},e));return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id};void 0!==t&&(i.depth=t);const r=await this.publicGetOrderBookL2(this.extend(i,s)),a={symbol:e,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let e=0;e<r.length;e++){const t=r[e],s="Sell"===t.side?"asks":"bids",i=this.safeNumber(t,"size"),n=this.safeNumber(t,"price");void 0!==n&&a[s].push([n,i])}return a.bids=this.sortBy(a.bids,0,!0),a.asks=this.sortBy(a.asks,0),a}async fetchOrder(e,t,s={}){const i={filter:{orderID:e}},r=await this.fetchOrders(t,void 0,void 0,this.deepExtend(i,s));if(1===r.length)return r[0];throw new u(this.id+": The order "+e+" not found.")}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==s&&(a.count=s),a=this.deepExtend(a,i),"filter"in a&&(a.filter=this.json(a.filter));const n=await this.privateGetOrder(a);return this.parseOrders(n,r,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.deepExtend({filter:{open:!0}},i))}async fetchClosedOrders(e,t,s,i={}){const r=await this.fetchOrders(e,t,s,i);return this.filterBy(r,"status","closed")}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==s&&(a.count=s),a=this.deepExtend(a,i),"filter"in a&&(a.filter=this.json(a.filter));const n=await this.privateGetExecutionTradeHistory(a);return this.parseTrades(n,r,t,s)}parseLedgerEntryType(e){return this.safeString({Withdrawal:"transaction",RealisedPNL:"margin",UnrealisedPNL:"margin",Deposit:"transaction",Transfer:"transfer",AffiliatePayout:"referral"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"transactID"),i=this.safeString(e,"account"),r=this.safeString(e,"tx"),a=this.parseLedgerEntryType(this.safeString(e,"transactType")),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t);let c=this.safeNumber(e,"amount");void 0!==c&&(c/=1e8);let d=this.parse8601(this.safeString(e,"transactTime"));void 0===d&&(d=0);let h=this.safeNumber(e,"fee",0);void 0!==h&&(h/=1e8);const l={cost:h,currency:o};let u=this.safeNumber(e,"walletBalance");void 0!==u&&(u/=1e8);const f=this.sum(u,-c);let p;c<0?(p="out",c=Math.abs(c)):p="in";const m=this.parseTransactionStatus(this.safeString(e,"transactStatus"));return{id:s,info:e,timestamp:d,datetime:this.iso8601(d),direction:p,account:i,referenceId:r,referenceAccount:undefined,type:a,currency:o,amount:c,before:f,after:u,status:m,fee:l}}async fetchLedger(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={};void 0!==s&&(a.count=s);const n=await this.privateGetUserWalletHistory(this.extend(a,i));return this.parseLedger(n,r,t,s)}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.count=s);const a=await this.privateGetUserWalletHistory(this.extend(r,i)),n=this.filterByArray(a,"transactType",["Withdrawal","Deposit"],!1);let o;return void 0!==e&&(o=this.currency(e)),this.parseTransactions(n,o,t,s)}parseTransactionStatus(e){return this.safeString({Canceled:"canceled",Completed:"ok",Pending:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"transactID"),i=this.parse8601(this.safeString(e,"transactTime")),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeStringLower(e,"transactType");let n,o,c;"withdrawal"===a&&(n=this.safeString(e,"address"),o=this.safeString(e,"tx"),c=n);let d=this.safeString(e,"amount");d=g.stringDiv(g.stringAbs(d),"1e8");let h=this.safeString(e,"fee");h=g.stringDiv(h,"1e8");const l={cost:this.parseNumber(h),currency:"BTC"};let u=this.safeString(e,"transactStatus");return void 0!==u&&(u=this.parseTransactionStatus(u)),{info:e,id:s,txid:void 0,timestamp:i,datetime:this.iso8601(i),network:void 0,addressFrom:o,address:n,addressTo:c,tagFrom:void 0,tag:void 0,tagTo:void 0,type:a,amount:this.parseNumber(d),currency:"BTC",status:u,updated:r,comment:void 0,fee:l}}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=await this.fetchTickers([s.symbol],t),r=this.safeValue(i,s.symbol);if(void 0===r)throw new m(this.id+" fetchTicker() symbol "+e+" not found");return r}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetInstrumentActiveAndIndices(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]),r=this.safeString(t,"symbol");void 0!==r&&(i[r]=t)}const r=[];if(void 0!==e){for(let t=0;t<e.length;t++){const s=e[t],i=this.market(s);r.push(i.symbol)}return this.filterByArray(i,"symbol",r)}return i}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"prevPrice24h"),n=this.safeString(e,"lastPrice");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:void 0,ask:this.safeString(e,"askPrice"),askVolume:void 0,vwap:this.safeString(e,"vwap"),open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"homeNotional24h"),quoteVolume:this.safeString(e,"foreignNotional24h"),info:e},t)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,binSize:this.timeframes[t],partial:!0};void 0!==i&&(n.count=i);const o=1e3*this.parseTimeframe(t),c=this.safeValue(this.options,"fetchOHLCVOpenTimestamp",!0);if(void 0!==s){let e=s;c&&(e=this.sum(e,o));const t=this.ymdhms(e);n.startTime=t}else n.reverse=!0;const d=await this.publicGetTradeBucketed(this.extend(n,r)),h=this.parseOHLCVs(d,a,t,s,i);if(c)for(let e=0;e<h.length;e++)h[e][0]=h[e][0]-o;return h}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"timestamp")),i=this.safeString2(e,"avgPx","price"),r=this.safeString2(e,"size","lastQty"),a=this.safeString(e,"execCost"),n=g.stringDiv(g.stringAbs(a),"1e8"),o=this.safeString(e,"trdMatchID"),c=this.safeString(e,"orderID"),d=this.safeStringLower(e,"side");let h;const l=g.stringDiv(this.safeString(e,"execComm"),"1e8");if(void 0!==l){const t=this.safeString(e,"settlCurrency");h={cost:l,currency:this.safeCurrencyCode(t),rate:this.safeString(e,"commission")}}const u=this.safeString(e,"execType");let f;void 0!==l&&"Trade"===u&&(f=g.stringLt(l,"0")?"maker":"taker");const p=this.safeString(e,"symbol"),m=this.safeSymbol(p,t),y=this.safeStringLower(e,"ordType");return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:m,id:o,order:c,type:y,takerOrMaker:f,side:d,price:i,cost:n,amount:r,fee:h},t)}parseOrderStatus(e){return this.safeString({New:"open",PartiallyFilled:"open",Filled:"closed",DoneForDay:"open",Canceled:"canceled",PendingCancel:"open",PendingNew:"open",Rejected:"rejected",Expired:"expired",Stopped:"open",Untriggered:"open",Triggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({Day:"Day",GoodTillCancel:"GTC",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"ordStatus")),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.parse8601(this.safeString(e,"timestamp")),n=this.parse8601(this.safeString(e,"transactTime")),o=this.safeString(e,"price"),c=this.safeString(e,"orderQty"),d=this.safeString(e,"cumQty"),h=this.safeString(e,"avgPx"),l=this.safeString(e,"orderID"),u=this.safeStringLower(e,"ordType"),f=this.safeStringLower(e,"side"),p=this.safeString(e,"clOrdID"),m=this.parseTimeInForce(this.safeString(e,"timeInForce")),g=this.safeNumber(e,"stopPx"),y=this.safeString(e,"execInst");let b;return void 0!==y&&(b="ParticipateDoNotInitiate"===y),this.safeOrder({info:e,id:l,clientOrderId:p,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:n,symbol:r,type:u,timeInForce:m,postOnly:b,side:f,price:o,stopPrice:g,amount:c,cost:void 0,average:h,filled:d,remaining:void 0,status:s,fee:void 0,trades:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t?a.startTime=this.iso8601(t):a.reverse=!0,void 0!==s&&(a.count=s);const n=await this.publicGetTrade(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.capitalize(t),c=this.safeValue(a,"reduceOnly");if(void 0!==c&&"swap"!==n.type&&"future"!==n.type)throw new l(this.id+" createOrder() does not support reduceOnly for "+n.type+" orders, reduceOnly orders are supported for swap and future markets only");const d={symbol:n.id,side:this.capitalize(s),orderQty:parseFloat(this.amountToPrecision(e,i)),ordType:o};if(c&&(d.execInst="ReduceOnly"),"Stop"===o||"StopLimit"===o||"MarketIfTouched"===o||"LimitIfTouched"===o){const t=this.safeNumber2(a,"stopPx","stopPrice");if(void 0===t)throw new p(this.id+" createOrder() requires a stopPx or stopPrice parameter for the "+o+" order type");d.stopPx=parseFloat(this.priceToPrecision(e,t)),a=this.omit(a,["stopPx","stopPrice"])}"Limit"!==o&&"StopLimit"!==o&&"LimitIfTouched"!==o||(d.price=parseFloat(this.priceToPrecision(e,r)));const h=this.safeString2(a,"clOrdID","clientOrderId");void 0!==h&&(d.clOrdID=h,a=this.omit(a,["clOrdID","clientOrderId"]));const u=await this.privatePostOrder(this.extend(d,a));return this.parseOrder(u,n)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o={},c=this.safeString2(n,"origClOrdID","clientOrderId");if(void 0!==c){o.origClOrdID=c;const e=this.safeString(n,"clOrdID","clientOrderId");void 0!==e&&(o.clOrdID=e),n=this.omit(n,["origClOrdID","clOrdID","clientOrderId"])}else o.orderID=e;void 0!==r&&(o.orderQty=r),void 0!==a&&(o.price=a);const d=await this.privatePutOrder(this.extend(o,n));return this.parseOrder(d)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"clOrdID","clientOrderId"),r={};void 0===i?r.orderID=e:(r.clOrdID=i,s=this.omit(s,["clOrdID","clientOrderId"]));const a=await this.privateDeleteOrder(this.extend(r,s)),n=this.safeValue(a,0,{}),o=this.safeString(n,"error");if(void 0!==o&&o.indexOf("Unable to cancel order due to existing state")>=0)throw new u(this.id+" cancelOrder() failed: "+o);return this.parseOrder(n)}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"clOrdID","clientOrderId"),r={};void 0===i?r.orderID=e:(r.clOrdID=i,s=this.omit(s,["clOrdID","clientOrderId"]));const a=await this.privateDeleteOrder(this.extend(r,s));return this.parseOrders(a)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.symbol=i.id);const r=await this.privateDeleteOrderAll(this.extend(s,t));return this.parseOrders(r,i)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.privateGetPosition(t);return this.parsePositions(s,e)}parsePosition(e,t){const s=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,i=this.safeString(e,"timestamp"),r=!0===this.safeValue(e,"crossMargin")?"cross":"isolated";let a;"USDT"===t.quote&&(a=g.stringMul(this.safeString(e,"foreignNotional"),"-1"));const n=this.safeNumber(e,"maintMargin"),o=this.safeNumber(e,"unrealisedPnl"),c=this.omitZero(this.safeNumber(e,"currentQty"));return{info:e,id:this.safeString(e,"account"),symbol:s,timestamp:this.parse8601(i),datetime:i,hedged:void 0,side:void 0,contracts:this.convertValue(c,t),contractSize:void 0,entryPrice:this.safeNumber(e,"avgEntryPrice"),markPrice:this.safeNumber(e,"markPrice"),notional:a,leverage:this.safeNumber(e,"leverage"),collateral:void 0,initialMargin:void 0,initialMarginPercentage:this.safeNumber(e,"initMarginReq"),maintenanceMargin:this.convertValue(n,t),maintenanceMarginPercentage:void 0,unrealizedPnl:this.convertValue(o,t),liquidationPrice:this.safeNumber(e,"liquidationPrice"),marginMode:r,marginRatio:void 0,percentage:this.safeNumber(e,"unrealisedPnlPcnt")}}convertValue(e,t){if(void 0===e||void 0===t)return e;let s;return e=this.numberToString(e),"USD"!==t.quote&&"EUR"!==t.quote||(s=g.stringMul(e,"0.00000001")),"USDT"===t.quote&&(s=g.stringMul(e,"0.000001")),parseFloat(s)}isFiat(e){return"EUR"===e||"PLN"===e}async withdraw(e,t,s,i,r={}){if([i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets(),"BTC"!==e)throw new c(this.id+" supoprts BTC withdrawals only, other currencies coming soon...");const a=this.currency(e),n={currency:"XBt",amount:t,address:s},o=await this.privatePostUserRequestWithdrawal(this.extend(n,r));return this.parseTransaction(o,a)}async fetchFundingRates(e,t={}){await this.loadMarkets();const s=await this.publicGetInstrumentActiveAndIndices(t),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r);this.safeValue(a,"swap",!1)&&i.push(t)}return this.parseFundingRates(i,e)}parseFundingRate(e,t){const s=this.safeString(e,"timestamp"),i=this.safeString(e,"symbol"),r=this.safeString(e,"fundingTimestamp");return{info:e,symbol:this.safeSymbol(i,t),markPrice:this.safeNumber(e,"markPrice"),indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:this.safeNumber(e,"indicativeSettlePrice"),timestamp:this.parse8601(s),datetime:s,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:this.iso8601(r),fundingDatetime:r,nextFundingRate:this.safeNumber(e,"indicativeFundingRate"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRateHistory(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(e in this.currencies){const t=this.currency(e);r.symbol=t.id}else if(void 0!==e){const t=e.split(":"),s=["nearest","daily","weekly","monthly","quarterly","biquarterly","perpetual"];if(t.length>1&&this.inArray(t[1],s)){e=this.currency(t[0]).id+":"+t[1],r.symbol=e}else a=this.market(e),r.symbol=a.id}void 0!==t&&(r.startTime=this.iso8601(t)),void 0!==s&&(r.count=s);const n=this.safeInteger2(i,"until","till");i=this.omit(i,["until","till"]),void 0!==n&&(r.endTime=this.iso8601(n));const o=await this.publicGetFunding(this.extend(r,i));return this.parseFundingRateHistories(o,a,t,s)}parseFundingRateHistory(e,t){const s=this.safeString(e,"symbol"),i=this.safeString(e,"timestamp");return{info:e,symbol:this.safeSymbol(s,t),fundingRate:this.safeNumber(e,"fundingRate"),timestamp:this.parse8601(i),datetime:i}}async setLeverage(e,t,s={}){if(void 0===t)throw new p(this.id+" setLeverage() requires a symbol argument");if(e<.01||e>100)throw new n(this.id+" leverage should be between 0.01 and 100");await this.loadMarkets();const i=this.market(t);if("swap"!==i.type&&"future"!==i.type)throw new m(this.id+" setLeverage() supports future and swap contracts only");const r={symbol:i.id,leverage:e};return await this.privatePostPositionLeverage(this.extend(r,s))}async setMarginMode(e,t,s={}){if(void 0===t)throw new p(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new n(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();const i=this.market(t);if("swap"!==i.type&&"future"!==i.type)throw new m(this.id+" setMarginMode() supports swap and future contracts only");const r="cross"!==e,a={symbol:i.id,enabled:r};return await this.privatePostPositionIsolate(this.extend(a,s))}handleErrors(e,t,s,i,r,a,d,h,l){if(void 0!==d){if(429===e)throw new o(this.id+" "+a);if(e>=400){const t=this.safeValue(d,"error",{}),s=this.safeString(t,"message"),i=this.id+" "+a;if(this.throwExactlyMatchedException(this.exceptions.exact,s,i),this.throwBroadlyMatchedException(this.exceptions.broad,s,i),400===e)throw new n(i);throw new c(i)}}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.version+"/"+e;if("GET"===s)Object.keys(i).length&&(n+="?"+this.urlencode(i));else{const e=this.safeString(i,"_format");void 0!==e&&(n+="?"+this.urlencode({_format:e}),i=this.omit(i,"_format"))}const o=this.urls.api[t]+n;if("private"===t){this.checkRequiredCredentials();let e=s+n,t=this.safeInteger(this.options,"api-expires");r={"Content-Type":"application/json","api-key":this.apiKey},t=this.sum(this.seconds(),t),t=t.toString(),e+=t,r["api-expires"]=t,"POST"!==s&&"PUT"!==s&&"DELETE"!==s||Object.keys(i).length&&(e+=a=this.json(i)),r["api-signature"]=this.hmac(this.encode(e),this.encode(this.secret))}return{url:o,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],161:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,AuthenticationError:n,InvalidOrder:o,InsufficientFunds:c,BadRequest:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitopro",name:"BitoPro",countries:["TW"],version:"v3",rateLimit:100,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/158227251-3a92a220-9222-453c-9277-977c6677fe71.jpg",api:"https://api.bitopro.com/v3",www:"https://www.bitopro.com",doc:["https://github.com/bitoex/bitopro-offical-api-docs/blob/master/v3-1/rest-1/rest.md"],fees:"https://www.bitopro.com/fees"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["order-book/{pair}","tickers","tickers/{pair}","trades/{pair}","provisioning/currencies","provisioning/trading-pairs","provisioning/limitations-and-fees","trading-history/{pair}"]},private:{get:["accounts/balance","orders/history","orders/all/{pair}","orders/trades/{pair}","orders/{pair}/{orderId}","wallet/withdraw/{currency}/{serial}","wallet/withdraw/{currency}/id/{id}","wallet/depositHistory/{currency}","wallet/withdrawHistory/{currency}"],post:["orders/{pair}","orders/batch","wallet/withdraw/{currency}"],put:["orders"],delete:["orders/{pair}/{id}","orders/all","orders/{pair}"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("3000000"),this.parseNumber("0.00194")],[this.parseNumber("5000000"),this.parseNumber("0.0015")],[this.parseNumber("30000000"),this.parseNumber("0.0014")],[this.parseNumber("300000000"),this.parseNumber("0.0013")],[this.parseNumber("550000000"),this.parseNumber("0.0012")],[this.parseNumber("1300000000"),this.parseNumber("0.0011")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("3000000"),this.parseNumber("0.00097")],[this.parseNumber("5000000"),this.parseNumber("0.0007")],[this.parseNumber("30000000"),this.parseNumber("0.0006")],[this.parseNumber("300000000"),this.parseNumber("0.0005")],[this.parseNumber("550000000"),this.parseNumber("0.0004")],[this.parseNumber("1300000000"),this.parseNumber("0.0003")]]}}},options:{networks:{ERC20:"ERC20",ETH:"ERC20",TRX:"TRX",TRC20:"TRX"}},precisionMode:h,exceptions:{exact:{"Unsupported currency.":d,"Unsupported order type":d,"Invalid body":d,"Invalid Signature":n,"Address not in whitelist.":d},broad:{"Invalid amount":o,"Balance for ":c,"Invalid ":d,"Wrong parameter":d}},commonCurrencies:{}})}async fetchCurrencies(e={}){const t=await this.publicGetProvisioningCurrencies(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"deposit"),o=this.safeValue(t,"withdraw"),c=this.safeNumber(t,"withdrawFee"),d={withdraw:{min:this.safeNumber(t,"minWithdraw"),max:this.safeNumber(t,"maxWithdraw")},amount:{min:void 0,max:void 0}};i[a]={id:r,code:a,info:t,type:void 0,name:void 0,active:n&&o,deposit:n,withdraw:o,fee:c,precision:void 0,limits:d}}return i}async fetchMarkets(e={}){const t=await this.publicGetProvisioningTradingPairs(),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=!this.safeValue(t,"maintain"),a=this.safeString(t,"pair"),n=a.toUpperCase(),o=this.safeString(t,"base"),c=this.safeString(t,"quote"),d=this.safeCurrencyCode(o),h=this.safeCurrencyCode(c),l=d+"/"+h,u={amount:{min:this.safeNumber(t,"minLimitBaseAmount"),max:this.safeNumber(t,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}};i.push({id:a,uppercaseId:n,symbol:l,base:d,quote:h,baseId:d,quoteId:h,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,derivative:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:u,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"basePrecision")))},active:r,info:t})}return i}parseTicker(e,t){const s=this.safeString(e,"pair");t=this.safeMarket(s,t);const i=this.safeString(t,"symbol");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"lastPrice"),last:this.safeString(e,"lastPrice"),previousClose:void 0,change:void 0,percentage:this.safeString(e,"priceChange24hr"),average:void 0,baseVolume:this.safeString(e,"volume24hr"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTickersPair(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(),i=this.safeValue(s,"data",[]);return this.parseTickers(i,e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBookPair(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","price","amount")}parseTrade(e,t){const s=this.safeString(e,"tradeId"),i=this.safeString(e,"orderId");let r;r=void 0===s?this.safeTimestamp(e,"timestamp"):this.safeInteger(e,"timestamp");const a=this.safeString(e,"pair");t=this.safeMarket(a,t);const n=this.safeString(t,"symbol"),o=this.safeString(e,"price"),c=this.safeStringLower(e,"type");let d=this.safeStringLower(e,"action");if(void 0===d){d=this.safeValue(e,"isBuyer")?"buy":"sell"}let h,l=this.safeString(e,"amount");void 0===l&&(l=this.safeString(e,"baseAmount"));const u=this.safeString(e,"fee"),f=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));void 0!==u&&(h={cost:u,currency:f,rate:void 0});const p=this.safeValue(e,"isTaker");let m;return void 0!==p&&(m=p?"taker":"maker"),this.safeTrade({id:s,info:e,order:i,timestamp:r,datetime:this.iso8601(r),symbol:n,takerOrMaker:m,type:c,side:d,price:o,amount:l,cost:void 0,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradesPair(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetProvisioningLimitationsAndFees(e),s=this.safeValue(t,"tradingFeeRate",{}),i=this.safeValue(s,0),r={},a=this.safeNumber(i,"makerFee"),n=this.safeNumber(i,"takerFee");for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];r[t]={info:i,symbol:t,maker:a,taker:n,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t,s="1m",i,r){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t],o={pair:a.id,resolution:n};void 0===i&&(i=500);const c=this.parseTimeframe(t);let d;if(void 0===s)o.to=this.seconds(),o.from=o.to-i*c;else{const e=1e3*c;d=Math.floor(s/e)*e,o.from=Math.floor(s/1e3),o.to=this.sum(o.from,i*c)}const h=await this.publicGetTradingHistoryPair(this.extend(o,r)),l=this.safeValue(h,"data",[]),u=this.parseOHLCVs(l,a,t,s,i);return this.insertMissingCandles(u,c,d,i)}insertMissingCandles(e,t,s,i){if(0===e.length)return e;const r=[];let a,n=e[0];a=void 0===s?n[0]:s;let o=0;const c=e.length;let d=0;for(;d<i&&o<c;){const s=e[o];if(s[0]===a)r.push(s),o=this.sum(o,1);else{const e=this.arrayConcat([],n);e[0]=a,e[1]=e[4],e[2]=e[4],e[3]=e[4],e[5]=this.parseNumber("0"),r.push(e)}a=this.sum(a,1e3*t),d=r.length,n=r[d-1]}return r}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(i,"amount"),o={free:this.safeString(i,"available"),total:n};t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsBalance(e),s=this.safeValue(t,"data",[]);return this.parseBalance(s)}parseOrderStatus(e){return this.safeString({"-1":"open",0:"open",1:"open",2:"closed",3:"closed",4:"canceled"},e,void 0)}parseOrder(e,t){const s=this.safeString2(e,"id","orderId"),i=this.safeInteger2(e,"timestamp","createdTimestamp");let r=this.safeString(e,"action");r=r.toLowerCase();const a=this.safeString2(e,"amount","originalAmount"),n=this.safeString(e,"price"),o=this.safeString(e,"pair");t=this.safeMarket(o,t,"_");const c=this.safeString(t,"symbol"),d=this.safeString(e,"status"),h=this.parseOrderStatus(d),u=this.safeStringLower(e,"type"),f=this.safeString(e,"avgExecutionPrice"),p=this.safeString(e,"executedAmount"),m=this.safeString(e,"remainingAmount"),g=this.safeString(e,"timeInForce");let y;const b=this.safeString(e,"fee"),v=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));return l.stringGt(b,"0")&&(y={currency:v,cost:b}),this.safeOrder({id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"updatedTimestamp"),symbol:c,type:u,timeInForce:g,postOnly:void 0,side:r,price:n,stopPrice:void 0,amount:a,cost:void 0,average:f,filled:p,remaining:m,status:h,fee:y,trades:void 0,info:e},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),c={type:t,pair:n.id,action:s,amount:this.amountToPrecision(e,i),timestamp:this.milliseconds()},d=t.toUpperCase();if("LIMIT"!==d&&"STOP_LIMIT"!==d||(c.price=this.priceToPrecision(e,r)),"STOP_LIMIT"===d){const t=this.safeNumber(a,"stopPrice");if(void 0===t)throw new o(this.id+" createOrder() requires a stopPrice parameter for "+d+" orders");c.stopPrice=this.priceToPrecision(e,t);const s=this.safeString(a,"condition");if(void 0===s)throw new o(this.id+" createOrder() requires a condition parameter for "+d+" orders");c.condition=s}const h=await this.privatePostOrdersPair(this.extend(c,a),a);return this.parseOrder(h,n)}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires the symbol argument");await this.loadMarkets();const i=this.market(t),r={id:e,pair:i.id},n=await this.privateDeleteOrdersPairId(this.extend(r,s));return this.parseOrder(n,i)}async cancelOrders(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();const i={};i[this.market(t).uppercaseId]=e;return await this.privatePutOrders(this.extend(i,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i=this.safeString(this.options,"privateDeleteOrdersPair","privateDeleteOrdersAll");if(void 0!==e){const t=this.market(e);s.pair=t.id,i="privateDeleteOrdersPair"}const r=await this[i](this.extend(s,t));return this.safeValue(r,"data",{})}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires the symbol argument");await this.loadMarkets();const i=this.market(t),r={orderId:e,pair:i.id},n=await this.privateGetOrdersPairOrderId(this.extend(r,s));return this.parseOrder(n,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires the symbol argument");await this.loadMarkets();const r=this.market(e),n={pair:r.id};void 0!==t&&(n.startTimestamp=t),void 0!==s&&(n.limit=s);const o=await this.privateGetOrdersAllPair(this.extend(n,i),i);let c=this.safeValue(o,"data");return void 0===c&&(c=[]),this.parseOrders(c,r,t,s)}fetchOpenOrders(e,t,s,i={}){return this.fetchOrders(e,t,s,this.extend({statusKind:"OPEN"},i))}async fetchClosedOrders(e,t,s,i={}){return this.fetchOrders(e,t,s,this.extend({statusKind:"DONE"},i))}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires the symbol argument");await this.loadMarkets();const r=this.market(e),n={pair:r.id},o=await this.privateGetOrdersTradesPair(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok",INVALID:"failed",PROCESSING:"pending",WAIT_PROCESS:"pending",FAILED:"failed",EXPIRED:"failed",CANCELLED:"failed",EMAIL_VERIFICATION:"pending",WAIT_CONFIRMATION:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"coin"),i=this.safeCurrencyCode(s,t),r=this.safeString(e,"serial"),a=this.safeString(e,"txid"),n=this.safeInteger(e,"timestamp"),o=this.safeNumber(e,"total"),c=this.safeString(e,"address"),d=this.safeString(e,"message"),h=this.safeString(e,"status"),l=this.safeNumber(e,"fee");return{info:e,id:r,txid:a,timestamp:n,datetime:this.iso8601(n),network:void 0,addressFrom:void 0,address:c,addressTo:c,tagFrom:void 0,tag:d,tagTo:d,type:void 0,amount:o,currency:i,status:this.parseTransactionStatus(h),updated:void 0,fee:{currency:i,cost:l,rate:void 0}}}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchDeposits() requires the code argument");await this.loadMarkets();const r=this.safeCurrency(e),n={currency:r.id};void 0!==t&&(n.startTimestamp=t),void 0!==s&&(n.limit=s);const o=await this.privateGetWalletDepositHistoryCurrency(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,r,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchWithdrawals() requires the code argument");await this.loadMarkets();const r=this.safeCurrency(e),n={currency:r.id};void 0!==t&&(n.startTimestamp=t),void 0!==s&&(n.limit=s);const o=await this.privateGetWalletWithdrawHistoryCurrency(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,r,t,s,{type:"withdrawal"})}async fetchWithdrawal(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchWithdrawal() requires the code argument");await this.loadMarkets();const i=this.safeCurrency(t),r={serial:e,currency:i.id},n=await this.privateGetWalletWithdrawCurrencySerial(this.extend(r,s)),o=this.safeValue(n,"data",{});return this.parseTransaction(o,i)}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),await this.loadMarkets(),this.checkAddress(s);const n=this.currency(e),o={currency:n.id,amount:this.numberToString(t),address:s};if("network"in a){const e=this.safeValue(this.options,"networks",{}),t=this.safeStringUpper(a,"network");a=this.omit(a,["network"]);const s=this.safeString(e,t);if(void 0===s)throw new r(this.id+" invalid network "+t);o.protocol=s}void 0!==i&&(o.message=i);const c=await this.privatePostWalletWithdrawCurrency(this.extend(o,a)),d=this.safeValue(c,"data",{});return this.parseTransaction(d,n)}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if(void 0===r&&(r={}),r["X-BITOPRO-API"]="ccxt","private"===t){if(this.checkRequiredCredentials(),"POST"===s||"PUT"===s){a=this.json(i);const e=this.stringToBase64(a),t=this.hmac(e,this.encode(this.secret),"sha384");r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=e,r["X-BITOPRO-SIGNATURE"]=t}else if("GET"===s||"DELETE"===s){Object.keys(o).length&&(n+="?"+this.urlencode(o));let e={nonce:this.milliseconds()};e=this.json(e);const t=this.stringToBase64(e),s=this.hmac(t,this.encode(this.secret),"sha384");r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=t,r["X-BITOPRO-SIGNATURE"]=s}}else"public"===t&&"GET"===s&&Object.keys(o).length&&(n+="?"+this.urlencode(o));return n=this.urls.api+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(e>=200&&e<300)return;const h=this.id+" "+n,l=this.safeString(o,"error");throw this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,l,h),new r(h)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],162:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeError:a,PermissionDenied:n,BadRequest:o,ArgumentsRequired:c,OrderNotFound:d,InsufficientFunds:h,ExchangeNotAvailable:l,DDoSProtection:u,InvalidAddress:f,InvalidOrder:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitpanda",name:"Bitpanda Pro",countries:["AT"],rateLimit:300,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,privateAPI:!0,publicAPI:!0,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1/MINUTES","5m":"5/MINUTES","15m":"15/MINUTES","30m":"30/MINUTES","1h":"1/HOURS","4h":"4/HOURS","1d":"1/DAYS","1w":"1/WEEKS","1M":"1/MONTHS"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87591171-9a377d80-c6f0-11ea-94ac-97a126eac3bc.jpg",api:{public:"https://api.exchange.bitpanda.com/public",private:"https://api.exchange.bitpanda.com/public"},www:"https://www.bitpanda.com/en/pro",doc:["https://developers.bitpanda.com/exchange/"],fees:"https://www.bitpanda.com/en/pro/fees"},api:{public:{get:["currencies","candlesticks/{instrument_code}","fees","instruments","order-book/{instrument_code}","market-ticker","market-ticker/{instrument_code}","price-ticks/{instrument_code}","time"]},private:{get:["account/balances","account/deposit/crypto/{currency_code}","account/deposit/fiat/EUR","account/deposits","account/deposits/bitpanda","account/withdrawals","account/withdrawals/bitpanda","account/fees","account/orders","account/orders/{order_id}","account/orders/{order_id}/trades","account/trades","account/trades/{trade_id}","account/trading-volume"],post:["account/deposit/crypto","account/withdraw/crypto","account/withdraw/fiat","account/fees","account/orders"],delete:["account/orders","account/orders/{order_id}","account/orders/client/{client_id}"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.001"),tiers:[{taker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100"),this.parseNumber("0.0013")],[this.parseNumber("250"),this.parseNumber("0.0013")],[this.parseNumber("1000"),this.parseNumber("0.001")],[this.parseNumber("5000"),this.parseNumber("0.0009")],[this.parseNumber("10000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("100"),this.parseNumber("0.001")],[this.parseNumber("250"),this.parseNumber("0.0009")],[this.parseNumber("1000"),this.parseNumber("0.00075")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0005")]]}]}},requiredCredentials:{apiKey:!0,secret:!1},precisionMode:m,exceptions:{exact:{INVALID_CLIENT_UUID:p,ORDER_NOT_FOUND:d,ONLY_ONE_ERC20_ADDRESS_ALLOWED:f,DEPOSIT_ADDRESS_NOT_USED:f,INVALID_CREDENTIALS:r,MISSING_CREDENTIALS:r,INVALID_APIKEY:r,INVALID_SCOPES:r,INVALID_SUBJECT:r,INVALID_ISSUER:r,INVALID_AUDIENCE:r,INVALID_DEVICE_ID:r,INVALID_IP_RESTRICTION:r,APIKEY_REVOKED:r,APIKEY_EXPIRED:r,SYNCHRONIZER_TOKEN_MISMATCH:r,SESSION_EXPIRED:r,INTERNAL_ERROR:r,CLIENT_IP_BLOCKED:n,MISSING_PERMISSION:n,ILLEGAL_CHARS:o,UNSUPPORTED_MEDIA_TYPE:o,ACCOUNT_HISTORY_TIME_RANGE_TOO_BIG:o,CANDLESTICKS_TIME_RANGE_TOO_BIG:o,INVALID_INSTRUMENT_CODE:o,INVALID_ORDER_TYPE:o,INVALID_UNIT:o,INVALID_PERIOD:o,INVALID_TIME:o,INVALID_DATE:o,INVALID_CURRENCY:o,INVALID_AMOUNT:o,INVALID_PRICE:o,INVALID_LIMIT:o,INVALID_QUERY:o,INVALID_CURSOR:o,INVALID_ACCOUNT_ID:o,INVALID_SIDE:p,INVALID_ACCOUNT_HISTORY_FROM_TIME:o,INVALID_ACCOUNT_HISTORY_MAX_PAGE_SIZE:o,INVALID_ACCOUNT_HISTORY_TIME_PERIOD:o,INVALID_ACCOUNT_HISTORY_TO_TIME:o,INVALID_CANDLESTICKS_GRANULARITY:o,INVALID_CANDLESTICKS_UNIT:o,INVALID_ORDER_BOOK_DEPTH:o,INVALID_ORDER_BOOK_LEVEL:o,INVALID_PAGE_CURSOR:o,INVALID_TIME_RANGE:o,INVALID_TRADE_ID:o,INVALID_UI_ACCOUNT_SETTINGS:o,NEGATIVE_AMOUNT:p,NEGATIVE_PRICE:p,MIN_SIZE_NOT_SATISFIED:p,BAD_AMOUNT_PRECISION:p,BAD_PRICE_PRECISION:p,BAD_TRIGGER_PRICE_PRECISION:p,MAX_OPEN_ORDERS_EXCEEDED:o,MISSING_PRICE:p,MISSING_ORDER_TYPE:p,MISSING_SIDE:p,MISSING_CANDLESTICKS_PERIOD_PARAM:c,MISSING_CANDLESTICKS_UNIT_PARAM:c,MISSING_FROM_PARAM:c,MISSING_INSTRUMENT_CODE:c,MISSING_ORDER_ID:p,MISSING_TO_PARAM:c,MISSING_TRADE_ID:c,INVALID_ORDER_ID:d,NOT_FOUND:d,INSUFFICIENT_LIQUIDITY:h,INSUFFICIENT_FUNDS:h,NO_TRADING:l,SERVICE_UNAVAILABLE:l,GATEWAY_TIMEOUT:l,RATELIMIT:u,CF_RATELIMIT:u,INTERNAL_SERVER_ERROR:a},broad:{}},commonCurrencies:{MIOTA:"IOTA"},options:{fetchTradingFees:{method:"fetchPrivateTradingFees"},fiat:["EUR","CHF"]}})}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"epoch_millis")}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"code"),a=this.safeCurrencyCode(r);s[a]={id:r,code:a,name:void 0,info:i,active:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(i,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}async fetchMarkets(e={}){const t=await this.publicGetInstruments(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeValue(i,"base",{}),a=this.safeValue(i,"quote",{}),n=this.safeString(r,"code"),o=this.safeString(a,"code"),c=n+"_"+o,d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),l=this.safeString(i,"state");s.push({id:c,symbol:d+"/"+h,base:d,quote:h,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===l,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(i,"market_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(i,"min_size"),max:void 0}},info:i})}return s}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){const e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[t](e)}async fetchPublicTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetFees(e),s=this.safeValue(t,0,{}),i=this.safeValue(s,"fee_tiers"),r=this.parseFeeTiers(i),a=this.safeValue(i,0,{}),n={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];n[t]={info:s,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!0,tiers:r}}return n}async fetchPrivateTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountFees(e),s=this.safeValue(t,"active_fee_tier",{});let i=this.safeString(s,"maker_fee"),r=this.safeString(s,"taker_fee");i=g.stringDiv(i,"100"),r=g.stringDiv(r,"100");const a=this.safeValue(t,"fee_tiers"),n={},o=this.parseFeeTiers(a);for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];n[s]={info:t,symbol:s,maker:this.parseNumber(i),taker:this.parseNumber(r),percentage:!0,tierBased:!0,tiers:o}}return n}parseFeeTiers(e,t){const s=[],i=[];for(let t=0;t<e.length;t++){const r=e[t],a=this.safeNumber(r,"volume");let n=this.safeString(r,"taker_fee"),o=this.safeString(r,"maker_fee");o=g.stringDiv(o,"100"),n=g.stringDiv(n,"100"),i.push([a,this.parseNumber(o)]),s.push([a,this.parseNumber(n)])}return{maker:i,taker:s}}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"time")),i=this.safeString(e,"instrument_code"),r=this.safeSymbol(i,t,"_"),a=this.safeString(e,"last_price"),n=this.safeString(e,"price_change_percentage"),o=this.safeString(e,"price_change"),c=this.safeString(e,"base_volume"),d=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:c,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instrument_code:s.id},r=await this.publicGetMarketTickerInstrumentCode(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketTicker(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={instrument_code:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderBookInstrumentCode(this.extend(r,s)),n=this.parse8601(this.safeString(a,"time"));return this.parseOrderBook(a,i.symbol,n,"bids","asks","price","amount")}parseOHLCV(e,t){const s=this.safeValue(e,"granularity"),i=this.safeString(s,"unit"),r=this.safeString(s,"period")+this.safeString({MINUTES:"m",HOURS:"h",DAYS:"d",WEEKS:"w",MONTHS:"M"},i),a=1e3*this.parseTimeframe(r),n=this.parse8601(this.safeString(e,"time")),o=a*parseInt(n/a),c=this.safeValue(this.options,"fetchOHLCV",{}),d=this.safeString(c,"volume","total_amount");return[o,this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,d)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t),[o,c]=n.split("/"),d=1e3*this.parseTimeframe(t);void 0===i&&(i=1500);const h={instrument_code:a.id,period:o,unit:c};if(void 0===s){const e=this.milliseconds();h.to=this.iso8601(e),h.from=this.iso8601(e-i*d)}else h.from=this.iso8601(s),h.to=this.iso8601(this.sum(s,i*d));const l=await this.publicGetCandlesticksInstrumentCode(this.extend(h,r));return this.parseOHLCVs(l,a,t,s,i)}parseTrade(e,t){const s=this.safeValue(e,"fee",{});e=this.safeValue(e,"trade",e);let i=this.safeInteger(e,"trade_timestamp");void 0===i&&(i=this.parse8601(this.safeString(e,"time")));const r=this.safeStringLower2(e,"side","taker_side"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"volume"),c=this.safeString(e,"instrument_code"),d=this.safeSymbol(c,t,"_"),h=this.safeString(s,"fee_amount");let l,u;if(void 0!==h){const e=this.safeString(s,"fee_currency");u={cost:h,currency:this.safeCurrencyCode(e),rate:this.safeString(s,"fee_percentage")},l=this.safeStringLower(s,"fee_type")}return this.safeTrade({id:this.safeString2(e,"trade_id","sequence"),order:this.safeString(e,"order_id"),timestamp:i,datetime:this.iso8601(i),symbol:d,type:void 0,side:r,price:a,amount:n,cost:o,takerOrMaker:l,fee:u,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instrument_code:r.id};void 0!==t&&(a.from=this.iso8601(t),a.to=this.iso8601(this.sum(t,144e5)));const n=await this.publicGetPriceTicksInstrumentCode(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseBalance(e){const t=this.safeValue(e,"balances",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalances(e);return this.parseBalance(t)}parseDepositAddress(e,t){let s;void 0!==t&&(s=t.code);const i=this.safeString(e,"address"),r=this.safeString(e,"destination_tag");return this.checkAddress(i),{currency:s,address:i,tag:r,network:void 0,info:e}}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privatePostAccountDepositCrypto(this.extend(i,t));return this.parseDepositAddress(r,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency_code:s.id},r=await this.privateGetAccountDepositCryptoCurrencyCode(this.extend(i,t));return this.parseDepositAddress(r,s)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency_code=a.id),void 0!==s&&(r.max_page_size=s),void 0!==t){if(void 0===this.safeString(i,"to"))throw new c(this.id+' fetchDeposits() requires a "to" iso8601 string param with the since argument is specified');r.from=this.iso8601(t)}const n=await this.privateGetAccountDeposits(this.extend(r,i)),o=this.safeValue(n,"deposit_history",[]);return this.parseTransactions(o,a,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency_code=a.id),void 0!==s&&(r.max_page_size=s),void 0!==t){if(void 0===this.safeString(i,"to"))throw new c(this.id+' fetchWithdrawals() requires a "to" iso8601 string param with the since argument is specified');r.from=this.iso8601(t)}const n=await this.privateGetAccountWithdrawals(this.extend(r,i)),o=this.safeValue(n,"withdrawal_history",[]);return this.parseTransactions(o,a,t,s,{type:"withdrawal"})}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:e,amount:this.currencyToPrecision(e,t)},o=this.safeValue(this.options,"fiat",[]),d=this.inArray(e,o),h=d?"privatePostAccountWithdrawFiat":"privatePostAccountWithdrawCrypto";if(d){if(void 0===this.safeString(r,"payout_account_id"))throw new c(this.id+" withdraw() requires a payout_account_id param for fiat "+e+" withdrawals")}else{const e={address:s};void 0!==i&&(e.destination_tag=i),n.recipient=e}const l=await this[h](this.extend(n,r));return this.parseTransaction(l,a)}parseTransaction(e,t){const s=this.safeString(e,"transaction_id"),i=this.safeNumber(e,"amount"),r=this.parse8601(this.safeString(e,"time")),a=this.safeString(e,"currency");t=this.safeCurrency(a,t);const n=this.safeNumber2(e,"fee_amount","fee");let o;const c=this.safeString(e,"recipient"),d=this.safeString(e,"destination_tag");if(void 0!==n){const t=this.safeString(e,"fee_currency",a);o={cost:n,currency:this.safeCurrencyCode(t)}}return{info:e,id:s,currency:t.code,amount:i,network:void 0,address:c,addressFrom:void 0,addressTo:c,tag:d,tagFrom:void 0,tagTo:d,status:"ok",type:void 0,updated:void 0,txid:this.safeString(e,"blockchain_transaction_id"),timestamp:r,datetime:this.iso8601(r),fee:o}}parseOrderStatus(e){return this.safeString({FILLED:"open",FILLED_FULLY:"closed",FILLED_CLOSED:"canceled",FILLED_REJECTED:"rejected",OPEN:"open",REJECTED:"rejected",CLOSED:"canceled",FAILED:"failed",STOP_TRIGGERED:"triggered"},e,e)}parseOrder(e,t){const s=this.safeValue(e,"order",e),i=this.safeString(s,"order_id"),r=this.safeString(s,"client_id"),a=this.parse8601(this.safeString(s,"time")),n=this.parseOrderStatus(this.safeString(s,"status")),o=this.parseOrderStatus(n),c=this.safeString(s,"instrument_code"),d=this.safeSymbol(c,t,"_"),h=this.safeString(s,"price"),l=this.safeString(s,"amount"),u=this.safeString(s,"filled_amount"),f=this.safeStringLower(s,"side"),p=this.safeStringLower(s,"type"),m=this.parseTimeInForce(this.safeString(s,"time_in_force")),g=this.safeNumber(s,"trigger_price"),y=this.safeValue(s,"is_post_only"),b=this.safeValue(e,"trades",[]);return this.safeOrder({id:i,clientOrderId:r,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:d,type:p,timeInForce:m,postOnly:y,side:f,price:h,stopPrice:g,amount:l,cost:void 0,average:void 0,filled:u,remaining:void 0,status:o,trades:b},t)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCELLED:"GTC",GOOD_TILL_TIME:"GTT",IMMEDIATE_OR_CANCELLED:"IOC",FILL_OR_KILL:"FOK"},e,e)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),d={instrument_code:n.id,type:o,side:s.toUpperCase(),amount:this.amountToPrecision(e,i)};let h=!1;if("LIMIT"!==o&&"STOP"!==o||(h=!0),"STOP"===o){const s=this.safeNumber(a,"trigger_price");if(void 0===s)throw new c(this.id+" createOrder() requires a trigger_price param for "+t+" orders");d.trigger_price=this.priceToPrecision(e,s),a=this.omit(a,"trigger_price")}h&&(d.price=this.priceToPrecision(e,r));const l=this.safeString2(a,"clientOrderId","client_id");void 0!==l&&(d.client_id=l,a=this.omit(a,["clientOrderId","client_id"]));const u=await this.privatePostAccountOrders(this.extend(d,a));return this.parseOrder(u,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=this.safeString2(s,"clientOrderId","client_id");s=this.omit(s,["clientOrderId","client_id"]);let r="privateDeleteAccountOrdersOrderId";const a={};void 0!==i?(r="privateDeleteAccountOrdersClientClientId",a.client_id=i):a.order_id=e;return await this[r](this.extend(a,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.market(e);s.instrument_code=t.id}return await this.privateDeleteAccountOrders(this.extend(s,t))}async cancelOrders(e,t,s={}){await this.loadMarkets();const i={ids:e.join(",")};return await this.privateDeleteAccountOrders(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetAccountOrdersOrderId(this.extend(i,s));return this.parseOrder(r)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.market(e),r.instrument_code=a.id),void 0!==t){if(void 0===this.safeString(i,"to"))throw new c(this.id+' fetchOpenOrders() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');r.from=this.iso8601(t)}void 0!==s&&(r.max_page_size=s);const n=await this.privateGetAccountOrders(this.extend(r,i)),o=this.safeValue(n,"order_history",[]);return this.parseOrders(o,a,t,s)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOpenOrders(e,t,s,this.extend({with_cancelled_and_rejected:!0},i))}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={order_id:e};void 0!==i&&(a.max_page_size=i);const n=await this.privateGetAccountOrdersOrderIdTrades(this.extend(a,r)),o=this.safeValue(n,"trade_history",[]);let c;return void 0!==t&&(c=this.market(t)),this.parseTrades(o,c,s,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.market(e),r.instrument_code=a.id),void 0!==t){if(void 0===this.safeString(i,"to"))throw new c(this.id+' fetchMyTrades() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');r.from=this.iso8601(t)}void 0!==s&&(r.max_page_size=s);const n=await this.privateGetAccountTrades(this.extend(r,i)),o=this.safeValue(n,"trade_history",[]);return this.parseTrades(o,a,t,s)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&(this.checkRequiredCredentials(),r={Accept:"application/json",Authorization:"Bearer "+this.apiKey},"POST"===s?(a=this.json(o),r["Content-Type"]="application/json"):Object.keys(o).length&&(n+="?"+this.urlencode(o))),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),new a(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],163:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,ExchangeNotAvailable:n,InsufficientFunds:o,OrderNotFound:c,InvalidOrder:d,DDoSProtection:h,InvalidNonce:l,AuthenticationError:u,RateLimitExceeded:f,PermissionDenied:p,BadRequest:m,BadSymbol:g,AccountSuspended:y,OrderImmediatelyFillable:b,OnMaintenance:v}=e("./base/errors"),{TRUNCATE:w,TICK_SIZE:S}=e("./base/functions/number"),k=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitrue",name:"Bitrue",countries:["SG"],rateLimit:1e3,certified:!1,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!1,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/139516488-243a830d-05dd-446b-91c6-c1f18fe30c63.jpg",api:{v1:"https://www.bitrue.com/api/v1",v2:"https://www.bitrue.com/api/v2",kline:"https://www.bitrue.com/kline-api"},www:"https://www.bitrue.com",referral:"https://www.bitrue.com/activity/task/task-landing?inviteCode=EZWETQE&cn=900000",doc:["https://github.com/Bitrue-exchange/bitrue-official-api-docs"],fees:"https://bitrue.zendesk.com/hc/en-001/articles/4405479952537"},api:{kline:{public:{get:{"public.json":1,"public{currency}.json":1}}},v1:{public:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10]]},trades:1,historicalTrades:5,aggTrades:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2}}},private:{get:{order:1,openOrders:1,allOrders:5,account:5,myTrades:{cost:5,noSymbol:40},"etf/net-value/{symbol}":1,"withdraw/history":1,"deposit/history":1},post:{order:4,"withdraw/commit":1},delete:{order:1}}},v2:{private:{get:{myTrades:5}}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.00098"),maker:this.parseNumber("0.00098")},future:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000400"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},delivery:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}}},options:{fetchMyTradesMethod:"v2PrivateGetMyTrades",hasAlreadyAuthenticatedSuccessfully:!1,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"FULL"},networks:{SPL:"SOLANA",SOL:"SOLANA",DOGE:"dogecoin",ADA:"Cardano"}},commonCurrencies:{MIM:"MIM Swarm"},precisionMode:S,exceptions:{exact:{"System is under maintenance.":v,"System abnormality":r,"You are not authorized to execute this request.":p,"API key does not exist":u,"Order would trigger immediately.":b,"Stop price would trigger immediately.":b,"Order would immediately match and take.":b,"Account has insufficient balance for requested action.":o,"Rest API trading is not enabled.":n,"You don't have permission.":p,"Market is closed.":n,"Too many requests. Please try again later.":h,"-1000":n,"-1001":n,"-1002":u,"-1003":f,"-1013":d,"-1015":f,"-1016":n,"-1020":m,"-1021":l,"-1022":u,"-1100":m,"-1101":m,"-1102":m,"-1103":m,"-1104":m,"-1105":m,"-1106":m,"-1111":m,"-1112":d,"-1114":m,"-1115":m,"-1116":m,"-1117":m,"-1118":m,"-1119":m,"-1120":m,"-1121":g,"-1125":u,"-1127":m,"-1128":m,"-1130":m,"-1131":m,"-2008":u,"-2010":r,"-2011":c,"-2013":c,"-2014":u,"-2015":u,"-2019":o,"-3005":o,"-3006":o,"-3008":o,"-3010":r,"-3015":r,"-3022":y,"-4028":m,"-3020":o,"-3041":o,"-5013":o,"-11008":o,"-4051":o},broad:{"has no operation privilege":p,MAX_POSITION:d}}})}costToPrecision(e,t){return this.decimalToPrecision(t,w,this.markets[e].precision.quote,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,s){return void 0!==this.safeValue(this.currencies[e],"precision")?this.decimalToPrecision(t,w,this.currencies[e].precision,this.precisionMode,this.paddingMode):this.numberToString(t)}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchStatus(e={}){const t=await this.v1PublicGetPing(e);return{status:Object.keys(t).length?"maintenance":"ok",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.v1PublicGetTime(e);return this.safeInteger(t,"serverTime")}safeNetwork(e){const t=e.toUpperCase();return this.safeString2({Aeternity:"Aeternity",AION:"AION",Algorand:"Algorand",ASK:"ASK",ATOM:"ATOM","AVAX C-Chain":"AVAX C-Chain",bch:"bch",BCH:"BCH",BEP2:"BEP2",BEP20:"BEP20",Bitcoin:"Bitcoin",BRP20:"BRP20",Cardano:"ADA",CasinoCoin:"CasinoCoin","CasinoCoin XRPL":"CasinoCoin XRPL",Contentos:"Contentos",Dash:"Dash",Decoin:"Decoin",DeFiChain:"DeFiChain",DGB:"DGB",Divi:"Divi",dogecoin:"DOGE",EOS:"EOS",ERC20:"ERC20",ETC:"ETC",Filecoin:"Filecoin",FREETON:"FREETON",HBAR:"HBAR","Hedera Hashgraph":"Hedera Hashgraph",HRC20:"HRC20",ICON:"ICON",ICP:"ICP",Ignis:"Ignis","Internet Computer":"Internet Computer",IOTA:"IOTA",KAVA:"KAVA",KSM:"KSM",LiteCoin:"LiteCoin",Luna:"Luna",MATIC:"MATIC","Mobile Coin":"Mobile Coin",MonaCoin:"MonaCoin",Monero:"Monero",NEM:"NEM",NEP5:"NEP5",OMNI:"OMNI",PAC:"PAC",Polkadot:"Polkadot",Ravencoin:"Ravencoin",Safex:"Safex",SOLANA:"SOL",Songbird:"Songbird","Stellar Lumens":"Stellar Lumens",Symbol:"Symbol",Tezos:"XTZ",theta:"theta",THETA:"THETA",TRC20:"TRC20",VeChain:"VeChain",VECHAIN:"VECHAIN",Wanchain:"Wanchain","XinFin Network":"XinFin Network",XRP:"XRP",XRPL:"XRPL",ZIL:"ZIL"},e,t,e)}async fetchCurrencies(e={}){const t=await this.v1PublicGetExchangeInfo(e),s={},i=this.safeValue(t,"coins",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"coin"),a=this.safeString(t,"coinFulName"),n=this.safeCurrencyCode(r),o=this.safeValue(t,"enableDeposit"),c=this.safeValue(t,"enableWithdraw"),d=this.safeValue(t,"chains",[]),h={};for(let e=0;e<d.length;e++){const t=d[e],s=this.safeNetwork(t);h[s]={info:t,id:t,network:s,active:void 0,fee:void 0,precision:void 0,limits:{withdraw:{min:void 0,max:void 0}}}}const l=c&&o;s[n]={id:r,name:a,code:n,precision:void 0,info:t,active:l,deposit:o,withdraw:c,networks:h,fee:this.safeNumber(t,"withdrawFee"),limits:{withdraw:{min:this.safeNumber(t,"minWithdraw"),max:this.safeNumber(t,"maxWithdraw")}}}}return s}async fetchMarkets(e={}){const t=await this.v1PublicGetExchangeInfo(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const s=this.safeValue(t,"symbols",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeStringLower(t,"symbol"),n=this.safeString(t,"baseAsset"),o=this.safeString(t,"quoteAsset"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeValue(t,"filters",[]),l=this.indexBy(h,"filterType"),u=this.safeString(t,"status"),f=this.safeValue(l,"PRICE_FILTER",{}),p=this.safeValue(l,"LOT_SIZE",{}),m=this.safeString(t,"pricePrecision"),g=this.safeString(t,"quantityPrecision"),y=this.safeString(f,"priceScale",m),b=this.safeString(p,"volumeScale",g),v={id:r,lowercaseId:a,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"TRADING"===u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(b)),price:this.parseNumber(this.parsePrecision(y)),base:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),quote:this.parseNumber(this.parsePrecision(this.safeString(t,"quotePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(p,"minQty"),max:this.safeNumber(p,"maxQty")},price:{min:this.safeNumber(f,"minPrice"),max:this.safeNumber(f,"maxPrice")},cost:{min:this.safeNumber(p,"minVal"),max:void 0}},info:t};i.push(v)}return i}parseBalance(e){const t={info:e},s=this.safeInteger(e,"updateTime"),i=this.safeValue2(e,"balances",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),t[a]=n}return t.timestamp=s,t.datetime=this.iso8601(s),this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1PrivateGetAccount(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id};void 0!==t&&(i.limit=t);const r=await this.v1PublicGetDepth(this.extend(i,s)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:this.safeString(e,"highestBid"),bidVolume:void 0,ask:this.safeString(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:i,last:i,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=this.safeStringUpper(s,"baseId"),a=this.safeStringUpper(s,"quoteId"),n={currency:a,command:"returnTicker"},o=await this.klinePublicGetPublicCurrencyJson(this.extend(n,t)),c=this.safeValue(o,"data",{}),d=i+"_"+a,h=this.safeValue(c,d);if(void 0===h)throw new r(this.id+" fetchTicker() could not find the ticker for "+s.symbol);return this.parseTicker(h,s)}async fetchBidsAsks(e,t={}){await this.loadMarkets();const s=this.safeString2(this.options,"fetchBidsAsks","defaultType","spot"),i=this.safeString(t,"type",s),r=this.omit(t,"type");let a;a="future"===i?"fapiPublicGetTickerBookTicker":"delivery"===i?"dapiPublicGetTickerBookTicker":"publicGetTickerBookTicker";const n=await this[a](r);return this.parseTickers(n,e)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.klinePublicGetPublicJson(this.extend({command:"returnTicker"},t)),i=this.safeValue(s,"data",{}),r={},a=Object.keys(i);for(let e=0;e<a.length;e++){r[a[e].replace("_","")]=i[a[e]]}return this.parseTickers(r,e)}parseTrade(e,t){const s=this.safeInteger2(e,"T","time"),i=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t);let o,c=this.safeString2(e,"t","a");c=this.safeString2(e,"id","tradeId",c);const d=this.safeString(e,"orderId");let h,l;return"m"in e?o=e.m?"sell":"buy":"isBuyerMaker"in e?o=e.isBuyerMaker?"sell":"buy":"side"in e?o=this.safeStringLower(e,"side"):"isBuyer"in e&&(o=e.isBuyer?"buy":"sell"),"commission"in e&&(h={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAssert"))}),"isMaker"in e&&(l=e.isMaker?"maker":"taker"),"maker"in e&&(l=e.maker?"maker":"taker"),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:n,id:c,order:d,type:void 0,side:o,takerOrMaker:l,price:i,amount:r,cost:void 0,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=this.safeString(this.options,"fetchTradesMethod","v1PublicGetAggTrades");void 0!==s&&(a.limit=s);const o=await this[n](this.extend(a,i));return this.parseTrades(o,r,t,s)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"status")),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"executedQty");let n,o;"time"in e?n=this.safeInteger(e,"time"):"transactTime"in e?n=this.safeInteger(e,"transactTime"):"updateTime"in e&&"open"===s&&(k.stringGt(a,"0")?o=this.safeInteger(e,"updateTime"):n=this.safeInteger(e,"updateTime"));const c=this.safeString(e,"avgPrice"),d=this.safeString(e,"price"),h=this.safeString(e,"origQty"),l=this.safeString2(e,"cummulativeQuoteQty","cumQuote"),u=this.safeString(e,"orderId");let f=this.safeStringLower(e,"type");const p=this.safeStringLower(e,"side"),m=this.safeValue(e,"fills",[]),g=this.safeString(e,"clientOrderId"),y=this.safeString(e,"timeInForce"),b="limit_maker"===f||"GTX"===y;"limit_maker"===f&&(f="limit");const v=this.safeString(e,"stopPrice"),w=this.parseNumber(this.omitZero(v));return this.safeOrder({info:e,id:u,clientOrderId:g,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:o,symbol:r,type:f,timeInForce:y,postOnly:b,side:p,price:d,stopPrice:w,amount:h,cost:l,average:c,filled:a,remaining:void 0,status:s,fee:void 0,trades:m},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),c=this.safeValue(n.info,"orderTypes");if(!this.inArray(o,c))throw new d(this.id+" "+t+" is not a valid order type in market "+e);const h={symbol:n.id,side:s.toUpperCase(),type:o,quantity:this.amountToPrecision(e,i)},l=this.safeString2(a,"newClientOrderId","clientOrderId");if(void 0!==l&&(a=this.omit(a,["newClientOrderId","clientOrderId"]),h.newClientOrderId=l),"LIMIT"===o){if(void 0===r)throw new d(this.id+" createOrder() requires a price argument");h.price=this.priceToPrecision(e,r)}const u=this.safeNumber(a,"stopPrice");void 0!==u&&(a=this.omit(a,"stopPrice"),h.stopPrice=this.priceToPrecision(e,u));const f=await this.v1PrivatePostOrder(this.extend(h,a));return this.parseOrder(f,n)}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={symbol:i.id},n=this.safeValue2(s,"origClientOrderId","clientOrderId");void 0!==n?r.origClientOrderId=n:r.orderId=e;const o=this.omit(s,["type","clientOrderId","origClientOrderId"]),c=await this.v1PrivateGetOrder(this.extend(r,o));return this.parseOrder(c,i)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id};void 0!==t&&(n.startTime=t),void 0!==s&&(n.limit=s);const o=await this.v1PrivateGetAllOrders(this.extend(n,i));return this.parseOrders(o,r,t,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id},o=await this.v1PrivateGetOpenOrders(this.extend(n,i));return this.parseOrders(o,r,t,s)}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeValue2(s,"origClientOrderId","clientOrderId"),n={symbol:i.id};void 0===r?n.orderId=e:n.origClientOrderId=r;const o=this.omit(s,["type","origClientOrderId","clientOrderId"]),c=await this.v1PrivateDeleteOrder(this.extend(n,o));return this.parseOrder(c,i)}async fetchMyTrades(e,t,s,i={}){const r=this.safeString(this.options,"fetchMyTradesMethod","v2PrivateGetMyTrades");if(void 0===e&&"v2PrivateGetMyTrades"===r)throw new a(this.id+" v2PrivateGetMyTrades() requires a symbol argument");await this.loadMarkets();const n={};let o;void 0!==e&&(o=this.market(e),n.symbol=o.id),void 0!==t&&(n.startTime=t),void 0!==s&&(n.limit=s);const c=await this[r](this.extend(n,i));return this.parseTrades(c,o,t,s)}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchDeposits() requires a code argument");await this.loadMarkets();const r=this.currency(e),n={coin:r.id,status:1};void 0!==t&&(n.startTime=t),void 0!==s&&(n.limit=s);const o=await this.v1PrivateGetDepositHistory(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,r,t,s)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchWithdrawals() requires a code argument");await this.loadMarkets();const r=this.currency(e),n={coin:r.id,status:5};void 0!==t&&(n.startTime=t),void 0!==s&&(n.limit=s);const o=await this.v1PrivateGetWithdrawHistory(this.extend(n,i)),c=this.safeValue(o,"data",{});return this.parseTransactions(c,r)}parseTransactionStatusByType(e,t){const s=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",5:"ok",6:"canceled"}},t,{});return this.safeString(s,e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"tagType");let r,a,n=this.safeString(e,"addressTo"),o=this.safeString(e,"addressFrom");if(void 0!==i){if(void 0!==n){const e=n.split("_");n=this.safeString(e,0),r=this.safeString(e,1)}if(void 0!==o){const e=o.split("_");o=this.safeString(e,0),a=this.safeString(e,1)}}const c=this.safeString(e,"txid"),d=this.safeInteger(e,"createdAt"),h=this.safeInteger(e,"updatedAt"),l="payAmount"in e||"ctime"in e?"withdrawal":"deposit",u=this.parseTransactionStatusByType(this.safeString(e,"status"),l),f=this.safeNumber(e,"amount");let p,m=this.safeString(e,"symbol");if(void 0!==m){const e=m.split("_");m=this.safeString(e,0);const t=this.safeString(e,1);void 0!==t&&(p=t.toUpperCase())}const g=this.safeCurrencyCode(m,t),y=this.safeNumber(e,"fee");let b;return void 0!==y&&(b={currency:g,cost:y}),{info:e,id:s,txid:c,timestamp:d,datetime:this.iso8601(d),network:p,address:n,addressTo:n,addressFrom:o,tag:r,tagTo:r,tagFrom:a,type:l,amount:f,currency:g,status:u,updated:h,internal:!1,fee:b}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e);let o=this.safeString(r,"chainName");if(void 0===o){const e=this.safeValue(n,"networks",{}),t=this.safeStringUpper(r,"network"),s=this.safeValue(e,t,{});if(o=this.safeString(s,"id"),void 0===o)throw new a(this.id+" withdraw() requires a network parameter or a chainName parameter");r=this.omit(r,"network")}const c={coin:n.id.toUpperCase(),amount:t,addressTo:s,chainName:o};void 0!==i&&(c.tag=i);const d=await this.v1PrivatePostWithdrawCommit(this.extend(c,r));return this.parseTransaction(d,n)}sign(e,t="public",s="GET",i={},r,a){const[n,o]=t;let c=this.urls.api[n]+"/"+this.implodeParams(e,i);if(i=this.omit(i,this.extractParams(e)),"private"===o){this.checkRequiredCredentials();const e=this.safeInteger(this.options,"recvWindow",5e3);let t=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:e},i));t+="&signature="+this.hmac(this.encode(t),this.encode(this.secret)),r={"X-MBX-APIKEY":this.apiKey},"GET"===s||"DELETE"===s?c+="?"+t:(a=t,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(i).length&&(c+="?"+this.urlencode(i));return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,l){if(418===e||429===e)throw new h(this.id+" "+e.toString()+" "+t+" "+n);if(e>=400){if(n.indexOf("Price * QTY is zero or less")>=0)throw new d(this.id+" order cost = amount * price is zero or less "+n);if(n.indexOf("LOT_SIZE")>=0)throw new d(this.id+" order amount should be evenly divisible by lot size "+n);if(n.indexOf("PRICE_FILTER")>=0)throw new d(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+n)}if(void 0===o)return;const u=this.safeValue(o,"success",!0);if(!u){const e=this.safeString(o,"msg");let t;if(void 0!==e){try{t=JSON.parse(e)}catch(e){t=void 0}void 0!==t&&(o=t)}}const f=this.safeString(o,"msg");void 0!==f&&(this.throwExactlyMatchedException(this.exceptions.exact,f,this.id+" "+f),this.throwBroadlyMatchedException(this.exceptions.broad,f,this.id+" "+f));const p=this.safeString(o,"code");if(void 0!==p){if("200"===p||k.stringEquals(p,"0"))return;if("-2015"===p&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new h(this.id+" temporary banned: "+n);const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,p,e),new r(e)}if(!u)throw new r(this.id+" "+n)}calculateRateLimiterCost(e,t,s,i,r={},a={}){if("noSymbol"in r&&!("symbol"in i))return r.noSymbol;if("byLimit"in r&&"limit"in i){const e=i.limit,t=r.byLimit;for(let s=0;s<t.length;s++){const i=t[s];if(e<=i[0])return i[1]}}return this.safeInteger(r,"cost",1)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],164:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InvalidNonce:a,AuthenticationError:n,OrderNotFound:o,NotSupported:c,BadRequest:d,ArgumentsRequired:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number"),u=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitso",name:"Bitso",countries:["MX"],rateLimit:2e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295554-11f98280-c50e-11ea-80d6-15b3bafa8cbf.jpg",api:"https://api.bitso.com",www:"https://bitso.com",doc:"https://bitso.com/api_info",fees:"https://bitso.com/fees",referral:"https://bitso.com/?ref=itej"},precisionMode:l,options:{precision:{XRP:1e-6,MXN:.01,TUSD:.01},defaultPrecision:1e-8},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","12h":"43200","1d":"86400","1w":"604800"},api:{public:{get:["available_books","ticker","order_book","trades","ohlc"]},private:{get:["account_status","balance","fees","fundings","fundings/{fid}","funding_destination","kyc_documents","ledger","ledger/trades","ledger/fees","ledger/fundings","ledger/withdrawals","mx_bank_codes","open_orders","order_trades/{oid}","orders/{oid}","user_trades","user_trades/{tid}","withdrawals/","withdrawals/{wid}"],post:["bitcoin_withdrawal","debit_card_withdrawal","ether_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal","orders","phone_number","phone_verification","phone_withdrawal","spei_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal"],delete:["orders","orders/{oid}","orders/all"]}},exceptions:{"0201":n,104:a,"0304":d}})}async fetchLedger(e,t,s,i={}){const r={};void 0!==s&&(r.limit=s);const a=await this.privateGetLedger(this.extend(r,i)),n=this.safeValue(a,"payload",[]);return this.parseLedger(n,e,t,s)}parseLedgerEntryType(e){return this.safeString({funding:"transaction",withdrawal:"transaction",trade:"trade",fee:"fee"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"operation"),i=this.parseLedgerEntryType(s),r=this.safeValue(e,"balance_updates",[]),a=this.safeValue(r,0,{});let n,o;const c=this.safeString(a,"amount"),d=this.safeString(a,"currency"),h=this.safeCurrencyCode(d,t),l=this.safeValue(e,"details",{});let f=this.safeString2(l,"fid","wid");if(void 0===f&&(f=this.safeString(l,"tid")),"funding"===s)n="in";else if("withdrawal"===s)n="out";else if("trade"===s)n=void 0;else if("fee"===s){n="out";o={cost:u.stringAbs(c),currency:t}}const p=this.parse8601(this.safeString(e,"created_at"));return this.safeLedgerEntry({id:this.safeString(e,"eid"),direction:n,account:void 0,referenceId:f,referenceAccount:void 0,type:i,currency:h,amount:c,timestamp:p,datetime:this.iso8601(p),before:void 0,after:void 0,status:"ok",fee:o,info:e},t)}async fetchMarkets(e={}){const t=await this.publicGetAvailableBooks(e),s=this.safeValue(t,"payload",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"book"),[a,n]=r.split("_");let o=a.toUpperCase(),c=n.toUpperCase();o=this.safeCurrencyCode(o),c=this.safeCurrencyCode(c);const d=this.safeValue(t,"fees",{}),h=this.safeValue(d,"flat_rate",{}),l=this.safeString(h,"taker"),f=this.safeString(h,"maker"),p=this.parseNumber(u.stringDiv(l,"100")),m=this.parseNumber(u.stringDiv(f,"100")),g=this.safeValue(d,"structure",[]),y={taker:p,maker:m,percentage:!0,tierBased:!0},b=[],v=[];for(let e=0;e<g.length;e++){const t=g[e],s=this.safeNumber(t,"volume"),i=this.safeNumber(t,"taker"),r=this.safeNumber(t,"maker");b.push([s,i]),v.push([s,r]),0===e&&(y.taker=i,y.maker=r)}const w={taker:b,maker:v};y.tiers=w;const S=this.safeNumber(this.options.precision,c,this.options.defaultPrecision);i.push(this.extend({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:p,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(this.options.precision,o,this.options.defaultPrecision),price:this.safeNumber(t,"tick_size",S)},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minimum_amount"),max:this.safeNumber(t,"maximum_amount")},price:{min:this.safeNumber(t,"minimum_price"),max:this.safeNumber(t,"maximum_price")},cost:{min:this.safeNumber(t,"minimum_value"),max:this.safeNumber(t,"maximum_value")}},info:t},y))}return i}parseBalance(e){const t=this.safeValue(e,"payload",{}),s=this.safeValue(t,"balances",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"available"),n.used=this.safeString(t,"locked"),n.total=this.safeString(t,"total"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={book:i.id},a=await this.publicGetOrderBook(this.extend(r,s)),n=this.safeValue(a,"payload"),o=this.parse8601(this.safeString(n,"updated_at"));return this.parseOrderBook(n,i.symbol,o,"bids","asks","price","amount")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),n=u.stringMul(a,r),o=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={book:s.id},r=await this.publicGetTicker(this.extend(i,t)),a=this.safeValue(r,"payload");return this.parseTicker(a,s)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={book:a.id,time_bucket:this.timeframes[t]};if(void 0!==s){if(n.start=s,void 0!==i){const e=this.parseTimeframe(t);n.end=this.sum(s,e*i*1e3)}}else if(void 0!==i){const e=this.milliseconds();n.end=e,n.start=e-1e3*this.parseTimeframe(t)*i}const o=await this.publicGetOhlc(this.extend(n,r)),c=this.safeValue(o,"payload",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOHLCV(e,t,s="1m"){return[this.safeInteger(e,"bucket_start_time"),this.safeNumber(e,"first_rate"),this.safeNumber(e,"max_rate"),this.safeNumber(e,"min_rate"),this.safeNumber(e,"last_rate"),this.safeNumber(e,"volume")]}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"book"),r=this.safeSymbol(i,t,"_"),a=this.safeString2(e,"side","maker_side");let n;n=a===this.safeString(e,"maker_side")?"maker":"taker";let o,c=this.safeString2(e,"amount","major");void 0!==c&&(c=u.stringAbs(c));const d=this.safeString(e,"fees_amount");if(void 0!==d){const t=this.safeString(e,"fees_currency");o={cost:d,currency:this.safeCurrencyCode(t)}}let h=this.safeString(e,"minor");void 0!==h&&(h=u.stringAbs(h));const l=this.safeString(e,"price"),f=this.safeString(e,"oid"),p=this.safeString(e,"tid");return this.safeTrade({id:p,info:e,timestamp:s,datetime:this.iso8601(s),symbol:r,order:f,type:void 0,side:a,takerOrMaker:n,price:l,amount:c,cost:h,fee:o},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={book:r.id},n=await this.publicGetTrades(this.extend(a,i));return this.parseTrades(n.payload,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),s=this.safeValue(t,"payload",{}),i=this.safeValue(s,"fees",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"book"),a=this.safeSymbol(s,void 0,"_");r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_decimal"),taker:this.safeNumber(t,"taker_fee_decimal"),percentage:!0,tierBased:!0}}return r}async fetchMyTrades(e,t,s=25,i={}){await this.loadMarkets();const a=this.market(e),n="marker"in i;if(void 0!==t&&!n)throw new r(this.id+" fetchMyTrades() does not support fetching trades starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");n&&(i=this.extend(i,{marker:parseInt(i.marker)}));const o={book:a.id,limit:s},c=await this.privateGetUserTrades(this.extend(o,i));return this.parseTrades(c.payload,a,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={book:n.id,side:s,type:t,major:this.amountToPrecision(n.symbol,i)};"limit"===t&&(o.price=this.priceToPrecision(n.symbol,r));const c=await this.privatePostOrders(this.extend(o,a));return{info:c,id:this.safeString(c.payload,"oid")}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={oid:e};return await this.privateDeleteOrdersOid(this.extend(i,s))}async cancelOrders(e,t,s={}){if(!Array.isArray(e))throw new h(this.id+" cancelOrders() ids argument should be an array");let i;void 0!==t&&(i=this.market(t));const r={oids:e.join(",")},a=await this.privateDeleteOrders(this.extend(r,s)),n=this.safeValue(a,"payload",[]),o=[];for(let e=0;e<n.length;e++){const t=n[e];o.push(this.parseOrder(t,i))}return o}async cancelAllOrders(e,t={}){if(void 0!==e)throw new c(this.id+" cancelAllOrders() deletes all orders for user, it does not support filtering by symbol.");const s=await this.privateDeleteOrdersAll(t),i=this.safeValue(s,"payload",[]),r=[];for(let e=0;e<i.length;e++){const t=this.parseOrder(i[e]);r.push(t)}return r}parseOrderStatus(e){return this.safeString({"partial-fill":"open",completed:"closed"},e,e)}parseOrder(e,t){let s;s="string"==typeof e?e:this.safeString(e,"oid");const i=this.safeString(e,"side"),r=this.parseOrderStatus(this.safeString(e,"status")),a=this.safeString(e,"book"),n=this.safeSymbol(a,t,"_"),o=this.safeString(e,"type"),c=this.parse8601(this.safeString(e,"created_at")),d=this.safeString(e,"price"),h=this.safeString(e,"original_amount"),l=this.safeString(e,"unfilled_amount"),u=this.safeString(e,"client_id");return this.safeOrder({info:e,id:s,clientOrderId:u,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:n,type:o,timeInForce:void 0,postOnly:void 0,side:i,price:d,stopPrice:void 0,amount:h,cost:void 0,remaining:l,filled:void 0,status:r,fee:void 0,average:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,s=25,i={}){await this.loadMarkets();const a=this.market(e),n="marker"in i;if(void 0!==t&&!n)throw new r(this.id+" fetchOpenOrders() does not support fetching orders starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");n&&(i=this.extend(i,{marker:parseInt(i.marker)}));const o={book:a.id,limit:s},c=await this.privateGetOpenOrders(this.extend(o,i));return this.parseOrders(c.payload,a,t,s)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=await this.privateGetOrdersOid({oid:e}),r=this.safeValue(i,"payload");if(Array.isArray(r)){if(1===i.payload.length)return this.parseOrder(r[0])}throw new o(this.id+": The order "+e+" not found.")}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a=this.market(t),n={oid:e},o=await this.privateGetOrderTradesOid(this.extend(n,r));return this.parseTrades(o.payload,a)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={fid:e},r=await this.privateGetFundingsFid(this.extend(i,s)),a=this.safeValue(r,"payload",[]),n=this.safeValue(a,0,{});return this.parseTransaction(n)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r=await this.privateGetFundings(i),a=this.safeValue(r,"payload",[]);return this.parseTransactions(a,e,t,s,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={fund_currency:this.currency(e).id},i=await this.privateGetFundingDestination(this.extend(s,t));let r,a=this.safeString(i.payload,"account_identifier");if(a.indexOf("?dt=")>=0){const e=a.split("?dt=");a=this.safeString(e,0),r=this.safeString(e,1)}return this.checkAddress(a),{currency:e,address:a,tag:r,network:void 0,info:i}}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.privateGetFees(t),i=this.safeValue(s,"payload",{}),r=this.safeValue(i,"deposit_fees",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"currency");a[this.safeCurrencyCode(s)]=this.safeNumber(t,"fee")}const n={},o=this.safeValue(i,"withdrawal_fees",[]),c=Object.keys(o);for(let e=0;e<c.length;e++){const t=c[e];n[this.safeCurrencyCode(t)]=this.safeNumber(o,t)}return{info:s,deposit:a,withdraw:n}}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n={BTC:"Bitcoin",ETH:"Ether",XRP:"Ripple",BCH:"Bcash",LTC:"Litecoin"},o=this.currency(e),c=e in n?n[e]:void 0;if(void 0===c)throw new r(this.id+" not valid withdraw coin: "+e);const d={amount:t,address:s,destination_tag:i},h="privatePost"+c+"Withdrawal",l=await this[h](this.extend(d,a)),u=this.safeValue(l,"payload",[]),f=this.safeValue(u,0);return this.parseTransaction(f,o)}safeNetwork(e){if(void 0===e)return;e=e.toUpperCase();return this.safeString({trx:"TRC20",erc20:"ERC20",bsc:"BEP20",bep2:"BEP2"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"currency","asset");t=this.safeCurrency(s,t);const i=this.safeValue(e,"details",{}),r=this.safeString(e,"created_at"),a=this.safeString(i,"withdrawal_address"),n=this.safeString(i,"receiving_address"),o=this.safeString2(e,"network","method"),c=this.safeString(e,"status"),d=this.safeString(e,"wid");return{id:this.safeString2(e,"wid","fid"),txid:this.safeString(i,"tx_hash"),timestamp:this.parse8601(r),datetime:r,network:this.safeNetwork(o),addressFrom:n,address:void 0!==a?a:n,addressTo:a,amount:this.safeString(e,"amount"),type:void 0===d?"deposit":"withdrawal",currency:this.safeCurrencyCode(s,t),status:this.parseTransactionStatus(c),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}parseTransactionStatus(e){return this.safeString({pending:"pending",in_progress:"pending",complete:"ok",failed:"failed"},e,e)}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));"GET"!==s&&"DELETE"!==s||Object.keys(o).length&&(n+="?"+this.urlencode(o));const c=this.urls.api+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t=[e,s,n].join("");"GET"!==s&&"DELETE"!==s&&Object.keys(o).length&&(t+=a=this.json(o));const i=this.hmac(this.encode(t),this.encode(this.secret));r={Authorization:"Bitso "+(this.apiKey+":"+e+":"+i),"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.id+" "+this.json(o),t=this.safeValue(o,"error");if(void 0===t)throw new r(e);const s=this.safeString(t,"code");throw this.throwExactlyMatchedException(this.exceptions,s,e),new r(e)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],165:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,BadRequest:a,ExchangeError:n,NotSupported:o,PermissionDenied:c,InvalidNonce:d,OrderNotFound:h,InsufficientFunds:l,InvalidAddress:u,InvalidOrder:f,ArgumentsRequired:p,OnMaintenance:m,ExchangeNotAvailable:g}=e("./base/errors"),{TICK_SIZE:y}=e("./base/functions/number"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitstamp",name:"Bitstamp",countries:["GB"],rateLimit:75,version:"v2",userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:{public:"https://www.bitstamp.net/api",private:"https://www.bitstamp.net/api"},www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"259200"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{"ohlc/{pair}/":1,"order_book/{pair}/":1,"ticker_hour/{pair}/":1,"ticker/{pair}/":1,"transactions/{pair}/":1,"trading-pairs-info/":1}},private:{post:{"balance/":1,"balance/{pair}/":1,"bch_withdrawal/":1,"bch_address/":1,"user_transactions/":1,"user_transactions/{pair}/":1,"open_orders/all/":1,"open_orders/{pair}/":1,"order_status/":1,"cancel_order/":1,"cancel_all_orders/":1,"cancel_all_orders/{pair}/":1,"buy/{pair}/":1,"buy/market/{pair}/":1,"buy/instant/{pair}/":1,"sell/{pair}/":1,"sell/market/{pair}/":1,"sell/instant/{pair}/":1,"transfer-to-main/":1,"transfer-from-main/":1,"withdrawal-requests/":1,"withdrawal/open/":1,"withdrawal/status/":1,"withdrawal/cancel/":1,"liquidation_address/new/":1,"liquidation_address/info/":1,"btc_unconfirmed/":1,"websockets_token/":1,"btc_withdrawal/":1,"btc_address/":1,"ripple_withdrawal/":1,"ripple_address/":1,"ltc_withdrawal/":1,"ltc_address/":1,"eth_withdrawal/":1,"eth_address/":1,"xrp_withdrawal/":1,"xrp_address/":1,"xlm_withdrawal/":1,"xlm_address/":1,"pax_withdrawal/":1,"pax_address/":1,"link_withdrawal/":1,"link_address/":1,"usdc_withdrawal/":1,"usdc_address/":1,"omg_withdrawal/":1,"omg_address/":1,"dai_withdrawal/":1,"dai_address/":1,"knc_withdrawal/":1,"knc_address/":1,"mkr_withdrawal/":1,"mkr_address/":1,"zrx_withdrawal/":1,"zrx_address/":1,"gusd_withdrawal/":1,"gusd_address/":1,"aave_withdrawal/":1,"aave_address/":1,"bat_withdrawal/":1,"bat_address/":1,"uma_withdrawal/":1,"uma_address/":1,"snx_withdrawal/":1,"snx_address/":1,"uni_withdrawal/":1,"uni_address/":1,"yfi_withdrawal/":1,yfi_address:1,"audio_withdrawal/":1,"audio_address/":1,"crv_withdrawal/":1,"crv_address/":1,"algo_withdrawal/":1,"algo_address/":1,"comp_withdrawal/":1,"comp_address/":1,grt_withdrawal:1,"grt_address/":1,"usdt_withdrawal/":1,"usdt_address/":1,"eurt_withdrawal/":1,"eurt_address/":1,"matic_withdrawal/":1,"matic_address/":1,"sushi_withdrawal/":1,"sushi_address/":1,"chz_withdrawal/":1,"chz_address/":1,"enj_withdrawal/":1,"enj_address/":1,"alpha_withdrawal/":1,"alpha_address/":1,"ftt_withdrawal/":1,"ftt_address/":1,"storj_withdrawal/":1,"storj_address/":1,"axs_withdrawal/":1,"axs_address/":1,"sand_withdrawal/":1,"sand_address/":1,"hbar_withdrawal/":1,"hbar_address/":1,"rgt_withdrawal/":1,"rgt_address/":1,"fet_withdrawal/":1,"fet_address/":1,"skl_withdrawal/":1,"skl_address/":1,"cel_withdrawal/":1,"cel_address/":1,"sxp_withdrawal/":1,"sxp_address/":1,"ada_withdrawal/":1,"ada_address/":1,"slp_withdrawal/":1,"slp_address/":1,"ftm_withdrawal/":1,"ftm_address/":1,"perp_withdrawal/":1,"perp_address/":1,"dydx_withdrawal/":1,"dydx_address/":1,"gala_withdrawal/":1,"gala_address/":1,"shib_withdrawal/":1,"shib_address/":1,"amp_withdrawal/":1,"amp_address/":1,"sgb_withdrawal/":1,"sgb_address/":1,"avax_withdrawal/":1,"avax_address/":1,"wbtc_withdrawal/":1,"wbtc_address/":1,"ctsi_withdrawal/":1,"ctsi_address/":1,"cvx_withdrawal/":1,"cvx_address/":1,"imx_withdrawal/":1,"imx_address/":1,"nexo_withdrawal/":1,"nexo_address/":1,"ust_withdrawal/":1,"ust_address/":1,"ant_withdrawal/":1,"ant_address/":1,"gods_withdrawal/":1,"gods_address/":1,"rad_withdrawal/":1,"rad_address/":1,"band_withdrawal/":1,"band_address/":1,"inj_withdrawal/":1,"inj_address/":1,"rly_withdrawal/":1,"rly_address/":1,"rndr_withdrawal/":1,"rndr_address/":1,"vega_withdrawal/":1,"vega_address/":1,"1inch_withdrawal/":1,"1inch_address/":1,"ens_withdrawal/":1,"ens_address/":1,"mana_withdrawal/":1,"mana_address/":1,"lrc_withdrawal/":1,"lrc_address/":1,"ape_withdrawal/":1,"ape_address/":1,"mpl_withdrawal/":1,"mpl_address/":1,"euroc_withdrawal/":1,"euroc_address/":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.005"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.005")],[this.parseNumber("20000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0024")],[this.parseNumber("200000"),this.parseNumber("0.0022")],[this.parseNumber("400000"),this.parseNumber("0.0020")],[this.parseNumber("600000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0014")],[this.parseNumber("2000000"),this.parseNumber("0.0013")],[this.parseNumber("4000000"),this.parseNumber("0.0012")],[this.parseNumber("20000000"),this.parseNumber("0.0011")],[this.parseNumber("50000000"),this.parseNumber("0.0010")],[this.parseNumber("100000000"),this.parseNumber("0.0007")],[this.parseNumber("500000000"),this.parseNumber("0.0005")],[this.parseNumber("2000000000"),this.parseNumber("0.0003")],[this.parseNumber("6000000000"),this.parseNumber("0.0001")],[this.parseNumber("20000000000"),this.parseNumber("0.00005")],[this.parseNumber("20000000001"),this.parseNumber("0")]],maker:[[this.parseNumber("0"),this.parseNumber("0.005")],[this.parseNumber("20000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0024")],[this.parseNumber("200000"),this.parseNumber("0.0022")],[this.parseNumber("400000"),this.parseNumber("0.0020")],[this.parseNumber("600000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0014")],[this.parseNumber("2000000"),this.parseNumber("0.0013")],[this.parseNumber("4000000"),this.parseNumber("0.0012")],[this.parseNumber("20000000"),this.parseNumber("0.0011")],[this.parseNumber("50000000"),this.parseNumber("0.0010")],[this.parseNumber("100000000"),this.parseNumber("0.0007")],[this.parseNumber("500000000"),this.parseNumber("0.0005")],[this.parseNumber("2000000000"),this.parseNumber("0.0003")],[this.parseNumber("6000000000"),this.parseNumber("0.0001")],[this.parseNumber("20000000000"),this.parseNumber("0.00005")],[this.parseNumber("20000000001"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{BTC:0,BCH:0,LTC:0,ETH:0,XRP:0,XLM:0,PAX:0,USD:7.5,EUR:0}}},precisionMode:y,commonCurrencies:{UST:"USTC"},exceptions:{exact:{"No permission found":c,"API key not found":r,"IP address not allowed":c,"Invalid nonce":d,"Invalid signature":r,"Authentication failed":r,"Missing key, signature and nonce parameters":r,"Wrong API key format":r,"Your account is frozen":c,"Please update your profile with your FATCA information, before using API.":c,"Order not found":h,"Price is more than 20% below market price.":f,"Bitstamp.net is under scheduled maintenance. We'll be back soon.":m,"Order could not be placed.":g,"Invalid offset.":a},broad:{"Minimum order size is":f,"Check your account balance for details.":l,"Ensure this value has at least":u}}})}async fetchMarkets(e={}){const t=await this.fetchMarketsFromCache(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"name");let[a,n]=r.split("/");const o=a.toLowerCase(),c=n.toLowerCase();a=this.safeCurrencyCode(a),n=this.safeCurrencyCode(n);const d=this.safeString(i,"minimum_order").split(" "),h=this.safeString(i,"trading");s.push({id:this.safeString(i,"url_symbol"),marketId:o+"_"+c,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:o,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!1,future:!1,swap:!1,option:!1,active:"Enabled"===h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"base_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(i,"counter_decimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(d,0),max:void 0}},info:i})}return s}constructCurrencyObject(e,t,s,i,r,a){let n="crypto";const o=this.describe();this.isFiat(t)&&(n="fiat");const c=this.parseNumber(this.parsePrecision(this.numberToString(i)));return{id:e,code:t,info:a,type:n,name:s,active:!0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(o.fees.funding.withdraw,t),precision:c,limits:{amount:{min:c,max:void 0},price:{min:c,max:void 0},cost:{min:r,max:void 0},withdraw:{min:void 0,max:void 0}}}}async fetchMarketsFromCache(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),s=this.safeInteger(t,"timestamp"),i=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===s||r-s>i){const s=await this.publicGetTradingPairsInfo(e);this.options.fetchMarkets=this.extend(t,{response:s,timestamp:r})}return this.safeValue(this.options.fetchMarkets,"response")}async fetchCurrencies(e={}){const t=await this.fetchMarketsFromCache(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"name");let[a,n]=r.split("/");const o=a.toLowerCase(),c=n.toLowerCase();a=this.safeCurrencyCode(a),n=this.safeCurrencyCode(n);const d=this.safeString(i,"description"),[h,l]=d.split(" / "),u=this.safeString(i,"minimum_order").split(" ")[0];if(!(a in s)){const e=this.safeInteger(i,"base_decimals");s[a]=this.constructCurrencyObject(o,a,h,e,void 0,i)}if(!(n in s)){const e=this.safeInteger(i,"counter_decimals");s[n]=this.constructCurrencyObject(c,n,l,e,this.parseNumber(u),i)}}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetOrderBookPair(this.extend(r,s)),n=this.safeInteger(a,"microtimestamp"),o=parseInt(n/1e3),c=this.parseOrderBook(a,i.symbol,o);return c.nonce=n,c}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),n=b.stringMul(a,r),o=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTickerPair(this.extend(i,t));return this.parseTicker(r,s)}getCurrencyIdFromTransaction(e){const t=this.safeStringLower(e,"currency");if(void 0!==t)return t;e=this.omit(e,["fee","price","datetime","type","status","id"]);const s=Object.keys(e);for(let t=0;t<s.length;t++){const i=s[t];if(i.indexOf("_")<0){const t=this.safeNumber(e,i);if(void 0!==t&&0!==t)return i}}}getMarketFromTrade(e){e=this.omit(e,["fee","price","datetime","tid","type","order_id","side"]);const t=Object.keys(e),s=t.length;if(s>2)throw new n(this.id+" getMarketFromTrade() too many keys: "+this.json(t)+" in the trade: "+this.json(e));if(2===s){let e=t[0]+t[1];if(e in this.markets_by_id)return this.markets_by_id[e];if(e=t[1]+t[0],e in this.markets_by_id)return this.markets_by_id[e]}}parseTrade(e,t){const s=this.safeString2(e,"id","tid");let i,r,a=this.safeString(e,"price"),n=this.safeString(e,"amount");const o=this.safeString(e,"order_id");let c=this.safeString(e,"cost");if(void 0===t){const s=Object.keys(e);for(let e=0;e<s.length;e++)if(s[e].indexOf("_")>=0){const i=s[e].replace("_","");i in this.markets_by_id&&(t=this.markets_by_id[i])}void 0===t&&(t=this.getMarketFromTrade(e))}const d=this.safeString(e,"fee");let h;void 0!==t&&(a=this.safeString(e,t.marketId,a),n=this.safeString(e,t.baseId,n),c=this.safeString(e,t.quoteId,c),h=t.quote,i=t.symbol);const l=this.safeString2(e,"date","datetime");let u,f;if(void 0!==l&&(l.indexOf(" ")>=0?u=this.parse8601(l):(u=parseInt(l),u*=1e3)),"id"in e){if(void 0!==n){b.stringLt(n,"0")?(r="sell",n=b.stringNeg(n)):r="buy"}}else r=this.safeString(e,"type"),r="1"===r?"sell":"0"===r?"buy":void 0;return void 0!==c&&(c=b.stringAbs(c)),void 0!==d&&(f={cost:d,currency:h}),this.safeTrade({id:s,info:e,timestamp:u,datetime:this.iso8601(u),symbol:i,order:o,type:undefined,side:r,takerOrMaker:void 0,price:a,amount:n,cost:c,fee:f},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id,time:"hour"},n=await this.publicGetTransactionsPair(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id,step:this.timeframes[t]},o=this.parseTimeframe(t);if(void 0===i){if(void 0===s)throw new p(this.id+" fetchOHLCV() requires a since argument or a limit argument");{i=1e3;const e=parseInt(s/1e3);n.start=e,n.end=this.sum(e,i*o),n.limit=i}}else{if(void 0!==s){const e=parseInt(s/1e3);n.start=e,n.end=this.sum(e,i*o)}n.limit=Math.min(i,1e3)}const c=await this.publicGetOhlcPair(this.extend(n,r)),d=this.safeValue(c,"data",{}),h=this.safeValue(d,"ohlc",[]);return this.parseOHLCVs(h,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.currency(r).id,n=this.account();n.free=this.safeString(e,a+"_available"),n.used=this.safeString(e,a+"_reserved"),n.total=this.safeString(e,a+"_balance"),t[r]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.privatePostBalancePair(this.extend(i,t));return this.parseTradingFee(r,s)}parseTradingFee(e,t){t=this.safeMarket(void 0,t);const s=this.safeString(e,t.id+"_fee"),i=b.stringDiv(s,"100"),r=this.parseNumber(i);return{info:e,symbol:t.symbol,maker:r,taker:r}}parseTradingFees(e){const t={info:e},s=this.symbols;for(let i=0;i<s.length;i++){const r=s[i],a=this.market(r),n=this.parseTradingFee(e,a);t[r]=n}return t}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseTradingFees(t)}parseFundingFees(e){const t={},s=Object.keys(e);for(let i=0;i<s.length;i++){const r=s[i];if(r.indexOf("_withdrawal_fee")>=0){const s=r.split("_")[0];t[this.safeCurrencyCode(s)]=this.safeNumber(e,r)}}return{info:e,withdraw:t,deposit:{}}}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.privatePostBalance(t);return this.parseFundingFees(s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o="privatePost"+this.capitalize(s);const c={pair:n.id,amount:this.amountToPrecision(e,i)};"market"===t?o+="Market":"instant"===t?o+="Instant":c.price=this.priceToPrecision(e,r),o+="Pair";const d=this.safeString2(a,"client_order_id","clientOrderId");void 0!==d&&(c.client_order_id=d,a=this.omit(a,["client_order_id","clientOrderId"]));const h=await this[o](this.extend(c,a)),l=this.parseOrder(h,n);return this.extend(l,{type:t})}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e};return await this.privatePostCancelOrder(this.extend(i,s))}async cancelAllOrders(e,t={}){let s;await this.loadMarkets();const i={};let r="privatePostCancelAllOrders";return void 0!==e&&(s=this.market(e),i.pair=s.id,r="privatePostCancelAllOrdersPair"),await this[r](this.extend(i,t))}parseOrderStatus(e){return this.safeString({"In Queue":"open",Open:"open",Finished:"closed",Canceled:"canceled"},e,e)}async fetchOrderStatus(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"client_order_id","clientOrderId"),r={};void 0!==i?(r.client_order_id=i,s=this.omit(s,["client_order_id","clientOrderId"])):r.id=e;const a=await this.privatePostOrderStatus(this.extend(r,s));return this.parseOrderStatus(this.safeString(a,"status"))}async fetchOrder(e,t,s={}){let i;await this.loadMarkets(),void 0!==t&&(i=this.market(t));const r=this.safeValue2(s,"client_order_id","clientOrderId"),a={};void 0!==r?(a.client_order_id=r,s=this.omit(s,["client_order_id","clientOrderId"])):a.id=e;const n=await this.privatePostOrderStatus(this.extend(a,s));return this.parseOrder(n,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="privatePostUserTransactions";void 0!==e&&(a=this.market(e),r.pair=a.id,n+="Pair"),void 0!==s&&(r.limit=s);const o=await this[n](this.extend(r,i)),c=this.filterBy(o,"type","2");return this.parseTrades(c,a,t,s)}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.limit=s);const a=await this.privatePostUserTransactions(this.extend(r,i));let n;void 0!==e&&(n=this.currency(e));const o=this.filterByArray(a,"type",["0","1"],!1);return this.parseTransactions(o,n,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};r.timedelta=void 0!==t?this.milliseconds()-t:5e7;const a=await this.privatePostWithdrawalRequests(this.extend(r,i));return this.parseTransactions(a,void 0,t,s)}parseTransaction(e,t){const s=this.parse8601(this.safeString(e,"datetime")),i=this.safeString(e,"id"),r=this.getCurrencyIdFromTransaction(e),a=this.safeCurrencyCode(r,t),n=this.safeNumber(e,"fee");let o,c;"amount"in e?c=this.safeNumber(e,"amount"):void 0!==t?(c=this.safeNumber(e,t.id,c),o=t.code):void 0!==a&&void 0!==r&&(c=this.safeNumber(e,r,c),o=a),void 0!==c&&(c=Math.abs(c));let d,h="ok";if("status"in e&&(h=this.parseTransactionStatus(this.safeString(e,"status"))),"type"in e){const t=this.safeString(e,"type");"0"===t?d="deposit":"1"===t&&(d="withdrawal")}else d="withdrawal";const l=this.safeString(e,"transaction_id");let u,f=this.safeString(e,"address");if(void 0!==f){const e=f.split("?dt=");e.length>1&&(f=e[0],u=e[1])}const p=f,m=u;let g;return void 0!==n&&(g={currency:o,cost:n,rate:void 0}),{info:e,id:i,txid:l,timestamp:s,datetime:this.iso8601(s),network:void 0,addressFrom:undefined,addressTo:p,address:f,tagFrom:undefined,tagTo:m,tag:u,type:d,amount:c,currency:a,status:h,updated:void 0,fee:g}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"pending",2:"ok",3:"canceled",4:"failed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"client_order_id");let r=this.safeString(e,"type");void 0!==r&&(r="1"===r?"sell":"buy");const a=this.parse8601(this.safeString(e,"datetime")),n=this.safeStringLower(e,"currency_pair"),o=this.safeSymbol(n,t,"/"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"amount"),h=this.safeValue(e,"transactions",[]),l=this.safeString(e,"price");return this.safeOrder({id:s,clientOrderId:i,datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,status:c,symbol:o,type:void 0,timeInForce:void 0,postOnly:void 0,side:r,price:l,stopPrice:void 0,cost:void 0,amount:d,filled:void 0,remaining:void 0,trades:h,fee:void 0,info:e,average:void 0},t)}parseLedgerEntryType(e){return this.safeString({0:"transaction",1:"transaction",2:"trade",14:"transfer"},e,e)}parseLedgerEntry(e,t){const s=this.parseLedgerEntryType(this.safeString(e,"type"));if("trade"===s){const t=this.parseTrade(e);let i;const r=Object.keys(e);for(let e=0;e<r.length;e++)if(r[e].indexOf("_")>=0){const t=r[e].replace("_","");t in this.markets_by_id&&(i=this.markets_by_id[t])}void 0===i&&(i=this.getMarketFromTrade(e));const a="buy"===t.side?"in":"out";return{id:t.id,info:e,timestamp:t.timestamp,datetime:t.datetime,direction:a,account:void 0,referenceId:t.order,referenceAccount:void 0,type:s,currency:i.base,amount:t.amount,before:void 0,after:void 0,status:"ok",fee:t.fee}}{const i=this.parseTransaction(e,t);let r;if("amount"in e){r=this.safeNumber(e,"amount")>0?"in":"out"}else if("currency"in i&&void 0!==i.currency){const s=this.safeString(i,"currency");t=this.currency(s);r=this.safeNumber(e,t.id)>0?"in":"out"}return{id:i.id,info:e,timestamp:i.timestamp,datetime:i.datetime,direction:r,account:void 0,referenceId:i.txid,referenceAccount:void 0,type:s,currency:i.currency,amount:i.amount,before:void 0,after:void 0,status:i.status,fee:i.fee}}}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.limit=s);const a=await this.privatePostUserTransactions(this.extend(r,i));let n;return void 0!==e&&(n=this.currency(e)),this.parseLedger(a,n,t,s)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privatePostOpenOrdersAll(i);return this.parseOrders(a,r,t,s,{status:"open",type:"limit"})}getCurrencyName(e){return e.toLowerCase()}isFiat(e){return"USD"===e||"EUR"===e||"GBP"===e}async fetchDepositAddress(e,t={}){if(this.isFiat(e))throw new o(this.id+" fiat fetchDepositAddress() for "+e+" is not supported!");const s=this.getCurrencyName(e),i="privatePost"+this.capitalize(s)+"Address",r=await this[i](t),a=this.safeString(r,"address"),n=this.safeString2(r,"memo_id","destination_tag");return this.checkAddress(a),{currency:e,address:a,tag:n,network:void 0,info:r}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a={amount:t};let n,o;if(this.isFiat(e))o="privatePostWithdrawalOpen",n=this.currency(e),a.iban=s,a.account_currency=n.id;else{const t=this.getCurrencyName(e);o="privatePost"+this.capitalize(t)+"Withdrawal","XRP"===e?void 0!==i&&(a.destination_tag=i):"XLM"!==e&&"HBAR"!==e||void 0!==i&&(a.memo_id=i),a.address=s}const c=await this[o](this.extend(a,r));return this.parseTransaction(c,n)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/";n+=this.version+"/",n+=this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e="BITSTAMP "+this.apiKey,t=this.uuid(),i=this.milliseconds().toString(),c="v2";let d="";r={"X-Auth":e,"X-Auth-Nonce":t,"X-Auth-Timestamp":i,"X-Auth-Version":c},"POST"===s&&(Object.keys(o).length?(a=this.urlencode(o),d="application/x-www-form-urlencoded",r["Content-Type"]=d):(a=this.urlencode({foo:"bar"}),d="application/x-www-form-urlencoded",r["Content-Type"]=d));const h=a||"",l=e+s+n.replace("https://","")+d+t+i+c+h,u=this.hmac(this.encode(l),this.encode(this.secret));r["X-Auth-Signature"]=u}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,o,c,d,h){if(void 0===c)return;const l=this.safeString(c,"status"),u=this.safeValue(c,"error");if("error"===l||void 0!==u){let e=[];if("string"==typeof u)e.push(u);else if(void 0!==u){const t=Object.keys(u);for(let s=0;s<t.length;s++){const i=t[s],r=this.safeValue(u,i);Array.isArray(r)?e=this.arrayConcat(e,r):e.push(r)}}const t=this.safeValue(c,"reason",{});if("string"==typeof t)e.push(t);else{const s=this.safeValue(t,"__all__",[]);for(let t=0;t<s.length;t++)e.push(s[t])}if("API0005"===this.safeString(c,"code"))throw new r(this.id+" invalid signature, use the uid for the main account if you have subaccounts");const s=this.id+" "+o;for(let t=0;t<e.length;t++){const i=e[t];this.throwExactlyMatchedException(this.exceptions.exact,i,s),this.throwBroadlyMatchedException(this.exceptions.broad,i,s)}throw new n(s)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],166:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,ExchangeError:a}=e("./base/errors"),{TICK_SIZE:n}=e("./base/functions/number"),o=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitstamp1",name:"Bitstamp",countries:["GB"],rateLimit:1e3,version:"v1",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOrder:void 0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:"https://www.bitstamp.net/api",www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["ticker","ticker_hour","order_book","transactions","eur_usd"]},private:{post:["balance","user_transactions","open_orders","order_status","cancel_order","cancel_all_orders","buy","sell","bitcoin_deposit_address","unconfirmed_btc","ripple_withdrawal","ripple_address","withdrawal_requests","bitcoin_withdrawal"]}},precisionMode:n,markets:{"BTC/USD":{id:"btcusd",symbol:"BTC/USD",base:"BTC",quote:"USD",baseId:"btc",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"BTC/EUR":{id:"btceur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"btc",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"EUR/USD":{id:"eurusd",symbol:"EUR/USD",base:"EUR",quote:"USD",baseId:"eur",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/USD":{id:"xrpusd",symbol:"XRP/USD",base:"XRP",quote:"USD",baseId:"xrp",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/EUR":{id:"xrpeur",symbol:"XRP/EUR",base:"XRP",quote:"EUR",baseId:"xrp",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/BTC":{id:"xrpbtc",symbol:"XRP/BTC",base:"XRP",quote:"BTC",baseId:"xrp",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/USD":{id:"ltcusd",symbol:"LTC/USD",base:"LTC",quote:"USD",baseId:"ltc",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/EUR":{id:"ltceur",symbol:"LTC/EUR",base:"LTC",quote:"EUR",baseId:"ltc",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/BTC":{id:"ltcbtc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/USD":{id:"ethusd",symbol:"ETH/USD",base:"ETH",quote:"USD",baseId:"eth",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/EUR":{id:"etheur",symbol:"ETH/EUR",base:"ETH",quote:"EUR",baseId:"eth",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/BTC":{id:"ethbtc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",baseId:"eth",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0}}})}async fetchOrderBook(e,t,s={}){if("BTC/USD"!==e)throw new a(this.id+" "+this.version+" fetchOrderBook doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const i=await this.publicGetOrderBook(s),r=this.safeTimestamp(i,"timestamp");return this.parseOrderBook(i,e,r)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),n=o.stringMul(a,r),c=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){if("BTC/USD"!==e)throw new a(this.id+" "+this.version+" fetchTicker doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const s=this.market(e),i=await this.publicGetTicker(t);return this.parseTicker(i,s)}parseTrade(e,t){const s=this.safeTimestamp2(e,"date","datetime"),i=0===e.type?"buy":"sell",r=this.safeString(e,"order_id"),a=this.safeString(e,"tid"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),c=this.safeString(e,"currency_pair");return t=this.safeMarket(c,t),this.safeTrade({id:a,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:r,type:void 0,side:i,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){if("BTC/USD"!==e)throw new r(this.id+" "+this.version+" fetchTrades doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const a=this.market(e),n=await this.publicGetTransactions(this.extend({time:"minute"},i));return this.parseTrades(n,a,t,s)}parseBalance(e){const t={info:e},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.currency(r).id,n=this.account();n.free=this.safeString(e,a+"_available"),n.used=this.safeString(e,a+"_reserved"),n.total=this.safeString(e,a+"_balance"),t[r]=n}return this.safeBalance(t)}async fetchBalance(e={}){const t=await this.privatePostBalance(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,n={}){if("limit"!==t)throw new a(this.id+" "+this.version+" accepts limit orders only");if("BTC/USD"!==e)throw new a(this.id+" v1 supports BTC/USD orders only");await this.loadMarkets();const o="privatePost"+this.capitalize(s),c={amount:i,price:r},d=await this[o](this.extend(c,n));return{info:d,id:this.safeString(d,"id")}}async cancelOrder(e,t,s={}){return await this.privatePostCancelOrder({id:e})}parseOrderStatus(e){return this.safeString({"In Queue":"open",Open:"open",Finished:"closed",Canceled:"canceled"},e,e)}async fetchOrderStatus(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostOrderStatus(this.extend(i,s));return this.parseOrderStatus(r)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={id:r?r.id:"all"},n=await this.privatePostOpenOrdersId(this.extend(a,i));return this.parseTrades(n,r,t,s)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i),o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,s=this.encode(this.hmac(this.encode(t),this.encode(this.secret)));o=this.extend({key:this.apiKey,signature:s.toUpperCase(),nonce:e},o),a=this.urlencode(o),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;if("error"===this.safeString(o,"status"))throw new a(this.id+" "+this.json(o))}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],167:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,BadSymbol:a,ExchangeError:n,ExchangeNotAvailable:o,AuthenticationError:c,InvalidOrder:d,InsufficientFunds:h,OrderNotFound:l,DDoSProtection:u,PermissionDenied:f,AddressPending:p,OnMaintenance:m,BadRequest:g,InvalidAddress:y}=e("./base/errors"),{TRUNCATE:b,TICK_SIZE:v}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bittrex",name:"Bittrex",countries:["US"],version:"v3",rateLimit:1500,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"MINUTE_1","5m":"MINUTE_5","1h":"HOUR_1","1d":"DAY_1"},hostname:"bittrex.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg",api:{public:"https://api.bittrex.com",private:"https://api.bittrex.com"},www:"https://bittrex.com",doc:["https://bittrex.github.io/api/v3"],fees:["https://bittrex.zendesk.com/hc/en-us/articles/115003684371-BITTREX-SERVICE-FEES-AND-WITHDRAWAL-LIMITATIONS","https://bittrex.zendesk.com/hc/en-us/articles/115000199651-What-fees-does-Bittrex-charge-"],referral:"https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B"},api:{public:{get:["ping","currencies","currencies/{symbol}","markets","markets/tickers","markets/summaries","markets/{marketSymbol}","markets/{marketSymbol}/summary","markets/{marketSymbol}/orderbook","markets/{marketSymbol}/trades","markets/{marketSymbol}/ticker","markets/{marketSymbol}/candles/{candleInterval}/recent","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}/{day}","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}"]},private:{get:["account","account/fees/fiat","account/fees/fiat/{currencySymbol}","account/fees/trading","account/fees/trading/{marketSymbol}","account/volume","addresses","addresses/{currencySymbol}","balances","balances/{currencySymbol}","deposits/open","deposits/closed","deposits/ByTxId/{txId}","deposits/{depositId}","executions","orders/closed","orders/open","orders/{orderId}","orders/{orderId}/executions","ping","subaccounts/{subaccountId}","subaccounts","withdrawals/open","withdrawals/closed","withdrawals/ByTxId/{txId}","withdrawals/{withdrawalId}","withdrawals/whitelistAddresses","conditional-orders/{conditionalOrderId}","conditional-orders/closed","conditional-orders/open","transfers/sent","transfers/received","transfers/{transferId}"],post:["addresses","orders","subaccounts","withdrawals","conditional-orders","transfers"],delete:["orders/open","orders/{orderId}","withdrawals/{withdrawalId}","conditional-orders/{conditionalOrderId}"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0075"),taker:this.parseNumber("0.0075")},funding:{tierBased:!1,percentage:!1}},precisionMode:v,exceptions:{exact:{BAD_REQUEST:g,STARTDATE_OUT_OF_RANGE:g,APISIGN_NOT_PROVIDED:c,APIKEY_INVALID:c,INVALID_SIGNATURE:c,INVALID_CURRENCY:n,INVALID_PERMISSION:c,INSUFFICIENT_FUNDS:h,INVALID_CEILING_MARKET_BUY:d,INVALID_FIAT_ACCOUNT:d,INVALID_ORDER_TYPE:d,QUANTITY_NOT_PROVIDED:d,MIN_TRADE_REQUIREMENT_NOT_MET:d,NOT_FOUND:l,ORDER_NOT_OPEN:l,INVALID_ORDER:d,UUID_INVALID:l,RATE_NOT_PROVIDED:d,INVALID_MARKET:a,WHITELIST_VIOLATION_IP:f,DUST_TRADE_DISALLOWED_MIN_VALUE:d,RESTRICTED_MARKET:a,"We are down for scheduled maintenance, but we’ll be back up shortly.":m},broad:{throttled:u,problem:o}},options:{fetchTicker:{method:"publicGetMarketsMarketSymbolTicker"},fetchTickers:{method:"publicGetMarketsTickers"},fetchDeposits:{status:"ok"},fetchWithdrawals:{status:"ok"},parseOrderStatus:!1,hasAlreadyAuthenticatedSuccessfully:!1,tag:{NXT:!0,CRYPTO_NOTE_PAYMENTID:!0,BITSHAREX:!0,RIPPLE:!0,NEM:!0,STELLAR:!0,STEEM:!0},subaccountId:void 0,fetchClosedOrdersFilterBySince:!0},commonCurrencies:{BIFI:"Bifrost Finance",BTR:"BTRIPS",GMT:"GMT Token",MEME:"Memetic",MER:"Mercury",PROS:"Pros.Finance",REPV2:"REP",TON:"Tokamak Network"}})}feeToPrecision(e,t){return this.decimalToPrecision(t,b,this.markets[e].precision.price,this.precisionMode)}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"baseCurrencySymbol"),a=this.safeString(i,"quoteCurrencySymbol"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a),c=this.safeString(i,"status");s.push({id:this.safeString(i,"symbol"),symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ONLINE"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber(this.parsePrecision(this.safeString(i,"precision","8")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"minTradeSize"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}parseBalance(e){const t={info:e},s=this.indexBy(e,"currencySymbol"),i=Object.keys(s);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=this.account(),o=s[r];n.free=this.safeString(o,"available"),n.total=this.safeString(o,"total"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={marketSymbol:i.id};if(void 0!==t){if(1!==t&&25!==t&&500!==t)throw new g(this.id+" fetchOrderBook() limit argument must be undefined, 1, 25 or 500, default is 25");r.depth=t}const a=await this.publicGetMarketsMarketSymbolOrderbook(this.extend(r,s)),n=this.safeInteger(this.last_response_headers,"Sequence"),o=this.parseOrderBook(a,i.symbol,void 0,"bid","ask","rate","quantity");return o.nonce=n,o}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r),n=this.parseNumber("0.00000001"),o=this.safeNumber(i,"txFee"),c=this.safeString(i,"status");s[a]={id:r,code:a,address:this.safeString(i,"baseAddress"),info:i,type:this.safeString(i,"coinType"),name:this.safeString(i,"name"),active:"ONLINE"===c,deposit:void 0,withdraw:void 0,fee:o,precision:n,limits:{amount:{min:n,max:void 0},withdraw:{min:o,max:void 0}}}}return s}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"updatedAt")),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t,"-")).symbol,a=this.safeString(e,"percentChange"),n=this.safeString(e,"lastTradeRate");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bidRate"),bidVolume:void 0,ask:this.safeString(e,"askRate"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:a,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=this.safeValue(this.options,"fetchTickers",{}),i=this.safeString(s,"method","publicGetMarketsTickers"),r=this.safeString(t,"method",i);t=this.omit(t,"method");const a=await this[r](t),n=[];for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n.push(t)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={marketSymbol:s.id},r=this.safeValue(this.options,"fetchTicker",{}),a=this.safeString(r,"method","publicGetMarketsMarketSymbolTicker"),n=this.safeString(t,"method",a);t=this.omit(t,"method");const o=await this[n](this.extend(i,t));return this.parseTicker(o,s)}async fetchBidsAsks(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketsTickers(t);return this.parseTickers(s,e)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"executedAt")),i=this.safeString(e,"id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"marketSymbol");t=this.safeMarket(a,t,"-");const n=this.safeString(e,"rate"),o=this.safeString(e,"quantity");let c;const d=this.safeValue(e,"isTaker");let h;void 0!==d&&(c=d?"taker":"maker");const l=this.safeString(e,"commission");void 0!==l&&(h={cost:l,currency:t.quote});const u=this.safeStringLower(e,"takerSide");return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,id:i,order:r,takerOrMaker:c,type:void 0,side:u,price:n,amount:o,cost:void 0,fee:h},t)}async fetchTime(e={}){const t=await this.publicGetPing(e);return this.safeInteger(t,"serverTime")}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={marketSymbol:r.id},n=await this.publicGetMarketsMarketSymbolTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={marketSymbol:s.id},r=await this.privateGetAccountFeesTradingMarketSymbol(this.extend(i,t));return this.parseTradingFee(r,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountFeesTrading(e);return this.parseTradingFees(t)}parseTradingFee(e,t){const s=this.safeString(e,"marketSymbol"),i=this.safeNumber(e,"makerRate"),r=this.safeNumber(e,"takerRate");return{info:e,symbol:this.safeSymbol(s,t),maker:i,taker:r}}parseTradingFees(e){const t={info:e};for(let s=0;s<e.length;s++){const i=this.parseTradingFee(e[s]);t[i.symbol]=i}return t}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"startsAt")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=a.baseId+"-"+a.quoteId,o={candleInterval:this.timeframes[t],marketSymbol:n};let c="publicGetMarketsMarketSymbolCandlesCandleIntervalRecent";if(void 0!==s){const e=this.milliseconds(),i=Math.abs(e-s),r=this.yyyymmdd(s).split("-"),a=this.safeInteger(r,0),n=this.safeInteger(r,1),d=this.safeInteger(r,2);"1d"===t?i>316224e5&&(c="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYear",o.year=a):"1h"===t?i>26784e5&&(c="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonth",o.year=a,o.month=n):i>864e5&&(c="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonthDay",o.year=a,o.month=n,o.day=d)}const d=await this[c](this.extend(o,r));return this.parseOHLCVs(d,a,t,s,i)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;const n=this.safeValue(i,"stop");void 0!==e&&(a=this.market(e),r.marketSymbol=a.id);let o="privateGetOrdersOpen";n&&(o="privateGetConditionalOrdersOpen");const c=this.omit(i,"stop"),d=await this[o](this.extend(r,c));return this.parseOrders(d,a,t,s)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={orderId:e},n=await this.privateGetOrdersOrderIdExecutions(this.extend(a,r));let o;return void 0!==t&&(o=this.market(t)),this.parseTrades(n,o,s,i)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.market(e);let c;void 0!==t&&(c=t.toUpperCase());const d=o.baseId+"-"+o.quoteId,h=this.safeValue(n,"stop"),l=this.safeNumber2(n,"triggerPrice","stopPrice"),u={marketSymbol:d};let f="privatePostOrders";if(h||l){f="privatePostConditionalOrders";const t=this.safeString(n,"operand");if(void 0===t)throw new r(this.id+" createOrder() requires an operand parameter");const o=this.safeNumber(n,"trailingStopPercent"),h=this.safeValue(n,"orderToCreate"),p=this.safeValue(n,"orderToCancel");if(void 0===l&&(u.trailingStopPercent=this.priceToPrecision(e,o)),h){const t="CEILING_LIMIT"===c,r="CEILING_MARKET"===c;let o,h,l;if(t||r){let s;t?(h=this.priceToPrecision(e,a),s=this.safeNumber2(n,"ceiling","cost",i)):r&&(s=this.safeNumber2(n,"ceiling","cost"),void 0===s&&(s=void 0===a?i:i*a)),o=this.costToPrecision(e,s),l="IMMEDIATE_OR_CANCEL"}else"LIMIT"===c?(h=this.priceToPrecision(e,a),l="GOOD_TIL_CANCELLED"):l="IMMEDIATE_OR_CANCEL";u.orderToCreate={marketSymbol:d,direction:s.toUpperCase(),type:c,quantity:this.amountToPrecision(e,i),ceiling:o,limit:h,timeInForce:l,clientOrderId:this.safeString(n,"clientOrderId"),useAwards:this.safeValue(n,"useAwards")}}p&&(u.orderToCancel=p),u.triggerPrice=this.priceToPrecision(e,l),u.operand=t}else{void 0!==s&&(u.direction=s.toUpperCase()),u.type=c;const t="CEILING_LIMIT"===c,r="CEILING_MARKET"===c;if(t||r){let s;t?(u.limit=this.priceToPrecision(e,a),s=this.safeNumber2(n,"ceiling","cost",i)):r&&(s=this.safeNumber2(n,"ceiling","cost"),void 0===s&&(s=void 0===a?i:i*a)),u.ceiling=this.costToPrecision(e,s),u.timeInForce="IMMEDIATE_OR_CANCEL"}else u.quantity=this.amountToPrecision(e,i),"LIMIT"===c?(u.limit=this.priceToPrecision(e,a),u.timeInForce="GOOD_TIL_CANCELLED"):u.timeInForce="IMMEDIATE_OR_CANCEL"}const p=this.omit(n,["stop","stopPrice","ceiling","cost","operand","trailingStopPercent","orderToCreate","orderToCancel"]),m=await this[f](this.extend(u,p));return this.parseOrder(m,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=this.safeValue(s,"stop");let r,a,n={};void 0!==t&&(a=this.market(t)),i?(r="privateDeleteConditionalOrdersConditionalOrderId",n={conditionalOrderId:e}):(r="privateDeleteOrdersOrderId",n={orderId:e});const o=this.omit(s,"stop"),c=await this[r](this.extend(n,o));return this.extend(this.parseOrder(c,a),{id:e,info:c,status:"canceled"})}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.marketSymbol=i.id);const r=await this.privateDeleteOrdersOpen(this.extend(s,t)),a=[];for(let e=0;e<r.length;e++){const t=this.safeValue(r[e],"result",{});a.push(t)}return this.parseOrders(a,i)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={txId:e},r=await this.privateGetDepositsByTxIdTxId(this.extend(i,s)),a=this.parseTransactions(r,t,void 0,void 0);return this.safeValue(a,0)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;void 0!==e&&(a=this.currency(e),r.currencySymbol=a.id),void 0!==t&&(r.startDate=this.iso8601(t)),void 0!==s&&(r.pageSize=s);const o=this.safeValue(this.options,"fetchDeposits",{}),c=this.safeString(o,"status","ok");n="pending"===this.safeString(i,"status",c)?"privateGetDepositsOpen":"privateGetDepositsClosed",i=this.omit(i,"status");const d=await this[n](this.extend(r,i));return this.parseTransactions(d,a,void 0,s)}async fetchPendingDeposits(e,t,s,i={}){return await this.loadMarkets(),this.fetchDeposits(e,t,s,this.extend(i,{status:"pending"}))}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={txId:e},r=await this.privateGetWithdrawalsByTxIdTxId(this.extend(i,s)),a=this.parseTransactions(r,t,void 0,void 0);return this.safeValue(a,0)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;void 0!==e&&(a=this.currency(e),r.currencySymbol=a.id),void 0!==t&&(r.startDate=this.iso8601(t)),void 0!==s&&(r.pageSize=s);const o=this.safeValue(this.options,"fetchWithdrawals",{}),c=this.safeString(o,"status","ok");n="pending"===this.safeString(i,"status",c)?"privateGetWithdrawalsOpen":"privateGetWithdrawalsClosed",i=this.omit(i,"status");const d=await this[n](this.extend(r,i));return this.parseTransactions(d,a,t,s)}async fetchPendingWithdrawals(e,t,s,i={}){return await this.loadMarkets(),this.fetchWithdrawals(e,t,s,this.extend(i,{status:"pending"}))}parseTransaction(e,t){const s=this.safeString2(e,"id","clientWithdrawalId"),i=this.safeNumber(e,"quantity"),r=this.safeString(e,"cryptoAddress");let a,n;"BLOCKCHAIN"===this.safeString(e,"source")?n=r:a=r;const o=this.safeString(e,"txId"),c=this.parse8601(this.safeString(e,"updatedAt")),d=this.parse8601(this.safeString(e,"createdAt")),h=d||c,l=void 0===d?"deposit":"withdrawal",u=this.safeString(e,"currencySymbol"),f=this.safeCurrencyCode(u,t);let p="pending";if("deposit"===l)p="ok";else{const t=this.safeString(e,"status");"ERROR_INVALID_ADDRESS"===t?p="failed":"CANCELLED"===t?p="canceled":"PENDING"===t?p="pending":("COMPLETED"===t||"AUTHORIZED"===t&&void 0!==o)&&(p="ok")}let m=this.safeNumber(e,"txCost");return void 0===m&&"deposit"===l&&(m=0),{info:e,id:s,currency:f,amount:i,network:void 0,address:r,addressTo:a,addressFrom:n,tag:void 0,tagTo:void 0,tagFrom:void 0,status:p,type:l,updated:c,txid:o,timestamp:h,datetime:this.iso8601(h),fee:{currency:f,cost:m}}}parseTimeInForce(e){return this.safeString({GOOD_TIL_CANCELLED:"GTC",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK",POST_ONLY_GOOD_TIL_CANCELLED:"PO"},e,e)}parseOrder(e,t){const s=this.safeString(e,"marketSymbol"),i=(t=this.safeMarket(s,t,"-")).symbol,r=t.quote,a=this.safeString(e,"createdAt"),n=this.safeString(e,"updatedAt"),o=this.safeString(e,"closedAt"),c=this.safeString(e,"clientOrderId");let d;void 0!==o?d=this.parse8601(o):n&&(d=this.parse8601(n));const h=this.parse8601(a);let l=this.safeStringLower(e,"direction");if(void 0===l){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),l=this.safeStringLower(t,"direction")}let u=this.safeStringLower(e,"type");if(void 0===u){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),u=this.safeStringLower(t,"type")}let f=this.safeString(e,"quantity");if(void 0===f){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),f=this.safeString(t,"quantity")}let p=this.safeString(e,"limit");if(void 0===p){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),p=this.safeString(t,"limit")}let m=this.parseTimeInForce(this.safeString(e,"timeInForce"));if(void 0===m){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),m=this.parseTimeInForce(this.safeString(t,"timeInForce"))}const g=this.safeString(e,"fillQuantity"),y=this.safeNumber(e,"commission"),b=this.safeString(e,"proceeds"),v=this.safeStringLower(e,"status"),w="PO"===m;return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:c,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:d,symbol:i,type:u,timeInForce:m,postOnly:w,side:l,price:p,stopPrice:this.safeString(e,"triggerPrice"),cost:b,average:void 0,amount:f,filled:g,remaining:void 0,status:v,fee:{cost:y,currency:r},info:e,trades:void 0},t)}parseOrders(e,t,s,i,r={}){return this.options.fetchClosedOrdersFilterBySince?super.parseOrders(e,t,s,i,r):super.parseOrders(e,t,void 0,i,r)}parseOrderStatus(e){return this.safeString({CLOSED:"closed",OPEN:"open",CANCELLED:"canceled",CANCELED:"canceled"},e,e)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.safeValue(s,"stop");let r,a,n;void 0!==t&&(r=this.market(t));try{const t={};i?(n="privateGetConditionalOrdersConditionalOrderId",t.conditionalOrderId=e):(n="privateGetOrdersOrderId",t.orderId=e);const r=this.omit(s,"stop");a=await this[n](this.extend(t,r))}catch(e){if(this.last_json_response){if("UUID_INVALID"===this.safeString(this.last_json_response,"message"))throw new l(this.id+" fetchOrder() error: "+this.last_http_response)}throw e}return this.parseOrder(a,r)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==s&&(r.pageSize=s),void 0!==t&&(r.startDate=this.ymdhms(t,"T")+"Z"),void 0!==e&&(a=this.market(e),e=a.symbol,r.marketSymbol=a.id);const n=await this.privateGetExecutions(this.extend(r,i)),o=this.parseTrades(n,a);return this.filterBySymbolSinceLimit(o,e,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r=this.safeValue(i,"stop"),a={};let n;void 0!==s&&(a.pageSize=s),void 0!==t&&(a.startDate=this.ymdhms(t,"T")+"Z"),void 0!==e&&(n=this.market(e),a.marketSymbol=n.base+"-"+n.quote);let o="privateGetOrdersClosed";r&&(o="privateGetConditionalOrdersClosed");const c=this.omit(i,"stop"),d=await this[o](this.extend(a,c));return this.parseOrders(d,n,t,s)}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currencySymbol:s.id},r=await this.privatePostAddresses(this.extend(i,t));let a=this.safeString(r,"cryptoAddress");const n=this.safeString(r,"status");if(!a||"REQUESTED"===n)throw new p(this.id+" the address for "+e+" is being generated (pending, not ready yet, retry again later)");let o=this.safeString(r,"cryptoAddressTag");return void 0===o&&s.type in this.options.tag&&(o=a,a=s.address),this.checkAddress(a),{currency:e,address:a,tag:o,info:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currencySymbol:s.id},r=await this.privateGetAddressesCurrencySymbol(this.extend(i,t));let a=this.safeString(r,"cryptoAddress");const n=this.safeString(r,"status");if(!a||"REQUESTED"===n)throw new p(this.id+" the address for "+e+" is being generated (pending, not ready yet, retry again later)");let o=this.safeString(r,"cryptoAddressTag");return void 0===o&&s.type in this.options.tag&&(o=a,a=s.address),this.checkAddress(a),{currency:e,address:a,tag:o,network:void 0,info:r}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currencySymbol:a.id,quantity:t,cryptoAddress:s};void 0!==i&&(n.cryptoAddressTag=i);const o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}sign(e,t="v3",s="GET",i={},r,a){let n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+"/";if("private"===t){n+=this.version+"/",this.checkRequiredCredentials(),n+=this.implodeParams(e,i),i=this.omit(i,this.extractParams(e));let t="";"POST"===s?t=a=this.json(i):Object.keys(i).length&&(n+="?"+this.rawencode(i));const o=this.hash(this.encode(t),"sha512","hex"),c=this.milliseconds().toString();let d=c+n+s+o;const h=this.safeValue(this.options,"subaccountId");void 0!==h&&(d+=h);const l=this.hmac(this.encode(d),this.encode(this.secret),"sha512");r={"Api-Key":this.apiKey,"Api-Timestamp":c,"Api-Content-Hash":o,"Api-Signature":l},void 0!==h&&(r["Api-Subaccount-Id"]=h),"POST"===s&&(r["Content-Type"]="application/json")}else"public"===t&&(n+=this.version+"/"),n+=this.implodeParams(e,i),i=this.omit(i,this.extractParams(e)),Object.keys(i).length&&(n+="?"+this.urlencode(i));return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,d,h){if(void 0!==o&&"{"===a[0]){const e=this.id+" "+a;let t=this.safeValue(o,"success");if(void 0===t){const t=this.safeString(o,"code");if("NOT_FOUND"===t&&s.indexOf("addresses")>=0)throw new y(e);return void(void 0!==t&&(this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e)))}if("string"==typeof t&&(t="true"===t),!t){const t=this.safeString(o,"message");if("APIKEY_INVALID"===t)throw this.options.hasAlreadyAuthenticatedSuccessfully?new u(e):new c(e);if("INVALID_ORDER"===t){const e="cancel";if(s.indexOf(e)>=0){const e=s.split("?");if(e.length>1){const t=e[1].split("&"),s=t.length;let i;for(let e=0;e<s;e++){const s=t[e].split("=");if("uuid"===s[0]){i=s[1];break}}throw new l(void 0!==i?this.id+" cancelOrder "+i+" "+this.json(o):this.id+" cancelOrder "+this.json(o))}}}throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),void 0!==t&&this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new n(e)}}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],168:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadSymbol:a,AuthenticationError:n,InsufficientFunds:o,InvalidOrder:c,ArgumentsRequired:d,OrderNotFound:h,InvalidAddress:l,BadRequest:u,RateLimitExceeded:f,PermissionDenied:p,ExchangeNotAvailable:m,AccountSuspended:g,OnMaintenance:y}=e("./base/errors"),{SIGNIFICANT_DIGITS:b,DECIMAL_PLACES:v,TRUNCATE:w,ROUND:S}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bitvavo",name:"Bitvavo",countries:["NL"],rateLimit:60,version:"v2",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/169202626-bd130fc5-fcf9-41bb-8d97-6093225c73cd.jpg",api:{public:"https://api.bitvavo.com",private:"https://api.bitvavo.com"},www:"https://bitvavo.com/",doc:"https://docs.bitvavo.com/",fees:"https://bitvavo.com/en/fees",referral:"https://bitvavo.com/?a=24F34952F7"},api:{public:{get:{time:1,markets:1,assets:1,"{market}/book":1,"{market}/trades":5,"{market}/candles":1,"ticker/price":1,"ticker/book":1,"ticker/24h":{cost:1,noMarket:25}}},private:{get:{account:1,order:1,orders:5,ordersOpen:{cost:1,noMarket:25},trades:5,balance:5,deposit:1,depositHistory:5,withdrawalHistory:5},post:{order:1,withdrawal:1},put:{order:1},delete:{order:1,orders:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0020")],[this.parseNumber("250000"),this.parseNumber("0.0016")],[this.parseNumber("500000"),this.parseNumber("0.0012")],[this.parseNumber("1000000"),this.parseNumber("0.0010")],[this.parseNumber("2500000"),this.parseNumber("0.0008")],[this.parseNumber("5000000"),this.parseNumber("0.0006")],[this.parseNumber("10000000"),this.parseNumber("0.0005")],[this.parseNumber("25000000"),this.parseNumber("0.0004")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("250000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0006")],[this.parseNumber("1000000"),this.parseNumber("0.0005")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("10000000"),this.parseNumber("0.0003")],[this.parseNumber("25000000"),this.parseNumber("0.0003")]]}}},requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{101:r,102:u,103:f,104:f,105:p,107:m,108:m,109:m,110:u,200:u,201:u,202:u,203:a,204:u,205:u,206:u,210:c,211:c,212:c,213:c,214:c,215:c,216:o,217:c,230:r,231:r,232:u,233:c,234:c,235:r,236:u,240:h,300:n,301:n,302:n,303:n,304:n,305:n,306:n,307:p,308:n,309:n,310:p,311:p,312:p,315:u,317:g,400:r,401:r,402:p,403:p,404:y,405:r,406:u,407:r,408:o,409:l,410:r,411:u,412:l,413:l,414:r},broad:{"start parameter is invalid":u,"symbol parameter is invalid":a,"amount parameter is invalid":c,"orderId parameter is invalid":c}},options:{"BITVAVO-ACCESS-WINDOW":1e4,fetchCurrencies:{expires:1e3}},precisionMode:b,commonCurrencies:{MIOTA:"IOTA"}})}currencyToPrecision(e,t,s){return this.decimalToPrecision(t,0,this.currencies[e].precision,v)}amountToPrecision(e,t){return this.decimalToPrecision(t,w,this.markets[e].precision.amount,v)}priceToPrecision(e,t){return t=this.decimalToPrecision(t,S,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,w,8,v)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"time")}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=await this.fetchCurrenciesFromCache(e),i=this.indexBy(s,"symbol"),r=[];for(let e=0;e<t.length;e++){const s=t[e],a=this.safeString(s,"market"),n=this.safeString(s,"base"),o=this.safeString(s,"quote"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeString(s,"status"),l=this.safeValue(i,n);r.push({id:a,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(l,"decimals",8),price:this.safeInteger(s,"pricePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minOrderInBaseAsset"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"minOrderInQuoteAsset"),max:void 0}},info:s})}return r}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),s=this.safeInteger(t,"timestamp"),i=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===s||r-s>i){const s=await this.publicGetAssets(e);this.options.fetchCurrencies=this.extend(t,{response:s,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r),n="OK"===this.safeValue(i,"depositStatus"),o="OK"===this.safeValue(i,"withdrawalStatus"),c=n&&o,d=this.safeString(i,"name");s[a]={id:r,info:i,code:a,name:d,active:c,deposit:n,withdraw:o,fee:this.safeNumber(i,"withdrawalFee"),precision:this.safeInteger(i,"decimals",8),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(i,"withdrawalMinAmount"),max:void 0}}}}return s}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.publicGetTicker24h(this.extend(i,t));return this.parseTicker(r,s)}parseTicker(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t,"-"),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last"),n=this.safeString(e,"volume"),o=this.safeString(e,"volumeQuote"),c=this.safeString(e,"open");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:c,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker24h(t);return this.parseTickers(s,e)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==s&&(a.limit=s),void 0!==t&&(a.start=t);const n=await this.publicGetMarketTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"price"),i=this.safeString(e,"amount"),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"side"),n=this.safeString2(e,"id","fillId"),o=this.safeString(e,"market"),c=this.safeSymbol(o,t,"-"),d=this.safeValue(e,"taker");let h;void 0!==d&&(h=d?"taker":"maker");const l=this.safeString(e,"fee");let u;if(void 0!==l){const t=this.safeString(e,"feeCurrency");u={cost:l,currency:this.safeCurrencyCode(t)}}const f=this.safeString(e,"orderId");return this.safeTrade({info:e,id:n,symbol:c,timestamp:r,datetime:this.iso8601(r),order:f,type:void 0,side:a,takerOrMaker:h,price:s,amount:i,cost:void 0,fee:u},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccount(e),s=this.safeValue(t,"fees"),i=this.safeNumber(s,"maker"),r=this.safeNumber(s,"taker"),a={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];a[s]={info:t,symbol:s,maker:i,taker:r,percentage:!0,tierBased:!0}}return a}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetMarketBook(this.extend(r,s)),n=this.parseOrderBook(a,i.symbol);return n.nonce=this.safeInteger(a,"nonce"),n}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:this.timeframes[t]};if(void 0!==s){const e=this.parseTimeframe(t);n.start=s,void 0===i&&(i=1440),n.end=this.sum(s,i*e*1e3)}void 0!==i&&(n.limit=i);const o=await this.publicGetMarketCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"inOrder"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={symbol:this.currency(e).id},i=await this.privateGetDeposit(this.extend(s,t)),r=this.safeString(i,"address"),a=this.safeString(i,"paymentId");return this.checkAddress(r),{currency:e,address:r,tag:a,network:void 0,info:i}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,side:s,orderType:t},c="market"===t||"stopLoss"===t||"takeProfit"===t,d="limit"===t||"stopLossLimit"===t||"takeProfitLimit"===t,h=this.safeString(a,"timeInForce");let l=this.safeStringN(a,["triggerPrice","stopPrice","triggerAmount"]);const u=this.isPostOnly(c,!1,a),f=this.safeString(a,"stopLossPrice"),p=this.safeString(a,"takeProfitPrice");if(a=this.omit(a,["timeInForce","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice"]),c){let t;if(t=void 0!==r?i*r:this.safeNumber2(a,"cost","amountQuote"),void 0!==t){const e=n.precision.price;o.amountQuote=this.decimalToPrecision(t,w,e,this.precisionMode)}else o.amount=this.amountToPrecision(e,i);a=this.omit(a,["cost","amountQuote"])}else d&&(o.price=this.priceToPrecision(e,r),o.amount=this.amountToPrecision(e,i));const m=void 0!==p||"takeProfit"===t||"takeProfitLimit"===t;void 0!==f||void 0!==l&&!m||"stopLoss"===t||"stopLossLimit"===t?(void 0!==f&&(l=f),o.orderType=c?"stopLoss":"stopLossLimit"):m&&(void 0!==p&&(l=p),o.orderType=c?"takeProfit":"takeProfitLimit"),void 0!==l&&(o.triggerAmount=this.priceToPrecision(e,l),o.triggerType="price",o.triggerReference="lastTrade"),void 0!==h&&"PO"!==h&&(o.timeInForce=h),u&&(o.postOnly=!0);const g=await this.privatePostOrder(this.extend(o,a));return this.parseOrder(g,n)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t);let c={};const h=this.safeNumber(n,"amountRemaining");if(n=this.omit(n,"amountRemaining"),void 0!==a&&(c.price=this.priceToPrecision(t,a)),void 0!==r&&(c.amount=this.amountToPrecision(t,r)),void 0!==h&&(c.amountRemaining=this.amountToPrecision(t,h)),c=this.extend(c,n),Object.keys(c).length){c.orderId=e,c.market=o.id;const t=await this.privatePutOrder(this.extend(c,n));return this.parseOrder(t,o)}throw new d(this.id+" editOrder() requires an amount argument, or a price argument, or non-empty params")}async cancelOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={orderId:e,market:i.id},a=await this.privateDeleteOrder(this.extend(r,s));return this.parseOrder(a,i)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.market=i.id);const r=await this.privateDeleteOrders(this.extend(s,t));return this.parseOrders(r,i)}async fetchOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={orderId:e,market:i.id},a=await this.privateGetOrder(this.extend(r,s));return this.parseOrder(a,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const n=await this.privateGetOrders(this.extend(a,i));return this.parseOrders(n,r,t,s)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.market=a.id);const n=await this.privateGetOrdersOpen(this.extend(r,i));return this.parseOrders(n,a,t,s)}parseOrderStatus(e){return this.safeString({new:"open",canceled:"canceled",canceledAuction:"canceled",canceledSelfTradePrevention:"canceled",canceledIOC:"canceled",canceledFOK:"canceled",canceledMarketProtection:"canceled",canceledPostOnly:"canceled",filled:"closed",partiallyFilled:"open",expired:"canceled",rejected:"canceled",awaitingTrigger:"open"},e,e)}parseOrder(e,t){const s=this.safeString(e,"orderId"),i=this.safeInteger(e,"created"),r=this.safeString(e,"market"),a=(t=this.safeMarket(r,t,"-")).symbol,n=this.parseOrderStatus(this.safeString(e,"status")),o=this.safeString(e,"side"),c=this.safeString(e,"orderType"),d=this.safeString(e,"price"),h=this.safeString(e,"amount"),l=this.safeString(e,"amountRemaining"),u=this.safeString(e,"filledAmount"),f=this.safeString(e,"filledAmountQuote");let p;const m=this.safeNumber(e,"feePaid");if(void 0!==m){const t=this.safeString(e,"feeCurrency");p={cost:m,currency:this.safeCurrencyCode(t)}}const g=this.safeValue(e,"fills",[]),y=this.safeString(e,"timeInForce"),b=this.safeValue(e,"postOnly"),v=this.safeNumber(e,"triggerPrice");return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:a,type:c,timeInForce:y,postOnly:b,side:o,price:d,stopPrice:v,amount:h,cost:f,average:void 0,filled:u,remaining:l,status:n,fee:p,trades:g},t)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const n=await this.privateGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,amount:this.currencyToPrecision(e,t),address:s};void 0!==i&&(n.paymentId=i);const o=await this.privatePostWithdrawal(this.extend(n,r));return this.parseTransaction(o,a)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id),void 0!==t&&(r.start=t),void 0!==s&&(r.limit=s);const n=await this.privateGetWithdrawalHistory(this.extend(r,i));return this.parseTransactions(n,a,t,s,{type:"withdrawal"})}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id),void 0!==t&&(r.start=t),void 0!==s&&(r.limit=s);const n=await this.privateGetDepositHistory(this.extend(r,i));return this.parseTransactions(n,a,t,s,{type:"deposit"})}parseTransactionStatus(e){return this.safeString({awaiting_processing:"pending",awaiting_email_confirmation:"pending",awaiting_bitvavo_inspection:"pending",approved:"pending",sending:"pending",in_mempool:"pending",processed:"pending",completed:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"symbol"),r=this.safeCurrencyCode(i,t),a=this.parseTransactionStatus(this.safeString(e,"status")),n=this.safeNumber(e,"amount"),o=this.safeString(e,"address"),c=this.safeString(e,"txId");let d;const h=this.safeNumber(e,"fee");let l;void 0!==h&&(d={cost:h,currency:r}),l="success"in e||"address"in e?"withdrawal":"deposit";const u=this.safeString(e,"paymentId");return{info:e,id:undefined,txid:c,timestamp:s,datetime:this.iso8601(s),addressFrom:void 0,address:o,addressTo:o,tagFrom:void 0,tag:u,tagTo:u,type:l,amount:n,currency:r,status:a,updated:void 0,fee:d}}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e));let o="/"+this.version+"/"+this.implodeParams(e,i);const c="GET"===s||"DELETE"===s;if(c&&Object.keys(n).length&&(o+="?"+this.urlencode(n)),"private"===t){this.checkRequiredCredentials();let e="";c||Object.keys(n).length&&(e=a=this.json(n));const t=this.milliseconds().toString(),i=t+s+o+e,d=this.hmac(this.encode(i),this.encode(this.secret)),h=this.safeString(this.options,"BITVAVO-ACCESS-WINDOW","10000");r={"BITVAVO-ACCESS-KEY":this.apiKey,"BITVAVO-ACCESS-SIGNATURE":d,"BITVAVO-ACCESS-TIMESTAMP":t,"BITVAVO-ACCESS-WINDOW":h},c||(r["Content-Type"]="application/json")}return o=this.urls.api[t]+o,{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"errorCode"),l=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwBroadlyMatchedException(this.exceptions.broad,l,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r(e)}}calculateRateLimiterCost(e,t,s,i,r={},a={}){return"noMarket"in r&&!("market"in i)?r.noMarket:this.safeValue(r,"cost",1)}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],169:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadRequest:a,ArgumentsRequired:n,InsufficientFunds:o,InvalidOrder:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bkex",name:"BKEX",countries:["BVI"],rateLimit:100,version:"v2",certified:!1,has:{CORS:void 0,spot:void 0,margin:void 0,swap:void 0,future:void 0,option:void 0,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:void 0,createLimitOrder:void 0,createMarketOrder:void 0,createOrder:!0,editOrder:void 0,fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:void 0,fetchDeposits:!0,fetchFundingHistory:void 0,fetchFundingRate:void 0,fetchFundingRateHistory:void 0,fetchFundingRates:void 0,fetchIndexOHLCV:void 0,fetchL2OrderBook:void 0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:void 0,fetchMarginMode:!1,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:void 0,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!1,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPosition:void 0,fetchPositionMode:!1,fetchPositions:void 0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:void 0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,privateAPI:!0,publicAPI:!0,reduceMargin:void 0,setLeverage:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/158043180-bb079a65-69e8-45a2-b393-f094d334e610.jpg",api:{public:"https://api.bkex.com",private:"https://api.bkex.com"},www:"https://www.bkex.com/",doc:["https://bkexapi.github.io/docs/api_en.htm"],fees:["https://www.bkex.com/help/instruction/33"]},api:{public:{get:{"/common/symbols":1,"/common/currencys":1,"/common/timestamp":1,"/q/kline":1,"/q/tickers":1,"/q/ticker/price":1,"/q/depth":1,"/q/deals":1,"/contract/common/brokerInfo":1,"/contract/q/index":1,"/contract/q/depth":1,"/contract/q/depthMerged":1,"/contract/q/trades":1,"/contract/q/kline":1,"/contract/q/ticker24hr":1}},private:{get:{"/u/api/info":1,"/u/account/balance":1,"/u/wallet/address":1,"/u/wallet/depositRecord":1,"/u/wallet/withdrawRecord":1,"/u/order/openOrders":1,"/u/order/openOrder/detail":1,"/u/order/historyOrders":1,"/contract/trade/getOrder":1,"/contract/trade/openOrders":1,"/contract/trade/historyOrders":1,"/contract/trade/myTrades":1,"/contract/trade/positions":1,"/contract/u/account":1},post:{"/u/account/transfer":1,"/u/wallet/withdraw":1,"/u/order/create":1,"/u/order/cancel":1,"/u/order/batchCreate":1,"/u/order/batchCancel":1,"/contract/trade/order":1,"/contract/trade/orderCancel":1,"/contract/trade/modifyMargin":1,"/contract/ws/dataStream/create":1,"/contract/ws/dataStream/update":1,"/contract/ws/dataStream/delete":1},delete:{}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0015"),taker:this.parseNumber("0.002")}},options:{timeframes:{spot:{},contract:{}},defaultType:"spot",networks:{TRX:"TRC-20",TRC20:"TRC-20",ETH:"ERC-20",ERC20:"ERC-20",BEP20:"BEP-20(BSC)"}},commonCurrencies:{},precisionMode:d,exceptions:{exact:{1005:o},broad:{"Not Enough balance":o,"Order does not exist":c,"System busy, please try again later":a}}})}async fetchMarkets(e={}){const t=await this.publicGetCommonSymbols(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),[a,n]=r.split("_"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,future:!1,swap:!1,option:!1,active:this.safeValue(t,"supportTrade"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volumePrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minimumOrderSize"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minimumTradeVolume"),max:void 0}},info:t})}return i}async fetchCurrencies(e={}){const t=await this.publicGetCommonCurrencys(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"name"),o=this.safeValue(t,"supportWithdraw"),c=this.safeValue(t,"supportDeposit"),d=this.safeValue(t,"supportTrade"),h=o&&c&&d;i[a]={id:r,code:a,name:n,deposit:c,withdraw:o,active:h,fee:this.safeNumber(t,"withdrawFee"),precision:void 0,limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"minWithdrawSingle"),max:this.safeNumber(t,"maxWithdrawSingle")}},info:t}}return i}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){const t=await this.publicGetCommonTimestamp(e),s=this.safeInteger(t,"status"),i=this.safeInteger(t,"code");return{status:0===s&&0===i?"ok":s,updated:this.safeInteger(t,"data"),eta:void 0,url:void 0,info:t}}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.timeframes[t]};if(void 0!==i&&(n.size=i),void 0!==s){n.from=s,void 0===i&&(i=500);const e=i*this.parseTimeframe(t)*1e3;n.to=this.sum(n.from,e)}const o=await this.publicGetQKline(n),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,"ts"),this.safeFloat(e,"open"),this.safeFloat(e,"high"),this.safeFloat(e,"low"),this.safeFloat(e,"close"),this.safeFloat(e,"volume")]}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetQTickers(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeValue(a,0);return this.parseTicker(n,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e&&!Array.isArray(e))throw new a(this.id+" fetchTickers () symbols argument should be an array");if(void 0!==e){const t=this.marketIds(e);s.symbol=t.join(",")}const i=await this.publicGetQTickers(this.extend(s,t)),r=this.safeValue(i,"data");return this.parseTickers(r,e,t)}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeInteger(e,"ts"),a=this.safeString(e,"close");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.depth=Math.min(t,50));const a=await this.publicGetQDepth(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseOrderBook(n,i.symbol,void 0,"bid","ask")}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.size=Math.min(s,50));const n=await this.publicGetQDeals(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeInteger(e,"ts"),i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const r=this.parseTradeSide(this.safeString(e,"direction")),a=this.safeNumber(e,"volume"),n=this.safeNumber(e,"price"),o=void 0,c="taker";let d=this.safeString(e,"tid");return void 0===d&&(d=this.syntheticTradeId(t,s,r,a,n,o,c)),this.safeTrade({id:d,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:o,side:r,takerOrMaker:c,price:n,amount:a,cost:void 0,fee:void 0,info:e},t)}parseTradeSide(e){return this.safeString({B:"buy",S:"sell"},e,e)}syntheticTradeId(e,t,s,i,r,a,n){let o="";return void 0!==t&&(o=this.numberToString(t)+"-"+this.safeString(e,"id","_"),void 0!==s&&(o+="-"+s),void 0!==a&&(o+="-"+a),void 0!==n&&(o+="-"+n),void 0!==i&&(o+="-"+this.numberToString(i)),void 0!==r&&(o+="-"+this.numberToString(r))),o}async fetchBalance(e={}){await this.loadMarkets();const t=this.omit(e,"type"),s=await this.privateGetUAccountBalance(t),i=this.safeValue(s,"data"),r=this.safeValue(i,"WALLET",[]),a={info:r};for(let e=0;e<r.length;e++){const t=r[e],s=t.currency,i=this.safeCurrencyCode(s),n=this.account();n.free=this.safeNumber(t,"available"),n.used=this.safeNumber(t,"frozen"),n.total=this.safeNumber(t,"total"),a[i]=n}return this.safeBalance(a)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privateGetUWalletAddress(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,s)}parseDepositAddress(e,t){const s=this.safeValue(e,0),i=this.safeString(s,"address"),r=this.safeString(s,"memo"),a=this.safeString(s,"currency");return{currency:(t=this.safeCurrency(a,t)).code,address:i,tag:r,network:void 0,info:e}}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchDeposits() requires code argument");await this.loadMarkets();const r=this.currency(e),a={currency:r.id};if(void 0!==t){a.startTime=t;const e=this.milliseconds();a.endTime=e}void 0!==s&&(a.Size=s);const o=await this.privateGetUWalletDepositRecord(this.extend(a,i)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"data",[]);for(let e=0;e<d.length;e++)d[e].transactType="deposit";return this.parseTransactions(d,r,t,s,i)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchWithdrawals() requires code argument");await this.loadMarkets();const r=this.currency(e),a={currency:r.id};if(void 0!==t){a.startTime=t;const e=this.milliseconds();a.endTime=e}void 0!==s&&(a.Size=s);const o=await this.privateGetUWalletWithdrawRecord(this.extend(a,i)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"data",[]);for(let e=0;e<d.length;e++)d[e].transactType="withdrawal";return this.parseTransactions(d,r,t,s,i)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeNumber(e,"volume"),r=this.safeValue(e,"toAddress",{}),a=this.safeString(e,"fromAddress"),n=this.safeString(e,"hash"),o=this.safeString(e,"transactType"),c=this.safeInteger(e,"createTime"),d=this.safeString(e,"currency"),h=this.safeCurrencyCode(d,t);return{id:s,currency:h,amount:i,network:void 0,address:r,addressTo:r,addressFrom:a,tag:void 0,tagTo:void 0,tagFrom:void 0,status:this.parseTransactionStatus(this.safeString(e,"status")),type:o,updated:void 0,txid:n,timestamp:c,datetime:this.iso8601(c),fee:{currency:h,cost:void 0},info:e}}parseTransactionStatus(e){return this.safeString({"-1":"failed",0:"ok",3:"pending",5:"pending"},e,e)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o="buy"===s?"BID":"ASK",c={symbol:n.id,type:t.toUpperCase(),volume:this.amountToPrecision(e,i),direction:o};"market"!==t&&void 0!==r&&(c.price=this.priceToPrecision(e,r));const d=await this.privatePostUOrderCreate(this.extend(c,a));return this.parseOrder(d,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=void 0!==t?this.market(t):void 0,r={orderId:e},a=await this.privatePostUOrderCancel(this.extend(r,s));return this.parseOrder(a,i)}async cancelOrders(e,t,s={}){if(!Array.isArray(e))throw new n(this.id+" cancelOrders() ids argument should be an array");await this.loadMarkets();const i={orders:this.json(e)},r=await this.privatePostUOrderBatchCancel(this.extend(i,s)),a=this.safeValue(r,"data"),o=this.safeValue(a,"results"),c=void 0!==t?this.market(t):void 0;return this.parseOrders(o,c,void 0,void 0,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.size=s);const o=await this.privateGetUOrderOpenOrders(this.extend(a,i)),c=this.safeValue(o,"data"),d=this.safeValue(c,"data");return this.parseOrders(d,r,t,s,i)}async fetchOpenOrder(e,t,s={}){const i={orderId:e},r=await this.privateGetUOrderOpenOrderDetail(this.extend(i,s)),a=this.safeValue(r,"data"),n=void 0!==t?this.market(t):void 0;return this.parseOrder(a,n)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.size=s),void 0!==t&&(a.startTime=t);const o=await this.privateGetUOrderHistoryOrders(this.extend(a,i)),c=this.safeValue(o,"data"),d=this.safeValue(c,"data");return this.parseOrders(d,r,t,s,i)}parseOrder(e,t){const s=this.safeInteger(e,"createdTime"),i=this.safeInteger(e,"updateTime"),r=this.safeString(e,"dealVolume"),a=this.parseOrderSide(this.safeString(e,"direction")),n=this.safeString2(e,"id","data"),o=this.safeString(e,"price"),c=this.safeString(e,"status"),d=this.safeString(e,"type"),h=this.parseOrderType(d);let l,u=!1;"LIMIT_MAKER"===d&&(u=!0),void 0!==s&&(l=this.parseOrderStatus(c));const f=this.safeString(e,"symbol");t=this.safeMarket(f,t);const p=this.safeString(e,"totalVolume"),m=this.safeNumber(e,"stopPrice"),g=this.safeString(e,"dealAvgPrice");return this.safeOrder({id:n,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:i,status:l,symbol:t.symbol,type:h,timeInForce:void 0,postOnly:u,side:a,price:o,stopPrice:m,average:g,amount:p,filled:r,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e},t)}parseOrderSide(e){return this.safeString({BID:"buy",ASK:"sell"},e,e)}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"open"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit",STOP_LIMIT:"limit"},e,e)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.version+this.implodeParams(e,i);i=this.omit(i,this.extractParams(e));let o="";if(Object.keys(i).length&&(o=this.rawencode(this.keysort(i)),"GET"===s&&(n+="?"+o)),"private"===t){this.checkRequiredCredentials();const e=this.hmac(this.encode(o),this.encode(this.secret),"sha256");r={"Cache-Control":"no-cache","Content-type":"application/x-www-form-urlencoded",X_ACCESS_KEY:this.apiKey,X_SIGNATURE:e},"GET"!==s&&(a=o)}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if("success"===this.safeValue(o,"msg"))return;const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],170:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),a=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bl3p",name:"BL3P",countries:["NL"],rateLimit:1e3,version:"1",comment:"An exchange market by BitonicNL",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg",api:"https://api.bl3p.eu",www:"https://bl3p.eu",doc:["https://github.com/BitonicNL/bl3p-api/tree/master/docs","https://bl3p.eu/api","https://bitonic.nl/en/api"]},api:{public:{get:["{market}/ticker","{market}/orderbook","{market}/trades"]},private:{post:["{market}/money/depth/full","{market}/money/order/add","{market}/money/order/cancel","{market}/money/order/result","{market}/money/orders","{market}/money/orders/history","{market}/money/trades/fetch","GENMKT/money/info","GENMKT/money/deposit_address","GENMKT/money/new_deposit_address","GENMKT/money/wallet/history","GENMKT/money/withdraw"]}},markets:{"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"BTC",quoteId:"EUR",maker:.0025,taker:.0025,type:"spot",spot:!0},"LTC/EUR":{id:"LTCEUR",symbol:"LTC/EUR",base:"LTC",quote:"EUR",baseId:"LTC",quoteId:"EUR",maker:.0025,taker:.0025,type:"spot",spot:!0}},precisionMode:r})}parseBalance(e){const t=this.safeValue(e,"data",{}),s=this.safeValue(t,"wallets",{}),i={info:t},r=Object.keys(this.currencies);for(let e=0;e<r.length;e++){const t=r[e],a=this.currency(t).id,n=this.safeValue(s,a,{}),o=this.safeValue(n,"available",{}),c=this.safeValue(n,"balance",{}),d=this.account();d.free=this.safeString(o,"value"),d.total=this.safeString(c,"value"),i[t]=d}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGENMKTMoneyInfo(e);return this.parseBalance(t)}parseBidAsk(e,t=0,s=1){return[this.safeNumber(e,t)/1e5,this.safeNumber(e,s)/1e8]}async fetchOrderBook(e,t,s={}){const i=this.market(e),r={market:i.id},a=await this.publicGetMarketOrderbook(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseOrderBook(n,i.symbol,void 0,"bids","asks","price_int","amount_int")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last"),a=this.safeValue(e,"volume",{});return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(a,"24h"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){const s=this.market(e),i={market:s.id},r=await this.publicGetMarketTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeString(e,"trade_id"),i=this.safeInteger(e,"date"),r=this.safeString(e,"price_int"),n=this.safeString(e,"amount_int");return t=this.safeMarket(void 0,t),this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:void 0,order:void 0,takerOrMaker:void 0,price:a.stringDiv(r,"100000"),amount:a.stringDiv(n,"100000000"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){const r=this.market(e),a=await this.publicGetMarketTrades(this.extend({market:r.id},i));return this.parseTrades(a.data.trades,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGENMKTMoneyInfo(e),s=this.safeValue(t,"data",{}),i=this.safeString(s,"trade_fee"),r=this.parseNumber(a.stringDiv(i,"100")),n={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];n[t]={info:s,symbol:t,maker:r,taker:r,percentage:!0,tierBased:!1}}return n}async createOrder(e,t,s,i,r,a={}){const n=this.market(e),o={market:n.id,amount_int:parseInt(1e8*i),fee_currency:n.quote,type:"buy"===s?"bid":"ask"};"limit"===t&&(o.price_int=parseInt(1e5*r));const c=await this.privatePostMarketMoneyOrderAdd(this.extend(o,a));return{info:c,id:this.safeString(c.data,"order_id")}}async cancelOrder(e,t,s={}){const i={order_id:e};return await this.privatePostMarketMoneyOrderCancel(this.extend(i,s))}sign(e,t="public",s="GET",i={},r,a){const n=this.implodeParams(e,i);let o=this.urls.api+"/"+this.version+"/"+n;const c=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(c).length&&(o+="?"+this.urlencode(c));else{this.checkRequiredCredentials();const e=this.nonce();a=this.urlencode(this.extend({nonce:e},c));const t=this.base64ToBinary(this.secret),s=n+"\0"+a,i=this.hmac(this.encode(s),t,"sha512","base64");r={"Content-Type":"application/x-www-form-urlencoded","Rest-Key":this.apiKey,"Rest-Sign":i}}return{url:o,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/functions/number":135}],171:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,OrderNotFound:n,InsufficientFunds:o,ArgumentsRequired:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number"),h=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"blockchaincom",secret:void 0,name:"Blockchain.com",countries:["LX"],rateLimit:500,version:"v3",has:{CORS:!1,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchL3OrderBook:!0,fetchLedger:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!0,transfer:!1,withdraw:!0},timeframes:void 0,urls:{logo:"https://user-images.githubusercontent.com/1294454/147515585-1296e91b-7398-45e5-9d32-f6121538533f.jpeg",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.blockchain.com/v3/exchange",private:"https://api.blockchain.com/v3/exchange"},www:"https://blockchain.com",doc:["https://api.blockchain.com/v3"],fees:"https://exchange.blockchain.com/fees"},api:{public:{get:{tickers:1,"tickers/{symbol}":1,symbols:1,"symbols/{symbol}":1,"l2/{symbol}":1,"l3/{symbol}":1}},private:{get:{fees:1,orders:1,"orders/{orderId}":1,trades:1,fills:1,deposits:1,"deposits/{depositId}":1,accounts:1,"accounts/{account}/{currency}":1,whitelist:1,"whitelist/{currency}":1,withdrawals:1,"withdrawals/{withdrawalId}":1},post:{orders:1,"deposits/{currency}":1,withdrawals:1},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.0022")],[this.parseNumber("50000"),this.parseNumber("0.002")],[this.parseNumber("100000"),this.parseNumber("0.0018")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("2500000"),this.parseNumber("0.0018")],[this.parseNumber("5000000"),this.parseNumber("0.0016")],[this.parseNumber("25000000"),this.parseNumber("0.0014")],[this.parseNumber("100000000"),this.parseNumber("0.0011")],[this.parseNumber("500000000"),this.parseNumber("0.0008")],[this.parseNumber("1000000000"),this.parseNumber("0.0006")]],maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("10000"),this.parseNumber("0.0012")],[this.parseNumber("50000"),this.parseNumber("0.001")],[this.parseNumber("100000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0007000000000000001")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0005")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("25000000"),this.parseNumber("0.0003")],[this.parseNumber("100000000"),this.parseNumber("0.0002")],[this.parseNumber("500000000"),this.parseNumber("0.0001")],[this.parseNumber("1000000000"),this.parseNumber("0")]]}}},requiredCredentials:{apiKey:!1,secret:!0},precisionMode:d,exceptions:{exact:{401:a,404:n},broad:{}}})}async fetchMarkets(e={}){const t=await this.publicGetSymbols(e),s=Object.keys(t),i=[];for(let e=0;e<s.length;e++){const r=s[e],a=this.safeValue(t,r),n=this.safeString(a,"base_currency"),o=this.safeString(a,"counter_currency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),l=this.safeNumber(a,"id");let u;u="open"===this.safeString(a,"status");const f=this.safeString(a,"min_price_increment"),p=this.safeString(a,"min_price_increment_scale"),m=this.parsePrecision(p),g=h.stringMul(f,m),y=this.safeString(a,"lot_size"),b=this.safeString(a,"lot_size_scale"),v=this.parsePrecision(b),w=h.stringMul(y,v),S=this.safeString(a,"min_order_size"),k=this.safeString(a,"min_order_size_scale"),T=this.parsePrecision(k),O=h.stringMul(S,T),_=this.parseNumber(O);let x;if(x=this.safeString(a,"max_order_size"),"0"!==x){const e=this.safeString(a,"max_order_size_scale"),t=this.parsePrecision(e),s=h.stringMul(x,t);x=this.parseNumber(s)}else x=void 0;i.push({info:a,id:r,numericId:l,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(w),price:this.parseNumber(g)},limits:{leverage:{min:void 0,max:void 0},amount:{min:_,max:x},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}})}return i}async fetchOrderBook(e,t,s={}){return await this.fetchL3OrderBook(e,t,s)}async fetchL3OrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL3Symbol(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","px","qty")}async fetchL2OrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL2Symbol(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","px","qty")}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t,"-"),r=this.safeString(e,"last_trade_price"),a=this.safeString(e,"volume_24h"),n=this.safeString(e,"price_24h");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:void 0,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTickersSymbol(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t);return this.parseTickers(s,e)}parseOrderState(e){return this.safeString({OPEN:"open",REJECTED:"rejected",FILLED:"closed",CANCELED:"canceled",PART_FILLED:"open",EXPIRED:"expired"},e,e)}parseOrder(e,t){const s=this.safeString(e,"clOrdId"),i=this.safeStringLower(e,"ordType"),r=this.safeString(e,"ordStatus"),a=this.parseOrderState(r),n=this.safeStringLower(e,"side"),o=this.safeString(e,"symbol"),c=this.safeSymbol(o,t,"-"),d=this.safeString(e,"exOrdId"),h="market"!==i?this.safeString(e,"price"):void 0,l=this.safeNumber(e,"avgPx"),u=this.safeInteger(e,"timestamp"),f=this.iso8601(u),p=this.safeString(e,"cumQty"),m=this.safeString(e,"leavesQty");return this.safeOrder({id:d,clientOrderId:s,datetime:f,timestamp:u,lastTradeTimestamp:void 0,status:a,symbol:c,type:i,timeInForce:void 0,side:n,price:h,average:l,amount:void 0,filled:p,remaining:m,cost:void 0,trades:[],fees:{},info:e})}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeString(a,"ordType",t).toUpperCase(),d=this.safeString2(a,"clientOrderId","clOrdId",this.uuid16());a=this.omit(a,["ordType","clientOrderId","clOrdId"]);const h={ordType:o,symbol:n.id,side:s.toUpperCase(),orderQty:this.amountToPrecision(e,i),clOrdId:d},l=this.safeValue2(a,"stopPx","stopPrice");if(a=this.omit(a,["stopPx","stopPrice"]),("STOP"===o||"STOPLIMIT"===o)&&void 0===l)throw new c(this.id+" createOrder() requires a stopPx or stopPrice param for a "+o+" order");void 0!==l&&("MARKET"===o?h.ordType="STOP":"LIMIT"===o&&(h.ordType="STOPLIMIT"));let u=!1,f=!1;"LIMIT"!==h.ordType&&"STOPLIMIT"!==h.ordType||(u=!0),"STOP"!==h.ordType&&"STOPLIMIT"!==h.ordType||(f=!0),u&&(h.price=this.priceToPrecision(e,r)),f&&(h.stopPx=this.priceToPrecision(e,l));const p=await this.privatePostOrders(this.extend(h,a));return this.parseOrder(p,n)}async cancelOrder(e,t,s={}){const i={orderId:e};return{id:e,info:await this.privateDeleteOrdersOrderId(this.extend(i,s))}}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketId(e);s.symbol=t}return{symbol:e,info:await this.privateDeleteOrders(this.extend(s,t))}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),s=this.safeNumber(t,"makerRate"),i=this.safeNumber(t,"takerRate"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:s,taker:i}}return r}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrdersByState("CANCELED",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByState("FILLED",e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByState("OPEN",e,t,s,i)}async fetchOrdersByState(e,t,s,i,r={}){await this.loadMarkets();const a={status:e,limit:100};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=await this.privateGetOrders(this.extend(a,r));return this.parseOrders(o,n,s,i)}parseTrade(e,t){const s=this.safeString(e,"exOrdId"),i=this.safeString(e,"tradeId"),r=this.safeString(e,"side").toLowerCase(),a=this.safeString(e,"symbol"),n=this.safeString(e,"price"),o=this.safeString(e,"qty"),c=this.safeInteger(e,"timestamp"),d=this.iso8601(c),h=(t=this.safeMarket(a,t,"-")).symbol;let l;const u=this.safeString(e,"fee");if(void 0!==u){l={cost:u,currency:t.quote}}return this.safeTrade({id:i,timestamp:c,datetime:d,symbol:h,order:s,type:void 0,side:r,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:l,info:e},t)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==s&&(r.limit=s),void 0!==e&&(r.symbol=this.marketId(e),a=this.market(e));const n=await this.privateGetFills(this.extend(r,i));return this.parseTrades(n,a,t,s,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privatePostDepositsCurrency(this.extend(i,t)),a=this.safeString(r,"address");let n,o;void 0!==a&&([o,n]=a.split(":"));const c={info:r};return c.currency=s.code,c.address=o,void 0!==n&&(c.tag=n),c}parseTransactionState(e){return this.safeString({COMPLETED:"ok",REJECTED:"failed",PENDING:"pending",FAILED:"failed",REFUNDED:"refunded"},e,e)}parseTransaction(e,t){let s,i;const r=this.safeNumber(e,"amount"),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.safeString(e,"state");"depositId"in e?(s="deposit",i=this.safeString(e,"depositId")):"withdrawalId"in e&&(s="withdrawal",i=this.safeString(e,"withdrawalId"));const d="withdrawal"===s?this.safeNumber(e,"fee"):void 0;let h;void 0!==d&&(h={currency:o,cost:d});const l=this.safeString(e,"address");return{info:e,id:i,txid:this.safeString(e,"txhash"),timestamp:a,datetime:this.iso8601(a),network:void 0,addressFrom:void 0,address:l,addressTo:l,tagFrom:void 0,tag:void 0,tagTo:void 0,type:s,amount:r,currency:o,status:this.parseTransactionState(c),updated:void 0,comment:void 0,fee:h}}async fetchWithdrawalWhitelist(e={}){await this.loadMarkets();const t=await this.privateGetWhitelist(),s=[];for(let e=0;e<t.length;e++){const i=t[e];s.push({beneficiaryId:this.safeString(i,"whitelistId"),name:this.safeString(i,"name"),currency:this.safeString(i,"currency"),info:i})}return s}async fetchWithdrawalWhitelistByCurrency(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetWhitelistCurrency(this.extend(s,t)),r=[];for(let e=0;e<i.length;e++){const t=i[e];r.push({beneficiaryId:this.safeString(t,"whitelistId"),name:this.safeString(t,"name"),currency:this.safeString(t,"currency"),info:t})}return r}async withdraw(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,sendMax:!1},o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.from=t);const a=await this.privateGetWithdrawals(this.extend(r,i));return this.parseTransactions(a,e,t,s)}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={withdrawalId:e},r=await this.privateGetWithdrawalsWithdrawalId(this.extend(i,s));return this.parseTransaction(r)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.from=t);const a=await this.privateGetDeposits(this.extend(r,i));return this.parseTransactions(a,e,t,s)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={depositId:this.safeString(s,"depositId",e)},r=await this.privateGetDepositsDepositId(this.extend(i,s));return this.parseTransaction(r)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"account","primary");e=this.omit(e,"account");const s={account:t},i=await this.privateGetAccounts(this.extend(s,e)),a=this.safeValue(i,t);if(void 0===a)throw new r(this.id+' fetchBalance() could not find the "'+t+'" account');const n={info:i};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"currency"),i=this.safeCurrencyCode(s),r=this.account();r.free=this.safeString(t,"available"),r.total=this.safeString(t,"balance"),n[i]=r}return this.safeBalance(n)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.privateGetOrdersOrderId(this.extend(i,s));return this.parseOrder(r)}sign(e,t="public",s="GET",i={},r,a){const n="/"+this.implodeParams(e,i);let o=this.urls.api[t]+n;const c=this.omit(i,this.extractParams(e));return"public"===t?Object.keys(c).length&&(o+="?"+this.urlencode(c)):"private"===t&&(this.checkRequiredCredentials(),r={"X-API-Token":this.secret},"GET"===s?Object.keys(c).length&&(o+="?"+this.urlencode(c)):(a=this.json(c),r["Content-Type"]="application/json")),{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,c,d){if(void 0===n)return;const h=this.safeString(n,"text");if(void 0!==h&&"Insufficient Balance"===h)throw new o(this.id+" "+a);const l=this.safeString(n,"status"),u=this.safeString(n,"error");if(void 0!==e){const e=this.id+" "+this.json(n);this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],172:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,DDoSProtection:n,InvalidOrder:o,InsufficientFunds:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number"),h=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btcalpha",name:"BTC-Alpha",countries:["US"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:void 0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","1d":"D"},urls:{logo:"https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg",api:"https://btc-alpha.com/api",www:"https://btc-alpha.com",doc:"https://btc-alpha.github.io/api-docs",fees:"https://btc-alpha.com/fees/",referral:"https://btc-alpha.com/?r=123788"},api:{public:{get:["currencies/","pairs/","orderbook/{pair_name}/","exchanges/","charts/{pair}/{type}/chart/"]},private:{get:["wallets/","orders/own/","order/{id}/","exchanges/own/","deposits/","withdraws/"],post:["order/","order-cancel/"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")},funding:{withdraw:{}}},commonCurrencies:{CBC:"Cashbery"},precisionMode:d,exceptions:{exact:{},broad:{"Out of balance":c}}})}async fetchMarkets(e={}){const t=await this.publicGetPairs(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"name"),a=this.safeString(i,"currency1"),n=this.safeString(i,"currency2"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(i,"price_precision"),l=this.parsePrecision(d),u=this.safeString(i,"minimum_order_size");s.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"amount_precision"))),price:this.parseNumber(this.parsePrecision(d))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(u),max:this.safeNumber(i,"maximum_order_size")},price:{min:this.parseNumber(l),max:void 0},cost:{min:this.parseNumber(h.stringMul(l,u)),max:void 0}},info:i})}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair_name:i.id};t&&(r.limit_sell=t,r.limit_buy=t);const a=await this.publicGetOrderbookPairName(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"buy","sell","price","amount")}parseBidsAsks(e,t=0,s=1){const i=[];for(let r=0;r<e.length;r++){const a=e[r];a&&i.push(this.parseBidAsk(a,t,s))}return i}parseTrade(e,t){const s=this.safeString(e,"pair");t=this.safeMarket(s,t,"_");const i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeString(e,"id"),o=this.safeString2(e,"my_side","type");return this.safeTrade({id:n,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:n,type:"limit",side:o,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==s&&(a.limit=s);const n=await this.publicGetExchanges(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r=await this.privateGetDeposits(i);return this.parseTransactions(r,e,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency_id=r.id);const n=await this.privateGetWithdraws(this.extend(a,i));return this.parseTransactions(n,e,t,s,{type:"withdrawal"})}parseTransaction(e,t){let s=this.safeTimestamp(e,"timestamp");s=h.stringMul(s,"1000");const i=this.safeString(e,"currency"),r=this.safeString(e,"status");return{id:this.safeString(e,"id"),info:e,timestamp:s,datetime:this.iso8601(s),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),txid:void 0,type:void 0,status:this.parseTransactionStatus(r),comment:void 0,fee:void 0,updated:void 0}}parseTransactionStatus(e){return this.safeString({10:"pending",20:"pending",30:"ok",40:"failed",50:"canceled"},e,e)}parseOHLCV(e,t){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id,type:this.timeframes[t]};void 0!==i&&(n.limit=i),void 0!==s&&(n.since=parseInt(s/1e3));const o=await this.publicGetChartsPairTypeChart(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(i,"reserve"),n.total=this.safeString(i,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetWallets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({1:"open",2:"canceled",3:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"pair"),i=(t=this.safeMarket(s,t,"_")).symbol;let r;r=this.safeValue(e,"success",!1)?this.safeTimestamp(e,"date"):this.safeInteger(e,"date");const a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"amount_filled"),c=this.safeString(e,"amount_original"),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString2(e,"oid","id"),l=this.safeValue(e,"trades"),u=this.safeString2(e,"my_side","type");return this.safeOrder({id:h,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,status:d,symbol:i,type:"limit",timeInForce:void 0,postOnly:void 0,side:u,price:a,stopPrice:void 0,cost:void 0,amount:c,filled:o,remaining:n,trades:l,fee:void 0,info:e,lastTradeTimestamp:void 0,average:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),c={pair:n.id,type:s,amount:i,price:this.priceToPrecision(e,r)},d=await this.privatePostOrder(this.extend(c,a));if(!d.success)throw new o(this.id+" "+this.json(d));const h=this.parseOrder(d,n);return i=h.amount>0?h.amount:i,this.extend(h,{amount:i})}async cancelOrder(e,t,s={}){const i={order:e};return await this.privatePostOrderCancel(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrderId(this.extend(i,s));return this.parseOrder(r)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetOrdersOwn(this.extend(r,i));return this.parseOrders(n,a,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"1"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"3"},i))}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);r.pair=t.id}void 0!==s&&(r.limit=s);const a=await this.privateGetExchangesOwn(this.extend(r,i));return this.parseTrades(a,void 0,t,s)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const n=this.urlencode(this.keysort(this.omit(i,this.extractParams(e))));let o=this.urls.api+"/";if("charts/{pair}/{type}/chart/"!==e&&(o+="v1/"),o+=this.implodeParams(e,i),r={Accept:"application/json"},"public"===t)n.length&&(o+="?"+n);else{this.checkRequiredCredentials();let e=this.apiKey;"POST"===s?(r["Content-Type"]="application/x-www-form-urlencoded",e+=a=n):n.length&&(o+="?"+n),r["X-KEY"]=this.apiKey,r["X-SIGN"]=this.hmac(this.encode(e),this.encode(this.secret)),r["X-NONCE"]=this.nonce().toString()}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,o,c,d,h,l){if(void 0===d)return;const u=this.safeString(d,"error"),f=this.id+" "+c;if(void 0!==u&&(this.throwExactlyMatchedException(this.exceptions.exact,u,f),this.throwBroadlyMatchedException(this.exceptions.broad,u,f)),401===e||403===e)throw new a(f);if(429===e)throw new n(f);if(!(e<400))throw new r(f)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],173:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:n,AuthenticationError:o,PermissionDenied:c,InvalidNonce:d,OrderNotFound:h,DDoSProtection:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number"),f=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btcbox",name:"BtcBox",countries:["JP"],rateLimit:1e3,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:void 0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87327317-98c55400-c53c-11ea-9a11-81f7d951cc74.jpg",api:"https://www.btcbox.co.jp/api",www:"https://www.btcbox.co.jp/",doc:"https://blog.btcbox.jp/en/archives/8762",fees:"https://support.btcbox.co.jp/hc/en-us/articles/360001235694-Fees-introduction"},api:{public:{get:["depth","orders","ticker"]},private:{post:["balance","trade_add","trade_cancel","trade_list","trade_view","wallet"]}},markets:{"BTC/JPY":{id:"btc",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy",taker:5e-4,maker:5e-4,type:"spot",spot:!0},"ETH/JPY":{id:"eth",symbol:"ETH/JPY",base:"ETH",quote:"JPY",baseId:"eth",quoteId:"jpy",taker:.001,maker:.001,type:"spot",spot:!0},"LTC/JPY":{id:"ltc",symbol:"LTC/JPY",base:"LTC",quote:"JPY",baseId:"ltc",quoteId:"jpy",taker:.001,maker:.001,type:"spot",spot:!0},"BCH/JPY":{id:"bch",symbol:"BCH/JPY",base:"BCH",quote:"JPY",baseId:"bch",quoteId:"jpy",taker:.001,maker:.001,type:"spot",spot:!0}},precisionMode:u,exceptions:{104:o,105:c,106:d,107:n,200:a,201:n,202:n,203:h,401:h,402:l}})}parseBalance(e){const t={info:e},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.currency(r).id,n=a+"_balance";if(n in e){const s=this.account(),i=a+"_lock";s.free=this.safeString(e,n),s.used=this.safeString(e,i),t[r]=s}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={};this.symbols.length>1&&(r.coin=i.baseId);const a=await this.publicGetDepth(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.milliseconds(),i=this.safeSymbol(void 0,t),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={};this.symbols.length>1&&(i.coin=s.baseId);const r=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeTimestamp(e,"date");t=this.safeMarket(void 0,t);const i=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeString(e,"type");return this.safeTrade({info:e,id:i,order:void 0,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:undefined,side:n,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={};this.symbols.length>1&&(a.coin=r.baseId);const n=await this.publicGetOrders(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={amount:i,price:r,type:s,coin:n.baseId},c=await this.privatePostTradeAdd(this.extend(o,a));return this.parseOrder(c,n)}async cancelOrder(e,t,s={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const i=this.market(t),r={id:e,coin:i.baseId},a=await this.privatePostTradeCancel(this.extend(r,s));return this.parseOrder(a,i)}parseOrderStatus(e){return this.safeString({part:"open",all:"closed",cancelled:"canceled",closed:"closed",no:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id");let i;void 0!==this.safeString(e,"datetime")&&(i=this.parse8601(e.datetime+"+09:00"));const r=this.safeString(e,"amount_original"),a=this.safeString(e,"amount_outstanding"),n=this.safeString(e,"price");let o=this.parseOrderStatus(this.safeString(e,"status"));void 0===o&&f.stringEquals(a,"0")&&(o="closed");t=this.safeMarket(void 0,t);const c=this.safeString(e,"type");return this.safeOrder({id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,amount:r,remaining:a,filled:void 0,side:c,type:void 0,timeInForce:void 0,postOnly:void 0,status:o,symbol:t.symbol,price:n,stopPrice:void 0,cost:void 0,trades:undefined,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const i=this.market(t),r=this.extend({id:e,coin:i.baseId},s),a=await this.privatePostTradeView(this.extend(r,s));return this.parseOrder(a,i)}async fetchOrdersByType(e,t,s,i,r={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const a=this.market(t),n={type:e,coin:a.baseId},o=await this.privatePostTradeList(this.extend(n,r)),c=this.parseOrders(o,a,s,i);if("open"===e)for(let e=0;e<c.length;e++)c[e].status="open";return c}async fetchOrders(e,t,s,i={}){return await this.fetchOrdersByType("all",e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByType("open",e,t,s,i)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.version+"/"+e;if("public"===t)Object.keys(i).length&&(n+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.extend({key:this.apiKey,nonce:e},i),s=this.urlencode(t),n=this.hash(this.encode(this.secret));t.signature=this.hmac(this.encode(s),this.encode(n)),a=this.urlencode(t),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(e>=400)return;const h=this.safeValue(o,"result");if(void 0===h||!0===h)return;const l=this.safeValue(o,"code"),u=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,l,u),new r(u)}async request(e,t="public",s="GET",i={},a,n,o={},c={}){let d=await this.fetch2(e,t,s,i,a,n,o,c);if("string"==typeof d){if(d=this.strip(d),!this.isJsonEncodedObject(d))throw new r(this.id+" "+d);d=JSON.parse(d)}return d}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],174:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{ExchangeError:a,NotSupported:n,RequestTimeout:o,DDoSProtection:c,InvalidOrder:d,InvalidAddress:h,BadRequest:l,InsufficientFunds:u,OrderNotFound:f,AuthenticationError:p,ExchangeNotAvailable:m,ArgumentsRequired:g}=e("./base/errors"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btcex",name:"BTCEX",countries:["CA"],version:"v1",certified:!1,pro:!1,requiredCredentials:{apiKey:!0,secret:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/173489620-d49807a4-55cd-4f4e-aca9-534921298bbf.jpg",www:"https://www.btcex.com/",api:"https://api.btcex.com",doc:"https://docs.btcex.com/",fees:"https://support.btcex.com/hc/en-us/articles/4415995130647",referral:{url:"https://www.btcex.com/en-us/register?i=48biatg1",discount:.1}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingFees:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,signIn:!0,withdraw:!1},timeframes:{"15s":"15","1m":"60","5m":"300","15m":"900","1h":"3600","4h":"14400","1d":"86400","3d":"259200","1w":"604800","2w":"1209600","1M":"2592000"},api:{public:{get:["get_last_trades_by_currency","get_last_trades_by_instrument","get_order_book","tickers","get_instruments","get_tradingview_chart_data","cmc_spot_summary","cmc_spot_ticker","cmc_spot_orderbook","cmc_market_trades","cmc_contracts","cmc_contract_orderbook","coin_gecko_spot_pairs","coin_gecko_spot_ticker","coin_gecko_spot_orderbook","coin_gecko_market_trades","coin_gecko_contracts","coin_gecko_contract_orderbook"],post:["auth"]},private:{get:["get_deposit_record","get_withdraw_record","get_position","get_positions","get_open_orders_by_currency","get_open_orders_by_instrument","get_order_history_by_currency","get_order_history_by_instrument","get_order_state","get_user_trades_by_currency","get_user_trades_by_instrument","get_user_trades_by_order"],post:["logout","get_assets_info","add_withdraw_address","buy","sell","cancel","cancel_all_by_currency","cancel_all_by_instrument","close_position"],delete:[]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},margin:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},perpetual:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{exact:{9999:a,9900:m,401:p,403:p,1e3:m,1001:l,2e3:p,2001:p,2002:p,2003:p,3e3:p,3002:p,3003:p,3004:l,3005:n,3007:p,3008:p,3009:p,3011:p,3012:p,3013:o,3015:p,3016:p,3018:l,3019:l,3020:l,3021:l,3022:l,3023:l,3024:l,3025:l,3026:l,3027:l,3028:l,3029:c,3030:c,3031:l,3032:l,3033:l,3034:p,3035:l,3036:l,3037:l,3038:l,3039:l,3040:p,3041:l,4e3:l,4001:h,4002:h,4003:l,4004:n,4005:a,4006:u,4007:l,4008:n,4009:h,4010:l,4011:l,5001:d,5002:f,5003:d,5004:d,5005:d,5006:d,5007:d,5008:d,5009:d,5010:d,5011:d,5012:d,5013:d,5014:d,5109:d,5135:d,5901:d,5902:d,5903:d,5904:d,5905:d,5906:d,5907:u,8e3:l,8001:l,8100:l,8101:o,8102:c,8103:l,8104:l,8105:l,8106:c,8107:a,11e3:l},broad:{}},precisionMode:r,options:{accountsByType:{wallet:"WALLET",spot:"SPOT",perpetual:"PERPETUAL",margin:"MARGIN",swap:"PERPETUAL",BTC:"BTC",ETH:"ETH"}},commonCurrencies:{}})}async fetchMarkets(e={}){const t=await this.publicGetGetInstruments(e),s=this.safeValue(t,"result",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"instrument_name"),a=this.safeString(t,"kind");let n=a;"perpetual"===a&&(n="swap");let o=this.safeString(t,"quote_currency");const c=this.safeString(t,"base_currency"),d="perpetual"===a,h="spot"===a,l="margin"===a,u="option"===a,f="future"===a,p=d||f||u;let m,g,y,b,v,w;(u||f)&&(o=this.safeString(t,"currency"),m=this.safeInteger(t,"expiration_timestamp")),p&&(y=c,b=this.safeCurrencyCode(y)),u&&(v=this.safeString(t,"option_type"),w=this.safeNumber(t,"strike"));const S=this.safeCurrencyCode(o),k=this.safeCurrencyCode(c);let T;if(T=l?r:S+"/"+k,p&&(g=this.safeNumber(t,"contract_size"),T=T+":"+b,(f||u)&&(T=T+"-"+this.yymmdd(m),u))){const e="call"===v?"C":"P";T=T+":"+this.numberToString(w)+":"+e}const O=this.safeNumber(t,"min_trade_amount"),_=this.safeNumber(t,"tick_size"),x=this.safeNumber(t,"maker_commission"),M=this.safeNumber(t,"taker_commission"),I=!(u||f);i.push({id:r,symbol:T,base:S,quote:k,baseId:o,quoteId:c,settleId:y,settle:b,type:n,maker:x,taker:M,percentage:I,spot:h,margin:l,swap:d,future:f,option:u,active:this.safeValue(t,"is_active"),contract:p,linear:!!p||void 0,inverse:!p&&void 0,contractSize:g,expiry:m,expiryDatetime:this.iso8601(m),strike:w,optionType:v,precision:{amount:O,price:_},limits:{leverage:{min:void 0,max:this.safeString(t,"leverage")},amount:{min:O,max:void 0},price:{min:_,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeString(e,"instrument_name");t=this.safeMarket(s,t);const i=this.safeSymbol(s,t),r=this.safeInteger(e,"timestamp"),a=this.safeValue(e,"stats");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(a,"high"),low:this.safeString(a,"low"),bid:this.safeString(e,"best_bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),ask:this.safeString(e,"best_ask_price"),askVolume:this.safeString(e,"best_ask_amount"),vwap:void 0,open:void 0,close:this.safeString(e,"last_price"),last:this.safeString(e,"last_price"),previousClose:void 0,change:void 0,percentage:this.safeString(a,"price_change"),average:void 0,baseVolume:this.safeString(a,"volume"),quoteVolume:this.safeString(a,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instrument_name:s.id},r=await this.publicGetTickers(this.extend(i,t)),a=this.safeValue(r,"result",{}),n=this.safeValue(a,0);return this.parseTicker(n,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={instrument_name:i.id},a=await this.publicGetGetOrderBook(this.extend(r,s)),n=this.safeValue(a,"result",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,i.symbol,o)}parseOHLCV(e,t){return[this.safeInteger(e,"tick"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);void 0===i&&(i=10);const n={resolution:this.timeframes[t]};let o=a.id;if((a.spot||a.margin)&&(o=a.baseId+"-"+a.quoteId),n.instrument_name=o,void 0===s)n.end_timestamp=this.milliseconds(),n.start_timestamp=0;else{const e=1e3*this.parseTimeframe(t);n.start_timestamp=s,n.end_timestamp=this.sum(n.start_timestamp,i*e)}const c=await this.publicGetGetTradingviewChartData(this.extend(n,r)),d=this.safeValue(c,"result",[]);return this.parseOHLCVs(d,a,t,s,i)}parseTrade(e,t){const s=this.safeString(e,"trade_id"),i=this.safeString(e,"instrument_name"),r=this.safeSymbol(i,t),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"direction"),o=this.safeString(e,"price"),c=this.safeString(e,"amount"),d=this.safeString(e,"role"),h=this.safeString(e,"fee");let l;if(void 0!==h){const t=this.safeString(e,"fee_coin_type");l={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,id:s,timestamp:a,datetime:this.iso8601(a),symbol:r,order:this.safeString(e,"order_id"),type:this.safeString(e,"order_type"),side:n,takerOrMaker:d,price:o,amount:c,cost:void 0,fee:l},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id};void 0!==s&&(a.count=s);const n=await this.publicGetGetLastTradesByInstrument(this.extend(a,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}async signIn(e={}){let t=this.safeString(this.options,"accessToken");if(void 0!==t)return t;this.checkRequiredCredentials();const s={grant_type:"client_credentials",client_id:this.apiKey,client_secret:this.secret},i=await this.publicPostAuth(this.extend(s,e)),r=this.safeValue(i,"result");return t=this.safeString(r,"access_token"),this.options.accessToken=t,t}parseBalance(e){const t={info:e},s=Object.keys(e);for(let i=0;i<s.length;i++){const r=s[i],a=this.safeValue(e,r);if("WALLET"===r||"SPOT"===r){const e=this.safeValue(a,"details");if(void 0!==e)for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"coin_type"),a=this.safeCurrencyCode(r),n=this.safeValue(t,a,this.account());n.free=this.safeString(i,"available"),n.used=this.safeString(i,"freeze"),n.total=this.safeString(i,"total"),t[a]=n}}else{const e="USDT",s=this.account();s.total=this.safeString(a,"wallet_balance"),s.free=this.safeString(a,"available_withdraw_funds"),t[e]=s}}return this.safeBalance(t)}async fetchBalance(e={}){await this.signIn(),await this.loadMarkets();const t=this.safeStringLower(e,"type","spot"),s=this.safeValue(this.options,"accountsByType",{}),i=this.safeString(s,t,t);e=this.omit(e,"type");const r={asset_type:[i]},a=await this.privatePostGetAssetsInfo(this.extend(r,e)),n=this.safeValue(a,"result",[]);return this.parseBalance(n)}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed",rejected:"rejected"},e,e)}parseTimeInForce(e){if("-"===e)return;return this.safeString({good_til_cancelled:"GTC",good_til_date:"GTD",fill_or_kill:"FOK",immediate_or_cancel:"IOC"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"creation_timestamp"),i=this.safeInteger(e,"last_update_timestamp"),r=this.safeString(e,"order_id"),a=this.safeString(e,"price"),n=this.safeString(e,"average_price"),o=this.safeString(e,"amount"),c=this.safeString(e,"filled_amount");let d;if(void 0!==c){y.stringGt(c,"0")&&(d=i)}const h=this.parseOrderStatus(this.safeString(e,"order_state")),l=this.safeString(e,"instrument_name");t=this.safeMarket(l,t);const u=this.safeStringLower(e,"direction");let f,p=this.safeString(e,"commission");void 0!==p&&(p=y.stringAbs(p),f={cost:p,currency:t.base});const m=this.safeString(e,"order_type");let g=this.safeValue(e,"trades");void 0!==g&&(g=this.parseTrades(g,t));const b=this.parseTimeInForce(this.safeString(e,"time_in_force")),v=this.safeValue(e,"trigger_price"),w=this.safeValue(e,"post_only");return this.safeOrder({info:e,id:r,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:d,symbol:t.symbol,type:m,timeInForce:b,postOnly:w,side:u,price:a,stopPrice:v,amount:o,cost:void 0,average:n,filled:c,remaining:void 0,status:h,fee:f,trades:g},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetGetOrderState(this.extend(i,s)),a=this.safeValue(r,"result");return this.parseOrder(a)}async createOrder(e,t,s,i,r,a={}){await this.signIn(),await this.loadMarkets();const n=this.market(e),o={instrument_name:n.id,amount:this.amountToPrecision(e,i),type:t};if("limit"===t&&(o.price=this.priceToPrecision(e,r)),n.contract){const e=this.safeStringUpper(a,"timeInForce");"GTC"===e?o.time_in_force="good_till_cancelled":"FOK"===e?o.time_in_force="fill_or_kill":"IOC"===e&&(o.time_in_force="immediate_or_cancel");const s="market"===t,i=this.safeValue(a,"post_only",!1);this.isPostOnly(s,i,a)&&(o.post_only=!0);this.safeValue(a,"reduceOnly",!1)&&(o.reduce_only=!0),a=this.omit(a,["timeInForce","postOnly","reduceOnly"])}const c="privatePost"+this.capitalize(s),d=await this[c](this.extend(o,a)),h=this.safeValue(d,"result",{}),l=this.safeValue(h,"order");return this.parseOrder(l,n)}async cancelOrder(e,t,s={}){await this.signIn(),await this.loadMarkets();const i={order_id:e},r=await this.privatePostCancel(this.extend(i,s)),a=this.safeValue(r,"result",{});return this.parseOrder(a)}async cancelAllOrders(e,t={}){if(void 0===e)throw new g(this.id+" cancelAllOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const s={instrument_name:this.market(e).id};return await this.privatePostCancelAllByInstrument(this.extend(s,t))}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new g(this.id+" fetchOpenOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id},n=await this.privateGetGetOpenOrdersByInstrument(this.extend(a,i)),o=this.safeValue(n,"result",[]);return this.parseOrders(o,r,t,s)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new g(this.id+" fetchClosedOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id};void 0!==s&&(a.count=s);const n=await this.privateGetGetOrderHistoryByInstrument(this.extend(a,i)),o=this.safeValue(n,"result",[]);return this.parseOrders(o,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){if(void 0===e)throw new g(this.id+" fetchOrderTrades() requires a id argument");await this.loadMarkets();const a={order_id:e};void 0!==i&&(a.count=i);const n=await this.privateGetGetUserTradesByOrder(this.extend(a,r)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new g(this.id+" fetchMyTrades() requires a id argument");await this.signIn(),await this.loadMarkets();const r={};let a;const n=this.market(e);r.instrument_name=n.id,a=void 0===t?"privateGetGetUserTradesByInstrument":"privateGetGetUserTradesByInstrumentAndTime",void 0!==s&&(r.count=s);const o=await this[a](this.extend(r,i)),c=this.safeValue(o,"result",{}),d=this.safeValue(c,"trades",[]);return this.parseTrades(d,n,t,s)}parsePosition(e,t){const s=this.safeString(e,"instrument_name");t=this.safeMarket(s,t);const i=this.safeString(e,"size");let r=this.safeString(e,"direction");r="buy"===r?"long":"short";const a=this.safeString(e,"maintenance_margin"),n=this.safeString(e,"risk_level"),o=y.stringDiv(a,n),c=this.safeString(e,"mark_price"),d=y.stringMul(c,i),h=this.safeString(e,"floating_profit_loss"),l=this.safeString(e,"initial_margin"),u=y.stringMul(y.stringDiv(h,l),"100"),f=this.safeString(e,"margin_type");return{info:e,symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,initialMargin:this.parseNumber(l),initialMarginPercentage:this.parseNumber(y.stringDiv(l,d)),maintenanceMargin:this.parseNumber(a),maintenanceMarginPercentage:this.parseNumber(y.stringDiv(a,d)),entryPrice:this.safeNumber(e,"average_price"),notional:this.parseNumber(d),leverage:this.safeNumber(e,"leverage"),unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(i),contractSize:this.safeValue(t,"contractSize"),marginRatio:this.parseNumber(n),liquidationPrice:this.safeNumber(e,"liquid_price"),markPrice:this.parseNumber(c),collateral:this.parseNumber(o),marginType:f,side:r,percentage:this.parseNumber(u)}}async fetchPosition(e,t={}){await this.signIn(),await this.loadMarkets();const s={instrument_name:this.market(e).id},i=await this.privateGetGetPosition(this.extend(s,t)),r=this.safeValue(i,"result");return this.parsePosition(r)}async fetchPositions(e,t={}){await this.signIn(),await this.loadMarkets();const s=await this.privateGetGetPositions(this.extend({currency:"PERPETUAL"},t)),i=this.safeValue(s,"result");return this.parsePositions(i,e)}parseTransactionStatus(e){return this.safeString({deposit_confirmed:"ok",deposit_waiting_confirm:"pending",withdraw_init:"pending",withdraw_noticed_block_chain:"pending",withdraw_waiting_confirm:"pending",withdraw_confirmed:"ok",withdraw_failed:"failed",withdraw_auditing:"pending",withdraw_audit_reject:"failed"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"coin_type"),i=this.safeCurrencyCode(s,t),r=this.safeString(e,"id"),a=this.safeString(e,"tx_hash"),n=this.safeInteger(e,"create_time"),o=this.safeInteger(e,"update_time"),c=this.safeNumber(e,"amount"),d=this.safeString(e,"state");return{info:e,id:r,txid:a,timestamp:n,datetime:this.iso8601(n),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:void 0,amount:c,currency:i,status:this.parseTransactionStatus(d),updated:o,fee:void 0}}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new g(this.id+" fetchDeposits() requires the code argument");await this.signIn(),await this.loadMarkets();const r=this.safeCurrency(e),a={coin_type:r.id},n=await this.privateGetGetDepositRecord(this.extend(a,i)),o=this.safeValue(n,"result",[]);return this.parseTransactions(o,r,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new g(this.id+" fetchWithdrawals() requires the code argument");await this.signIn(),await this.loadMarkets();const r=this.safeCurrency(e),a={coin_type:r.id},n=await this.privateGetGetWithdrawRecord(this.extend(a,i)),o=this.safeValue(n,"result",[]);return this.parseTransactions(o,r,t,s,{type:"withdrawal"})}async fetchWithdrawal(e,t,s={}){if(void 0===t)throw new g(this.id+" fetchWithdrawal() requires the code argument");await this.signIn(),await this.loadMarkets();const i=this.safeCurrency(t),r={coin_type:i.id,withdraw_id:e},a=await this.privateGetGetWithdrawRecord(this.extend(r,s)),n=this.safeValue(a,"result",[]),o=this.filterBy(n,"id",e),c=this.safeValue(o,0);return this.parseTransaction(c,i)}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.version+"/"+t+"/"+e;if("public"===t&&Object.keys(i).length&&(n+="?"+this.urlencode(i)),"private"===t){this.checkRequiredCredentials(),"GET"===s&&Object.keys(i).length&&(n+="?"+this.urlencode(i));const o=this.safeString(this.options,"accessToken");if(void 0===o)throw new p(this.id+" sign() requires access token");if(r={Authorization:"bearer "+o},"POST"===s&&(r["Content-Type"]="application/json",Object.keys(i).length)){const s={jsonrpc:"2.0",id:this.nonce(),method:"/"+t+"/"+e,params:i};a=this.json(s)}}return{url:this.urls.api+n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"error");if(h){const e=this.id+" "+n,t=this.safeString(h,"code"),s=this.safeString(h,"message");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,s,e),new a(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],175:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,ExchangeError:a,OrderNotFound:n,InvalidOrder:o,InsufficientFunds:c,DDoSProtection:d,BadRequest:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btcmarkets",name:"BTC Markets",countries:["AU"],rateLimit:1e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:"emulated",fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/89731817-b3fb8480-da52-11ea-817f-783b08aaf32b.jpg",api:{public:"https://api.btcmarkets.net",private:"https://api.btcmarkets.net"},www:"https://btcmarkets.net",doc:["https://api.btcmarkets.net/doc/v3","https://github.com/BTCMarkets/API"]},api:{public:{get:["markets","markets/{marketId}/ticker","markets/{marketId}/trades","markets/{marketId}/orderbook","markets/{marketId}/candles","markets/tickers","markets/orderbooks","time"]},private:{get:["orders","orders/{id}","batchorders/{ids}","trades","trades/{id}","withdrawals","withdrawals/{id}","deposits","deposits/{id}","transfers","transfers/{id}","addresses","withdrawal-fees","assets","accounts/me/trading-fees","accounts/me/withdrawal-limits","accounts/me/balances","accounts/me/transactions","reports/{id}"],post:["orders","batchorders","withdrawals","reports"],delete:["orders","orders/{id}","batchorders/{ids}"],put:["orders/{id}"]}},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},precisionMode:l,exceptions:{3:o,6:d,InsufficientFund:c,InvalidPrice:o,InvalidAmount:o,MissingArgument:o,OrderAlreadyCancelled:o,OrderNotFound:n,OrderStatusIsFinal:o,InvalidPaginationParameter:h},fees:{percentage:!0,tierBased:!0,maker:this.parseNumber("-0.0005"),taker:this.parseNumber("0.0020")},options:{fees:{AUD:{maker:.0085,taker:.0085}}}})}async fetchTransactionsWithMethod(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==i&&(a.limit=i),void 0!==s&&(a.after=s),void 0!==t&&(n=this.currency(t));const o=await this[e](this.extend(a,r));return this.parseTransactions(o,n,s,i)}async fetchTransactions(e,t,s,i={}){return await this.fetchTransactionsWithMethod("privateGetTransfers",e,t,s,i)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsWithMethod("privateGetDeposits",e,t,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsWithMethod("privateGetWithdrawals",e,t,s,i)}parseTransactionStatus(e){return this.safeString({Accepted:"pending","Pending Authorization":"pending",Complete:"ok",Cancelled:"cancelled",Failed:"failed"},e,e)}parseTransactionType(e){return this.safeString({Withdraw:"withdrawal",Deposit:"deposit"},e,e)}parseTransaction(e,t){const s=this.parse8601(this.safeString(e,"creationTime")),i=this.parse8601(this.safeString(e,"lastUpdate"));let r=this.parseTransactionType(this.safeStringLower(e,"type"));"withdraw"===r&&(r="withdrawal");const a=this.safeValue(e,"paymentDetail",{}),n=this.safeString(a,"txId");let o,c=this.safeString(a,"address");if(void 0!==c){const e=c.split("?dt=");e.length>1&&(c=e[0],o=e[1])}const d=c,h=o,l=this.safeNumber(e,"fee"),u=this.parseTransactionStatus(this.safeString(e,"status")),f=this.safeString(e,"assetName"),p=this.safeCurrencyCode(f);let m=this.safeNumber(e,"amount");return l&&(m-=l),{id:this.safeString(e,"id"),txid:n,timestamp:s,datetime:this.iso8601(s),network:void 0,address:c,addressTo:d,addressFrom:undefined,tag:o,tagTo:h,tagFrom:undefined,type:r,amount:m,currency:p,status:u,updated:i,fee:{currency:p,cost:l},info:e}}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"baseAssetName"),a=this.safeString(i,"quoteAssetName"),n=this.safeString(i,"marketId"),o=this.safeCurrencyCode(r),c=this.safeCurrencyCode(a),d=o+"/"+c,h=this.safeValue(this.safeValue(this.options,"fees",{}),c,this.fees),l=this.parseNumber(this.parsePrecision(this.safeString(i,"priceDecimals"))),u=this.safeNumber(i,"minOrderAmount"),f=this.safeNumber(i,"maxOrderAmount");let p;"AUD"===c&&(p=l),s.push({id:n,symbol:d,base:o,quote:c,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:h.taker,maker:h.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"amountDecimals"))),price:l},limits:{leverage:{min:void 0,max:void 0},amount:{min:u,max:f},price:{min:p,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"timestamp"))}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"assetName"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(i,"locked"),n.total=this.safeString(i,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsMeBalances(e);return this.parseBalance(t)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,0)),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={marketId:a.id,timeWindow:this.timeframes[t]};void 0!==s&&(n.from=this.iso8601(s)),void 0!==i&&(n.limit=i);const o=await this.publicGetMarketsMarketIdCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={marketId:this.market(e).id},r=await this.publicGetMarketsMarketIdOrderbook(this.extend(i,s)),a=this.safeIntegerProduct(r,"snapshotId",.001),n=this.parseOrderBook(r,e,a);return n.nonce=this.safeInteger(r,"snapshotId"),n}parseTicker(e,t){const s=this.safeString(e,"marketId"),i=(t=this.safeMarket(s,t,"-")).symbol,r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"lastPrice"),n=this.safeString(e,"volume24h"),o=this.safeString(e,"volumeQte24h"),c=this.safeString(e,"price24h"),d=this.safeString(e,"pricePct24h");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high24h"),low:this.safeString(e,"low"),bid:this.safeString(e,"bestBid"),bidVolume:void 0,ask:this.safeString(e,"bestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:c,percentage:d,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={marketId:s.id},r=await this.publicGetMarketsMarketIdTicker(this.extend(i,t));return this.parseTicker(r,s)}async fetchTicker2(e,t={}){await this.loadMarkets();const s=this.market(e),i={id:s.id},r=await this.publicGetMarketIdTick(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"timestamp")),i=this.safeString(e,"marketId"),r="AUD"===(t=this.safeMarket(i,t,"-")).quote?t.quote:t.base;let a=this.safeString(e,"side");"Bid"===a?a="buy":"Ask"===a&&(a="sell");const n=this.safeString(e,"id"),o=this.safeString(e,"price"),c=this.safeString(e,"amount"),d=this.safeString(e,"orderId");let h;const l=this.safeString(e,"fee");void 0!==l&&(h={cost:l,currency:r});const u=this.safeStringLower(e,"liquidityType");return this.safeTrade({info:e,id:n,timestamp:s,datetime:this.iso8601(s),order:d,symbol:t.symbol,type:void 0,side:a,price:o,amount:c,cost:void 0,takerOrMaker:u,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={marketId:r.id},n=await this.publicGetMarketsMarketIdTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.market(e),c={marketId:o.id,amount:this.amountToPrecision(e,i),side:"buy"===s?"Bid":"Ask"},d=t.toLowerCase(),h=this.safeValue(this.options,"orderTypes",{limit:"Limit",market:"Market",stop:"Stop","stop limit":"Stop Limit","take profit":"Take Profit"});c.type=this.safeString(h,d,t);let l=!1,u=!1;if("limit"===d?l=!0:"stop limit"===d?(u=!0,l=!0):("take profit"===d||"stop"===d)&&(u=!0),l){if(void 0===a)throw new r(this.id+" createOrder() requires a price argument for a "+t+"order");c.price=this.priceToPrecision(e,a)}if(u){const s=this.safeNumber(n,"triggerPrice");if(n=this.omit(n,"triggerPrice"),void 0===s)throw new r(this.id+" createOrder() requires a triggerPrice parameter for a "+t+"order");c.triggerPrice=this.priceToPrecision(e,s)}const f=this.safeString(n,"clientOrderId");void 0!==f&&(c.clientOrderId=f),n=this.omit(n,"clientOrderId");const p=await this.privatePostOrders(this.extend(c,n));return this.parseOrder(p,o)}async cancelOrders(e,t,s={}){await this.loadMarkets();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t]);const i={ids:e};return await this.privateDeleteBatchordersIds(this.extend(i,s))}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e};return await this.privateDeleteOrdersId(this.extend(i,s))}calculateFee(e,t,s,i,r,a="taker",n={}){const o=this.markets[e],c=o[a];let d,h;return"AUD"===o.quote?(d=o.quote,h=parseFloat(this.costToPrecision(e,i*r))):(d=o.base,h=parseFloat(this.amountToPrecision(e,i))),{type:a,currency:d,rate:c,cost:parseFloat(this.feeToPrecision(e,c*h))}}parseOrderStatus(e){return this.safeString({Accepted:"open",Placed:"open","Partially Matched":"open","Fully Matched":"closed",Cancelled:"canceled","Partially Cancelled":"canceled",Failed:"rejected"},e,e)}parseOrder(e,t){const s=this.parse8601(this.safeString(e,"creationTime")),i=this.safeString(e,"marketId");t=this.safeMarket(i,t,"-");let r=this.safeString(e,"side");"Bid"===r?r="buy":"Ask"===r&&(r="sell");const a=this.safeStringLower(e,"type"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),c=this.safeString(e,"openAmount"),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString(e,"orderId"),l=this.safeString(e,"clientOrderId"),u=this.safeString(e,"timeInForce"),f=this.safeNumber(e,"triggerPrice"),p=this.safeValue(e,"postOnly");return this.safeOrder({info:e,id:h,clientOrderId:l,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:t.symbol,type:a,timeInForce:u,postOnly:p,side:r,price:n,stopPrice:f,cost:void 0,amount:o,filled:void 0,remaining:c,average:void 0,status:d,trades:void 0,fee:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrdersId(this.extend(i,s));return this.parseOrder(r)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={status:"all"};let a;void 0!==e&&(a=this.market(e),r.marketId=a.id),void 0!==t&&(r.after=t),void 0!==s&&(r.limit=s);const n=await this.privateGetOrders(this.extend(r,i));return this.parseOrders(n,a,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"open"},i))}async fetchClosedOrders(e,t,s,i={}){const r=await this.fetchOrders(e,t,s,i);return this.filterBy(r,"status","closed")}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.marketId=a.id),void 0!==t&&(r.after=t),void 0!==s&&(r.limit=s);const n=await this.privateGetTrades(this.extend(r,i));return this.parseTrades(n,a,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e),n={currency_id:a.id,amount:this.currencyToPrecision(e,t)};"AUD"!==e&&(this.checkAddress(s),n.toAddress=s),void 0!==i&&(n.toAddress=s+"?dt="+i);const o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,i);const o=this.keysort(this.omit(i,this.extractParams(e)));if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.base64ToBinary(this.encode(this.secret));let i=s+n+e;"GET"===s||"DELETE"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):i+=a=this.json(o);const c=this.hmac(this.encode(i),t,"sha512","base64");r={Accept:"application/json","Accept-Charset":"UTF-8","Content-Type":"application/json","BM-AUTH-APIKEY":this.apiKey,"BM-AUTH-TIMESTAMP":e,"BM-AUTH-SIGNATURE":c}}else"public"===t&&Object.keys(o).length&&(n+="?"+this.urlencode(o));return{url:this.urls.api[t]+n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0!==o){if("success"in o&&!o.success){const e=this.safeString(o,"errorCode"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new a(t)}if(e>=400){const e=this.safeString(o,"code"),t=this.safeString(o,"message"),s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,s),this.throwExactlyMatchedException(this.exceptions,t,s),new a(s)}}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],176:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a}=e("./base/errors"),{TICK_SIZE:n}=e("./base/functions/number"),o=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btctradeua",name:"BTC Trade UA",countries:["UA"],rateLimit:3e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0},urls:{referral:"https://btc-trade.com.ua/registration/22689",logo:"https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg",api:"https://btc-trade.com.ua/api",www:"https://btc-trade.com.ua",doc:"https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit"},api:{public:{get:["deals/{symbol}","trades/sell/{symbol}","trades/buy/{symbol}","japan_stat/high/{symbol}"]},private:{post:["auth","ask/{symbol}","balance","bid/{symbol}","buy/{symbol}","my_orders/{symbol}","order/status/{id}","remove/order/{id}","sell/{symbol}"]}},precisionMode:n,markets:{"BCH/UAH":{id:"bch_uah",symbol:"BCH/UAH",base:"BCH",quote:"UAH",baseId:"bch",quoteId:"uah",type:"spot",spot:!0},"BTC/UAH":{id:"btc_uah",symbol:"BTC/UAH",base:"BTC",quote:"UAH",baseId:"btc",quoteId:"uah",precision:{price:this.parseNumber("0.1")},limits:{amount:{min:this.parseNumber("0.0000000001")}},type:"spot",spot:!0},"DASH/BTC":{id:"dash_btc",symbol:"DASH/BTC",base:"DASH",quote:"BTC",baseId:"dash",quoteId:"btc",type:"spot",spot:!0},"DASH/UAH":{id:"dash_uah",symbol:"DASH/UAH",base:"DASH",quote:"UAH",baseId:"dash",quoteId:"uah",type:"spot",spot:!0},"DOGE/BTC":{id:"doge_btc",symbol:"DOGE/BTC",base:"DOGE",quote:"BTC",baseId:"doge",quoteId:"btc",type:"spot",spot:!0},"DOGE/UAH":{id:"doge_uah",symbol:"DOGE/UAH",base:"DOGE",quote:"UAH",baseId:"doge",quoteId:"uah",type:"spot",spot:!0},"ETH/UAH":{id:"eth_uah",symbol:"ETH/UAH",base:"ETH",quote:"UAH",baseId:"eth",quoteId:"uah",type:"spot",spot:!0},"ITI/UAH":{id:"iti_uah",symbol:"ITI/UAH",base:"ITI",quote:"UAH",baseId:"iti",quoteId:"uah",type:"spot",spot:!0},"KRB/UAH":{id:"krb_uah",symbol:"KRB/UAH",base:"KRB",quote:"UAH",baseId:"krb",quoteId:"uah",type:"spot",spot:!0},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc",type:"spot",spot:!0},"LTC/UAH":{id:"ltc_uah",symbol:"LTC/UAH",base:"LTC",quote:"UAH",baseId:"ltc",quoteId:"uah",type:"spot",spot:!0},"NVC/BTC":{id:"nvc_btc",symbol:"NVC/BTC",base:"NVC",quote:"BTC",baseId:"nvc",quoteId:"btc",type:"spot",spot:!0},"NVC/UAH":{id:"nvc_uah",symbol:"NVC/UAH",base:"NVC",quote:"UAH",baseId:"nvc",quoteId:"uah",type:"spot",spot:!0},"PPC/BTC":{id:"ppc_btc",symbol:"PPC/BTC",base:"PPC",quote:"BTC",baseId:"ppc",quoteId:"btc",type:"spot",spot:!0},"SIB/UAH":{id:"sib_uah",symbol:"SIB/UAH",base:"SIB",quote:"UAH",baseId:"sib",quoteId:"uah",type:"spot",spot:!0},"XMR/UAH":{id:"xmr_uah",symbol:"XMR/UAH",base:"XMR",quote:"UAH",baseId:"xmr",quoteId:"uah",type:"spot",spot:!0},"ZEC/UAH":{id:"zec_uah",symbol:"ZEC/UAH",base:"ZEC",quote:"UAH",baseId:"zec",quoteId:"uah",type:"spot",spot:!0}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BTC:6e-4,LTC:.01,NVC:.01,DOGE:10}}}})}async signIn(e={}){return await this.privatePostAuth(e)}parseBalance(e){const t={info:e},s=this.safeValue(e,"accounts",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a=await this.publicGetTradesBuySymbol(this.extend(r,s)),n=await this.publicGetTradesSellSymbol(this.extend(r,s)),o={bids:[],asks:[]};return a&&"list"in a&&(o.bids=a.list),n&&"list"in n&&(o.asks=n.list),this.parseOrderBook(o,i.symbol,void 0,"bids","asks","price","currency_trade")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.milliseconds(),r={symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},a=e.length;if(a>0){for(let t=Math.max(a-48,0);t<e.length;t++){const s=e[t];void 0===r.open&&(r.open=this.safeString(s,1));const i=this.safeString(s,2);(void 0===r.high||void 0!==i&&o.stringLt(r.high,i))&&(r.high=i);const a=this.safeString(s,3);(void 0===r.low||void 0!==a&&o.stringLt(r.low,a))&&(r.low=a);const n=this.safeString(s,5);void 0===r.baseVolume?r.baseVolume=n:r.baseVolume=o.stringAdd(r.baseVolume,n)}const t=a-1;r.last=this.safeString(e[t],4),r.close=r.last}return this.safeTicker(r,t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetJapanStatHighSymbol(this.extend(i,t)),a=this.safeValue(r,"trades");return this.parseTicker(a,s)}convertMonthNameToString(e){return this.safeString({Jan:"01",Feb:"02",Mar:"03",Apr:"04",May:"05",Jun:"06",Jul:"07",Aug:"08",Sept:"09",Oct:"10",Nov:"11",Dec:"12"},e)}parseExchangeSpecificDatetime(e){const t=e.split(" ");let s=t[0],i=t[1].replace(",","");i.length<2&&(i="0"+i);const a=t[2].replace(",","");if(s=s.replace(",",""),s=s.replace(".",""),s=this.convertMonthNameToString(s),!s)throw new r(this.id+" parseTrade() unrecognized month name: "+e);const n=t[3].split(":");let o=this.safeString(n,0),c="00";const d=this.safeString(t,4);if("noon"===o)o="12";else{let e=parseInt(o);void 0!==d&&"p"===d[0]&&(e=12+e,e>23&&(e=0)),o=e.toString(),o.length<2&&(o="0"+o),c=this.safeString(n,1,"00"),c.length<2&&(c="0"+c)}const h=[a,s,i].join("-")+"T"+o+":"+c+":00",l=this.parse8601(h),u=parseInt(c);return u<11||u>2?l-72e5:l-108e5}parseTrade(e,t){const s=this.parseExchangeSpecificDatetime(this.safeString(e,"pub_date")),i=this.safeString(e,"id"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amnt_trade");return t=this.safeMarket(void 0,t),this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:"limit",side:r,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetDealsSymbol(this.extend(a,i)),o=[];for(let e=0;e<n.length;e++){this.safeInteger(n[e],"id")%2&&o.push(n[e])}return this.parseTrades(o,r,t,s)}async createOrder(e,t,s,i,a,n={}){if("market"===t)throw new r(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),c="privatePost"+this.capitalize(s)+"Id",d={count:i,currency1:o.quoteId,currency:o.baseId,price:a};return this[c](this.extend(d,n))}async cancelOrder(e,t,s={}){const i={id:e};return await this.privatePostRemoveOrderId(this.extend(i,s))}parseOrder(e,t){const s=this.milliseconds(),i=this.safeSymbol(void 0,t),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amnt_trade"),o=this.safeString(e,"amnt_trade");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:"open",symbol:i,type:void 0,timeInForce:void 0,postOnly:void 0,side:r,price:a,stopPrice:void 0,amount:n,filled:void 0,remaining:o,trades:void 0,info:e,cost:void 0,average:void 0,fee:void 0},t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id},o=await this.privatePostMyOrdersSymbol(this.extend(n,i)),c=this.safeValue(o,"your_open_orders");return this.parseOrders(c,r,t,s)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+=this.implodeParams(e,o));else{this.checkRequiredCredentials();const e=this.nonce(),t=(a=this.urlencode(this.extend({out_order_id:e,nonce:e},o)))+this.secret;r={"public-key":this.apiKey,"api-sign":this.hash(this.encode(t),"sha256"),"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],177:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InsufficientFunds:a,InvalidOrder:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number"),c=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"btcturk",name:"BTCTurk",countries:["TR"],rateLimit:100,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},timeframes:{"1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87153926-efbef500-c2c0-11ea-9842-05b63612c4b9.jpg",api:{public:"https://api.btcturk.com/api/v2",private:"https://api.btcturk.com/api/v1",graph:"https://graph-api.btcturk.com/v1"},www:"https://www.btcturk.com",doc:"https://github.com/BTCTrader/broker-api-docs"},api:{public:{get:{orderbook:1,ticker:.1,trades:1,"server/exchangeinfo":1}},private:{get:{"users/balances":1,openOrders:1,allOrders:1,"users/transactions/trade":1},post:{order:1,cancelOrder:1},delete:{order:1}},graph:{get:{ohlcs:1}}},fees:{trading:{maker:this.parseNumber("0.0005"),taker:this.parseNumber("0.0009")}},exceptions:{exact:{FAILED_ORDER_WITH_OPEN_ORDERS:a,FAILED_LIMIT_ORDER:n,FAILED_MARKET_ORDER:n}},precisionMode:o})}async fetchMarkets(e={}){const t=await this.publicGetServerExchangeinfo(e),s=this.safeValue(t,"data"),i=this.safeValue(s,"symbols",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"name"),a=this.safeString(t,"numerator"),n=this.safeString(t,"denominator"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeValue(t,"filters",[]);let h,l,u,f,p;for(let e=0;e<d.length;e++){const t=d[e];"PRICE_FILTER"===this.safeString(t,"filterType")&&(h=this.safeNumber(t,"minPrice"),l=this.safeNumber(t,"maxPrice"),u=this.safeNumber(t,"minAmount"),f=this.safeNumber(t,"maxAmount"),p=this.safeNumber(t,"minExchangeValue"))}const m=this.safeString(t,"status");r.push({id:s,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"TRADING"===m,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"numeratorScale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"denominatorScale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:u,max:f},price:{min:h,max:l},cost:{min:p,max:void 0}},info:t})}return r}parseBalance(e){const t=this.safeValue(e,"data",[]),s={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),n.free=this.safeString(i,"free"),n.used=this.safeString(i,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUsersBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pairSymbol:i.id},a=await this.publicGetOrderbook(this.extend(r,s)),n=this.safeValue(a,"data"),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,i.symbol,o,"bids","asks",0,1)}parseTicker(e,t){const s=this.safeString(e,"pair"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"daily"),percentage:this.safeString(e,"dailyPercent"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i=this.safeValue(s,"data");return this.parseTickers(i,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=await this.fetchTickers([e],t);return this.safeValue(s,e)}parseTrade(e,t){const s=this.safeInteger2(e,"date","timestamp"),i=this.safeString2(e,"tid","id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"price"),n=c.stringAbs(this.safeString(e,"amount")),o=this.safeString(e,"pair"),d=this.safeSymbol(o,t),h=this.safeString2(e,"side","orderType");let l;const u=this.safeString(e,"fee");if(void 0!==u){const t=this.safeString(e,"denominatorSymbol");l={cost:c.stringAbs(u),currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,id:i,order:r,timestamp:s,datetime:this.iso8601(s),symbol:d,type:void 0,side:h,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:l},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pairSymbol:r.id};void 0!==s&&(a.last=s);const n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1d",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==i&&(n.last=i);const o=await this.graphGetOhlcs(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={orderType:s,orderMethod:t,pairSymbol:n.id,quantity:this.amountToPrecision(e,i)};"market"!==t&&(o.price=this.priceToPrecision(e,r)),"clientOrderId"in a?o.newClientOrderId=a.clientOrderId:"newClientOrderId"in a||(o.newClientOrderId=this.uuid());const c=await this.privatePostOrder(this.extend(o,a)),d=this.safeValue(c,"data");return this.parseOrder(d,n)}async cancelOrder(e,t,s={}){const i={id:e};return await this.privateDeleteOrder(this.extend(i,s))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pairSymbol=a.id);const n=await this.privateGetOpenOrders(this.extend(r,i)),o=this.safeValue(n,"data"),c=this.safeValue(o,"bids",[]),d=this.safeValue(o,"asks",[]);return this.parseOrders(this.arrayConcat(c,d),a,t,s)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pairSymbol:r.id};void 0!==s&&(a.last=s),void 0!==t&&(a.startTime=Math.floor(t/1e3));const n=await this.privateGetAllOrders(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseOrders(o,r,t,s)}parseOrderStatus(e){return this.safeString({Untouched:"open",Partial:"open",Canceled:"canceled",Closed:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"price"),r=this.safeString2(e,"amount","quantity"),a=c.stringAbs(r),n=this.safeString(e,"leftAmount"),o=this.safeNumber(e,"pairSymbol"),d=this.safeSymbol(o,t),h=this.safeString(e,"type"),l=this.safeString(e,"method"),u=this.safeString(e,"orderClientId"),f=this.safeInteger2(e,"updateTime","datetime"),p=this.safeString(e,"status"),m=this.parseOrderStatus(p);return this.safeOrder({info:e,id:s,price:i,amount:a,remaining:n,filled:void 0,cost:void 0,average:void 0,status:m,side:h,type:l,clientOrderId:u,timestamp:f,datetime:this.iso8601(f),symbol:d,fee:void 0},t)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetUsersTransactionsTrade(),n=this.safeValue(a,"data");return this.parseTrades(n,r,t,s)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},a,n){if("btctrader"===this.id)throw new r(this.id+" is an abstract base API for BTCExchange, BTCTurk");let o=this.urls.api[t]+"/"+e;if("GET"===s||"DELETE"===s?Object.keys(i).length&&(o+="?"+this.urlencode(i)):n=this.json(i),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.base64ToBinary(this.secret),s=this.apiKey+e;a={"X-PCK":this.apiKey,"X-Stamp":e,"X-Signature":this.hmac(this.encode(s),t,"sha256","base64"),"Content-Type":"application/json"}}return{url:o,method:s,body:n,headers:a}}handleErrors(e,t,s,i,a,n,o,c,d){const h=this.safeString(o,"code","0"),l=this.safeString(o,"message"),u=void 0===l?n:l;if(this.throwExactlyMatchedException(this.exceptions.exact,l,this.id+" "+u),"0"!==h)throw new r(this.id+" "+u)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],178:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AddressPending:r,AuthenticationError:a,ExchangeError:n,NotSupported:o,PermissionDenied:c,ArgumentsRequired:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"buda",name:"Buda",countries:["AR","CL","CO","PE"],rateLimit:1e3,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg",api:"https://www.buda.com/api",www:"https://www.buda.com",doc:"https://api.buda.com",fees:"https://www.buda.com/comisiones"},status:{status:"error",updated:void 0,eta:void 0,url:void 0},api:{public:{get:["pairs","markets","currencies","markets/{market}","markets/{market}/ticker","markets/{market}/volume","markets/{market}/order_book","markets/{market}/trades","currencies/{currency}/fees/deposit","currencies/{currency}/fees/withdrawal","tv/history"],post:["markets/{market}/quotations"]},private:{get:["balances","balances/{currency}","currencies/{currency}/balances","orders","orders/{id}","markets/{market}/orders","deposits","currencies/{currency}/deposits","withdrawals","currencies/{currency}/withdrawals","currencies/{currency}/receive_addresses","currencies/{currency}/receive_addresses/{id}"],post:["markets/{market}/orders","currencies/{currency}/deposits","currencies/{currency}/withdrawals","currencies/{currency}/simulated_withdrawals","currencies/{currency}/receive_addresses"],put:["orders/{id}"]}},timeframes:{"1m":"1","5m":"5","30m":"30","1h":"60","2h":"120","1d":"D","1w":"W"},fees:{trading:{tierBased:!0,percentage:!0,taker:.008,maker:.004,tiers:{taker:[[0,.008],[2e3,.007],[2e4,.006],[1e5,.005],[5e5,.004],[25e5,.003],[125e5,.002]],maker:[[0,.004],[2e3,.0035],[2e4,.003],[1e5,.0025],[5e5,.002],[25e5,.0015],[125e5,.001]]}}},precisionMode:h,exceptions:{not_authorized:a,forbidden:c,invalid_record:n,not_found:n,parameter_missing:n,bad_parameter:n}})}async fetchCurrencyInfo(e,t){if(!t){const e=await this.publicGetCurrencies();t=this.safeValue(e,"currencies")}for(let s=0;s<t.length;s++){const i=t[s];if(i.id===e)return i}}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=this.safeValue(t,"markets",[]),i=await this.publicGetCurrencies(),r=this.safeValue(i,"currencies"),a=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"base_currency"),n=this.safeString(t,"quote_currency"),o=this.safeCurrencyCode(i),c=this.safeCurrencyCode(n),d=await this.fetchCurrencyInfo(i,r),h=await this.fetchCurrencyInfo(n,r),u=this.safeValue(t,"minimum_order_amount",[]),f=this.safeString(t,"taker_fee"),p=this.safeString(t,"maker_fee");a.push({id:this.safeString(t,"id"),symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:i,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,taker:this.parseNumber(l.stringDiv(f,"1000")),maker:this.parseNumber(l.stringDiv(p,"1000")),precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(d,"input_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(h,"input_decimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(u,0),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return a}async fetchCurrencies(e={}){const t=(await this.publicGetCurrencies()).currencies,s={};for(let e=0;e<t.length;e++){const i=t[e];if(!this.safeValue(i,"managed",!1))continue;const r=this.safeString(i,"id"),a=this.safeCurrencyCode(r),n=this.parseNumber(this.parsePrecision(this.safeString(i,"input_decimals"))),o=this.safeValue(i,"deposit_minimum",[]),c=this.safeValue(i,"withdrawal_minimum",[]),d=this.safeNumber(o,0),h=this.safeNumber(c,0);s[a]={id:r,code:a,info:i,name:void 0,active:!0,deposit:void 0,withdraw:void 0,fee:void 0,precision:n,limits:{amount:{min:n,max:void 0},deposit:{min:d,max:void 0},withdraw:{min:h}}}}return s}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s={},i={},r={};void 0===e&&(e=Object.keys(this.currencies));for(let t=0;t<e.length;t++){const a=e[t],n={currency:this.currency(a).id},o=await this.publicGetCurrenciesCurrencyFeesWithdrawal(n),c=await this.publicGetCurrenciesCurrencyFeesDeposit(n);s[a]=this.parseFundingFee(o.fee),i[a]=this.parseFundingFee(c.fee),r[a]={withdraw:o,deposit:c}}return{withdraw:s,deposit:i,info:r}}parseFundingFee(e,t){return void 0===t&&(t=e.name),"withdrawal"===t&&(t="withdraw"),{type:t,currency:e.base[1],rate:e.percent,cost:parseFloat(e.base[0])}}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.publicGetMarketsMarketTicker(this.extend(i,t)),a=this.safeValue(r,"ticker");return this.parseTicker(a,s)}parseTicker(e,t){const s=this.milliseconds(),i=this.safeString(e,"market_id"),r=this.safeSymbol(i,t,"-"),a=this.safeValue(e,"last_price",[]),n=this.safeString(a,0);let o=this.safeString(e,"price_variation_24h");o=l.stringMul(o,"100");const c=this.safeValue(e,"max_bid",[]),d=this.safeValue(e,"min_ask",[]),h=this.safeValue(e,"volume",[]);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(c,0),bidVolume:void 0,ask:this.safeString(d,0),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:this.safeString(h,0),quoteVolume:void 0,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetMarketsMarketTrades(this.extend(a,i));return this.parseTrades(n.trades.entries,r,t,s)}parseTrade(e,t){let s,i;let r,a,n;let o;return t&&(o=t.symbol),Array.isArray(e)&&(s=this.safeInteger(e,0),r=this.safeString(e,1),a=this.safeString(e,2),i=this.safeString(e,3),n=this.safeString(e,4)),this.safeTrade({id:n,order:undefined,info:e,timestamp:s,datetime:this.iso8601(s),symbol:o,type:undefined,side:i,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:undefined},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market:i.id},a=await this.publicGetMarketsMarketOrderBook(this.extend(r,s)),n=this.safeValue(a,"order_book");return this.parseOrderBook(n,i.symbol)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);void 0===s&&(s=this.milliseconds()-864e5);const n={symbol:a.id,resolution:this.timeframes[t],from:s/1e3,to:this.seconds()},o=await this.publicGetTvHistory(this.extend(n,r));return this.parseTradingViewOHLCV(o,a,t,s,i)}parseBalance(e){const t={info:e},s=this.safeValue(e,"balances",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"id"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i.available_amount,0),n.total=this.safeString(i.amount,0),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalances(e);return this.parseBalance(t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:parseInt(e)},r=await this.privateGetOrdersId(this.extend(i,s)),a=this.safeValue(r,"order");return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={market:r.id,per:s},n=await this.privateGetMarketsMarketOrders(this.extend(a,i)),o=this.safeValue(n,"orders");return this.parseOrders(o,r,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({state:"pending"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({state:"traded"},i))}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),s="buy"===s?"Bid":"Ask";const n={market:this.market(e).id,price_type:t,type:s,amount:this.amountToPrecision(e,i)};"limit"===t&&(n.limit=this.priceToPrecision(e,r));const o=await this.privatePostMarketsMarketOrders(this.extend(n,a)),c=this.safeValue(o,"order");return this.parseOrder(c)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:parseInt(e),state:"canceling"},r=await this.privatePutOrdersId(this.extend(i,s)),a=this.safeValue(r,"order");return this.parseOrder(a)}parseOrderStatus(e){return this.safeString({traded:"closed",received:"open",canceling:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"created_at")),r=this.iso8601(i),a=this.safeString(e,"market_id"),n=this.safeSymbol(a,t,"-"),o=this.safeString(e,"price_type"),c=this.safeStringLower(e,"type"),d=this.parseOrderStatus(this.safeString(e,"state")),h=this.safeValue(e,"original_amount",[]),l=this.safeString(h,0),u=this.safeValue(e,"amount",[]),f=this.safeString(u,0),p=this.safeValue(e,"traded_amount",[]),m=this.safeString(p,0),g=this.safeValue(e,"totalExchanged",[]),y=this.safeString(g,0),b=this.safeValue(e,"limit",[]);let v=this.safeString(b,0);void 0===v&&void 0!==b&&(v=b);const w=this.safeValue(e,"paid_fee",[]),S=this.safeString(w,0);let k;if(void 0!==S){const e=this.safeString(w,1);k={cost:S,code:this.safeCurrencyCode(e)}}return this.safeOrder({info:e,id:s,clientOrderId:void 0,datetime:r,timestamp:i,lastTradeTimestamp:void 0,status:d,symbol:n,type:o,timeInForce:void 0,postOnly:void 0,side:c,price:v,stopPrice:void 0,average:void 0,cost:y,amount:l,filled:m,remaining:f,trades:void 0,fee:k},t)}isFiat(e){return this.safeValue({ARS:!0,CLP:!0,COP:!0,PEN:!0},e,!1)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e);if(this.isFiat(e))throw new o(this.id+" fetchDepositAddress() for fiat "+e+" is not supported");const i={currency:s.id},a=await this.privateGetCurrenciesCurrencyReceiveAddresses(this.extend(i,t)),n=this.safeValue(a,"receive_addresses"),c=[];for(let e=1;e<n.length;e++){const t=n[e];if(t.ready){const e=t.address;this.checkAddress(e),c.push(e)}}if(c.length<1)throw new r(this.id+": there are no addresses ready for receiving "+e+", retry again later)");return{currency:e,address:c[0],tag:void 0,network:void 0,info:n}}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e);if(this.isFiat(e))throw new o(this.id+" createDepositAddress() of fiat for "+e+" is not supported");const i={currency:s.id},r=await this.privatePostCurrenciesCurrencyReceiveAddresses(this.extend(i,t));return{currency:e,address:this.safeString(r.receive_address,"address"),tag:void 0,info:r}}parseTransactionStatus(e){return this.safeString({rejected:"failed",confirmed:"ok",anulled:"canceled",retained:"canceled",pending_confirmation:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=parseFloat(e.amount[0]),o=parseFloat(e.fee[0]),c=e.fee[1],d=this.parseTransactionStatus(this.safeString(e,"state")),h="deposit_data"in e?"deposit":"withdrawal",l=this.safeValue(e,h+"_data",{}),u=this.safeValue(l,"target_address"),f=this.safeString(l,"tx_hash"),p=this.parse8601(this.safeString(l,"updated_at"));return{info:e,id:s,txid:f,timestamp:i,datetime:this.iso8601(i),network:void 0,address:u,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:n,currency:a,status:d,updated:p,fee:{cost:o,rate:c}}}async fetchDeposits(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new d(this.id+" fetchDeposits() requires a currency code argument");const r=this.currency(e),a={currency:r.id,per:s},n=await this.privateGetCurrenciesCurrencyDeposits(this.extend(a,i)),o=this.safeValue(n,"deposits");return this.parseTransactions(o,r,t,s)}async fetchWithdrawals(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new d(this.id+" fetchWithdrawals() requires a currency code argument");const r=this.currency(e),a={currency:r.id,per:s},n=await this.privateGetCurrenciesCurrencyWithdrawals(this.extend(a,i)),o=this.safeValue(n,"withdrawals");return this.parseTransactions(o,r,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a={currency:this.currency(e).id,amount:t,withdrawal_data:{target_address:s}},n=await this.privatePostCurrenciesCurrencyWithdrawals(this.extend(a,r)),o=this.safeValue(n,"withdrawal");return this.parseTransaction(o)}nonce(){return this.microseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));Object.keys(o).length&&("GET"===s?n+="?"+this.urlencode(o):a=this.json(o));const c=this.urls.api+"/"+this.version+"/"+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=[s,"/api/"+this.version+"/"+n];if(a){const e=this.stringToBase64(a);t.push(this.decode(e))}t.push(e);const i=t.join(" "),o=this.hmac(this.encode(i),this.encode(this.secret),"sha384");r={"X-SBTC-APIKEY":this.apiKey,"X-SBTC-SIGNATURE":o,"X-SBTC-NONCE":e,"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0!==o&&e>=400){const e=this.safeString(o,"code"),t=this.safeString(o,"message",a),s=this.id+" "+t;if(void 0!==e)throw this.throwExactlyMatchedException(this.exceptions,e,s),new n(s)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],179:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{RateLimitExceeded:r,BadSymbol:a,OrderNotFound:n,ExchangeError:o,AuthenticationError:c,ArgumentsRequired:d,ExchangeNotAvailable:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bw",name:"BW",countries:["CN"],rateLimit:1500,version:"v1",has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:void 0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchL2OrderBook:void 0,fetchLedger:void 0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchWithdrawals:!0,withdraw:void 0},timeframes:{"1m":"1M","5m":"5M","15m":"15M","30m":"30M","1h":"1H","1w":"1W"},hostname:"bw.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg",api:"https://www.{hostname}",www:"https://www.bw.com",doc:"https://github.com/bw-exchange/api_docs_en/wiki",fees:"https://www.bw.com/feesRate",referral:"https://www.bw.com/regGetCommission/N3JuT1R3bWxKTE0"},requiredCredentials:{apiKey:!0,secret:!0},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")},funding:{}},precisionMode:l,exceptions:{exact:{999:c,1e3:h,2012:n,5017:a,10001:r}},api:{public:{get:["api/data/v1/klines","api/data/v1/ticker","api/data/v1/tickers","api/data/v1/trades","api/data/v1/entrusts","exchange/config/controller/website/marketcontroller/getByWebId","exchange/config/controller/website/currencycontroller/getCurrencyList"]},private:{get:["exchange/entrust/controller/website/EntrustController/getEntrustById","exchange/entrust/controller/website/EntrustController/getUserEntrustRecordFromCacheWithPage","exchange/entrust/controller/website/EntrustController/getUserEntrustList","exchange/fund/controller/website/fundwebsitecontroller/getwithdrawaddress","exchange/fund/controller/website/fundwebsitecontroller/getpayoutcoinrecord","exchange/entrust/controller/website/EntrustController/getUserEntrustList"],post:["exchange/fund/controller/website/fundcontroller/getPayinAddress","exchange/fund/controller/website/fundcontroller/getPayinCoinRecord","exchange/fund/controller/website/fundcontroller/findbypage","exchange/entrust/controller/website/EntrustController/addEntrust","exchange/entrust/controller/website/EntrustController/cancelEntrust"]}}})}async fetchMarkets(e={}){const t=await this.publicGetExchangeConfigControllerWebsiteMarketcontrollerGetByWebId(e),s=this.safeValue(t,"datas",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"marketId"),a=parseInt(r),n=this.safeStringUpper(t,"name");let[o,c]=n.split("_");o=this.safeCurrencyCode(o),c=this.safeCurrencyCode(c);const d=this.safeString(t,"sellerCurrencyId"),h=this.safeString(t,"buyerCurrencyId"),l=this.safeInteger(t,"state"),u=this.safeNumber(t,"defaultFee");i.push({id:r,numericId:a,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:d,quoteId:h,settleId:void 0,baseNumericId:parseInt(d),quoteNumericId:parseInt(h),type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:1===l,contract:!1,linear:void 0,inverse:void 0,taker:u,maker:u,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amountDecimal"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceDecimal")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minAmount"),max:void 0},price:{min:this.parseNumber("0"),max:void 0},cost:{min:this.parseNumber("0"),max:void 0}},info:t})}return i}async fetchCurrencies(e={}){const t=await this.publicGetExchangeConfigControllerWebsiteCurrencycontrollerGetCurrencyList(e),s=this.safeValue(t,"datas",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currencyId"),a=this.safeCurrencyCode(this.safeStringUpper(t,"name")),n=this.safeInteger(t,"state"),o=1===this.safeInteger(t,"rechargeFlag"),c=1===this.safeInteger(t,"drawFlag"),d=1===n;i[a]={id:r,code:a,info:t,name:a,active:d,deposit:o,withdraw:c,fee:this.safeNumber(t,"drawFee"),precision:void 0,limits:{amount:{min:this.safeNumber(t,"limitAmount",0),max:void 0},withdraw:{min:void 0,max:this.safeNumber(t,"onceDrawLimit")}}}}return i}parseTicker(e,t){const s=this.safeString(e,0),i=(t=this.safeMarket(s,t)).symbol,r=this.milliseconds(),a=this.safeString(e,1),n=this.safeValue(e,"bid",{}),o=this.safeValue(e,"ask",{});return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,2),low:this.safeString(e,3),bid:this.safeString(e,7),bidVolume:this.safeString(n,"quantity"),ask:this.safeString(e,8),askVolume:this.safeString(o,"quantity"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:this.safeString(e,5),percentage:void 0,average:void 0,baseVolume:this.safeString(e,4),quoteVolume:this.safeString(e,9),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={marketId:s.id},r=await this.publicGetApiDataV1Ticker(this.extend(i,t)),a=this.safeValue(r,"datas",[]);return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetApiDataV1Tickers(t),i=this.safeValue(s,"datas",[]),r={};for(let t=0;t<i.length;t++){const s=this.parseTicker(i[t]),a=s.symbol;(void 0===e||this.inArray(a,e))&&(r[a]=s)}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={marketId:i.id};void 0!==t&&(r.dataSize=t);const a=await this.publicGetApiDataV1Entrusts(this.extend(r,s)),n=this.safeValue(a,"datas",[]),o=this.safeTimestamp(n,"timestamp");return this.parseOrderBook(n,i.symbol,o)}parseTrade(e,t){const s=this.safeTimestamp(e,2),i=this.safeString(e,5),r=this.safeString(e,6);let a,n=this.safeString(e,1);void 0!==n&&(n in this.markets_by_id||(a="_",n=this.safeString(e,3))),t=this.safeMarket(n,t,a);const o="ask"===this.safeString(e,4)?"sell":"buy";return this.safeTrade({id:void 0,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:"limit",side:o,takerOrMaker:void 0,price:i,amount:r,cost:void 0,fee:void 0,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={marketId:r.id};void 0!==s&&(a.dataSize=s);const n=await this.publicGetApiDataV1Trades(this.extend(a,i)),o=this.safeValue(n,"datas",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetExchangeConfigControllerWebsiteMarketcontrollerGetByWebId(),s=this.safeValue(t,"datas",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeSymbol(r,void 0,"_"),n=this.safeNumber(t,"defaultFee");i[a]={info:t,symbol:a,maker:n,taker:n,percentage:!0,tierBased:!0}}return i}parseOHLCV(e,t){return[this.safeTimestamp(e,3),this.safeNumber(e,4),this.safeNumber(e,5),this.safeNumber(e,6),this.safeNumber(e,7),this.safeNumber(e,8)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={marketId:a.id,type:this.timeframes[t],dataSize:500};void 0!==i&&(n.dataSize=i);const o=await this.publicGetApiDataV1Klines(this.extend(n,r)),c=this.safeValue(o,"datas",[]);return this.parseOHLCVs(c,a,t,s,i)}parseBalance(e){const t=this.safeValue(e,"datas",{}),s=this.safeValue(t,"list",[]),i={info:e};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currencyTypeId"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"amount"),n.used=this.safeString(t,"freeze"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostExchangeFundControllerWebsiteFundcontrollerFindbypage(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){if(void 0===r)throw new o(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const n=this.market(e),c={amount:this.amountToPrecision(e,i),price:this.priceToPrecision(e,r),type:"buy"===s?1:0,rangeType:0,marketId:n.id},d=await this.privatePostExchangeEntrustControllerWebsiteEntrustControllerAddEntrust(this.extend(c,a)),h=this.safeValue(d,"datas");return{id:this.safeString(h,"entrustId"),info:d,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:e,type:t,side:s,price:r,amount:i,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:"open",fee:void 0,trades:void 0,clientOrderId:void 0}}parseOrderStatus(e){return this.safeString({"-3":"canceled","-2":"canceled","-1":"canceled",0:"open",1:"canceled",2:"closed",3:"open",4:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"marketId"),i=this.safeSymbol(s,t),r=this.safeInteger(e,"createTime");let a=this.safeString(e,"type");"0"===a?a="sell":"1"===a&&(a="buy");const n=this.safeString(e,"amount"),o=this.safeString(e,"price"),c=this.safeString(e,"completeAmount"),d=this.safeString2(e,"availabelAmount","availableAmount"),h=this.safeString(e,"totalMoney"),l=this.parseOrderStatus(this.safeString(e,"status"));return this.safeOrder({info:e,id:this.safeString(e,"entrustId"),clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:i,type:"limit",timeInForce:void 0,postOnly:void 0,side:a,price:o,stopPrice:void 0,amount:n,cost:h,average:void 0,filled:c,remaining:d,status:l,fee:void 0,trades:void 0},t)}async fetchOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={marketId:i.id,entrustId:e},a=await this.privateGetExchangeEntrustControllerWebsiteEntrustControllerGetEntrustById(this.extend(r,s)),n=this.safeValue(a,"datas",{});return this.parseOrder(n,i)}async cancelOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i={marketId:this.market(t).id,entrustId:e};return{info:await this.privatePostExchangeEntrustControllerWebsiteEntrustControllerCancelEntrust(this.extend(i,s)),id:e}}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={marketId:r.id};void 0!==s&&(a.pageSize=s);const n=await this.privateGetExchangeEntrustControllerWebsiteEntrustControllerGetUserEntrustRecordFromCacheWithPage(this.extend(a,i)),o=this.safeValue(n,"datas",{}),c=this.safeValue(o,"entrustList",[]);return this.parseOrders(c,r,t,s)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={marketId:r.id};void 0!==s&&(a.pageSize=s),void 0!==t&&(a.startDateTime=t);const n=await this.privateGetExchangeEntrustControllerWebsiteEntrustControllerGetUserEntrustList(this.extend(a,i)),o=this.safeValue(n,"datas",{}),c=this.safeValue(o,"entrustList",[]);return this.parseOrders(c,r,t,s)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={marketId:r.id};void 0!==t&&(a.startDateTime=t),void 0!==s&&(a.pageSize=s);const n=await this.privateGetExchangeEntrustControllerWebsiteEntrustControllerGetUserEntrustList(this.extend(a,i)),o=this.safeValue(n,"datas",{}),c=this.safeValue(o,"entrustList",[]);return this.parseOrders(c,r,t,s)}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeHostname(this.urls.api)+"/"+e;if("GET"===s?Object.keys(i).length&&(n+="?"+this.urlencode(i)):a=this.json(i),"private"===t){const e=this.milliseconds().toString();let t="";if("GET"===s){const e=this.keysort(i),s=Object.keys(e);for(let i=0;i<s.length;i++){const r=s[i];t+=r+e[r].toString()}}else t=a;const n=this.apiKey+e+t+this.secret,o=this.hash(this.encode(n),"md5");r||(r={}),r.Apiid=this.apiKey,r.Timestamp=e,r.Sign=o}return{url:n,method:s,body:a,headers:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currencyTypeName:this.currency(e).name},i=await this.privatePostExchangeFundControllerWebsiteFundcontrollerGetPayinAddress(this.extend(s,t)),r=this.safeValue(i,"datas",{}),a=this.safeString(r,"address"),n=this.safeString(r,"memo");return this.checkAddress(a),{currency:e,address:this.checkAddress(a),tag:n,network:void 0,info:i}}parseTransactionStatus(e){return this.safeString({"-1":"canceled",0:"pending",1:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"depositId","withdrawalId"),i=this.safeString2(e,"depositAddress","withdrawalAddress"),r=this.safeString2(e,"currencyId","currencyTypeId");let a;r in this.currencies_by_id&&(t=this.currencies_by_id[r]),void 0===a&&void 0!==t&&(a=t.code);const n="depositId"in e?"deposit":"withdrawal",o=this.safeNumber2(e,"actuallyAmount","amount"),c=this.parseTransactionStatus(this.safeString2(e,"verifyStatus","state")),d=this.safeInteger(e,"createTime"),h=this.safeString(e,"txId");let l;const u=this.safeNumber(e,"fees");return void 0!==u&&(l={cost:u,currency:a}),{info:e,id:s,txid:h,timestamp:d,datetime:this.iso8601(d),network:void 0,addressFrom:void 0,address:i,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:n,amount:o,currency:a,status:c,updated:void 0,fee:l}}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r={currencyTypeName:this.currency(e).name};void 0!==s&&(r.pageSize=s);const a=await this.privatePostExchangeFundControllerWebsiteFundcontrollerGetPayinCoinRecord(this.extend(r,i)),n=this.safeValue(a,"datas",{}),o=this.safeValue(n,"list",[]);return this.parseTransactions(o,e,t,s)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r={currencyId:this.currency(e).id};void 0!==s&&(r.pageSize=s);const a=await this.privateGetExchangeFundControllerWebsiteFundwebsitecontrollerGetpayoutcoinrecord(this.extend(r,i)),n=this.safeValue(a,"datas",{}),o=this.safeValue(n,"list",[]);return this.parseTransactions(o,e,t,s)}handleErrors(e,t,s,i,r,a,n,c,d){if(!n)return;const h=this.safeValue(n,"resMsg"),l=this.safeString(h,"code");if("1"!==l){const e=this.id+" "+this.json(n);throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),new o(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],180:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{AuthenticationError:a,ExchangeError:n,ArgumentsRequired:o,PermissionDenied:c,InvalidOrder:d,OrderNotFound:h,InsufficientFunds:l,BadRequest:u,RateLimitExceeded:f,InvalidNonce:p,NotSupported:m,InvalidAddress:g}=e("./base/errors"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bybit",name:"Bybit",countries:["VG"],version:"v2",userAgent:void 0,rateLimit:20,hostname:"bybit.com",pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!0,future:!0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchIndexOHLCV:!0,fetchLedger:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPositions:!0,fetchPremiumIndexOHLCV:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:void 0,fetchWithdrawals:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!0,withdraw:!0},timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"D","1w":"W","1M":"M","1y":"Y"},urls:{test:{spot:"https://api-testnet.{hostname}",futures:"https://api-testnet.{hostname}",v2:"https://api-testnet.{hostname}",public:"https://api-testnet.{hostname}",private:"https://api-testnet.{hostname}"},logo:"https://user-images.githubusercontent.com/51840849/76547799-daff5b80-649e-11ea-87fb-3be9bac08954.jpg",api:{spot:"https://api.{hostname}",futures:"https://api.{hostname}",v2:"https://api.{hostname}",public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://www.bybit.com",doc:["https://bybit-exchange.github.io/docs/inverse/","https://bybit-exchange.github.io/docs/linear/","https://github.com/bybit-exchange"],fees:"https://help.bybit.com/hc/en-us/articles/360039261154",referral:"https://partner.bybit.com/b/ccxt"},api:{public:{get:{"v2/public/orderBook/L2":1,"v2/public/kline/list":3,"v2/public/tickers":1,"v2/public/trading-records":1,"v2/public/symbols":1,"v2/public/mark-price-kline":3,"v2/public/index-price-kline":3,"v2/public/premium-index-kline":2,"v2/public/open-interest":1,"v2/public/big-deal":1,"v2/public/account-ratio":1,"v2/public/funding-rate":1,"v2/public/elite-ratio":1,"v2/public/funding/prev-funding-rate":1,"v2/public/risk-limit/list":1,"public/linear/kline":3,"public/linear/recent-trading-records":1,"public/linear/risk-limit":1,"public/linear/funding/prev-funding-rate":1,"public/linear/mark-price-kline":1,"public/linear/index-price-kline":1,"public/linear/premium-index-kline":1,"spot/v1/time":1,"spot/v1/symbols":1,"spot/quote/v1/depth":1,"spot/quote/v1/depth/merged":1,"spot/quote/v1/trades":1,"spot/quote/v1/kline":1,"spot/quote/v1/ticker/24hr":1,"spot/quote/v1/ticker/price":1,"spot/quote/v1/ticker/book_ticker":1,"v2/public/time":1,"v2/public/announcement":1,"option/usdc/openapi/public/v1/order-book":1,"option/usdc/openapi/public/v1/symbols":1,"option/usdc/openapi/public/v1/tick":1,"option/usdc/openapi/public/v1/delivery-price":1,"option/usdc/openapi/public/v1/query-trade-latest":1,"perpetual/usdc/openapi/public/v1/order-book":1,"perpetual/usdc/openapi/public/v1/symbols":1,"perpetual/usdc/openapi/public/v1/tick":1,"perpetual/usdc/openapi/public/v1/kline/list":1,"perpetual/usdc/openapi/public/v1/mark-price-kline":1,"perpetual/usdc/openapi/public/v1/index-price-kline":1,"perpetual/usdc/openapi/public/v1/premium-index-kline":1,"perpetual/usdc/openapi/public/v1/open-interest":1,"perpetual/usdc/openapi/public/v1/big-deal":1,"perpetual/usdc/openapi/public/v1/account-ratio":1,"perpetual/usdc/openapi/public/v1/prev-funding-rate":1,"perpetual/usdc/openapi/public/v1/risk-limit/list":1,"asset/v1/public/deposit/allowed-deposit-list":1,"contract/v3/public/copytrading/symbol/list":1}},private:{get:{"v2/private/order/list":5,"v2/private/order":5,"v2/private/stop-order/list":5,"v2/private/stop-order":1,"v2/private/position/list":25,"v2/private/position/fee-rate":40,"v2/private/execution/list":25,"v2/private/trade/closed-pnl/list":1,"v2/public/risk-limit/list":1,"v2/public/funding/prev-funding-rate":25,"v2/private/funding/prev-funding":25,"v2/private/funding/predicted-funding":25,"v2/private/account/api-key":5,"v2/private/account/lcp":1,"v2/private/wallet/balance":25,"v2/private/wallet/fund/records":25,"v2/private/wallet/withdraw/list":25,"v2/private/exchange-order/list":1,"private/linear/order/list":5,"private/linear/order/search":5,"private/linear/stop-order/list":5,"private/linear/stop-order/search":5,"private/linear/position/list":25,"private/linear/trade/execution/list":25,"private/linear/trade/closed-pnl/list":25,"public/linear/risk-limit":1,"private/linear/funding/predicted-funding":25,"private/linear/funding/prev-funding":25,"futures/private/order/list":5,"futures/private/order":5,"futures/private/stop-order/list":5,"futures/private/stop-order":5,"futures/private/position/list":25,"futures/private/execution/list":25,"futures/private/trade/closed-pnl/list":1,"spot/v1/account":2.5,"spot/v1/order":2.5,"spot/v1/open-orders":2.5,"spot/v1/history-orders":2.5,"spot/v1/myTrades":2.5,"spot/v1/cross-margin/order":10,"spot/v1/cross-margin/accounts/balance":10,"spot/v1/cross-margin/loan-info":10,"spot/v1/cross-margin/repay/history":10,"asset/v1/private/transfer/list":50,"asset/v1/private/sub-member/transfer/list":50,"asset/v1/private/sub-member/member-ids":50,"asset/v1/private/deposit/record/query":50,"asset/v1/private/withdraw/record/query":25,"asset/v1/private/coin-info/query":25,"asset/v1/private/asset-info/query":50,"asset/v1/private/deposit/address":100,"asset/v1/private/universal/transfer/list":50,"contract/v3/private/copytrading/order/list":1,"contract/v3/private/copytrading/position/list":1,"contract/v3/private/copytrading/wallet/balance":1},post:{"v2/private/order/create":30,"v2/private/order/cancel":30,"v2/private/order/cancelAll":300,"v2/private/order/replace":30,"v2/private/stop-order/create":30,"v2/private/stop-order/cancel":30,"v2/private/stop-order/cancelAll":300,"v2/private/stop-order/replace":30,"v2/private/position/change-position-margin":40,"v2/private/position/trading-stop":40,"v2/private/position/leverage/save":40,"v2/private/tpsl/switch-mode":40,"v2/private/position/switch-isolated":2.5,"v2/private/position/risk-limit":2.5,"v2/private/position/switch-mode":2.5,"private/linear/order/create":30,"private/linear/order/cancel":30,"private/linear/order/cancel-all":300,"private/linear/order/replace":30,"private/linear/stop-order/create":30,"private/linear/stop-order/cancel":30,"private/linear/stop-order/cancel-all":300,"private/linear/stop-order/replace":30,"private/linear/position/set-auto-add-margin":40,"private/linear/position/switch-isolated":40,"private/linear/position/switch-mode":40,"private/linear/tpsl/switch-mode":2.5,"private/linear/position/add-margin":40,"private/linear/position/set-leverage":40,"private/linear/position/trading-stop":40,"private/linear/position/set-risk":2.5,"futures/private/order/create":30,"futures/private/order/cancel":30,"futures/private/order/cancelAll":30,"futures/private/order/replace":30,"futures/private/stop-order/create":30,"futures/private/stop-order/cancel":30,"futures/private/stop-order/cancelAll":30,"futures/private/stop-order/replace":30,"futures/private/position/change-position-margin":40,"futures/private/position/trading-stop":40,"futures/private/position/leverage/save":40,"futures/private/position/switch-mode":40,"futures/private/tpsl/switch-mode":40,"futures/private/position/switch-isolated":40,"futures/private/position/risk-limit":2.5,"spot/v1/order":2.5,"spot/v1/cross-margin/loan":10,"spot/v1/cross-margin/repay":10,"asset/v1/private/transfer":150,"asset/v1/private/sub-member/transfer":150,"asset/v1/private/withdraw":50,"asset/v1/private/withdraw/cancel":50,"asset/v1/private/transferable-subs/save":3e3,"asset/v1/private/universal/transfer":1500,"option/usdc/openapi/private/v1/place-order":2.5,"option/usdc/openapi/private/v1/batch-place-order":2.5,"option/usdc/openapi/private/v1/replace-order":2.5,"option/usdc/openapi/private/v1/batch-replace-orders":2.5,"option/usdc/openapi/private/v1/cancel-order":2.5,"option/usdc/openapi/private/v1/batch-cancel-orders":2.5,"option/usdc/openapi/private/v1/cancel-all":2.5,"option/usdc/openapi/private/v1/query-active-orders":2.5,"option/usdc/openapi/private/v1/query-order-history":2.5,"option/usdc/openapi/private/v1/execution-list":2.5,"option/usdc/openapi/private/v1/query-transaction-log":2.5,"option/usdc/openapi/private/v1/query-wallet-balance":2.5,"option/usdc/openapi/private/v1/query-asset-info":2.5,"option/usdc/openapi/private/v1/query-margin-info":2.5,"option/usdc/openapi/private/v1/query-position":2.5,"option/usdc/openapi/private/v1/query-delivery-list":2.5,"option/usdc/openapi/private/v1/query-position-exp-date":2.5,"option/usdc/openapi/private/v1/mmp-modify":2.5,"option/usdc/openapi/private/v1/mmp-reset":2.5,"perpetual/usdc/openapi/private/v1/place-order":2.5,"perpetual/usdc/openapi/private/v1/replace-order":2.5,"perpetual/usdc/openapi/private/v1/cancel-order":2.5,"perpetual/usdc/openapi/private/v1/cancel-all":2.5,"perpetual/usdc/openapi/private/v1/position/leverage/save":2.5,"option/usdc/openapi/private/v1/session-settlement":2.5,"option/usdc/private/asset/account/setMarginMode":2.5,"perpetual/usdc/openapi/public/v1/risk-limit/list":2.5,"perpetual/usdc/openapi/private/v1/position/set-risk-limit":2.5,"contract/v3/private/copytrading/order/create":2.5,"contract/v3/private/copytrading/order/cancel":2.5,"contract/v3/private/copytrading/order/close":2.5,"contract/v3/private/copytrading/position/close":2.5,"contract/v3/private/copytrading/position/set-leverage":2.5,"contract/v3/private/copytrading/wallet/transfer":2.5},delete:{"spot/v1/order":2.5,"spot/v1/order/fast":2.5,"spot/order/batch-cancel":2.5,"spot/order/batch-fast-cancel":2.5,"spot/order/batch-cancel-by-ids":2.5}}},httpExceptions:{403:f},exceptions:{exact:{"-10009":u,"-2013":d,"-2015":a,"-1021":u,"-1004":u,7001:u,10001:u,10002:p,10003:a,10004:a,10005:c,10006:f,10007:a,10010:c,10016:n,10017:u,10018:f,20001:h,20003:d,20004:d,20005:d,20006:d,20007:d,20008:d,20009:d,20010:d,20011:d,20012:d,20013:d,20014:d,20015:d,20016:d,20017:d,20018:d,20019:d,20020:d,20021:d,20022:u,20023:u,20031:u,20070:u,20071:u,20084:u,30001:u,30003:d,30004:d,30005:d,30007:d,30008:d,30009:n,30010:l,30011:c,30012:c,30013:c,30014:d,30015:d,30016:n,30017:d,30018:d,30019:d,30020:d,30021:d,30022:d,30023:d,30024:d,30025:d,30026:d,30027:d,30028:d,30029:d,30030:d,30031:l,30032:d,30033:f,30034:h,30035:f,30036:n,30037:d,30041:n,30042:l,30043:d,30044:d,30045:d,30049:l,30050:n,30051:n,30052:n,30054:n,30057:n,30063:n,30067:l,30068:n,30074:d,30075:d,30078:n,33004:a,34026:n,34036:u,35015:u,130021:l,130074:d,3100116:u,3100198:u,3200300:l},broad:{"unknown orderInfo":h,"invalid api_key":a}},precisionMode:r,options:{createMarketBuyOrderRequiresPrice:!0,defaultType:"swap",defaultSubType:"linear",defaultSettle:"USDT",code:"BTC",recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,brokerId:"CCXT"},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,taker:75e-5,maker:1e-4},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetV2PublicTime(e);return this.safeTimestamp(t,"time_now")}safeNetwork(e){return this.safeString({ETH:"ERC20",TRX:"TRC20"},e,e)}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.privateGetAssetV1PrivateCoinInfoQuery(e),s=this.safeValue(t,"result",[]),i=this.safeValue(s,"rows",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"coin"),a=this.safeCurrencyCode(s),n=this.safeString(t,"name"),o=this.safeValue(t,"chains",[]),c={};for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"chain"),i=this.safeNetwork(s);c[i]={info:t,id:s,network:i,active:void 0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(t,"withdraw_fee"),precision:void 0,limits:{withdraw:{min:this.safeNumber(t,"withdraw_min"),max:void 0},deposit:{min:this.safeNumber(t,"deposit_min"),max:void 0}}}}r[a]={info:t,code:a,id:s,name:n,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber("0.00000001"),limits:{amount:{min:void 0,max:void 0}},networks:c}}return r}async fetchMarkets(e={}){let t;if(this.options.adjustForTimeDifference&&await this.loadTimeDifference(),[t,e]=this.handleMarketTypeAndParams("fetchMarkets",void 0,e),"spot"===t){return await this.fetchSpotMarkets(e)}let s=[this.fetchSwapAndFutureMarkets(e),this.fetchUSDCMarkets(e)];s=await Promise.all(s);const i=s[0],r=s[1];let a=i;return a=this.arrayConcat(a,r),a}async fetchSpotMarkets(e){const t=await this.publicGetSpotV1Symbols(e),s=this.safeValue(t,"result",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeString(t,"baseCurrency"),n=this.safeString(t,"quoteCurrency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=o+"/"+c,h=this.safeValue(t,"showStatus"),l=this.safeNumber(t,"quotePrecision");i.push({id:r,symbol:d,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:h,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"basePrecision"),price:this.safeNumber(t,"minPricePrecision",l)},limits:{leverage:{min:this.parseNumber("1"),max:void 0},amount:{min:this.safeNumber(t,"minTradeQuantity"),max:this.safeNumber(t,"maxTradeQuantity")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minTradeAmount"),max:this.safeNumber(t,"maxTradeAmount")}},info:t})}return i}async fetchSwapAndFutureMarkets(e){const t=await this.publicGetV2PublicSymbols(e),s=this.safeValue(t,"result",[]),i=[],r=this.safeValue(this.options,"fetchMarkets",{}),a=this.safeValue(r,"linear",{USDT:!0});for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),n=this.safeString(t,"base_currency"),o=this.safeString(t,"quote_currency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=d in a;let l=c+"/"+d;let u="swap";c+d!==r&&(u="future");const f=this.safeValue(t,"lot_size_filter",{}),p=this.safeValue(t,"price_filter",{}),m=this.safeValue(t,"leverage_filter",{}),g=this.safeString(t,"status");let y;void 0!==g&&(y="Trading"===g);const b="swap"===u,v="future"===u;let w,S;const k=h?o:n,T=this.safeCurrencyCode(k);if(l=l+":"+T,v){const e=this.safeString(t,"alias").slice(-4),s=e.slice(0,2),i=e.slice(2,4),r=this.yyyymmdd(this.milliseconds()).split("-");S=this.safeValue(r,0)+"-"+s+"-"+i+"T00:00:00.000Z",w=this.parse8601(S),l=l+"-"+this.yymmdd(w)}const O=!h,_=O?this.safeNumber(f,"min_trading_qty"):this.parseNumber("1");i.push({id:r,symbol:l,base:c,quote:d,settle:T,baseId:n,quoteId:o,settleId:k,type:u,spot:!1,margin:void 0,swap:b,future:v,option:!1,active:y,contract:!0,linear:h,inverse:O,taker:this.safeNumber(t,"taker_fee"),maker:this.safeNumber(t,"maker_fee"),contractSize:_,expiry:w,expiryDatetime:S,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(f,"qty_step"),price:this.safeNumber(p,"tick_size")},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(m,"max_leverage",1)},amount:{min:this.safeNumber(f,"min_trading_qty"),max:this.safeNumber(f,"max_trading_qty")},price:{min:this.safeNumber(p,"min_price"),max:this.safeNumber(p,"max_price")},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchUSDCMarkets(e){const t=await this.publicGetOptionUsdcOpenapiPublicV1Symbols(e),s=await this.publicGetPerpetualUsdcOpenapiPublicV1Symbols(e),i=this.safeValue(t,"result",[]),r=this.safeValue(i,"dataList",[]),a=this.safeValue(s,"result",[]),n=this.arrayConcat(r,a),o=[];for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"symbol"),i=this.safeString(t,"baseCoin"),r=this.safeString(t,"quoteCoin");let a=this.safeString(t,"settleCoin");const c=this.safeCurrencyCode(i),d=this.safeCurrencyCode(r);let h=this.safeCurrencyCode(a),l=c+"/"+d,u="swap";void 0!==a&&(u="option");const f="swap"===u,p="option"===u,m=this.safeValue(t,"leverage_filter",{}),g=this.safeString(t,"status");let y,b,v,w,S;if(void 0!==g&&(y="ONLINE"===g),void 0===h&&(a="USDC",h="USDC"),l=l+":"+h,p){b=this.safeInteger(t,"deliveryTime"),v=this.iso8601(b);const e=s.split("-");w=this.safeString(e,2);const i=this.safeString(e,3);l=l+"-"+this.yymmdd(b)+":"+w+":"+i,"P"===i?S="put":"C"===i&&(S="call")}o.push({id:s,symbol:l,base:c,quote:d,settle:h,baseId:i,quoteId:r,settleId:a,type:u,spot:!1,margin:void 0,swap:f,future:!1,option:p,active:y,contract:!0,linear:true,inverse:!1,taker:this.safeNumber2(t,"taker_fee","takerFeeRate"),maker:this.safeNumber2(t,"maker_fee","makerFeeRate"),contractSize:this.parseNumber("1"),expiry:b,expiryDatetime:v,strike:w,optionType:S,precision:{amount:this.safeNumber2(t,"minOrderSizeIncrement","qtyStep"),price:this.safeNumber(t,"tickSize")},limits:{leverage:{min:this.safeNumber(m,"minLeverage",1),max:this.safeNumber(m,"maxLeverage",1)},amount:{min:this.safeNumber2(t,"minOrderSize","minTradingQty"),max:this.safeNumber2(t,"maxOrderSize","maxTradingQty")},price:{min:this.safeNumber2(t,"minOrderPrice","minPrice"),max:this.safeNumber2(t,"maxOrderPrice","maxPrice")},cost:{min:void 0,max:void 0}},info:t})}return o}parseTicker(e,t){const s=this.safeInteger(e,"time"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString2(e,"last_price","lastPrice"),n=this.safeString2(e,"prev_price_24h","openPrice");let o=this.safeString2(e,"price_24h_pcnt","change24h");o=y.stringMul(o,"100");let c=this.safeString2(e,"turnover_24h","turnover24h");void 0===c&&(c=this.safeString(e,"volume"));let d=this.safeString2(e,"volume_24h","volume24h");void 0===d&&(d=this.safeString(e,"quoteVolume"));let h=this.safeString2(e,"bid_price","bid");void 0===h&&(h=this.safeString(e,"bestBidPrice"));let l=this.safeString2(e,"ask_price","ask");void 0===l&&(l=this.safeString(e,"bestAskPrice"));let u=this.safeString2(e,"high_price_24h","high24h");void 0===u&&(u=this.safeString(e,"highPrice"));let f=this.safeString2(e,"low_price_24h","low24h");return void 0===f&&(f=this.safeString(e,"lowPrice")),this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:u,low:f,bid:h,bidVolume:this.safeString(e,"bidSize"),ask:l,askVolume:this.safeString(e,"askSize"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:c,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e);let i;const r="USDC"===s.settle;i=s.spot?"publicGetSpotQuoteV1Ticker24hr":r?s.option?"publicGetOptionUsdcOpenapiPublicV1Tick":"publicGetPerpetualUsdcOpenapiPublicV1Tick":"publicGetV2PublicTickers";const a={symbol:s.id},n=await this[i](this.extend(a,t)),o=this.safeValue(n,"result",[]);let c;c=Array.isArray(o)?this.safeValue(o,0):o;return this.parseTicker(c,s)}async fetchTickers(e,t={}){let s,i,r,a;if(await this.loadMarkets(),void 0!==e){const t=this.safeValue(e,0);i=this.market(t),s=i.type,r="USDC"===i.settle}else if([s,t]=this.handleMarketTypeAndParams("fetchTickers",i,t),"spot"!==s){let e=this.safeString(this.options,"defaultSettle","USDT");e=this.safeString2(t,"settle","defaultSettle",r),t=this.omit(t,["settle","defaultSettle"]),r="USDC"===e}if("spot"===s)a="publicGetSpotQuoteV1Ticker24hr";else{if(r)throw new m(this.id+" fetchTickers() is not supported for USDC markets");a="publicGetV2PublicTickers"}const n=await this[a](t),o=this.safeValue(n,"result",[]),c={};for(let e=0;e<o.length;e++){const t=this.parseTicker(o[e]);c[t.symbol]=t}return this.filterByArray(c,"symbol",e)}parseOHLCV(e,t){if(Array.isArray(e))return[this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)];let s=this.safeTimestamp2(e,"open_time","openTime");return void 0===s&&(s=this.safeTimestamp(e,"start_at")),[s,this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber2(e,"volume","turnover")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price");r=this.omit(r,"price");const c={symbol:a.id},d=this.parseTimeframe(t),h=this.seconds();let l,u;if(void 0===s){if(void 0===i)throw new o(this.id+" fetchOHLCV() requires a since argument or a limit argument");l=h-i*d}else l=parseInt(s/1e3);void 0!==i&&(c.limit=i);let f="interval",p="from";const g="USDC"===a.settle;if(a.spot)u="publicGetSpotQuoteV1Kline";else if(a.contract&&!g)if(a.linear){const e={mark:"publicGetPublicLinearMarkPriceKline",index:"publicGetPublicLinearIndexPriceKline",premium:"publicGetPublicLinearPremiumIndexKline"};u=this.safeValue(e,n,"publicGetPublicLinearKline")}else{const e={mark:"publicGetV2PublicMarkPriceKline",index:"publicGetV2PublicIndexPriceKline",premium:"publicGetV2PublicPremiumPriceKline"};u=this.safeValue(e,n,"publicGetV2PublicKlineList")}else{if(a.option)throw new m(this.id+" fetchOHLCV() is not supported for USDC options markets");f="period",p="startTime";const e={mark:"publicGetPerpetualUsdcOpenapiPublicV1MarkPriceKline",index:"publicGetPerpetualUsdcOpenapiPublicV1IndexPriceKline",premium:"publicGetPerpetualUsdcOpenapiPublicV1PremiumPriceKline"};u=this.safeValue(e,n,"publicGetPerpetualUsdcOpenapiPublicV1KlineList")}c[f]=a.spot?t:this.timeframes[t],c[p]=l;const y=await this[u](this.extend(c,r)),b=this.safeValue(y,"result",{});return this.parseOHLCVs(b,a,t,s,i)}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r="USDC"===s.settle;let a,n;r?(a="publicGetPerpetualUsdcOpenapiPublicV1PrevFundingRate",n="publicGetPerpetualUsdcOpenapiPublicV1Tick"):(a=s.linear?"publicGetPublicLinearFundingPrevFundingRate":"publicGetV2PublicFundingPrevFundingRate",n="publicGetV2PublicTickers");const o=await this[n](this.extend(i,t)),c=await this[a](this.extend(i,t)),d=this.safeValue(c,"result"),h=this.safeNumber2(d,"funding_rate","fundingRate");let l=this.parse8601(this.safeString(d,"funding_rate_timestamp"));void 0===l&&(l=this.safeTimestamp2(d,"funding_rate_timestamp",l),void 0===l&&(l=this.safeInteger(d,"fundingRateTimestamp")));const u=this.milliseconds(),f=r?this.safeValue(o,"result",{}):this.safeValue(o,"result",[]),p=r?this.safeNumber(f,"markPrice"):this.safeNumber(f[0],"mark_price"),m=r?this.safeNumber(f,"indexPrice"):this.safeNumber(f[0],"index_price"),g=r?this.safeNumber(f,"predictedFundingRate"):this.safeNumber(f[0],"predicted_funding_rate"),y=r?this.safeString(f,"nextFundingTime"):this.safeString(f[0],"next_funding_time");return{info:d,symbol:e,markPrice:p,indexPrice:m,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:u,datetime:this.iso8601(u),fundingRate:h,fundingTimestamp:l,fundingDatetime:this.iso8601(l),nextFundingRate:g,nextFundingTimestamp:this.parse8601(y),nextFundingDatetime:y,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchIndexOHLCV(e,t="1m",s,i,r={}){if(void 0===s&&void 0===i)throw new o(this.id+" fetchIndexOHLCV() requires a since argument or a limit argument");return await this.fetchOHLCV(e,t,s,i,this.extend({price:"index"},r))}async fetchMarkOHLCV(e,t="1m",s,i,r={}){if(void 0===s&&void 0===i)throw new o(this.id+" fetchMarkOHLCV() requires a since argument or a limit argument");return await this.fetchOHLCV(e,t,s,i,this.extend({price:"mark"},r))}async fetchPremiumIndexOHLCV(e,t="1m",s,i,r={}){if(void 0===s&&void 0===i)throw new o(this.id+" fetchPremiumIndexOHLCV() requires a since argument or a limit argument");return await this.fetchOHLCV(e,t,s,i,this.extend({price:"premiumIndex"},r))}parseTrade(e,t){const s=this.safeString2(e,"id","exec_id"),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t)).symbol;let a=this.safeString2(e,"qty","exec_qty");void 0===a&&(a=this.safeString(e,"orderQty"));let n=this.safeString2(e,"exec_price","price");void 0===n&&(n=this.safeString(e,"orderPrice"));const o=this.safeString(e,"exec_value");let c=this.parse8601(this.safeString(e,"time"));void 0===c&&(c=this.safeInteger2(e,"trade_time_ms","time"));let d=this.safeStringLower(e,"side");if(void 0===d){const t=this.safeValue(e,"isBuyer");void 0!==t&&(d=t?"buy":"sell")}const h=this.safeValue(e,"isMaker");let l;if(void 0!==h)l=h?"maker":"taker";else{l="AddedLiquidity"===this.safeString(e,"last_liquidity_ind")?"maker":"taker"}const u=this.safeString(e,"exec_fee");let f;if(void 0!==u){f={cost:u,currency:t.inverse?t.base:t.quote,rate:this.safeString(e,"fee_rate")}}return this.safeTrade({id:s,info:e,timestamp:c,datetime:this.iso8601(c),symbol:r,order:this.safeString2(e,"order_id","orderId"),type:this.safeStringLower(e,"order_type"),side:d,takerOrMaker:l,price:n,amount:a,cost:o,fee:f},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);let a;const n={symbol:r.id},o="USDC"===r.settle;"spot"===r.type?a="publicGetSpotQuoteV1Trades":o?(a="publicGetOptionUsdcOpenapiPublicV1QueryTradeLatest",n.category=r.option?"OPTION":"PERPETUAL"):a=r.linear?"publicGetPublicLinearRecentTradingRecords":"publicGetV2PublicTradingRecords",void 0!==s&&(n.limit=s);const c=await this[a](this.extend(n,i));let d=this.safeValue(c,"result",{});return Array.isArray(d)||(d=this.safeValue(d,"dataList",[])),this.parseTrades(d,r,t,s)}parseOrderBook(e,t,s,i="bids",r="asks",a=0,o=1){if(this.market(t).spot)return super.parseOrderBook(e,t,s,i,r,a,o);const c=[],d=[];for(let t=0;t<e.length;t++){const s=e[t],i=this.safeString(s,"side");if("Buy"===i)c.push(this.parseBidAsk(s,a,o));else{if("Sell"!==i)throw new n(this.id+" parseOrderBook() encountered an unrecognized bidask format: "+this.json(s));d.push(this.parseBidAsk(s,a,o))}}return{symbol:t,bids:this.sortBy(c,0,!0),asks:this.sortBy(d,0),timestamp:s,datetime:this.iso8601(s),nonce:void 0}}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a="USDC"===i.settle;let n;n=i.spot?"publicGetSpotQuoteV1Depth":a?i.option?"publicGetOptionUsdcOpenapiPublicV1OrderBook":"publicGetPerpetualUsdcOpenapiPublicV1OrderBook":"publicGetV2PublicOrderBookL2",void 0!==t&&(r.limit=t);const o=await this[n](this.extend(r,s)),c=this.safeValue(o,"result",[]);let d=this.safeTimestamp(o,"time_now");void 0===d&&(d=this.safeInteger(o,"time"));const h=i.spot?"bids":"Buy",l=i.spot?"asks":"Sell",u=i.spot?0:"price",f=i.spot?1:"size";return this.parseOrderBook(c,e,d,h,l,u,f)}parseBalance(e){const t={info:e},s=this.safeValue(e,"result",{}),i=this.safeValue(s,"balances");if(Array.isArray(i))for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"coin"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"availableBalance"),n.used=this.safeString(s,"locked"),n.total=this.safeString(s,"total"),t[a]=n}else if("walletBalance"in s){const e="USDC",i=this.account();i.free=this.safeString(s,"availableBalance"),i.total=this.safeString(s,"walletBalance"),t[e]=i}else{const e=Object.keys(s);for(let i=0;i<e.length;i++){const r=e[i],a=s[r],n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"available_balance"),o.total=this.safeString(a,"wallet_balance"),t[n]=o}}return this.safeBalance(t)}async fetchBalance(e={}){const t={};let s,i;if([s,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),"spot"===s)i="privateGetSpotV1Account";else{let s=this.safeString(this.options,"defaultSettle");s=this.safeString2(e,"settle","defaultSettle",s),e=this.omit(e,["settle","defaultSettle"]);if("USDC"===s)i="privatePostOptionUsdcOpenapiPrivateV1QueryWalletBalance";else{i="privateGetV2PrivateWalletBalance";const s=this.safeString2(e,"coin","code");if(e=this.omit(e,["coin","code"]),void 0!==s){const e=this.currency(s);t.coin=e.id}}}await this.loadMarkets();const r=await this[i](this.extend(t,e));return this.parseBalance(r)}parseOrderStatus(e){return this.safeString({Created:"open",Rejected:"rejected",New:"open",Partiallyfilled:"open",Filled:"closed",Cancelled:"canceled",Pendingcancel:"canceling",CREATED:"open",REJECTED:"rejected",NEW:"open",PENDING_NEW:"open",PARTIALLYFILLED:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDINGCANCEL:"canceling",PENDING_CANCEL:"canceling",Active:"open",Untriggered:"open",Triggered:"closed",Deactivated:"canceled"},e,e)}parseTimeInForce(e){return this.safeString({GoodTillCancel:"GTC",ImmediateOrCancel:"IOC",FillOrKill:"FOK",PostOnly:"PO"},e,e)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol;let r=this.parse8601(this.safeStringN(e,["created_at","created_time","create_time","timestamp"]));void 0===r&&(r=this.safeNumber2(e,"time","transactTime"),void 0===r&&(r=this.safeIntegerProduct(e,"createdAt",.001)));const a=this.safeStringN(e,["order_id","stop_order_id","orderId"]),n=this.safeStringLowerN(e,["order_type","type","orderType"]),o=this.safeString2(e,"price","orderPrice"),c=this.safeString2(e,"average_price","avgPrice"),d=this.safeStringN(e,["qty","origQty","orderQty"]),h=this.safeString2(e,"cum_exec_value","cumExecValue"),l=this.safeStringN(e,["cum_exec_qty","executedQty","cumExecQty"]),u=this.safeString2(e,"leaves_qty","leavesQty");let f=this.safeTimestamp(e,"last_exec_time");0===f?f=void 0:void 0===f&&(f=this.parse8601(this.safeStringN(e,["updated_time","updated_at","update_time"])),void 0===f&&(f=this.safeNumber(e,"updateTime")));const p=this.safeStringN(e,["order_status","stop_order_status","status","orderStatus"]),m=this.parseOrderStatus(p),g=this.safeStringLower(e,"side");let y;if(this.safeValue(t,"contract")){const s=this.safeString2(e,"cum_exec_fee","cumExecFee");if(void 0!==s){y={cost:s,currency:t.linear?t.quote:t.base}}}let b=this.safeString2(e,"order_link_id","orderLinkId");void 0!==b&&b.length<1&&(b=void 0);const v=this.parseTimeInForce(this.safeString2(e,"time_in_force","timeInForce")),w=this.safeStringN(e,["trigger_price","stop_px","stopPrice","triggerPrice"]),S="PO"===v;return this.safeOrder({info:e,id:a,clientOrderId:b,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:f,symbol:i,type:n,timeInForce:v,postOnly:S,side:g,price:o,stopPrice:w,amount:d,cost:h,average:c,filled:l,remaining:u,status:m,fee:y,trades:void 0},t)}async fetchOrder(e,t,s={}){let i,r;if(await this.loadMarkets(),void 0!==t&&(i=this.market(t)),[r,s]=this.handleMarketTypeAndParams("fetchOrder",i,s),"spot"!==r&&void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument for "+r+" markets");if("spot"===r){const t={orderId:e},i=await this.privateGetSpotV1Order(this.extend(s,t)),r=this.safeValue(i,"result",{});return this.parseOrder(r)}const a="USDC"===i.settle,n=this.safeString(s,"stop_order_id"),c=this.safeValue(s,"stop",!1),d=this.safeStringLower(s,"orderType");if(void 0===n){let t;t=c||void 0!==n||"stop"===d||"conditional"===d?"stop_order_id":a?"orderId":"order_id",s[t]=e}if(a||i.future||i.inverse)throw new m(this.id+" fetchOrder() supports spot markets and linear non-USDC perpetual swap markets only");{const i=await this.fetchOrders(t,void 0,void 0,s),r=this.safeValue(i,0);if(void 0===r)throw new h(this.id+" fetchOrder() order "+e+" not found");return r}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);e=n.symbol;const o="USDC"===n.settle;return n.spot?await this.createSpotOrder(e,t,s,i,r,a):o?await this.createUsdcOrder(e,t,s,i,r,a):await this.createContractOrder(e,t,s,i,r,a)}async createSpotOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);if("market"===t&&"buy"===s&&this.options.createMarketBuyOrderRequiresPrice){const e=this.safeNumber(a,"cost");if(a=this.omit(a,"cost"),void 0===r&&void 0===e)throw new d(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");i=void 0!==e?e:i*r}const o=t.toUpperCase(),c={symbol:n.id,side:this.capitalize(s),type:o,timeInForce:"GTC",qty:this.amountToPrecision(e,i)};if("LIMIT"===o||"LIMIT_MAKER"===o){if(void 0===r)throw new d(this.id+" createOrder requires a price argument for a "+t+" order");c.price=parseFloat(this.priceToPrecision(e,r))}this.isPostOnly("MARKET"===o,"LIMIT_MAKER"===t,a)&&(c.type="LIMIT_MAKER");const h=this.safeString2(a,"clientOrderId","orderLinkId");void 0!==h&&(c.orderLinkId=h),a=this.omit(a,["clientOrderId","orderLinkId","postOnly"]);const l=this.safeString(this.options,"brokerId");void 0!==l&&(c.agentSource=l);const u=await this.privatePostSpotV1Order(this.extend(c,a)),f=this.safeValue(u,"result",{});return this.parseOrder(f)}async createUsdcOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);if("market"===t)throw new m(this.id+"createOrder does not allow market orders for "+e+" markets");if(void 0===r&&"limit"===t)throw new o(this.id+" createOrder requires a price argument for limit orders");const c=t.toLowerCase(),d={symbol:n.id,side:this.capitalize(s),orderType:this.capitalize(c),timeInForce:"GoodTillCancel",orderQty:this.amountToPrecision(e,i)},h="market"===c;void 0!==("limit"===c)&&(d.orderPrice=this.priceToPrecision(e,r));const l=this.safeString(a,"time_in_force"),u=this.safeStringLower(a,"timeInForce");if(this.isPostOnly(h,"PostOnly"===l,a)?d.time_in_force="PostOnly":"gtc"===u?d.time_in_force="GoodTillCancel":"fok"===u?d.time_in_force="FillOrKill":"ioc"===u&&(d.time_in_force="ImmediateOrCancel"),n.swap){const t=this.safeValue2(a,"stopPrice","triggerPrice"),s=this.safeValue(a,"stopLossPrice",t),i=void 0!==s,r=this.safeValue(a,"takeProfitPrice");if(i||void 0!==r){d.orderFilter="StopOrder",d.trigger_by="LastPrice";const t=i?s:r,a=this.priceToPrecision(e,t);d.triggerPrice=a;const o=this.numberToString(n.precision.price);d.basePrice=i?y.stringSub(a,o):y.stringAdd(a,o)}else d.orderFilter="Order"}const f=this.safeString(a,"clientOrderId");void 0!==f?d.orderLinkId=f:n.option&&(d.orderLinkId=this.uuid16()),a=this.omit(a,["stopPrice","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const p=n.option?"privatePostOptionUsdcOpenapiPrivateV1PlaceOrder":"privatePostPerpetualUsdcOpenapiPrivateV1PlaceOrder",g=await this[p](this.extend(d,a)),b=this.safeValue(g,"result",{});return this.parseOrder(b)}async createContractOrder(e,t,s,i,r,a={}){await this.loadMarkets();const c=this.market(e);if(void 0===r&&"limit"===t)throw new o(this.id+" createOrder requires a price argument for limit orders");i=this.amountToPrecision(e,i),i=c.linear?parseFloat(i):parseInt(i);const d=t.toLowerCase(),h={symbol:c.id,side:this.capitalize(s),order_type:this.capitalize(d),time_in_force:"GoodTillCancel",qty:i};if(c.future){const e=this.safeInteger(a,"position_idx",0);h.position_idx=e,a=this.omit(a,"position_idx")}c.linear&&(h.reduce_only=this.safeValue2(a,"reduce_only","reduceOnly",!1),h.close_on_trigger=!1);const l="market"===d;if("limit"===d){if(void 0===r)throw new n(this.id+" createOrder() requires price argument for limit orders");h.price=parseFloat(this.priceToPrecision(e,r))}const u=this.safeString(a,"time_in_force"),f=this.safeStringLower(a,"timeInForce");this.isPostOnly(l,"PostOnly"===u,a)?h.time_in_force="PostOnly":"gtc"===f?h.time_in_force="GoodTillCancel":"fok"===f?h.time_in_force="FillOrKill":"ioc"===f&&(h.time_in_force="ImmediateOrCancel");const p=this.safeValue2(a,"stopPrice","triggerPrice"),m=this.safeValue(a,"stopLossPrice",p),g=void 0!==m,b=this.safeValue(a,"takeProfitPrice"),v=g||void 0!==b;if(v){h.trigger_by="LastPrice";const t=g?m:b,s=this.priceToPrecision(e,t);h.stop_px=parseFloat(s);const i=this.numberToString(c.precision.price),r=g?y.stringSub(s,i):y.stringAdd(s,i);h.base_price=parseFloat(r)}const w=this.safeString(a,"clientOrderId");let S;void 0!==w&&(h.order_link_id=w),a=this.omit(a,["stop_px","stopPrice","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","postOnly","reduceOnly","clientOrderId"]),S=c.future?v?"privatePostFuturesPrivateStopOrderCreate":"privatePostFuturesPrivateOrderCreate":c.linear?v?"privatePostPrivateLinearStopOrderCreate":"privatePostPrivateLinearOrderCreate":v?"privatePostV2PrivateStopOrderCreate":"privatePostV2PrivateOrderCreate";const k=await this[S](this.extend(h,a)),T=this.safeValue(k,"result",{});return this.parseOrder(T,c)}async editUsdcOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t),c={symbol:o.id,orderId:e};void 0!==r&&(c.orderQty=this.amountToPrecision(t,r)),void 0!==a&&(c.orderPrice=this.priceToPrecision(t,a));const d=o.option?"privatePostOptionUsdcOpenApiPrivateV1ReplaceOrder":"privatePostPerpetualUsdcOpenApiPrivateV1ReplaceOrder";return{info:await this[d](this.extend(c,n)),id:e}}async editContractOrder(e,t,s,i,r,a,n={}){if(void 0===t)throw new o(this.id+" editOrder() requires an symbol argument");await this.loadMarkets();const c=this.market(t),d={symbol:c.id},h=this.safeString(n,"orderType"),l=this.safeValue(n,"stop",!1)||"stop"===h||"conditional"===h;n=this.omit(n,["orderType","stop"]);let u;d[l?"stop_order_id":"order_id"]=e,void 0!==r&&(d.p_r_qty=this.amountToPrecision(t,r)),void 0!==a&&(d.p_r_price=this.priceToPrecision(t,a)),u=c.linear?l?"privatePostPrivateLinearStopOrderReplace":"privatePostPrivateLinearOrderReplace":c.future?l?"privatePostFuturesPrivateStopOrderReplace":"privatePostFuturesPrivateOrderReplace":l?"privatePostV2PrivateSpotOrderReplace":"privatePostV2PrivateOrderReplace";const f=await this[u](this.extend(d,n)),p=this.safeValue(f,"result",{});return{info:f,id:this.safeString2(p,"order_id","stop_order_id"),order_id:this.safeString(p,"order_id"),stop_order_id:this.safeString(p,"stop_order_id")}}async editOrder(e,t,s,i,r,a,n={}){if(void 0===t)throw new o(this.id+" editOrder() requires an symbol argument");await this.loadMarkets();const c=this.market(t),d="USDC"===c.settle;if(c.spot)throw new m(this.id+" editOrder() does not support spot markets");return d?await this.editUsdcOrder(e,t,s,i,r,a,n):await this.editContractOrder(e,t,s,i,r,a,n)}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={symbol:i.id},a=this.safeStringLower(s,"orderType"),n=this.safeValue(s,"stop",!1)||"stop"===a||"conditional"===a;s=this.omit(s,["orderType","stop"]);const c="USDC"===i.settle;let d;i.spot?(d="privateDeleteSpotV1Order",r.orderId=e):c?(r.orderId=e,i.option?d="privatePostOptionUsdcOpenapiPrivateV1CancelOrder":(d="privatePostPerpetualUsdcOpenapiPrivateV1CancelOrder",r.orderFilter=n?"StopOrder":"Order")):d=i.linear?n?"privatePostPrivateLinearStopOrderCancel":"privatePostPrivateLinearOrderCancel":i.swap?n?"privatePostV2PrivateStopOrderCancel":"privatePostV2PrivateOrderCancel":n?"privatePostFuturesPrivateStopOrderCancel":"privatePostFuturesPrivateOrderCancel",i.contract&&!c&&(n?r.stop_order_id=e:r.order_id=e);const h=await this[d](this.extend(r,s)),l=this.safeValue(h,"result",{});return this.parseOrder(l,i)}async cancelAllOrders(e,t={}){let s,i,r;if(await this.loadMarkets(),void 0!==e)s=this.market(e),i="USDC"===s.settle;else{let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(t,"settle","defaultSettle",e),t=this.omit(t,["settle","defaultSettle"]),i="USDC"===e}if([r,t]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),!i&&void 0===e)throw new o(this.id+" cancelAllOrders() requires a symbol argument for "+r+" markets");const a={};i||(a.symbol=s.id);const n=this.safeStringLower(t,"orderType"),c=this.safeValue(t,"stop",!1)||"stop"===n||"conditional"===n;let d;t=this.omit(t,["stop","orderType"]),d="spot"===r?"privateDeleteSpotOrderBatchCancel":i?"option"===r?"privatePostOptionUsdcOpenapiPrivateV1CancelAll":"privatePostPerpetualUsdcOpenapiPrivateV1CancelAll":"future"===r?c?"privatePostFuturesPrivateStopOrderCancelAll":"privatePostFuturesPrivateOrderCancelAll":s.linear?c?"privatePostPrivateLinearStopOrderCancelAll":"privatePostPrivateLinearOrderCancelAll":c?"privatePostV2PrivateStopOrderCancelAll":"privatePostV2PrivateOrderCancelAll";const h=await this[d](this.extend(a,t)),l=this.safeValue(h,"result",[]);return Array.isArray(l)?this.parseOrders(l,s):h}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);if(r.spot||"USDC"===r.settle)throw new m(this.id+" fetchOrders() does not support "+r.type+" markets or USDC markets, use exchange.fetchOpenOrders () and exchange.fetchClosedOrders () instead");let a;const n=this.safeValue(i,"stop",!1),c=this.safeStringLower(i,"orderType"),d=this.safeString(i,"stop_order_id"),h=n||void 0!==d||"stop"===c||"conditional"===c;i=this.omit(i,["orderType","stop","orderType"]),a=r.linear?h?"privateGetPrivateLinearStopOrderList":"privateGetPrivateLinearOrderList":r.future?h?"privateGetFuturesPrivateStopOrderList":"privateGetFuturesPrivateOrderList":h?"privateGetV2PrivateStopOrderList":"privateGetV2PrivateOrderList";const l={symbol:r.id};void 0!==s&&(l.limit=s);const u=await this[a](this.extend(l,i)),f=this.safeValue(u,"result",{}),p=this.safeValue(f,"data",[]);return this.parseOrders(p,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r,a,n;if(void 0!==e)r=this.market(e),a="USDC"===r.settle;else{let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(i,"settle","defaultSettle",e),i=this.omit(i,["settle","defaultSettle"]),a="USDC"===e}if([n,i]=this.handleMarketTypeAndParams("fetchClosedOrders",r,i),("swap"===n||"future"===n)&&!a){if(void 0===e)throw new o(this.id+" fetchClosedOrders requires a symbol argument for "+e+" markets");const r=this.safeStringLower(i,"orderType"),a=this.safeValue(i,"stop",!1)||"stop"===r||"conditional"===r;let n;i=this.omit(i,["orderType","stop"]),n=a?["Active","Triggered","Cancelled","Rejected","Deactivated"]:["Rejected","Filled","Cancelled"];const c=n.join(","),d=this.safeString2(i,"order_status","status",c);return(i=this.omit(i,["order_status","status"])).order_status=d,await this.fetchOrders(e,t,s,i)}const c={};let d;"spot"===n?d="privateGetSpotV1HistoryOrders":(d="privatePostOptionUsdcOpenapiPrivateV1QueryOrderHistory",c.category="swap"===n?"perpetual":"option");const h=await this[d](this.extend(c,i));let l=this.safeValue(h,"result",[]);return Array.isArray(l)||(l=this.safeValue(l,"dataList",[])),this.parseOrders(l,r,t,s)}async fetchOpenOrders(e,t,s,i={}){let r,a,n;if(void 0!==e)r=this.market(e),a="USDC"===r.settle;else{let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(i,"settle","defaultSettle",e),i=this.omit(i,["settle","defaultSettle"]),a="USDC"===e}[n,i]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i);const c={};let d;if("swap"!==n&&"future"!==n||a)"spot"===n?d="privateGetSpotV1OpenOrders":(d="privatePostOptionUsdcOpenapiPrivateV1QueryActiveOrders",c.category="swap"===n?"perpetual":"option");else{if(void 0===e)throw new o(this.id+" fetchOpenOrders requires a symbol argument for "+e+" markets");c.symbol=r.id;const t=this.safeStringLower(i,"orderType"),s=this.safeValue(i,"stop",!1)||"stop"===t||"conditional"===t;i=this.omit(i,["stop","orderType"]),d=r.future?s?"privateGetFuturesPrivateStopOrder":"privateGetFuturesPrivateOrder":r.linear?s?"privateGetPrivateLinearStopOrderSearch":"privateGetPrivateLinearOrderSearch":s?"privateGetV2PrivateStopOrder":"privateGetV2PrivateOrder"}const h=await this[d](this.extend(c,i));let l=this.safeValue(h,"result",[]);if(!Array.isArray(l)){const e=this.safeValue(l,"dataList");if(void 0===e)return this.parseOrder(l,r);l=e}return this.parseOrders(l,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){const a={order_id:e};return await this.fetchMyTrades(t,s,i,this.extend(a,r))}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r={};let a;const n=this.safeString(i,"order_id");void 0!==n&&(r.order_id=n,i=this.omit(i,"order_id")),a=this.market(e);if("USDC"===a.settle)throw new m(this.id+" fetchMyTrades() is not supported for market "+e);let c;r.symbol=a.id,void 0!==t&&(r.start_time=t),void 0!==s&&(r.limit=s),c=a.spot?"privateGetSpotV1MyTrades":a.future?"privateGetFuturesPrivateExecutionList":a.linear?"privateGetPrivateLinearTradeExecutionList":"privateGetV2PrivateExecutionList";const d=await this[c](this.extend(r,i));let h=this.safeValue(d,"result",{});return Array.isArray(h)||(h=this.safeValue2(h,"trade_list","data",[])),this.parseTrades(h,a,t,s)}parseDepositAddress(e,t){const s=this.safeString(e,"address_deposit"),i=this.safeString(e,"tag_deposit"),r=this.safeString(t,"code"),a=this.safeString(e,"chain");return this.checkAddress(s),{currency:r,address:s,tag:i,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let s=this.currency(e);const i={coin:s.id},r=await this.privateGetAssetV1PrivateDepositAddress(this.extend(i,t)),a=this.safeValue(r,"result",[]),n=this.safeValue(a,"chains",[]),o=this.safeString(a,"coin");s=this.currency(o);const c=this.parseDepositAddresses(n,[e],!1,{currency:s.id});return this.indexBy(c,"network")}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network"),i=this.safeValue(this.options,"networks",{}),r=this.safeString(i,s,s);t=this.omit(t,"network");const a=await this.fetchDepositAddressesByNetwork(e,t);let n;if(void 0===r){if(n=this.safeValue(a,e),void 0===n){const t=this.safeString(i,e,e);if(n=this.safeValue(a,t),void 0===n){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(n=this.safeValue(a,t),void 0===n){const t=Object.values(a);if(n=this.safeValue(t,0),void 0===n)throw new g(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return n}if(n=this.safeValue(a,r),void 0===n)throw new g(this.id+" fetchDepositAddress() cannot find "+r+" deposit address for "+e);return n}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={wallet_fund_type:"Deposit"};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.start_date=this.yyyymmdd(t)),void 0!==s&&(r.limit=s);const n=await this.privateGetV2PrivateWalletFundRecords(this.extend(r,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,a,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.start_date=this.yyyymmdd(t)),void 0!==s&&(r.limit=s);const n=await this.privateGetV2PrivateWalletWithdrawList(this.extend(r,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"data",[]);return this.parseTransactions(c,a,t,s,{type:"withdrawal"})}parseTransactionStatus(e){return this.safeString({ToBeConfirmed:"pending",UnderReview:"pending",Pending:"pending",Success:"ok",CancelByUser:"canceled",Reject:"rejected",Expire:"expired"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"coin"),i=this.safeCurrencyCode(s,t),r=this.parse8601(this.safeString2(e,"submited_at","exec_time")),a=this.parse8601(this.safeString(e,"updated_at")),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeString(e,"address"),c=this.safeNumber(e,"fee"),d=this.safeStringLower(e,"type");let h;return void 0!==c&&(h={cost:c,currency:i}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"tx_id"),timestamp:r,datetime:this.iso8601(r),network:void 0,address:o,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:d,amount:this.safeNumber(e,"amount"),currency:i,status:n,updated:a,fee:h}}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.start_date=this.yyyymmdd(t)),void 0!==s&&(r.limit=s);const n=await this.privateGetV2PrivateWalletFundRecords(this.extend(r,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"data",[]);return this.parseLedger(c,a,t,s)}parseLedgerEntry(e,t){const s=this.safeString(e,"coin"),i=this.safeCurrencyCode(s,t),r=this.safeNumber(e,"amount"),a=this.safeNumber(e,"wallet_balance"),n=r<0?"out":"in";let o;if(void 0!==a&&void 0!==r){const e="out"===n?r:-r;o=this.sum(a,e)}const c=this.parse8601(this.safeString(e,"exec_time")),d=this.parseLedgerEntryType(this.safeString(e,"type")),h=this.safeString(e,"id"),l=this.safeString(e,"tx_id");return{id:h,currency:i,account:this.safeString(e,"wallet_id"),referenceAccount:void 0,referenceId:l,status:void 0,amount:r,before:o,after:a,fee:void 0,direction:n,timestamp:c,datetime:this.iso8601(c),type:d,info:e}}parseLedgerEntryType(e){return this.safeString({Deposit:"transaction",Withdraw:"transaction",RealisedPNL:"trade",Commission:"fee",Refund:"cashback",Prize:"prize",ExchangeOrderWithdraw:"transaction",ExchangeOrderDeposit:"transaction"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={coin:a.id,amount:this.numberToString(t),address:s};void 0!==i&&(n.tag=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringUpper(o,c,c),void 0!==c&&(n.chain=c,r=this.omit(r,"network"));const d=await this.privatePostAssetV1PrivateWithdraw(this.extend(n,r)),h=this.safeValue(d,"result",{});return this.parseTransaction(h,a)}async fetchPositions(e,t={}){await this.loadMarkets();const s={};let i,r,a,n,c;if(Array.isArray(e)){if(1!==e.length)throw new o(this.id+" fetchPositions() takes an array with exactly one symbol");const t=this.safeString(e,0);i=this.market(t),r=i.type,a=i.linear,n="USDC"===i.settle,s.symbol=i.id}else{[r,t]=this.handleMarketTypeAndParams("fetchPositions",void 0,t);const e=this.safeValue(this.options,"fetchPositions",{}),s=this.safeString(this.options,"defaultSubType","linear");let i=this.safeString(e,"subType",s);i=this.safeString(t,"subType",i),a="linear"===i;let o=this.safeString(this.options,"defaultSettle");o=this.safeString2(t,"settle","defaultSettle",o),n="USDC"===o}t=this.omit(t,["settle","defaultSettle","subType"]),n?(c="privatePostOptionUsdcOpenapiPrivateV1QueryPosition",s.category="option"===r?"OPTION":"PERPETUAL"):c="future"===r?"privateGetFuturesPrivatePositionList":a?"privateGetPrivateLinearPositionList":"privateGetV2PrivatePositionList";let d=await this[c](this.extend(s,t));"string"==typeof d&&this.isJsonEncodedObject(d)&&(d=JSON.parse(d));let h,l=this.safeValue(d,"result",{});"dataList"in l&&(l=this.safeValue(l,"dataList",[])),h=Array.isArray(l)?l:[l];const u=[];for(let e=0;e<h.length;e++){let t=h[e];"data"in t&&"is_valid"in t&&(t=this.safeValue(t,"data")),u.push(this.parsePosition(t,i))}return this.filterByArray(u,"symbol",e,!1)}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeString(e,"size");let r=this.safeString(e,"side");r="Buy"===r?"long":"short";const a=this.safeString2(e,"position_value","positionValue"),n=this.omitZero(this.safeString2(e,"unrealised_pnl","unrealisedPnl"));let o=this.safeString(e,"positionIM");const c=this.safeString(e,"positionMM");let d=this.parse8601(this.safeString(e,"updated_at"));void 0===d&&(d=this.safeInteger(e,"createdAt"));const h=this.safeValue(e,"is_isolated",!1),l=h?"isolated":"cross";let u=this.safeString(e,"position_margin");const f=this.omitZero(this.safeString2(e,"entry_price","entryPrice")),p=this.omitZero(this.safeString2(e,"liq_price","liqPrice")),m=this.safeString(e,"leverage");"USDT"===t.settle?o=y.stringDiv(y.stringMul(i,f),m):t.inverse&&(o=y.stringDiv(i,y.stringMul(f,m)),h||(u=this.safeString(e,"wallet_balance")));const g=y.stringMul(y.stringDiv(n,o),"100");return{info:e,symbol:t.symbol,timestamp:d,datetime:this.iso8601(d),initialMargin:this.parseNumber(o),initialMarginPercentage:this.parseNumber(y.stringDiv(o,a)),maintenanceMargin:c,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(f),notional:this.parseNumber(a),leverage:this.parseNumber(m),unrealizedPnl:this.parseNumber(n),contracts:this.parseNumber(i),contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.parseNumber(p),markPrice:this.safeNumber(e,"markPrice"),collateral:this.parseNumber(u),marginMode:l,side:r,percentage:this.parseNumber(g)}}async setMarginMode(e,t,s={}){if(void 0===t)throw new o(this.id+" setMarginMode() requires a symbol argument");await this.loadMarkets();const i=this.market(t);if("USDC"===i.settle)throw new m(this.id+" setMarginMode() does not support market "+t);if("ISOLATED"!==(e=e.toUpperCase())&&"CROSS"!==e)throw new u(this.id+" setMarginMode() marginMode must be either isolated or cross");const r=this.safeNumber(s,"leverage");let a,n;if(void 0===r){if(a=this.safeNumber2(s,"sell_leverage","sellLeverage"),n=this.safeNumber2(s,"buy_leverage","buyLeverage"),void 0===a||void 0===n)throw new o(this.id+" setMarginMode() requires a leverage parameter or sell_leverage and buy_leverage parameters");s=this.omit(s,["buy_leverage","sell_leverage","sellLeverage","buyLeverage"])}else s=this.omit(s,"leverage"),a=r,n=r;const c="ISOLATED"===e,d={symbol:i.id,is_isolated:c,buy_leverage:r,sell_leverage:r};let h;h=i.future?"privatePostFuturesPrivatePositionSwitchIsolated":i.inverse?"privatePostV2PrivatePositionSwitchIsolated":"privatePostPrivateLinearPositionSwitchIsolated";return await this[h](this.extend(d,s))}async setLeverage(e,t,s={}){if(void 0===t)throw new o(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r="USDC"===i.settle;let a;a=r?"privatePostPerpetualUsdcOpenapiPrivateV1PositionLeverageSave":i.future?"privatePostFuturesPrivatePositionLeverageSave":i.linear?"privatePostPrivateLinearPositionSetLeverage":"privatePostV2PrivatePositionLeverageSave";const n={symbol:i.id};e=r?e.toString():parseInt(e);const c=i.swap&&i.linear;if(!r&&(c||i.future)){const t=this.safeNumber(s,"buy_leverage"),i=this.safeNumber(s,"sell_leverage");if(void 0!==t&&void 0!==i){if(t<1||t>100||i<1||i>100)throw new u(this.id+" setLeverage() leverage should be between 1 and 100")}else n.buy_leverage=e,n.sell_leverage=e}else n.leverage=e;if(e<1||e>100)throw new u(this.id+" setLeverage() leverage should be between 1 and 100");return await this[a](this.extend(n,s))}async setPositionMode(e,t,s={}){if(void 0===t)throw new o(this.id+" setPositionMode() requires a symbol argument");await this.loadMarkets();const i=this.market(t);if("USDC"===i.settle)throw new m(this.id+" setPositionMode() does not support market "+t);if(i.inverse&&!i.future)throw new u(this.id+" setPositionMode() must be either a linear swap or an inverse future");let r,a;i.future?(r="privatePostFuturesPrivatePositionSwitchMode",a=e?"3":"0"):(r="privatePostPrivateLinearPositionSwitchMode",a=e?"BothSide":"MergedSingle");const n={symbol:i.id,mode:a};return await this[r](this.extend(n,s))}async fetchOpenInterestHistory(e,t="1h",s,i,r={}){if("1m"===t)throw new u(this.id+"fetchOpenInterestHistory cannot use the 1m timeframe");await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:t};void 0!==i&&(n.limit=i);const o=await this.publicGetV2PublicOpenInterest(this.extend(n,r)),c=this.safeValue(o,"result");return this.parseOpenInterests(c,a,s,i)}parseOpenInterest(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"open_interest"),a=this.safeString(t,"contractSize");return{symbol:this.safeSymbol(s),baseVolume:y.stringMul(r,a),quoteVolume:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeHostname(this.urls.api[t])+"/"+e;if("public"===t)Object.keys(i).length&&(n+="?"+this.rawencode(i));else if("private"===t){this.checkRequiredCredentials();const e=n.indexOf("openapi")>=0,t=this.milliseconds().toString();if(e){a=Object.keys(i).length?this.json(i):"{}";const e=t+this.apiKey+a,s=this.hmac(this.encode(e),this.encode(this.secret),"sha256","hex");r={"Content-Type":"application/json","X-BAPI-API-KEY":this.apiKey,"X-BAPI-TIMESTAMP":t,"X-BAPI-SIGN":s}}else{const e=this.extend(i,{api_key:this.apiKey,recv_window:this.options.recvWindow,timestamp:t}),o=this.keysort(e),c=this.rawencode(o),d=this.hmac(this.encode(c),this.encode(this.secret));if("POST"===s){const t=n.indexOf("spot")>=0,s=this.extend(e,{sign:d});if(t)a=this.urlencode(s),r={"Content-Type":"application/x-www-form-urlencoded"};else{a=this.json(s),r={"Content-Type":"application/json"};const e=this.safeString(this.options,"brokerId");void 0!==e&&(r.Referer=e)}}else n+="?"+this.urlencode(o)+"&sign="+d}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(!o)return;const h=this.safeString2(o,"ret_code","retCode");if("0"!==h){if("30084"===h)return;const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e),new n(e)}}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const s={};let i;if(i=this.market(e),i.spot||i.option)throw new u(this.id+" fetchMarketLeverageTiers() symbol does not support market "+e);s.symbol=i.id;let r;r="USDC"===i.settle?"publicGetPerpetualUsdcOpenapiPublicV1RiskLimitList":i.linear?"publicGetPublicLinearRiskLimit":"publicGetV2PublicRiskLimitList";const a=await this[r](this.extend(s,t)),n=this.safeValue(a,"result");return this.parseMarketLeverageTiers(n,i)}parseMarketLeverageTiers(e,t){let s=0;const i=[];for(let r=0;r<e.length;r++){const a=e[r],n=this.safeNumber(a,"limit");i.push({tier:this.sum(r,1),currency:t.base,minNotional:s,maxNotional:n,maintenanceMarginRate:this.safeNumber2(a,"maintain_margin","maintainMargin"),maxLeverage:this.safeNumber2(a,"max_leverage","maxLeverage"),info:a}),s=n}return i}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],181:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadRequest:n,AuthenticationError:o,DDoSProtection:c,BadResponse:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"bytetrade",name:"ByteTrade",countries:["HK"],rateLimit:100,requiresWeb3:!0,certified:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:void 0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","1d":"1d","5d":"5d","1w":"1w","1M":"1M"},urls:{test:{market:"https://api-v2-test.byte-trade.com",public:"https://api-v2-test.byte-trade.com"},logo:"https://user-images.githubusercontent.com/1294454/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg",api:{market:"https://api-v2.bttcdn.com",public:"https://api-v2.bttcdn.com"},www:"https://www.byte-trade.com",doc:"https://docs.byte-trade.com/#description"},api:{market:{get:{klines:1,depth:1,trades:1,tickers:1}},public:{get:{symbols:1,currencies:1,balance:1,"orders/open":1,"orders/closed":1,"orders/all":1,orders:1,"orders/trades":1,depositaddress:1,withdrawals:1,deposits:1,transfers:1},post:{"transaction/createorder":1,"transaction/cancelorder":1,"transaction/withdraw":1,"transaction/transfer":1}}},fees:{trading:{tierBased:!1,percentage:!0,taker:8e-4,maker:8e-4}},commonCurrencies:{1:"ByteTrade",44:"ByteHub",48:"Blocktonic",133:"TerraCredit"},precisionMode:h,exceptions:{"vertify error":o,"verify error":o,"transaction already in network":n,"invalid argument":n},options:{orderExpiration:31536e6}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"code");let a;a=r in this.commonCurrencies?this.commonCurrencies[r]:this.safeString(i,"name");const n=this.safeString(i,"fullname"),o=this.safeValue(i,"active"),c=this.safeValue(i,"limits"),d=this.safeValue(c,"deposit");let h=this.safeString(d,"max");l.stringEquals(h,"-1")&&(h=void 0);const u=this.safeValue(c,"withdraw");let f=this.safeString(u,"max");l.stringEquals(f,"-1")&&(f=void 0),s[a]={id:r,code:a,name:n,active:o,deposit:void 0,withdraw:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(i,"basePrecision"))),fee:void 0,limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(d,"min"),max:this.parseNumber(h)},withdraw:{min:this.safeNumber(u,"min"),max:this.parseNumber(f)}},info:i}}return s}async fetchMarkets(e={}){const t=await this.publicGetSymbols(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol");let a=this.safeString(i,"baseName",""),n=this.safeString(i,"quoteName","");const o=this.safeString(i,"base"),c=this.safeString(i,"quote"),d=a.split("@"+o)[0];let h=n.split("@"+c)[0];"126"===c&&(h="ZAR");const u=d+"/"+h;o in this.commonCurrencies&&(a=this.commonCurrencies[o]),c in this.commonCurrencies&&(n=this.commonCurrencies[c]);const f=this.safeValue(i,"limits",{}),p=this.safeValue(f,"amount",{}),m=this.safeValue(f,"price",{}),g=this.safeValue(i,"precision",{});let y=this.safeString(p,"max");l.stringEquals(y,"-1")&&(y=void 0);let b=this.safeString(m,"max");l.stringEquals(b,"-1")&&(b=void 0);const v={id:r,symbol:a+"/"+n,normalSymbol:u,base:a,quote:n,settle:void 0,baseId:o,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(i,"active"),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(i,"taker"),maker:this.safeNumber(i,"maker"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(g,"amount"))),price:this.parseNumber(this.parsePrecision(this.safeString(g,"price")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(p,"min"),max:this.parseNumber(y)},price:{min:this.safeNumber(m,"min"),max:this.parseNumber(b)},cost:{min:void 0,max:void 0}},info:i};s.push(v)}return s}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"code"),a=this.safeCurrencyCode(r,void 0),n=this.account();n.free=this.safeString(i,"free"),n.used=this.safeString(i,"used"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){if(!("userid"in e)&&void 0===this.apiKey)throw new a(this.id+" fetchBalance() requires this.apiKey or userid argument");await this.loadMarkets();const t={userid:this.apiKey},s=await this.publicGetBalance(this.extend(t,e));return this.parseBalance(s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);const a=await this.marketGetDepth(this.extend(r,s)),n=this.safeValue(a,"timestamp");return this.parseOrderBook(a,i.symbol,n)}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t)).symbol;return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:this.safeString(e,"last"),previousClose:void 0,change:this.safeString(e,"change"),percentage:this.safeString(e,"percentage"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.marketGetTickers(this.extend(i,t));if(Array.isArray(r)){const e=this.safeValue(r,0);if(void 0===e)throw new d(this.id+" fetchTicker() returned an empty response");return this.parseTicker(e,s)}return this.parseTicker(r,s)}async fetchBidsAsks(e,t={}){await this.loadMarkets();const s=await this.marketGetDepth(t);return this.parseTickers(s,e)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.marketGetTickers(t);return this.parseTickers(s,e)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,timeframe:this.timeframes[t]};void 0!==s&&(n.since=s),void 0!==i&&(n.limit=i);const o=await this.marketGetKlines(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseTrade(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeString(e,"cost"),n=this.safeString(e,"id"),o=this.safeString(e,"type"),c=this.safeString(e,"takerOrMaker"),d=this.safeString(e,"side"),h=this.iso8601(s),l=this.safeString(e,"order"),u=this.safeString(e,"symbol");t=this.safeMarket(u,t);const f=this.safeValue(e,"fee"),p=this.safeString(f,"cost"),m=this.safeString(f,"rate"),g=this.safeString(f,"code"),y={currency:this.safeCurrencyCode(g),cost:p,rate:m};return this.safeTrade({info:e,timestamp:s,datetime:h,symbol:t.symbol,id:n,order:l,type:o,takerOrMaker:c,side:d,price:i,amount:r,cost:a,fee:y},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.since=t),void 0!==s&&(a.limit=s);const n=await this.marketGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetSymbols(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"name"),a=this.safeSymbol(r);s[a]={info:i,symbol:a,maker:this.safeNumber(i,"maker"),taker:this.safeNumber(i,"taker"),percentage:!0}}return s}parseOrder(e,t){const s=this.safeString(e,"status");let i;const r=this.safeString(e,"symbol");if(r in this.markets_by_id)t=this.markets_by_id[r];else{const t=this.safeString(e,"base"),s=this.safeString(e,"quote");if(void 0!==t&&void 0!==s){i=this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(s)}}void 0===i&&void 0!==t&&(i=t.symbol);const a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"datetime"),o=this.safeInteger(e,"lastTradeTimestamp"),c=this.safeString(e,"price"),d=this.safeString(e,"amount"),h=this.safeString(e,"filled"),l=this.safeString(e,"remaining"),u=this.safeString(e,"cost"),f=this.safeString(e,"average"),p=this.safeString(e,"id"),m=this.safeString(e,"type"),g=this.safeString(e,"side"),y=this.safeValue(e,"fee"),b=this.safeNumber(y,"cost"),v=this.safeNumber(y,"rate"),w=this.safeString(y,"code"),S={currency:this.safeCurrencyCode(w),cost:b,rate:v};return this.safeOrder({info:e,id:p,clientOrderId:void 0,timestamp:a,datetime:n,lastTradeTimestamp:o,symbol:i,type:m,timeInForce:void 0,postOnly:void 0,side:g,price:c,stopPrice:void 0,amount:d,cost:u,average:f,filled:h,remaining:l,status:s,fee:S,trades:void 0},t)}async createOrder(e,t,s,i,r,n={}){if(this.checkRequiredDependencies(),void 0===this.apiKey)throw new a("createOrder() requires this.apiKey or userid in params");await this.loadMarkets();const o=this.market(e);let c,d;c="sell"===s?1:2,"limit"===t?d=1:(d=2,r=0);const h=o.normalSymbol,u=o.baseId,f=this.currency(o.base),p=this.amountToPrecision(e,i),m=new l(p);m.reduce(),m.decimals-=this.precisionFromString(this.numberToString(f.precision));const g=m.toString(),y=this.numberToString(g),b=o.quoteId,v=this.currency(o.quote),w=this.priceToPrecision(e,r),S=new l(w);S.reduce(),S.decimals-=this.precisionFromString(this.numberToString(v.precision));const k=S.toString(),T=this.numberToString(k),O=this.milliseconds(),_=this.safeInteger(this.options,"orderExpiration",31536e6),x=this.milliseconds()+_;let M=this.iso8601(O);M=M.split(".")[0];let I=this.iso8601(x);I=I.split(".")[0];const C=this.safeString(n,"dappId","Sagittarius"),P=this.safeString(this.options,"fee","300000000000000"),A=this.safeString(n,"totalFeeRate",8),N=this.safeString(n,"chainFeeRate",1),V=this.safeString(n,"fee",P),B="18446744073709551616",E=[this.numberToBE(1,32),this.numberToLE(Math.floor(O/1e3),4),this.numberToLE(1,1),this.numberToLE(Math.floor(x/1e3),4),this.numberToLE(1,1),this.numberToLE(32,1),this.numberToLE(0,8),this.numberToLE(V,8),this.numberToLE(this.apiKey.length,1),this.stringToBinary(this.encode(this.apiKey)),this.numberToLE(c,1),this.numberToLE(d,1),this.numberToLE(h.length,1),this.stringToBinary(this.encode(h)),this.numberToLE(l.stringDiv(y,B,0),8),this.numberToLE(l.stringMod(y,B),8),this.numberToLE(l.stringDiv(T,B,0),8),this.numberToLE(l.stringMod(T,B),8),this.numberToLE(0,2),this.numberToLE(Math.floor(O/1e3),4),this.numberToLE(Math.floor(x/1e3),4),this.numberToLE(1,1),this.numberToLE(parseInt(N),2),this.numberToLE(1,1),this.numberToLE(parseInt(A),2),this.numberToLE(parseInt(b),4),this.numberToLE(parseInt(u),4),this.numberToLE(0,1),this.numberToLE(1,1),this.numberToLE(C.length,1),this.stringToBinary(this.encode(C)),this.numberToLE(0,1)],L=[this.numberToLE(Math.floor(O/1e3),4),this.numberToLE(1,1),this.numberToLE(Math.floor(x/1e3),4),this.numberToLE(1,1),this.numberToLE(32,1),this.numberToLE(0,8),this.numberToLE(V,8),this.numberToLE(this.apiKey.length,1),this.stringToBinary(this.encode(this.apiKey)),this.numberToLE(c,1),this.numberToLE(d,1),this.numberToLE(h.length,1),this.stringToBinary(this.encode(h)),this.numberToLE(l.stringDiv(y,B,0),8),this.numberToLE(l.stringMod(y,B),8),this.numberToLE(l.stringDiv(T,B,0),8),this.numberToLE(l.stringMod(T,B),8),this.numberToLE(0,2),this.numberToLE(Math.floor(O/1e3),4),this.numberToLE(Math.floor(x/1e3),4),this.numberToLE(1,1),this.numberToLE(parseInt(N),2),this.numberToLE(1,1),this.numberToLE(parseInt(A),2),this.numberToLE(parseInt(b),4),this.numberToLE(parseInt(u),4),this.numberToLE(0,1),this.numberToLE(1,1),this.numberToLE(C.length,1),this.stringToBinary(this.encode(C)),this.numberToLE(0,1)],R=this.binaryConcatArray(L),D=this.hash(R,"sha256","hex").slice(0,40),F=[this.numberToLE(D.length,1),this.stringToBinary(this.encode(D)),this.numberToBE(0,4)],G=this.binaryConcatArray(F),q=this.hash(G,"sha256","hex").slice(0,40),H=this.binaryConcatArray(E),j=this.hash(H,"sha256","hex"),U=this.ecdsa(j,this.secret,"secp256k1",void 0,!0),z=this.binaryToBase16(this.numberToLE(this.sum(U.v,31),1))+U.r+U.s,W={timestamp:M,expiration:I,operations:[[32,{now:M,expiration:I,fee:V,creator:this.apiKey,side:c,order_type:d,market_name:h,amount:g,price:k,use_btt_as_fee:!1,money_id:parseInt(b),stock_id:parseInt(u),custom_no_btt_fee_rate:parseInt(A),custom_btt_fee_rate:parseInt(N)}]],validate_type:0,dapp:C,signatures:[z]},K={trObj:this.json(W)},X=await this.publicPostTransactionCreateorder(K),Z=this.milliseconds(),Y="0"===this.safeString(X,"code")?"open":"failed";return{info:X,id:q,timestamp:Z,datetime:this.iso8601(Z),lastTradeTimestamp:void 0,status:Y,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async fetchOrder(e,t,s={}){if(!("userid"in s)&&void 0===this.apiKey)throw new a("fetchOrder() requires this.apiKey or userid argument");await this.loadMarkets();const i={userid:this.apiKey};let r;void 0!==t&&(r=this.markets[t],i.symbol=r.id),i.id=e;const n=await this.publicGetOrders(this.extend(i,s));return this.parseOrder(n,r)}async fetchOpenOrders(e,t,s,i={}){if(!("userid"in i)&&void 0===this.apiKey)throw new a("fetchOpenOrders() requires this.apiKey or userid argument");await this.loadMarkets();const r={userid:this.apiKey};let n;void 0!==e&&(n=this.market(e),r.symbol=n.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.since=t);const o=await this.publicGetOrdersOpen(this.extend(r,i));return this.parseOrders(o,n,t,s)}async fetchClosedOrders(e,t,s,i={}){if(!("userid"in i)&&void 0===this.apiKey)throw new a("fetchClosedOrders() requires this.apiKey or userid argument");let r;await this.loadMarkets();const n={userid:this.apiKey};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==s&&(n.limit=s),void 0!==t&&(n.since=t);const o=await this.publicGetOrdersClosed(this.extend(n,i));return this.parseOrders(o,r,t,s)}async fetchOrders(e,t,s,i={}){if(!("userid"in i)&&void 0===this.apiKey)throw new a("fetchOrders() requires this.apiKey or userid argument");let r;await this.loadMarkets();const n={userid:this.apiKey};void 0!==e&&(r=this.market(e),n.symbol=r.id),void 0!==s&&(n.limit=s),void 0!==t&&(n.since=t);const o=await this.publicGetOrdersAll(this.extend(n,i));return this.parseOrders(o,r,t,s)}async cancelOrder(e,t,s={}){if(void 0===this.apiKey)throw new a("cancelOrder() requires hasAlreadyAuthenticatedSuccessfully");if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=i.baseId,n=i.quoteId,o=i.normalSymbol,c="300000000000000",d=this.milliseconds();let h=this.iso8601(d);h=h.split(".")[0];let l=this.iso8601(0);l=l.split(".")[0];const u=this.safeString(s,"dappId","Sagittarius"),f=[this.numberToBE(1,32),this.numberToLE(Math.floor(d/1e3),4),this.numberToLE(1,1),this.numberToLE(0,4),this.numberToLE(1,1),this.numberToLE(33,1),this.numberToLE(0,8),this.numberToLE(c,8),this.numberToLE(this.apiKey.length,1),this.stringToBinary(this.encode(this.apiKey)),this.numberToLE(o.length,1),this.stringToBinary(this.encode(o)),this.base16ToBinary(e),this.numberToLE(parseInt(n),4),this.numberToLE(parseInt(r),4),this.numberToLE(0,1),this.numberToLE(1,1),this.numberToLE(u.length,1),this.stringToBinary(this.encode(u)),this.numberToLE(0,1)],p=this.binaryConcatArray(f),m=this.hash(p,"sha256","hex"),g=this.ecdsa(m,this.secret,"secp256k1",void 0,!0),y=this.binaryToBase16(this.numberToLE(this.sum(g.v,31),1))+g.r+g.s,b={timestamp:h,expiration:l,operations:[[33,{fee:c,creator:this.apiKey,order_id:e,market_name:o,money_id:parseInt(n),stock_id:parseInt(r)}]],validate_type:0,dapp:u,signatures:[y]},v={trObj:this.json(b)},w=await this.publicPostTransactionCancelorder(v),S=this.milliseconds(),k="0"===this.safeString(w,"code")?"canceled":"failed";return{info:w,id:void 0,timestamp:S,datetime:this.iso8601(S),lastTradeTimestamp:void 0,status:k,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async fetchMyTrades(e,t,s,i={}){if(!("userid"in i)&&void 0===this.apiKey)throw new a("fetchMyTrades() requires this.apiKey or userid argument");await this.loadMarkets();const r=this.market(e),n={userid:this.apiKey};void 0!==e&&(n.symbol=r.id),void 0!==s&&(n.limit=s),void 0!==t&&(n.since=t);const o=await this.publicGetOrdersTrades(this.extend(n,i));return this.parseTrades(o,r,t,s)}async fetchDeposits(e,t,s,i={}){if(await this.loadMarkets(),!("userid"in i)&&void 0===this.apiKey)throw new a("fetchDeposits() requires this.apiKey or userid argument");let r;const n={userid:this.apiKey};void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==t&&(n.since=t),void 0!==s&&(n.limit=s);const o=await this.publicGetDeposits(this.extend(n,i));return this.parseTransactions(o,r,t,s)}async fetchWithdrawals(e,t,s,i={}){if(await this.loadMarkets(),!("userid"in i)&&void 0===this.apiKey)throw new a("fetchWithdrawals() requires this.apiKey or userid argument");let r;const n={userid:this.apiKey};void 0!==e&&(r=this.currency(e),n.currency=r.id),void 0!==t&&(n.since=t),void 0!==s&&(n.limit=s);const o=await this.publicGetWithdrawals(this.extend(n,i));return this.parseTransactions(o,r,t,s)}parseTransactionStatus(e){return this.safeString({DEPOSIT_FAILED:"failed",FEE_SEND_FAILED:"failed",FEE_FAILED:"failed",PAY_SEND_FAILED:"failed",PAY_FAILED:"failed",BTT_FAILED:"failed",WITHDDRAW_FAILED:"failed",USER_FAILED:"failed",FEE_EXECUED:"pending",PAY_EXECUED:"pending",WITHDDRAW_EXECUTED:"pending",USER_EXECUED:"pending",BTT_SUCCED:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"address");let r=this.safeString(e,"tag");void 0!==r&&r.length<1&&(r=void 0);const a=this.safeValue(e,"txid"),n=this.safeString(e,"code"),o=this.safeCurrencyCode(n,t),c=this.safeInteger(e,"timestamp"),d=this.safeString(e,"datetime"),h=this.safeString(e,"type"),l=this.parseTransactionStatus(this.safeString(e,"status")),u=this.safeNumber(e,"amount"),f=this.safeValue(e,"fee"),p=this.safeNumber(f,"cost"),m=this.safeString(f,"code");return{info:e,id:s,txid:a,timestamp:c,datetime:d,address:i,tag:r,type:h,amount:u,currency:o,status:l,updated:void 0,fee:{cost:p,currency:this.safeCurrencyCode(m,t)}}}async fetchDepositAddress(e,t={}){if(await this.loadMarkets(),!("userid"in t)&&void 0===this.apiKey)throw new a("fetchDepositAddress() requires this.apiKey or userid argument");const s=this.currency(e),i={userid:this.apiKey,code:s.id},r=await this.publicGetDepositaddress(i),n=this.safeValue(r,0),o=this.safeString(n,"address"),c=this.safeString(n,"tag"),d=this.safeStringUpper(n,"chainType");return this.checkAddress(o),{currency:e,address:o,tag:c,network:d,info:r}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t];return n+="/"+e,Object.keys(i).length&&(n+="?"+this.urlencode(i)),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,d,h){if(503===e)throw new c(this.id+" "+e.toString()+" "+t+" "+n);if(void 0!==o&&"code"in o){if("1"===this.safeString(o,"code")){const e=this.safeString(o,"msg"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new r(t)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],182:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeError:a,PermissionDenied:n,ExchangeNotAvailable:o,OnMaintenance:c,InvalidOrder:d,OrderNotFound:h,InsufficientFunds:l,ArgumentsRequired:u,BadSymbol:f,BadRequest:p,RequestTimeout:m,NetworkError:g}=e("./base/errors"),{TRUNCATE:y,TICK_SIZE:b}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"cdax",name:"CDAX",countries:["RU"],rateLimit:100,userAgent:this.userAgents.chrome39,certified:!1,version:"v1",accounts:void 0,accountsById:void 0,hostname:"cdax.io",pro:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/102157692-fd406280-3e90-11eb-8d46-4511b617cd17.jpg",api:{market:"https://{hostname}/api",public:"https://{hostname}/api",private:"https://{hostname}/api"},www:"https://cdax.io",referral:"https://cdax.io/invite?invite_code=esc74",doc:"https://github.com/cloudapidoc/API_Docs",fees:"https://cdax.io/about/fee"},api:{market:{get:{"history/kline":1,"detail/merged":1,depth:1,trade:1,"history/trade":1,detail:1,tickers:1,etp:1}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:b,exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":c,maintain:c},exact:{"bad-request":p,"base-date-limit-error":p,"api-not-support-temp-addr":n,timeout:m,"gateway-internal-error":o,"account-frozen-balance-insufficient-error":l,"invalid-amount":d,"order-limitorder-amount-min-error":d,"order-limitorder-amount-max-error":d,"order-marketorder-amount-min-error":d,"order-limitorder-price-min-error":d,"order-limitorder-price-max-error":d,"order-holding-limit-failed":d,"order-orderprice-precision-error":d,"order-etp-nav-price-max-error":d,"order-orderstate-error":h,"order-queryorder-invalid":h,"order-update-error":o,"api-signature-check-failed":r,"api-signature-not-valid":r,"base-record-invalid":h,"base-symbol-trade-disabled":f,"base-symbol-error":f,"system-maintenance":c,"invalid symbol":f,"symbol trade not open now":f}},options:{defaultNetwork:"ERC20",networks:{ETH:"erc20",TRX:"trc20",HRC20:"hrc20",HECO:"hrc20",HT:"hrc20",ALGO:"algo",OMNI:""},fetchOrdersByStatesMethod:"private_get_order_orders",fetchOpenOrdersMethod:"fetch_open_orders_v1",createMarketBuyOrderRequiresPrice:!0,fetchBalanceMethod:"privateGetAccountAccountsIdBalance",createOrderMethod:"privatePostOrderOrdersPlace",language:"en-US"},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",HOT:"Hydro Protocol",PNT:"Penta",SBTC:"Super Bitcoin",BIFI:"Bitcoin File"}})}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchTradingLimits(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const s={};for(let i=0;i<e.length;i++){const r=e[i];s[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return s}async fetchTradingLimitsById(e,t={}){const s={symbol:e},i=await this.publicGetCommonExchange(this.extend(s,t));return this.parseTradingLimits(this.safeValue(i,"data",{}))}parseTradingLimits(e,t,s={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,y,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){const t=await this.publicGetCommonSymbols(e),s=this.safeValue(t,"data",[]);if(s.length<1)throw new g(this.id+" fetchMarkets() returned empty response: "+this.json(s));const i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"base-currency"),a=this.safeString(t,"quote-currency"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a),c=this.safeString(t,"state");i.push({id:r+a,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:"online"===c,contract:!1,linear:void 0,inverse:void 0,taker:"OMG"===n?0:.002,maker:"OMG"===n?0:.002,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount-precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price-precision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"value-precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"leverage-ratio",1),superMax:this.safeNumber(t,"super-margin-leverage-ratio",1)},amount:{min:this.safeNumber(t,"min-order-amt"),max:this.safeNumber(t,"max-order-amt")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min-order-value",0),max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeInteger(e,"ts");let r,a,n,o;"bid"in e&&(Array.isArray(e.bid)?(r=this.safeString(e.bid,0),a=this.safeString(e.bid,1)):(r=this.safeString(e,"bid"),a=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(n=this.safeString(e.ask,0),o=this.safeString(e.ask,1)):(n=this.safeString(e,"ask"),o=this.safeString(e,"askSize")));const c=this.safeString(e,"open"),d=this.safeString(e,"close"),h=this.safeString(e,"amount"),l=this.safeString(e,"vol");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:r,bidVolume:a,ask:n,askVolume:o,vwap:void 0,open:c,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:l,info:e},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id,type:"step0"},n=await this.marketGetDepth(this.extend(r,s));if("tick"in n){if(!n.tick)throw new f(this.id+" fetchOrderBook() returned empty response: "+this.json(n));const e=this.safeValue(n,"tick"),t=this.safeInteger(e,"ts",this.safeInteger(n,"ts")),s=this.parseOrderBook(e,i.symbol,t);return s.nonce=this.safeInteger(e,"version"),s}throw new a(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(n))}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.marketGetDetailMerged(this.extend(i,t)),a=this.parseTicker(r.tick,s),n=this.safeInteger(r,"ts");return a.timestamp=n,a.datetime=this.iso8601(n),a}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.marketGetTickers(t),i=this.safeValue(s,"data",[]),r=this.safeInteger(s,"ts"),a={};for(let e=0;e<i.length;e++){const t=this.safeString(i[e],"symbol"),s=this.safeMarket(t),n=s.symbol,o=this.parseTicker(i[e],s);o.timestamp=r,o.datetime=this.iso8601(r),a[n]=o}return this.filterByArray(a,"symbol",e)}parseTrade(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeInteger2(e,"ts","created-at"),a=this.safeString(e,"order-id");let n=this.safeString(e,"direction"),o=this.safeString(e,"type");if(void 0!==o){const e=o.split("-");n=e[0],o=e[1]}const c=this.safeString(e,"role"),d=this.safeString(e,"price"),h=this.safeString2(e,"filled-amount","amount");let l,u=this.safeString(e,"filled-fees"),f=this.safeCurrencyCode(this.safeString(e,"fee-currency"));const p=this.safeString(e,"filled-points");void 0!==p&&(void 0!==u&&"0.0"!==u||(u=p,f=this.safeCurrencyCode(this.safeString(e,"fee-deduct-currency")))),void 0!==u&&(l={cost:u,currency:f});const m=this.safeString2(e,"trade-id","tradeId"),g=this.safeString(e,"id",m);return this.safeTrade({id:g,info:e,order:a,timestamp:r,datetime:this.iso8601(r),symbol:i,type:o,side:n,takerOrMaker:c,price:d,amount:h,cost:void 0,fee:l},t)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrderOrdersIdMatchresults(this.extend(a,r));return this.parseTrades(n.data,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.size=s),void 0!==t&&(a["start-time"]=t);const n=await this.privateGetOrderMatchresults(this.extend(a,i));return this.parseTrades(n.data,r,t,s)}async fetchTrades(e,t,s=1e3,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.size=s);const n=await this.marketGetHistoryTrade(this.extend(a,i)),o=this.safeValue(n,"data",[]);let c=[];for(let e=0;e<o.length;e++){const t=this.safeValue(o[e],"data",[]);for(let e=0;e<t.length;e++){const s=this.parseTrade(t[e],r);c.push(s)}}return c=this.sortBy(c,"timestamp"),this.filterBySymbolSinceLimit(c,r.symbol,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",s,i=1e3,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.timeframes[t]};void 0!==i&&(n.size=i);const o=await this.marketGetHistoryKline(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}async fetchAccounts(e={}){await this.loadMarkets();return(await this.privateGetAccountAccounts(e)).data}async fetchCurrencies(e={}){const t={language:this.options.language},s=await this.publicGetSettingsCurrencys(this.extend(t,e)),i=this.safeValue(s,"data",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeValue(t,"name"),a=this.parseNumber(this.parsePrecision(this.safeString(t,"withdraw-precision"))),n=this.safeCurrencyCode(s),o=this.safeValue(t,"deposit-enabled"),c=this.safeValue(t,"withdraw-enabled"),d=this.safeValue(t,"country-disabled"),h=this.safeValue(t,"visible",!1),l=this.safeString(t,"state"),u=h&&o&&c&&"online"===l&&!d,f=this.safeString(t,"display-name");r[n]={id:s,code:n,type:"crypto",name:f,active:u,deposit:o,withdraw:c,fee:void 0,precision:a,limits:{amount:{min:a,max:void 0},deposit:{min:this.safeNumber(t,"deposit-min-amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw-min-amount"),max:void 0}},info:t}}return r}parseBalance(e){const t=this.safeValue(e.data,"list",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r);let n;n=a in s?s[a]:this.account(),"trade"===i.type&&(n.free=this.safeString(i,"balance")),"frozen"===i.type&&(n.used=this.safeString(i,"balance")),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();const t=this.options.fetchBalanceMethod,s={id:this.accounts[0].id},i=await this[t](this.extend(s,e));return this.parseBalance(i)}async fetchOrdersByStates(e,t,s,i,r={}){await this.loadMarkets();const a={states:e};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=this.safeString(this.options,"fetchOrdersByStatesMethod","private_get_order_orders"),c=await this[o](this.extend(a,r));return this.parseOrders(c.data,n,s,i)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrderOrdersId(this.extend(i,s)),a=this.safeValue(r,"data");return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){const r=this.safeString(this.options,"fetchOpenOrdersMethod","fetch_open_orders_v1");return await this[r](e,t,s,i)}async fetchOpenOrdersV1(e,t,s,i={}){if(void 0===e)throw new u(this.id+" fetchOpenOrdersV1() requires a symbol argument");return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStates("filled,partial-canceled,canceled",e,t,s,i)}async fetchOpenOrdersV2(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);let n=this.safeString(i,"account-id");if(void 0===n){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){const t=this.accounts[e];if("spot"===t.type&&(n=this.safeString(t,"id"),void 0!==n))break}}r["account-id"]=n,void 0!==s&&(r.size=s);const o=this.omit(i,"account-id"),c=await this.privateGetOrderOpenOrders(this.extend(r,o)),d=this.safeValue(c,"data",[]);return this.parseOrders(d,a,t,s)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id");let i,r;const a=this.parseOrderStatus(this.safeString(e,"state")),n=this.safeString(e,"type");if(void 0!==n){const e=n.split("-");i=this.safeString(e,0),r=this.safeString(e,1)}const o=this.safeString(e,"symbol");t=this.safeMarket(o,t);const c=this.safeInteger(e,"created-at"),d=this.safeString(e,"client-order-id"),h=this.safeString2(e,"filled-amount","field-amount"),l=this.safeString(e,"price"),u=this.safeString2(e,"filled-cash-amount","field-cash-amount");let f=this.safeString(e,"amount");"buy-market"===n&&(f=void 0);const p=this.safeString2(e,"filled-fees","field-fees");let m;if(void 0!==p){m={cost:p,currency:"sell"===i?t.quote:t.base}}return this.safeOrder({info:e,id:s,clientOrderId:d,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:i,price:l,stopPrice:void 0,average:void 0,cost:u,amount:f,filled:h,remaining:void 0,status:a,fee:m,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),await this.loadAccounts();const n=this.market(e),o={"account-id":this.accounts[0].id,symbol:n.id,type:s+"-"+t},c=this.safeString2(a,"clientOrderId","client-order-id");if(void 0!==c&&(o["client-order-id"]=c),a=this.omit(a,["clientOrderId","client-order-id"]),"market"===t&&"buy"===s)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new d(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");o.amount=this.costToPrecision(e,parseFloat(i)*parseFloat(r))}else o.amount=this.costToPrecision(e,i);else o.amount=this.amountToPrecision(e,i);"limit"!==t&&"ioc"!==t&&"limit-maker"!==t&&"stop-limit"!==t&&"stop-limit-fok"!==t||(o.price=this.priceToPrecision(e,r));const h=this.options.createOrderMethod,l=await this[h](this.extend(o,a)),u=this.milliseconds();return{info:l,id:this.safeString(l,"data"),timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:void 0,symbol:n.symbol,type:t,side:s,price:r,amount:i,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async cancelOrder(e,t,s={}){const i=await this.privatePostOrderOrdersIdSubmitcancel({id:e});return this.extend(this.parseOrder(i),{id:e,status:"canceled"})}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"clientOrderIds","client-order-ids");s=this.omit(s,["clientOrderIds","client-order-ids"]);const r={};void 0===i?r["order-ids"]=e:r["client-order-ids"]=i;return await this.privatePostOrderOrdersBatchcancel(this.extend(r,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.symbol=i.id);return await this.privatePostOrderOrdersBatchCancelOpenOrders(this.extend(s,t))}currencyToPrecision(e,t,s){return this.decimalToPrecision(t,0,this.currencies[e].precision,this.precisionMode)}safeNetwork(e){const t=e.length-1;"1"===e[t]&&(e=e.slice(0,t));return this.safeString({},e,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeCurrencyCode(r,t),n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),c=this.indexBy(o,"id"),d=this.safeValue(c,n,n),h=this.safeString(d,"network");return this.checkAddress(s),{currency:a,address:s,tag:i,network:h,info:e}}async fetchDeposits(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"deposit",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"withdraw",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}parseTransaction(e,t){const s=this.safeInteger(e,"created-at"),i=this.safeInteger(e,"updated-at"),r=this.safeCurrencyCode(this.safeString(e,"currency"));let a=this.safeString(e,"type");"withdraw"===a&&(a="withdrawal");const n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.safeString(e,"address-tag");let c=this.safeNumber(e,"fee");void 0!==c&&(c=Math.abs(c));const d=this.safeString(e,"address"),h=this.safeStringUpper(e,"chain");return{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:s,datetime:this.iso8601(s),network:h,address:d,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,type:a,amount:this.safeNumber(e,"amount"),currency:r,status:n,updated:i,fee:{currency:r,cost:c,rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={address:s,amount:t,currency:a.id.toLowerCase()};void 0!==i&&(n["addr-tag"]=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.chain="erc20"===c?a.id+c:c+a.id,r=this.omit(r,"network"));const d=await this.privatePostDwWithdrawApiCreate(this.extend(n,r));return this.parseTransaction(d,a)}sign(e,t="public",s="GET",i={},r,a){let n="/";"market"===t?n+=t:"public"===t||"private"===t?n+=this.version:"v2Public"!==t&&"v2Private"!==t||(n+="v2"),n+="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("private"===t||"v2Private"===t){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==s&&(t=this.extend(t,o)),t=this.keysort(t);let i=this.urlencode(t);const c=[s,this.hostname,n,i].join("\n"),d=this.hmac(this.encode(c),this.encode(this.secret),"sha256","base64");i+="&"+this.urlencode({Signature:d}),n+="?"+i,"POST"===s?(a=this.json(o),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(i).length&&(n+="?"+this.urlencode(i));return n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n,{url:n,method:s,body:a,headers:r}}calculateRateLimiterCost(e,t,s,i,r={},a={}){return this.safeInteger(r,"cost",1)}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0!==o&&"status"in o){if("error"===this.safeString(o,"status")){const e=this.safeString(o,"err-code"),t=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);const s=this.safeString(o,"err-msg");throw this.throwExactlyMatchedException(this.exceptions.exact,s,t),new a(t)}}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],183:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,AuthenticationError:n,NullResponse:o,InvalidOrder:c,NotSupported:d,InsufficientFunds:h,InvalidNonce:l,OrderNotFound:u,RateLimitExceeded:f,DDoSProtection:p,BadSymbol:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"cex",name:"CEX.IO",countries:["GB","EU","CY","RU"],rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,fetchWithdrawalWhitelist:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg",api:"https://cex.io/api",www:"https://cex.io",doc:"https://cex.io/cex-api",fees:["https://cex.io/fee-schedule","https://cex.io/limits-commissions"],referral:"https://cex.io/r/0/up105393824/0/"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["currency_profile","currency_limits/","last_price/{pair}/","last_prices/{currencies}/","ohlcv/hd/{yyyymmdd}/{pair}","order_book/{pair}/","ticker/{pair}/","tickers/{currencies}/","trade_history/{pair}/"],post:["convert/{pair}","price_stats/{pair}"]},private:{post:["active_orders_status/","archived_orders/{pair}/","balance/","cancel_order/","cancel_orders/{pair}/","cancel_replace_order/{pair}/","close_position/{pair}/","get_address/","get_myfee/","get_order/","get_order_tx/","open_orders/{pair}/","open_orders/","open_position/{pair}/","open_positions/{pair}/","place_order/{pair}/","raw_tx_history"]}},fees:{trading:{maker:this.parseNumber("0.0016"),taker:this.parseNumber("0.0025")},funding:{withdraw:{},deposit:{BTC:0,ETH:0,BCH:0,DASH:0,BTG:0,ZEC:0,XRP:0,XLM:0}}},precisionMode:g,exceptions:{exact:{},broad:{"Insufficient funds":h,"Nonce must be incremented":l,"Invalid Order":c,"Order not found":u,"limit exceeded":f,"Invalid API key":n,"There was an error while placing your order":c,"Sorry, too many clients already":p,"Invalid Symbols Pair":m,"Wrong currency pair":m}},options:{fetchOHLCVWarning:!0,createMarketBuyOrderRequiresPrice:!0,order:{status:{c:"canceled",d:"closed",cd:"canceled",a:"open"}}}})}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),s=this.safeInteger(t,"timestamp"),i=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===s||r-s>i){const s=await this.publicGetCurrencyProfile(e);this.options.fetchCurrencies=this.extend(t,{response:s,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e);this.options.currencies={timestamp:this.milliseconds(),response:t};const s=this.safeValue(t,"data",[]),i=this.safeValue(s,"symbols",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"code"),a=this.safeCurrencyCode(s),n=!0;r[a]={id:s,code:a,name:s,active:n,deposit:void 0,withdraw:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),fee:void 0,limits:{amount:{min:this.safeNumber(t,"minimumCurrencyAmount"),max:void 0},withdraw:{min:this.safeNumber(t,"minimalWithdrawalAmount"),max:void 0}},info:t}}return r}async fetchMarkets(e={}){const t=await this.fetchCurrenciesFromCache(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"symbols",[]),r=this.indexBy(i,"code"),a=this.safeValue(s,"pairs",[]),n=await this.publicGetCurrencyLimits(e),o=[],c=this.safeValue(n.data,"pairs");for(let e=0;e<c.length;e++){const t=c[e],s=this.safeString(t,"symbol1"),i=this.safeString(t,"symbol2"),n=this.safeCurrencyCode(s),d=this.safeCurrencyCode(i),h=this.safeValue(r,s,{}),l=this.safeValue(r,i,{});let u=this.safeString(l,"precision","8");for(let e=0;e<a.length;e++){const t=a[e];t.symbol1===s&&t.symbol2===i&&(u=this.safeString(t,"pricePrecision",u))}const f=this.safeString(h,"precision","8"),p=this.safeString(h,"scale","0"),m=y.stringSub(f,p);o.push({id:s+"/"+i,symbol:n+"/"+d,base:n,quote:d,settle:void 0,baseId:s,quoteId:i,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(m)),price:this.parseNumber(this.parsePrecision(u))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minLotSize"),max:this.safeNumber(t,"maxLotSize")},price:{min:this.safeNumber(t,"minPrice"),max:this.safeNumber(t,"maxPrice")},cost:{min:this.safeNumber(t,"minLotSizeS2"),max:void 0}},info:t})}return o}parseBalance(e){const t={info:e},s=this.omit(e,["username","timestamp"]),i=Object.keys(s);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeValue(s,r,{}),n=this.account();n.free=this.safeString(a,"available"),n.used=this.safeString(a,"orders","0");t[this.safeCurrencyCode(r)]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderBookPair(this.extend(r,s)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,i.symbol,n)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,a={}){await this.loadMarkets();const n=this.market(e);if(void 0===s)s=this.milliseconds()-864e5;else if(this.options.fetchOHLCVWarning)throw new r(this.id+" fetchOHLCV warning: CEX can return historical candles for a certain date only, this might produce an empty or null reply. Set exchange.options['fetchOHLCVWarning'] = false or add ({ 'options': { 'fetchOHLCVWarning': false }}) to constructor params to suppress this warning message.");const c={pair:n.id,yyyymmdd:this.yyyymmdd(s,"")};try{const e=await this.publicGetOhlcvHdYyyymmddPair(this.extend(c,a)),r="data"+this.timeframes[t],o=this.safeString(e,r),d=JSON.parse(o);return this.parseOHLCVs(d,n,t,s,i)}catch(e){if(e instanceof o)return[]}}parseTicker(e,t){const s=this.safeTimestamp(e,"timestamp"),i=this.safeString(e,"volume"),r=this.safeString(e,"high"),a=this.safeString(e,"low"),n=this.safeString(e,"bid"),o=this.safeString(e,"ask"),c=this.safeString(e,"last"),d=this.safeSymbol(void 0,t);return this.safeTicker({symbol:d,timestamp:s,datetime:this.iso8601(s),high:r,low:a,bid:n,bidVolume:void 0,ask:o,askVolume:void 0,vwap:void 0,open:void 0,close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:i,quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s={currencies:Object.keys(this.currencies).join("/")},i=await this.publicGetTickersCurrencies(this.extend(s,t)),r=this.safeValue(i,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"pair"),i=this.safeMarket(s,void 0,":");a[i.symbol]=this.parseTicker(t,i)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTickerPair(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeTimestamp(e,"date"),i=this.safeString(e,"tid"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amount");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:undefined,side:r,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradeHistoryPair(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGetMyfee(e),s=this.safeValue(t,"data",{}),i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(s,r.id,{}),n=this.safeString(a,"buyMaker"),o=this.safeString(a,"buy"),c=this.parseNumber(y.stringDiv(n,"100")),d=this.parseNumber(y.stringDiv(o,"100"));i[t]={info:a,symbol:t,maker:c,taker:d,percentage:!0}}return i}async createOrder(e,t,s,i,r,a={}){if("market"===t&&"buy"===s&&this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new c(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");i*=r}await this.loadMarkets();const n=this.market(e),o={pair:n.id,type:s,amount:i};"limit"===t?o.price=r:o.order_type=t;const d=await this.privatePostPlaceOrderPair(this.extend(o,a)),h=this.safeNumber(d,"amount"),l=this.safeNumber(d,"pending"),u=this.safeValue(d,"time"),f=this.safeValue(d,"complete")?"closed":"open";let p;return void 0!==h&&void 0!==l&&(p=Math.max(h-l,0)),{id:this.safeString(d,"id"),info:d,clientOrderId:void 0,timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,type:t,side:this.safeString(d,"type"),symbol:n.symbol,status:f,price:this.safeNumber(d,"price"),amount:h,cost:void 0,average:void 0,remaining:l,filled:p,fee:void 0,trades:void 0}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e};return await this.privatePostCancelOrder(this.extend(i,s))}parseOrder(e,t){let s,i=this.safeValue(e,"time");if(i="string"==typeof i&&i.indexOf("T")>=0?this.parse8601(i):parseInt(i),void 0===t){const i=this.safeString(e,"symbol1"),r=this.safeString(e,"symbol2");s=this.safeCurrencyCode(i)+"/"+this.safeCurrencyCode(r),s in this.markets&&(t=this.market(s))}const r=this.parseOrderStatus(this.safeString(e,"status")),a=this.safeNumber(e,"price");let n=this.safeNumber(e,"amount");void 0!==n&&(n=Math.abs(n));const o=this.safeNumber2(e,"pending","remains"),c=n-o;let d,h;if(void 0!==t){s=t.symbol;const i=this.safeNumber(e,"ta:"+t.quote),r=this.safeNumber(e,"tta:"+t.quote);h=this.sum(i,r);const a="fa:"+t.base,n="tfa:"+t.base,o="fa:"+t.quote,c="tfa:"+t.quote;let l=this.safeNumber(e,"tradingFeeMaker");if(l||(l=this.safeNumber(e,"tradingFeeTaker",l)),l&&(l/=100),a in e||n in e){const s=this.safeNumber2(e,a,n);d={currency:t.base,rate:l,cost:s}}else if(o in e||c in e){const s=this.safeNumber2(e,o,c);d={currency:t.quote,rate:l,cost:s}}}h||(h=a*c);const l=e.type;let u;const f=e.id;if("vtx"in e){u=[];for(let i=0;i<e.vtx.length;i++){const r=e.vtx[i],a=this.safeString(r,"type");if("cancel"===a)continue;const n=this.safeNumber(r,"price");if(void 0===n)continue;if("costsNothing"===a)continue;const o=this.parse8601(this.safeString(r,"time")),c=this.safeNumber(r,"amount"),d=this.safeNumber(r,"fee_amount");let h,l=c<0?-c:c;"sell"===a?(h=l,l=this.sum(d,h)/n):h=l*n,u.push({id:this.safeString(r,"id"),timestamp:o,datetime:this.iso8601(o),order:f,symbol:s,price:n,amount:l,cost:h,side:a,fee:{cost:d,currency:t.quote},info:r,type:void 0,takerOrMaker:void 0})}}return{id:f,clientOrderId:void 0,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:r,symbol:s,type:void 0===a?"market":"limit",timeInForce:void 0,postOnly:void 0,side:l,price:a,stopPrice:void 0,cost:h,amount:n,filled:c,remaining:o,trades:u,fee:d,info:e,average:void 0}}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="privatePostOpenOrders";void 0!==e&&(a=this.market(e),r.pair=a.id,n+="Pair");const o=await this[n](this.extend(r,i));for(let e=0;e<o.length;e++)o[e]=this.extend(o[e],{status:"open"});return this.parseOrders(o,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();if(void 0===e)throw new a(this.id+" fetchClosedOrders() requires a symbol argument");const r=this.market(e),n={pair:r.id},o=await this.privatePostArchivedOrdersPair(this.extend(n,i));return this.parseOrders(o,r,t,s)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e.toString()},r=await this.privatePostGetOrderTx(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={limit:s,pair:this.market(e).id,dateFrom:t},a=await this.privatePostArchivedOrdersPair(this.extend(r,i)),n=[];for(let e=0;e<a.length;e++){const t=a[e],s=this.parseOrderStatus(this.safeString(t,"status")),i=this.safeString(t,"symbol1"),r=this.safeString(t,"symbol2"),o=this.safeCurrencyCode(i),c=this.safeCurrencyCode(r),d=o+"/"+c,h=this.safeString(t,"type"),l=this.safeNumber(t,"a:"+i+":cds"),u=this.safeNumber(t,"a:"+r+":cds"),f=this.safeNumber(t,"f:"+r+":cds"),p=this.safeNumber(t,"amount"),m=this.safeNumber(t,"price"),g=this.safeNumber(t,"remains"),y=p-g;let b,v,w,S;if(m){const e=this.safeNumber(t,"ta:"+r,0),s=this.safeNumber(t,"tta:"+r,0),i=this.safeNumber(t,"fa:"+r,0),a=this.safeNumber(t,"tfa:"+r,0);v="sell"===h?this.sum(this.sum(e,s),this.sum(i,a)):this.sum(e,s)-this.sum(i,a),S="limit",b=p,w=v/y}else S="market",b=l,v=u,w=b/v;const k=this.safeString(t,"time"),T=this.safeString(t,"lastTxTime"),O=this.parse8601(k);n.push({id:this.safeString(t,"id"),timestamp:O,datetime:this.iso8601(O),lastUpdated:this.parse8601(T),status:s,symbol:d,side:h,price:m,amount:b,average:w,type:S,filled:y,cost:v,remaining:g,fee:{cost:f,currency:c},info:t})}return n}parseOrderStatus(e){return this.safeString(this.options.order.status,e,e)}async editOrder(e,t,s,i,r,n,o={}){if(void 0===r)throw new a(this.id+" editOrder() requires a amount argument");if(void 0===n)throw new a(this.id+" editOrder() requires a price argument");await this.loadMarkets();const c=this.market(t),d={pair:c.id,type:i,amount:r,price:n,order_id:e},h=await this.privatePostCancelReplaceOrderPair(this.extend(d,o));return this.parseOrder(h,c)}async fetchDepositAddress(e,t={}){if("XRP"===e||"XLM"===e)throw new d(this.id+" fetchDepositAddress() does not support XRP and XLM addresses yet (awaiting docs from CEX.io)");await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privatePostGetAddress(this.extend(s,t)),r=this.safeString(i,"data");return this.checkAddress(r),{currency:e,address:r,tag:void 0,network:void 0,info:i}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,s=this.hmac(this.encode(t),this.encode(this.secret));a=this.json(this.extend({key:this.apiKey,signature:s.toUpperCase(),nonce:e},o)),r={"Content-Type":"application/json"}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,c,d,h){if(Array.isArray(c))return c;if("true"!==n){if(void 0===c)throw new o(this.id+" returned "+this.json(c));if((!("e"in c)||!("ok"in c)||"ok"!==c.ok)&&"error"in c){const e=this.safeString(c,"error"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r(t)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],184:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,AuthenticationError:n,RateLimitExceeded:o,InvalidNonce:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number"),h=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinbase",name:"Coinbase",countries:["US"],rateLimit:400,version:"v2",userAgent:this.userAgents.chrome,headers:{"CB-VERSION":"2018-05-30"},has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:void 0,createDepositAddress:!0,createOrder:void 0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:void 0,fetchCurrencies:!0,fetchDepositAddress:void 0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyBuys:!0,fetchMySells:!0,fetchMyTrades:void 0,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:void 0,fetchOrder:void 0,fetchOrderBook:!1,fetchOrders:void 0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:void 0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:void 0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg",api:"https://api.coinbase.com",www:"https://www.coinbase.com",doc:"https://developers.coinbase.com/api/v2",fees:"https://support.coinbase.com/customer/portal/articles/2109597-buy-sell-bank-transfer-fees",referral:"https://www.coinbase.com/join/58cbe25a355148797479dbd2"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["currencies","time","exchange-rates","users/{user_id}","prices/{symbol}/buy","prices/{symbol}/sell","prices/{symbol}/spot"]},private:{get:["accounts","accounts/{account_id}","accounts/{account_id}/addresses","accounts/{account_id}/addresses/{address_id}","accounts/{account_id}/addresses/{address_id}/transactions","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}","accounts/{account_id}/deposits","accounts/{account_id}/deposits/{deposit_id}","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}","payment-methods","payment-methods/{payment_method_id}","user","user/auth"],post:["accounts","accounts/{account_id}/primary","accounts/{account_id}/addresses","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}/complete","accounts/{account_id}/transactions/{transaction_id}/resend","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}/commit","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}/commit","accounts/{account_id}/deposists","accounts/{account_id}/deposists/{deposit_id}/commit","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}/commit"],put:["accounts/{account_id}","user"],delete:["accounts/{id}","accounts/{account_id}/transactions/{transaction_id}"]}},precisionMode:d,exceptions:{exact:{two_factor_required:n,param_required:r,validation_error:r,invalid_request:r,personal_details_required:n,identity_verification_required:n,jumio_verification_required:n,jumio_face_match_verification_required:n,unverified_email:n,authentication_error:n,invalid_authentication_method:n,invalid_token:n,revoked_token:n,expired_token:n,invalid_scope:n,not_found:r,rate_limit_exceeded:o,internal_server_error:r},broad:{"request timestamp expired":c}},commonCurrencies:{CGLD:"CELO"},options:{fetchCurrencies:{expires:5e3},accounts:["wallet","fiat"]}})}async fetchTime(e={}){const t=await this.publicGetTime(e),s=this.safeValue(t,"data",{});return this.safeTimestamp(s,"epoch")}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(this.extend({limit:100},e)),s=this.safeValue(t,"data",[]);return this.parseAccounts(s,e)}parseAccount(e){const t=this.safeValue(e,"currency",{}),s=this.safeString(t,"code"),i=this.safeCurrencyCode(s);return{id:this.safeString(e,"id"),type:this.safeString(e,"type"),code:i,info:e}}async createDepositAddress(e,t={}){let s=this.safeString(t,"account_id");if(t=this.omit(t,"account_id"),void 0===s){await this.loadAccounts();for(let t=0;t<this.accounts.length;t++){const i=this.accounts[t];if(i.code===e&&"wallet"===i.type){s=i.id;break}}}if(void 0===s)throw new r(this.id+" createDepositAddress() could not find the account with matching currency code, specify an `account_id` extra param");const i={account_id:s},a=await this.privatePostAccountsAccountIdAddresses(this.extend(i,t)),n=this.safeValue(a,"data",{});return{currency:e,tag:this.safeString(n,"destination_tag"),address:this.safeString(n,"address"),info:a}}async fetchMySells(e,t,s,i={}){const r=this.prepareAccountRequest(s,i);await this.loadMarkets();const a=this.omit(i,["account_id","accountId"]),n=await this.privateGetAccountsAccountIdSells(this.extend(r,a));return this.parseTrades(n.data,void 0,t,s)}async fetchMyBuys(e,t,s,i={}){const r=this.prepareAccountRequest(s,i);await this.loadMarkets();const a=this.omit(i,["account_id","accountId"]),n=await this.privateGetAccountsAccountIdBuys(this.extend(r,a));return this.parseTrades(n.data,void 0,t,s)}async fetchTransactionsWithMethod(e,t,s,i,r={}){const a=await this.prepareAccountRequestWithCurrencyCode(t,i,r);await this.loadMarkets();const n=this.omit(r,["account_id","accountId"]),o=await this[e](this.extend(a,n));return this.parseTransactions(o.data,void 0,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsWithMethod("privateGetAccountsAccountIdWithdrawals",e,t,s,i)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsWithMethod("privateGetAccountsAccountIdDeposits",e,t,s,i)}parseTransactionStatus(e){return this.safeString({created:"pending",completed:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t){const s=this.safeValue(e,"subtotal",{}),i=this.safeValue(e,"fee",{}),r=this.safeString(e,"id"),a=this.parse8601(this.safeValue(e,"created_at")),n=this.parse8601(this.safeValue(e,"updated_at")),o=this.safeString(e,"resource"),c=this.safeNumber(s,"amount"),d=this.safeString(s,"currency"),h=this.safeCurrencyCode(d),l=this.safeNumber(i,"amount"),u=this.safeString(i,"currency"),f={cost:l,currency:this.safeCurrencyCode(u)};let p=this.parseTransactionStatus(this.safeString(e,"status"));if(void 0===p){p=this.safeValue(e,"committed")?"ok":"pending"}return{info:e,id:r,txid:r,timestamp:a,datetime:this.iso8601(a),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:c,currency:h,status:p,updated:n,fee:f}}parseTrade(e,t){let s;const i=this.safeValue(e,"total",{}),r=this.safeValue(e,"amount",{}),a=this.safeValue(e,"subtotal",{}),n=this.safeValue(e,"fee",{}),o=this.safeString(e,"id"),c=this.parse8601(this.safeValue(e,"created_at"));if(void 0===t){const e=this.safeString(r,"currency"),t=this.safeString(i,"currency");if(void 0!==e&&void 0!==t){s=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t)}}const d=this.safeString(e,"resource"),l=this.safeString(a,"amount"),u=this.safeString(r,"amount"),f=this.parseNumber(l),p=this.parseNumber(u),m=this.parseNumber(h.stringDiv(l,u)),g=this.safeNumber(n,"amount"),y=this.safeString(n,"currency"),b={cost:g,currency:this.safeCurrencyCode(y)};return{info:e,id:o,order:undefined,timestamp:c,datetime:this.iso8601(c),symbol:s,type:undefined,side:d,takerOrMaker:void 0,price:m,amount:p,cost:f,fee:b}}async fetchMarkets(e={}){const t=await this.fetchCurrenciesFromCache(e),s=this.safeValue(t,"currencies",{}),i=this.safeValue(t,"exchangeRates",{}),r=this.safeValue(s,"data",[]),a=this.indexBy(r,"id"),n=this.safeValue(this.safeValue(i,"data",{}),"rates",{}),o=Object.keys(n),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeCurrencyCode(t);if("crypto"===(t in a?"fiat":"crypto"))for(let e=0;e<r.length;e++){const i=r[e],a=this.safeString(i,"id"),n=this.safeCurrencyCode(a);c.push({id:t+"-"+a,symbol:s+"/"+n,base:s,quote:n,settle:void 0,baseId:t,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(i,"min_size"),max:void 0}},info:i})}}return c}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),s=this.safeInteger(t,"timestamp"),i=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===s||r-s>i){const s=await this.publicGetCurrencies(e),i=await this.publicGetExchangeRates(e);this.options.fetchCurrencies=this.extend(t,{currencies:s,exchangeRates:i,timestamp:r})}return this.safeValue(this.options,"fetchCurrencies",{})}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),s=this.safeValue(t,"currencies",{}),i=this.safeValue(t,"exchangeRates",{}),r=this.safeValue(s,"data",[]),a=this.indexBy(r,"id"),n=this.safeValue(this.safeValue(i,"data",{}),"rates",{}),o=Object.keys(n),c={};for(let e=0;e<o.length;e++){const t=o[e],s=t in a?"fiat":"crypto",i=this.safeValue(a,t,{}),r=this.safeString(i,"id",t),n=this.safeString(i,"name"),d=this.safeCurrencyCode(r);c[d]={id:r,code:d,info:i,type:s,name:n,active:!0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:this.safeNumber(i,"min_size"),max:void 0},withdraw:{min:void 0,max:void 0}}}}return c}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetExchangeRates(this.extend({},t)),i=this.safeValue(s,"data",{}),r=this.safeValue(i,"rates",{}),a=this.safeString(i,"currency"),n={},o=Object.keys(r);for(let e=0;e<o.length;e++){const t=o[e],s=t+"-"+a,i=this.safeMarket(s,void 0,"-");n[i.symbol]=this.parseTicker(r[t],i)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=this.extend({symbol:s.id},t),r=await this.publicGetPricesSymbolSpot(i),a=await this.publicGetPricesSymbolBuy(i),n=await this.publicGetPricesSymbolSell(i);return this.parseTicker([r,a,n],s)}parseTicker(e,t){const s=this.safeSymbol(void 0,t);let i,r,a;const n=this.milliseconds();if("string"!=typeof e){const[t,s,n]=e,o=this.safeValue(t,"data",{}),c=this.safeValue(s,"data",{}),d=this.safeValue(n,"data",{});a=this.safeString(o,"amount"),r=this.safeString(c,"amount"),i=this.safeString(d,"amount")}return this.safeTicker({symbol:s,timestamp:n,datetime:this.iso8601(n),bid:r,ask:i,last:a,high:void 0,low:void 0,bidVolume:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}parseBalance(e,t={}){const s=this.safeValue(e,"data",[]),i=this.safeValue(t,"type",this.options.accounts),r={info:e};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeString(t,"type");if(this.inArray(a,i)){const e=this.safeValue(t,"balance");if(void 0!==e){const t=this.safeString(e,"currency"),s=this.safeCurrencyCode(t),i=this.safeString(e,"amount"),a=i;let n=this.safeValue(r,s);void 0===n?(n=this.account(),n.free=a,n.total=i):(n.free=h.stringAdd(n.free,i),n.total=h.stringAdd(n.total,i)),r[s]=n}}}return this.safeBalance(r)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(this.extend({limit:100},e));return this.parseBalance(t,e)}async fetchLedger(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.prepareAccountRequestWithCurrencyCode(e,s,i),n=this.omit(i,["account_id","accountId"]),o=await this.privateGetAccountsAccountIdTransactions(this.extend(a,n));return this.parseLedger(o.data,r,t,s)}parseLedgerEntryStatus(e){return this.safeString({completed:"ok"},e,e)}parseLedgerEntryType(e){return this.safeString({buy:"trade",sell:"trade",fiat_deposit:"transaction",fiat_withdrawal:"transaction",exchange_deposit:"transaction",exchange_withdrawal:"transaction",send:"transaction",pro_deposit:"transaction",pro_withdrawal:"transaction"},e,e)}parseLedgerEntry(e,t){const s=this.safeValue(e,"amount",{});let i,r=this.safeNumber(s,"amount");r<0?(i="out",r=-r):i="in";const a=this.safeString(s,"currency"),n=this.safeCurrencyCode(a,t);let o;const c=this.safeValue(e,"network",{}),d=this.safeValue(c,"transaction_fee");if(void 0!==d){const e=this.safeString(d,"currency"),s=this.safeCurrencyCode(e,t);o={cost:this.safeNumber(d,"amount"),currency:s}}const h=this.parse8601(this.safeValue(e,"created_at")),l=this.safeString(e,"id"),u=this.parseLedgerEntryType(this.safeString(e,"type")),f=this.parseLedgerEntryStatus(this.safeString(e,"status")),p=this.safeString(e,"resource_path");let m;if(void 0!==p){const e=p.split("/");e.length>3&&(m=e[3])}return{info:e,id:l,timestamp:h,datetime:this.iso8601(h),direction:i,account:m,referenceId:void 0,referenceAccount:void 0,type:u,currency:n,amount:r,before:void 0,after:void 0,status:f,fee:o}}async findAccountId(e){await this.loadMarkets(),await this.loadAccounts();for(let t=0;t<this.accounts.length;t++){const s=this.accounts[t];if(s.code===e)return s.id}}prepareAccountRequest(e,t={}){const s=this.safeString2(t,"account_id","accountId");if(void 0===s)throw new a(this.id+" prepareAccountRequest() method requires an account_id (or accountId) parameter");const i={account_id:s};return void 0!==e&&(i.limit=e),i}async prepareAccountRequestWithCurrencyCode(e,t,s={}){let i=this.safeString2(s,"account_id","accountId");if(void 0===i){if(void 0===e)throw new a(this.id+" prepareAccountRequestWithCurrencyCode() method requires an account_id (or accountId) parameter OR a currency code argument");if(i=await this.findAccountId(e),void 0===i)throw new r(this.id+" prepareAccountRequestWithCurrencyCode() could not find account id for "+e)}const n={account_id:i};return void 0!==t&&(n.limit=t),n}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));"GET"===s&&Object.keys(o).length&&(n+="?"+this.urlencode(o));const c=this.urls.api+n;if("private"===t){const e=this.safeString(this.headers,"Authorization");if(void 0!==e)r={Authorization:e,"Content-Type":"application/json"};else if(this.token)r={Authorization:"Bearer "+this.token,"Content-Type":"application/json"};else{this.checkRequiredCredentials();const e=this.nonce().toString();let t="";"GET"!==s&&Object.keys(o).length&&(t=a=this.json(o));const i=e+s+n+t,c=this.hmac(this.encode(i),this.encode(this.secret));r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":c,"CB-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.id+" "+n;let l=this.safeString(o,"error");if(void 0!==l){const e=this.safeString(o,"error_description");throw this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,e,h),new r(h)}const u=this.safeValue(o,"errors");if(void 0!==u&&Array.isArray(u)){if(u.length>0){l=this.safeString(u[0],"id");const e=this.safeString(u[0],"message");if(void 0!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,e,h),new r(h)}}if(void 0===this.safeValue(o,"data"))throw new r(this.id+" failed due to a malformed response "+this.json(o))}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],185:[function(e,t,s){"use strict";const i=e("./coinbasepro.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinbaseprime",name:"Coinbase Prime",pro:!0,hostname:"exchange.coinbase.com",urls:{test:{public:"https://public.sandbox.exchange.coinbase.com",private:"https://public.sandbox.exchange.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://exchange.coinbase.com",doc:"https://docs.exchange.coinbase.com"}})}}},{"./coinbasepro.js":186}],186:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{InsufficientFunds:r,ArgumentsRequired:a,ExchangeError:n,InvalidOrder:o,InvalidAddress:c,AuthenticationError:d,NotSupported:h,OrderNotFound:l,OnMaintenance:u,PermissionDenied:f,RateLimitExceeded:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinbasepro",name:"Coinbase Pro",countries:["US"],rateLimit:100,userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:void 0,fetchDeposits:!0,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":60,"5m":300,"15m":900,"1h":3600,"6h":21600,"1d":86400},hostname:"pro.coinbase.com",urls:{test:{public:"https://api-public.sandbox.pro.coinbase.com",private:"https://api-public.sandbox.pro.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://pro.coinbase.com/",doc:"https://docs.pro.coinbase.com",fees:["https://docs.pro.coinbase.com/#fees","https://support.pro.coinbase.com/customer/en/portal/articles/2945310-fees"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:["currencies","products","products/{id}","products/{id}/book","products/{id}/candles","products/{id}/stats","products/{id}/ticker","products/{id}/trades","time","products/spark-lines"]},private:{get:["accounts","accounts/{id}","accounts/{id}/holds","accounts/{id}/ledger","accounts/{id}/transfers","coinbase-accounts","fills","funding","fees","margin/profile_information","margin/buying_power","margin/withdrawal_power","margin/withdrawal_power_all","margin/exit_plan","margin/liquidation_history","margin/position_refresh_amounts","margin/status","oracle","orders","orders/{id}","orders/client:{client_oid}","otc/orders","payment-methods","position","profiles","profiles/{id}","reports/{report_id}","transfers","transfers/{transfer_id}","users/self/exchange-limits","users/self/hold-balances","users/self/trailing-volume","withdrawals/fee-estimate"],post:["conversions","deposits/coinbase-account","deposits/payment-method","coinbase-accounts/{id}/addresses","funding/repay","orders","position/close","profiles/margin-transfer","profiles/transfer","reports","withdrawals/coinbase","withdrawals/coinbase-account","withdrawals/crypto","withdrawals/payment-method"],delete:["orders","orders/client:{client_oid}","orders/{id}"]}},commonCurrencies:{CGLD:"CELO"},precisionMode:m,fees:{trading:{tierBased:!0,percentage:!0,maker:.004,taker:.006},funding:{tierBased:!1,percentage:!1,withdraw:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:25},deposit:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:10}}},exceptions:{exact:{"Insufficient funds":r,NotFound:l,"Invalid API Key":d,"invalid signature":d,"Invalid Passphrase":d,"Invalid order id":o,"Private rate limit exceeded":p,"Trading pair not available":f,"Product not found":o},broad:{"Order already done":l,"order not found":l,"price too small":o,"price too precise":o,"under maintenance":u,"size is too small":o,"Cancel only mode":u}}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"name"),n=this.safeCurrencyCode(r),o=this.safeValue(i,"details",{}),c="online"===this.safeString(i,"status");s[n]={id:r,code:n,info:i,type:this.safeString(o,"type"),name:a,active:c,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.safeNumber(i,"max_precision"),limits:{amount:{min:this.safeNumber(o,"min_size"),max:void 0},withdraw:{min:this.safeNumber(o,"min_withdrawal_amount"),max:void 0}}}}return s}async fetchMarkets(e={}){const t=await this.publicGetProducts(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),[a,n]=r.split("-"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(i,"status");s.push(this.extend(this.fees.trading,{id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(i,"margin_enabled"),swap:!1,future:!1,option:!1,active:"online"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(i,"base_increment"),price:this.safeNumber(i,"quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(i,"min_market_funds"),max:void 0}},info:i}))}return s}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseAccounts(t,e)}parseAccount(e){const t=this.safeString(e,"currency");return{id:this.safeString(e,"id"),type:void 0,code:this.safeCurrencyCode(t),info:e}}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"hold"),n.total=this.safeString(i,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={id:this.marketId(e),level:2},r=await this.publicGetProductsIdBook(this.extend(i,s)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"sequence"),a}parseTicker(e,t){let s,i,r,a,n,o,c,d;const h=void 0===t?void 0:t.symbol;return Array.isArray(e)?(a=this.safeString(e,4),s=this.milliseconds()):(s=this.parse8601(this.safeValue(e,"time")),i=this.safeString(e,"bid"),r=this.safeString(e,"ask"),n=this.safeString(e,"high"),o=this.safeString(e,"low"),c=this.safeString(e,"open"),a=this.safeString2(e,"price","last"),d=this.safeString(e,"volume")),this.safeTicker({symbol:h,timestamp:s,datetime:this.iso8601(s),high:n,low:o,bid:i,bidVolume:void 0,ask:r,askVolume:void 0,vwap:void 0,open:c,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetProductsSparkLines(this.extend({},t)),i={},r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeValue(s,t,[]),n=this.safeValue(a,0,[]),o=this.safeMarket(t,void 0,"-");i[o.symbol]=this.parseTicker(n,o)}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={id:s.id},r=this.safeString(this.options,"fetchTickerMethod","publicGetProductsIdTicker"),a=await this[r](this.extend(i,t));return this.parseTicker(a,s)}parseTrade(e,t){const s=this.parse8601(this.safeString2(e,"time","created_at")),i=this.safeString(e,"product_id");let r,a,n;t=this.safeMarket(i,t,"-");const o=this.safeStringLower(t,"quoteId");if(void 0!==o){const s=o+"_value";n=this.safeString(e,s);const i=this.safeString(e,"liquidity");void 0!==i&&(a="T"===i?"taker":"maker",r=this.safeString(t,a))}const c={cost:this.safeString2(e,"fill_fees","fee"),currency:t.quote,rate:r},d=this.safeString(e,"trade_id");let h="buy"===e.side?"sell":"buy";const l=this.safeString(e,"order_id"),u=this.safeString(e,"maker_order_id"),f=this.safeString(e,"taker_order_id");(void 0!==l||void 0!==u&&void 0!==f)&&(h="buy"===e.side?"buy":"sell");const p=this.safeString(e,"price"),m=this.safeString(e,"size");return this.safeTrade({id:d,order:l,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,takerOrMaker:a,side:h,price:p,amount:m,fee:c,cost:n},t)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={product_id:r.id};void 0!==s&&(n.limit=s);const o=await this.privateGetFills(this.extend(n,i));return this.parseTrades(o,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={id:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetProductsIdTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),s=this.safeNumber(t,"maker_fee_rate"),i=this.safeNumber(t,"taker_fee_rate"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:s,taker:i,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,3),this.safeNumber(e,2),this.safeNumber(e,1),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t],o={id:a.id,granularity:n};void 0!==s&&(o.start=this.iso8601(s),i=void 0===i?300:Math.min(300,i),o.end=this.iso8601(this.sum((i-1)*n*1e3,s)));const c=await this.publicGetProductsIdCandles(this.extend(o,r));return this.parseOHLCVs(c,a,t,s,i)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeTimestamp(t,"epoch")}parseOrderStatus(e){return this.safeString({pending:"open",active:"open",open:"open",done:"closed",canceled:"canceled",canceling:"open"},e,e)}parseOrder(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"product_id");t=this.safeMarket(i,t,"-");let r=this.parseOrderStatus(this.safeString(e,"status"));const a=this.safeString(e,"done_reason");"closed"===r&&"canceled"===a&&(r="canceled");const n=this.safeString(e,"price"),o=this.safeString(e,"filled_size"),c=this.safeString(e,"size",o),d=this.safeString(e,"executed_value"),h=this.safeNumber(e,"fill_fees");let l;void 0!==h&&(l={cost:h,currency:t.quote,rate:void 0});const u=this.safeString(e,"id"),f=this.safeString(e,"type"),p=this.safeString(e,"side"),m=this.safeString(e,"time_in_force"),g=this.safeValue(e,"post_only"),y=this.safeNumber(e,"stop_price"),b=this.safeString(e,"client_oid");return this.safeOrder({id:u,clientOrderId:b,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:r,symbol:t.symbol,type:f,timeInForce:m,postOnly:g,side:p,price:n,stopPrice:y,cost:d,amount:c,filled:o,remaining:void 0,fee:l,average:void 0,trades:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeString2(s,"clientOrderId","client_oid");let a;void 0===r?(a="privateGetOrdersId",i.id=e):(a="privateGetOrdersClientClientOid",i.client_oid=r,s=this.omit(s,["clientOrderId","client_oid"]));const n=await this[a](this.extend(i,s));return this.parseOrder(n)}async fetchOrderTrades(e,t,s,i,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e},o=await this.privateGetFills(this.extend(n,r));return this.parseTrades(o,a,s,i)}async fetchOrders(e,t,s,i={}){return await this.fetchOpenOrders(e,t,s,this.extend({status:"all"},i))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.product_id=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetOrders(this.extend(r,i));return this.parseOrders(n,a,t,s)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOpenOrders(e,t,s,this.extend({status:"done"},i))}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={type:t,side:s,product_id:n.id},c=this.safeString2(a,"clientOrderId","client_oid");void 0!==c&&(o.client_oid=c);const d=this.safeNumber2(a,"stopPrice","stop_price");void 0!==d&&(o.stop_price=this.priceToPrecision(e,d));const h=this.safeString2(a,"timeInForce","time_in_force");void 0!==h&&(o.time_in_force=h);if(this.safeValue2(a,"postOnly","post_only",!1)&&(o.post_only=!0),a=this.omit(a,["timeInForce","time_in_force","stopPrice","stop_price","clientOrderId","client_oid","postOnly","post_only"]),"limit"===t)o.price=this.priceToPrecision(e,r),o.size=this.amountToPrecision(e,i);else if("market"===t){let t=this.safeNumber2(a,"cost","funds");void 0===t?void 0!==r&&(t=i*r):a=this.omit(a,["cost","funds"]),void 0!==t?o.funds=this.costToPrecision(e,t):o.size=this.amountToPrecision(e,i)}const l=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(l,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeString2(s,"clientOrderId","client_oid");let a,n;return void 0===r?(a="privateDeleteOrdersId",i.id=e):(a="privateDeleteOrdersClientClientOid",i.client_oid=r,s=this.omit(s,["clientOrderId","client_oid"])),void 0!==t&&(n=this.market(t),i.product_id=n.symbol),await this[a](this.extend(i,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;return void 0!==e&&(i=this.market(e),s.product_id=i.symbol),await this.privateDeleteOrders(this.extend(s,t))}async fetchPaymentMethods(e={}){return await this.privateGetPaymentMethods(e)}async deposit(e,t,s,i={}){await this.loadMarkets();const r={currency:this.currency(e).id,amount:t};let a="privatePostDeposits";if("payment_method_id"in i)a+="PaymentMethod";else{if(!("coinbase_account_id"in i))throw new h(this.id+" deposit() requires one of `coinbase_account_id` or `payment_method_id` extra params");a+="CoinbaseAccount"}const o=await this[a](this.extend(r,i));if(!o)throw new n(this.id+" deposit() error: "+this.json(o));return{info:o,id:o.id}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),o={currency:a.id,amount:t};let c="privatePostWithdrawals";"payment_method_id"in r?c+="PaymentMethod":"coinbase_account_id"in r?c+="CoinbaseAccount":(c+="Crypto",o.crypto_address=s,void 0!==i&&(o.destination_tag=i));const d=await this[c](this.extend(o,r));if(!d)throw new n(this.id+" withdraw() error: "+this.json(d));return this.parseTransaction(d,a)}parseLedgerEntryType(e){return this.safeString({transfer:"transfer",match:"trade",fee:"fee",rebate:"rebate",conversion:"trade"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"id");let i,r=this.safeString(e,"amount");const a=this.safeString(e,"balance"),n=g.stringSub(a,r);g.stringLt(r,"0")?(i="out",r=g.stringAbs(r)):i="in";const o=this.parseNumber(r),c=this.parseNumber(a),d=this.parseNumber(n),h=this.parse8601(this.safeValue(e,"created_at")),l=this.parseLedgerEntryType(this.safeString(e,"type")),u=this.safeCurrencyCode(void 0,t),f=this.safeValue(e,"details",{});let p,m,y;"transfer"===l?(p=this.safeString(f,"from"),m=this.safeString(f,"to"),y=this.safeString(f,"profile_transfer_id")):y=this.safeString(f,"order_id");return{id:s,currency:u,account:p,referenceAccount:m,referenceId:y,status:"ok",amount:o,before:d,after:c,fee:void 0,direction:i,timestamp:h,datetime:this.iso8601(h),type:l,info:e}}async fetchLedger(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchLedger() requires a code param");await this.loadMarkets(),await this.loadAccounts();const r=this.currency(e),o=this.indexBy(this.accounts,"code"),c=this.safeValue(o,e);if(void 0===c)throw new n(this.id+" fetchLedger() could not find account id for "+e);const d={id:c.id};void 0!==t&&(d.start_date=this.iso8601(t)),void 0!==s&&(d.limit=s);const h=await this.privateGetAccountsIdLedger(this.extend(d,i));for(let t=0;t<h.length;t++)h[t].currency=e;return this.parseLedger(h,r,t,s)}async fetchTransactions(e,t,s,i={}){let r;await this.loadMarkets(),await this.loadAccounts();let a=this.safeString(i,"id");if(void 0===a&&void 0!==e){r=this.currency(e);const t=this.indexBy(this.accounts,"code"),s=this.safeValue(t,e);if(void 0===s)throw new n(this.id+" fetchTransactions() could not find account id for "+e);a=s.id}const o={};let c;if(void 0!==a&&(o.id=a),void 0!==s&&(o.limit=s),void 0===a){c=await this.privateGetTransfers(this.extend(o,i));for(let e=0;e<c.length;e++){const t=this.safeString(c[e],"account_id"),s=this.safeValue(this.accountsById,t),i=this.safeString(s,"code");c[e].currency=i}}else{c=await this.privateGetAccountsIdTransfers(this.extend(o,i));for(let t=0;t<c.length;t++)c[t].currency=e}return this.parseTransactions(c,r,t,s)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"deposit"},i))}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"withdraw"},i))}parseTransactionStatus(e){if(this.safeValue(e,"canceled_at"))return"canceled";const t=this.safeValue(e,"processed_at"),s=this.safeValue(e,"completed_at");return s?"ok":t&&!s?"failed":"pending"}parseTransaction(e,t){const s=this.safeValue(e,"details",{}),i=this.safeString(e,"id"),r=this.safeString(s,"crypto_transaction_hash"),a=this.parse8601(this.safeString(e,"created_at")),n=this.parse8601(this.safeString(e,"processed_at")),o=this.safeString(e,"currency"),c=this.safeCurrencyCode(o,t),d=this.parseTransactionStatus(e);let h=this.safeNumber(e,"amount"),l=this.safeString(e,"type"),u=this.safeString(s,"crypto_address");const f=this.safeString(s,"destination_tag");let p;if(u=this.safeString(e,"crypto_address",u),"withdraw"===l){l="withdrawal",u=this.safeString(s,"sent_to_address",u);const e=this.safeNumber(s,"fee");void 0!==e&&(void 0!==h&&(h-=e),p={cost:e,currency:c})}return{info:e,id:i,txid:r,timestamp:a,datetime:this.iso8601(a),network:void 0,address:u,addressTo:void 0,addressFrom:void 0,tag:f,tagTo:void 0,tagFrom:void 0,type:l,amount:h,currency:c,status:d,updated:n,fee:p}}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e);let i=this.safeValue(this.options,"coinbaseAccounts");void 0===i&&(i=await this.privateGetCoinbaseAccounts(),this.options.coinbaseAccounts=i,this.options.coinbaseAccountsByCurrencyId=this.indexBy(i,"currency"));const r=s.id,a=this.safeValue(this.options.coinbaseAccountsByCurrencyId,r);if(void 0===a)throw new c(this.id+" createDepositAddress() could not find currency code "+e+" with id = "+r+" in this.options['coinbaseAccountsByCurrencyId']");const n={id:a.id},o=await this.privatePostCoinbaseAccountsIdAddresses(this.extend(n,t)),d=this.safeString(o,"address"),h=this.safeString(o,"destination_tag");return{currency:e,address:this.checkAddress(d),tag:h,info:o}}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));"GET"===s&&Object.keys(o).length&&(n+="?"+this.urlencode(o));const c=this.implodeHostname(this.urls.api[t])+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t="";"GET"!==s&&Object.keys(o).length&&(t=a=this.json(o));const i=e+s+n+t;let c;try{c=this.base64ToBinary(this.secret)}catch(e){throw new d(this.id+" sign() invalid base64 secret")}const h=this.hmac(this.encode(i),c,"sha256","base64");r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":h,"CB-ACCESS-TIMESTAMP":e,"CB-ACCESS-PASSPHRASE":this.password,"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(400===e||404===e){if("{"===a[0]){const e=this.safeString(o,"message"),t=this.id+" "+e;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new n(t)}throw new n(this.id+" "+a)}}async request(e,t="public",s="GET",i={},r,a,o={},c={}){const d=await this.fetch2(e,t,s,i,r,a,o,c);if("string"!=typeof d&&"message"in d)throw new n(this.id+" "+this.json(d));return d}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],187:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,ExchangeError:a,AuthenticationError:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coincheck",name:"coincheck",countries:["JP","ID"],rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg",api:"https://coincheck.com/api",www:"https://coincheck.com",doc:"https://coincheck.com/documents/exchange/api",fees:["https://coincheck.com/exchange/fee","https://coincheck.com/info/fee"]},api:{public:{get:["exchange/orders/rate","order_books","rate/{pair}","ticker","trades"]},private:{get:["accounts","accounts/balance","accounts/leverage_balance","bank_accounts","deposit_money","exchange/orders/opens","exchange/orders/transactions","exchange/orders/transactions_pagination","exchange/leverage/positions","lending/borrows/matches","send_money","withdraws"],post:["bank_accounts","deposit_money/{id}/fast","exchange/orders","exchange/transfers/to_leverage","exchange/transfers/from_leverage","lending/borrows","lending/borrows/{id}/repay","send_money","withdraws"],delete:["bank_accounts/{id}","exchange/orders/{id}","withdraws/{id}"]}},markets:{"BTC/JPY":{id:"btc_jpy",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy",type:"spot",spot:!0},"ETC/JPY":{id:"etc_jpy",symbol:"ETC/JPY",base:"ETC",quote:"JPY",baseId:"etc",quoteId:"jpy",type:"spot",spot:!0},"FCT/JPY":{id:"fct_jpy",symbol:"FCT/JPY",base:"FCT",quote:"JPY",baseId:"fct",quoteId:"jpy",type:"spot",spot:!0},"MONA/JPY":{id:"mona_jpy",symbol:"MONA/JPY",base:"MONA",quote:"JPY",baseId:"mona",quoteId:"jpy",type:"spot",spot:!0},"ETC/BTC":{id:"etc_btc",symbol:"ETC/BTC",base:"ETC",quote:"BTC",baseId:"etc",quoteId:"btc",type:"spot",spot:!0}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0"),taker:this.parseNumber("0")}},precisionMode:o,exceptions:{exact:{"disabled API Key":n,"invalid authentication":n},broad:{}}})}parseBalance(e){const t={info:e},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.currency(r).id;if(a in e){const s=this.account(),i=a+"_reserved";s.free=this.safeString(e,a),s.used=this.safeString(e,i),t[r]=s}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsBalance(e);return this.parseBalance(t)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetExchangeOrdersOpens(i),n=this.safeValue(a,"orders",[]),o=this.parseOrders(n,r,t,s),c=[];for(let e=0;e<o.length;e++)c.push(this.extend(o[e],{status:"open"}));return c}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"order_type"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"pending_amount"),n=this.safeString(e,"pending_amount"),o=this.safeString(e,"rate"),c=this.safeString(e,"pair"),d=this.safeSymbol(c,t,"_");return this.safeOrder({id:s,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,amount:a,remaining:n,filled:void 0,side:i,type:void 0,timeInForce:void 0,postOnly:void 0,status:undefined,symbol:d,price:o,stopPrice:void 0,cost:void 0,fee:void 0,info:e,average:void 0,trades:void 0},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetOrderBooks(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){if("BTC/JPY"!==e)throw new r(this.id+" fetchTicker() supports BTC/JPY only");await this.loadMarkets();const s=this.market(e),i={pair:s.id},a=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(a,s)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"id"),r=this.safeString(e,"rate"),a=this.safeString(e,"pair");let n,o,c,d,h,l,u,f,p;if(t=this.safeValue(this.markets_by_id,a,t),void 0!==a)if(a in this.markets_by_id)o=(t=this.markets_by_id[a]).baseId,c=t.quoteId,n=t.symbol;else{const e=a.split("_");o=e[0],c=e[1];n=this.safeCurrencyCode(o)+"/"+this.safeCurrencyCode(c)}if(void 0===n&&(n=this.safeSymbol(void 0,t)),"liquidity"in e){"T"===this.safeString(e,"liquidity")?d="taker":"M"===this.safeString(e,"liquidity")&&(d="maker");const t=this.safeValue(e,"funds",{});h=this.safeString(t,o),l=this.safeString(t,c),f={currency:this.safeString(e,"fee_currency"),cost:this.safeString(e,"fee")},u=this.safeString(e,"side"),p=this.safeString(e,"order_id")}else h=this.safeString(e,"amount"),u=this.safeString(e,"order_type");return this.safeTrade({id:i,info:e,datetime:this.iso8601(s),timestamp:s,symbol:n,type:void 0,side:u,order:p,takerOrMaker:d,price:r,amount:h,cost:l,fee:f},t)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={};void 0!==s&&(a.limit=s);const n=await this.privateGetExchangeOrdersTransactionsPagination(this.extend(a,i)),o=this.safeValue(n,"transactions",[]);return this.parseTrades(o,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e),s=this.safeValue(t,"exchange_fees",{}),i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(s,r.id,{});i[t]={info:a,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!1}}return i}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n={pair:this.market(e).id};if("market"===t){const e=t+"_"+s;n.order_type=e;n[("buy"===s?e+"_":"")+"amount"]=i}else n.order_type=s,n.rate=r,n.amount=i;const o=await this.privatePostExchangeOrders(this.extend(n,a));return{info:o,id:this.safeString(o,"id")}}async cancelOrder(e,t,s={}){const i={id:e};return await this.privateDeleteExchangeOrdersId(this.extend(i,s))}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==s&&(a.limit=s);const n=await this.privateGetDepositMoney(this.extend(a,i)),o=this.safeValue(n,"deposits",[]);return this.parseTransactions(o,r,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={};void 0!==s&&(a.limit=s);const n=await this.privateGetWithdraws(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,r,t,s,{type:"withdrawal"})}parseTransactionStatus(e){return this.safeString({pending:"pending",processing:"pending",finished:"ok",canceled:"canceled",confirmed:"pending",received:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"address"),a=this.safeNumber(e,"amount"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.parseTransactionStatus(this.safeString(e,"status")),d=this.parse8601(this.safeString(e,"confirmed_at"));let h;const l=this.safeNumber(e,"fee");return void 0!==l&&(h={cost:l,currency:o}),{info:e,id:s,txid:void 0,timestamp:i,datetime:this.iso8601(i),network:void 0,address:r,addressTo:r,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:a,currency:o,status:c,updated:d,internal:void 0,fee:h}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e=this.nonce().toString();let t="";"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(this.keysort(o))):Object.keys(o).length&&(t=a=this.urlencode(this.keysort(o)));const i=e+n+t;r={"Content-Type":"application/x-www-form-urlencoded","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":e,"ACCESS-SIGNATURE":this.hmac(this.encode(i),this.encode(this.secret))}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;if(!this.safeValue(o,"success",!0)){const e=this.safeString(o,"error"),t=this.id+" "+this.json(o);throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,n,t),new a(this.id+" "+this.json(o))}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],188:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadRequest:n,BadSymbol:o,RateLimitExceeded:c,InsufficientFunds:d,OrderNotFound:h,InvalidOrder:l,AuthenticationError:u,PermissionDenied:f,ExchangeNotAvailable:p,RequestTimeout:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinex",name:"CoinEx",version:"v1",countries:["CN"],rateLimit:2.5,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddressByNetwork:!1,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,"fetchTransactionFee:":!1,fetchTransactoinFees:!1,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg",api:{public:"https://api.coinex.com",private:"https://api.coinex.com",perpetualPublic:"https://api.coinex.com/perpetual",perpetualPrivate:"https://api.coinex.com/perpetual"},www:"https://www.coinex.com",doc:"https://github.com/coinexcom/coinex_exchange_api/wiki",fees:"https://www.coinex.com/fees",referral:"https://www.coinex.com/register?refer_code=yw5fz"},api:{public:{get:{"amm/market":1,"common/currency/rate":1,"common/asset/config":1,"common/maintain/info":1,"common/temp-maintain/info":1,"margin/market":1,"market/info":1,"market/list":1,"market/ticker":1,"market/ticker/all":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/detail":1}},private:{get:{"account/amm/balance":40,"account/investment/balance":40,"account/balance/history":40,"account/market/fee":40,"balance/coin/deposit":40,"balance/coin/withdraw":40,"balance/info":40,"balance/deposit/address/{coin_type}":40,"contract/transfer/history":40,"credit/info":40,"credit/balance":40,"investment/transfer/history":40,"margin/account":1,"margin/config":1,"margin/loan/history":40,"margin/transfer/history":40,"order/deals":40,"order/finished":40,"order/pending":4,"order/status":4,"order/status/batch":4,"order/user/deals":40,"order/stop/finished":40,"order/stop/pending":4,"order/user/trade/fee":1,"order/market/trade/info":1,"sub_account/balance":1,"sub_account/transfer/history":40,"sub_account/auth/api/{user_auth_id}":40},post:{"balance/coin/withdraw":40,"contract/balance/transfer":40,"margin/flat":40,"margin/loan":40,"margin/transfer":40,"order/limit/batch":13.334,"order/ioc":6.667,"order/limit":6.667,"order/market":6.667,"order/modify":6.667,"order/stop/limit":6.667,"order/stop/market":6.667,"order/stop/modify":6.667,"sub_account/transfer":40,"sub_account/register":1,"sub_account/unfrozen":40,"sub_account/frozen":40,"sub_account/auth/api":40},put:{"balance/deposit/address/{coin_type}":40,"sub_account/auth/api/{user_auth_id}":40,"v1/account/settings":40},delete:{"balance/coin/withdraw":40,"order/pending/batch":13.334,"order/pending":6.667,"order/stop/pending":13.334,"order/stop/pending/{id}":13.334,"sub_account/auth/api/{user_auth_id}":40}},perpetualPublic:{get:{ping:1,time:1,"market/list":1,"market/limit_config":1,"market/ticker":1,"market/ticker/all":1,"market/depth":1,"market/deals":1,"market/funding_history":1,"market/user_deals":1,"market/kline":1}},perpetualPrivate:{get:{"asset/query":40,"order/pending":4,"order/finished":40,"order/stop_finished":40,"order/stop_pending":4,"order/status":4,"order/stop_status":4,"position/pending":40,"position/funding":40},post:{"market/adjust_leverage":1,"market/position_expect":1,"order/put_limit":10,"order/put_market":10,"order/put_stop_limit":10,"order/put_stop_market":10,"order/modify":10,"order/modify_stop":10,"order/cancel":10,"order/cancel_all":20,"order/cancel_batch":20,"order/cancel_stop":10,"order/cancel_stop_all":20,"order/close_limit":10,"order/close_market":10,"position/adjust_margin":10,"position/stop_loss":10,"position/take_profit":10,"position/market_close":10}}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BCH:0,BTC:.001,LTC:.001,ETH:.001,ZEC:1e-4,DASH:1e-4}}},limits:{amount:{min:.001,max:void 0}},precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00000001")},options:{createMarketBuyOrderRequiresPrice:!0,defaultType:"spot",defaultSubType:"linear",defaultMarginMode:"isolated",fetchDepositAddress:{fillResponseFromRequest:!0},accountsById:{spot:"0"}},commonCurrencies:{ACM:"Actinium"},precisionMode:g})}async fetchCurrencies(e={}){const t=await this.publicGetCommonAssetConfig(e),s=this.safeValue(t,"data",[]),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=s[i[e]],a=this.safeString(t,"asset"),n=this.safeString(t,"chain"),o=this.safeCurrencyCode(a);void 0===this.safeValue(r,o)&&(r[o]={id:a,numericId:void 0,code:o,info:t,name:void 0,active:!0,deposit:this.safeValue(t,"can_deposit"),withdraw:this.safeValue(t,"can_withdraw"),fee:this.safeNumber(t,"withdraw_tx_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"withdrawal_precision"))),limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(t,"deposit_least_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw_least_amount"),max:void 0}}});const c=this.safeValue(r[o],"networks",{}),d={info:t,id:n,network:n,name:void 0,limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(t,"deposit_least_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw_least_amount"),max:void 0}},active:!0,deposit:this.safeValue(t,"can_deposit"),withdraw:this.safeValue(t,"can_withdraw"),fee:this.safeNumber(t,"withdraw_tx_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"withdrawal_precision")))};c[n]=d,r[o].networks=c}return r}async fetchMarkets(e={}){let t=[];const[s,i]=this.handleMarketTypeAndParams("fetchMarkets",void 0,e);if("spot"===s||"margin"===s)t=await this.fetchSpotMarkets(i);else{if("swap"!==s)throw new r(this.id+" does not support the '"+s+"' market type, set exchange.options['defaultType'] to 'spot', 'margin' or 'swap'");t=await this.fetchContractMarkets(i)}return t}async fetchSpotMarkets(e){const t=await this.publicGetMarketInfo(e),s=this.safeValue(t,"data",{}),i=[],r=Object.keys(s);for(let e=0;e<r.length;e++){const t=s[r[e]],a=this.safeString(t,"name"),n=this.safeString(t,"trading_name"),o=n,c=this.safeString(t,"pricing_name"),d=this.safeCurrencyCode(o),h=this.safeCurrencyCode(c);let l=d+"/"+h;n===a&&(l=a),i.push({id:a,symbol:l,base:d,quote:h,settle:void 0,baseId:o,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate"),maker:this.safeNumber(t,"maker_fee_rate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"trading_decimal"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricing_decimal")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_amount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchContractMarkets(e){const t=await this.perpetualPublicGetMarketList(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.fees,a=this.safeValue(t,"leverages",[]),n=this.safeInteger(t,"type"),o=1===n,c=2===n,d=this.safeString(t,"name"),h=this.safeString(t,"stock"),l=this.safeString(t,"money"),u=this.safeCurrencyCode(h),f=this.safeCurrencyCode(l),p=1===n?"USDT":h,m=this.safeCurrencyCode(p),g=u+"/"+f+":"+m;i.push({id:d,symbol:g,base:u,quote:f,settle:m,baseId:h,quoteId:l,settleId:p,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:this.safeValue(t,"available"),contract:!0,linear:o,inverse:c,taker:r.trading.taker,maker:r.trading.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"stock_prec"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"money_prec")))},limits:{leverage:{min:this.safeString(a,0),max:this.safeString(a,a.length-1)},amount:{min:this.safeString(t,"amount_min"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeInteger(e,"date"),i=this.safeSymbol(void 0,t);e=this.safeValue(e,"ticker",{});const r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString2(e,"vol","volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=s.swap?"perpetualPublicGetMarketTicker":"publicGetMarketTicker",a=await this[r](this.extend(i,t));return this.parseTicker(a.data,s)}async fetchTickers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),r="swap"===s?"perpetualPublicGetMarketTickerAll":"publicGetMarketTickerAll",a=await this[r](i),n=this.safeValue(a,"data"),o=this.safeInteger(n,"date"),c=this.safeValue(n,"ticker",{}),d=Object.keys(c),h={};for(let e=0;e<d.length;e++){const t=d[e],s=this.safeMarket(t),i=s.symbol,r=this.parseTicker({date:o,ticker:c[t]},s);r.symbol=i,h[i]=r}return this.filterByArray(h,"symbol",e)}async fetchTime(e={}){const t=await this.perpetualPublicGetTime(e);return this.safeNumber(t,"data")}async fetchOrderBook(e,t=20,s={}){if(void 0===e)throw new a(this.id+" fetchOrderBook() requires a symbol argument");await this.loadMarkets();const i=this.market(e);void 0===t&&(t=20);const r={market:this.marketId(e),merge:"0",limit:t.toString()},n=i.swap?"perpetualPublicGetMarketDepth":"publicGetMarketDepth",o=await this[n](this.extend(r,s)),c=this.safeValue(o,"data",{}),d=this.safeInteger(c,"time");return this.parseOrderBook(c,e,d)}parseTrade(e,t){let s=this.safeTimestamp2(e,"create_time","time");void 0===s&&(s=this.safeInteger(e,"date_ms"));const i=this.safeString(e,"id"),r=this.safeString(e,"order_id"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"market");t=this.safeMarket(o,t);const c=this.safeSymbol(o,t),d=this.safeString(e,"deal_money");let h;const l=this.safeString2(e,"fee","deal_fee");if(void 0!==l){const t=this.safeString(e,"fee_asset");h={cost:l,currency:this.safeCurrencyCode(t)}}let u,f=this.safeString(e,"role");return"1"===f?f="maker":"2"===f&&(f="taker"),"swap"===t.type?(u=this.safeInteger(e,"side"),1===u?u="sell":2===u&&(u="buy"),void 0===u&&(u=this.safeString(e,"type"))):u=this.safeString(e,"type"),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:c,id:i,order:r,type:void 0,side:u,takerOrMaker:f,price:a,amount:n,cost:d,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==s&&(a.limit=s);const n=r.swap?"perpetualPublicGetMarketDeals":"publicGetMarketDeals",o=await this[n](this.extend(a,i));return this.parseTrades(o.data,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s={market:this.market(e).id},i=await this.publicGetMarketDetail(this.extend(s,t)),r=this.safeValue(i,"data",{});return this.parseTradingFee(r)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetMarketInfo(e),s=this.safeValue(t,"data",{}),i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(s,r.id,{});i[t]=this.parseTradingFee(a,r)}return i}parseTradingFee(e,t){const s=this.safeValue(e,"name");return{info:e,symbol:this.safeSymbol(s,t),maker:this.safeNumber(e,"maker_fee_rate"),taker:this.safeNumber(e,"taker_fee_rate"),percentage:!0,tierBased:!0}}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,type:this.timeframes[t]};void 0!==i&&(n.limit=i);const o=a.swap?"perpetualPublicGetMarketKline":"publicGetMarketKline",c=await this[o](this.extend(n,r)),d=this.safeValue(c,"data",[]);return this.parseOHLCVs(d,a,t,s,i)}async fetchMarginBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"symbol");let s,i=this.safeString(e,"market");if(void 0!==t)s=this.market(t),i=s.id;else if(void 0===i)throw new a(this.id+" fetchMarginBalance() fetching a margin account requires a market parameter or a symbol parameter");e=this.omit(e,["symbol","market"]);const r={market:i},n=await this.privateGetMarginAccount(this.extend(r,e)),o={info:n},c=this.safeValue(n,"data",{}),d=this.safeValue(c,"can_transfer",{}),h=this.safeValue(c,"balance",{}),l=this.account(),u=this.safeString(c,"sell_asset_type"),f=this.safeCurrencyCode(u);l.free=this.safeString(d,"sell_type"),l.total=this.safeString(h,"sell_type"),o[f]=l;const p=this.account(),m=this.safeString(c,"buy_asset_type"),g=this.safeCurrencyCode(m);return p.free=this.safeString(d,"buy_type"),p.total=this.safeString(h,"buy_type"),o[g]=p,this.safeBalance(o)}async fetchSpotBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalanceInfo(e),s={info:t},i=this.safeValue(t,"data",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t),n=this.safeValue(i,t,{}),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"frozen"),s[a]=o}return this.safeBalance(s)}async fetchSwapBalance(e={}){await this.loadMarkets();const t=await this.perpetualPrivateGetAssetQuery(e),s={info:t},i=this.safeValue(t,"data",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t),n=this.safeValue(i,t,{}),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"frozen"),o.total=this.safeString(n,"balance_total"),s[a]=o}return this.safeBalance(s)}async fetchBalance(e={}){const t=this.safeString(e,"type","main");return e=this.omit(e,"type"),"margin"===t?await this.fetchMarginBalance(e):"swap"===t?await this.fetchSwapBalance(e):await this.fetchSpotBalance(e)}parseOrderStatus(e){return this.safeString({not_deal:"open",part_deal:"open",done:"closed",cancel:"canceled"},e,e)}parseOrder(e,t){const s=this.safeTimestamp(e,"create_time"),i=this.safeString(e,"price"),r=this.safeString(e,"deal_money"),a=this.safeString(e,"amount"),n=this.safeString(e,"deal_amount"),o=this.safeString(e,"avg_price"),c=this.safeString(e,"left"),d=this.safeString(e,"market");t=this.safeMarket(d,t);const h=this.safeString(e,"fee_asset");let l=this.safeCurrencyCode(h);void 0===l&&(l=t.quote);const u=this.parseOrderStatus(this.safeString(e,"status"));let f=this.safeInteger(e,"side");f=1===f?"sell":2===f?"buy":this.safeString(e,"type");let p=this.safeString(e,"order_type");return void 0===p&&(p=this.safeInteger(e,"type"),1===p?p="limit":2===p&&(p="market")),this.safeOrder({id:this.safeString2(e,"id","order_id"),clientOrderId:void 0,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:this.safeTimestamp(e,"update_time"),status:u,symbol:t.symbol,type:p,timeInForce:void 0,postOnly:void 0,reduceOnly:void 0,side:f,price:i,stopPrice:this.safeString(e,"stop_price"),cost:r,average:o,amount:a,filled:n,remaining:c,trades:void 0,fee:{currency:l,cost:this.safeString(e,"deal_fee")},info:e},t)}async createOrder(e,t,s,i,r,o={}){await this.loadMarkets();const c=this.market(e),d=c.swap,h=this.safeString2(o,"stopPrice","triggerPrice"),u=this.safeString(o,"stopLossPrice"),f=this.safeString(o,"takeProfitPrice"),p=this.safeString(o,"option"),m="market"===t,g=this.isPostOnly(m,"MAKER_ONLY"===p,o),b=this.safeInteger2(o,"position_id","positionId");let v=this.safeString(o,"timeInForce");const w=this.safeValue(o,"reduceOnly");if(void 0!==w&&"swap"!==c.type)throw new l(this.id+" createOrder() does not support reduceOnly for "+c.type+" orders, reduceOnly orders are supported for swap markets only");let S;const k={market:c.id};if(d)if(u||f){if(void 0===this.safeInteger(o,"stop_type")&&(k.stop_type=1),void 0===b)throw new a(this.id+" createOrder() requires a position_id parameter for stop loss and take profit orders");k.position_id=b,u?(S="perpetualPrivatePostPositionStopLoss",k.stop_loss_price=u):f&&(S="perpetualPrivatePostPositionTakeProfit",k.take_profit_price=f)}else{if(S="perpetualPrivatePostOrderPut"+this.capitalize(t),s="buy"===s?2:1,void 0!==h){const a=this.safeInteger(o,"stop_type");void 0===a&&(k.stop_type=1),k.stop_price=this.priceToPrecision(e,h),k.stop_type=this.priceToPrecision(e,a),k.amount=this.amountToPrecision(e,i),k.side=s,"limit"===t?(S="perpetualPrivatePostOrderPutStopLimit",k.price=this.priceToPrecision(e,r)):"market"===t&&(S="perpetualPrivatePostOrderPutStopMarket"),k.amount=this.amountToPrecision(e,i)}"market"===t&&void 0===h||(g?k.option=1:void 0!==v&&(v="IOC"===v?2:"FOK"===v?3:1,k.effect_type=v)),"limit"===t&&void 0===h?(w?(S="perpetualPrivatePostOrderCloseLimit",k.position_id=b):k.side=s,k.price=this.priceToPrecision(e,r),k.amount=this.amountToPrecision(e,i)):"market"===t&&void 0===h&&(w?(S="perpetualPrivatePostOrderCloseMarket",k.position_id=b):(k.side=s,k.amount=this.amountToPrecision(e,i)))}else{if(S="privatePostOrder"+this.capitalize(t),k.type=s,"market"===t&&"buy"===s)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new l(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const t=this.amountToPrecision(e,i),s=this.priceToPrecision(e,r),a=y.stringMul(t,s),n=this.parseNumber(a);k.amount=this.costToPrecision(e,n)}}else k.amount=this.costToPrecision(e,i);else k.amount=this.amountToPrecision(e,i);if("limit"!==t&&"ioc"!==t||(k.price=this.priceToPrecision(e,r)),void 0!==h&&(k.stop_price=this.priceToPrecision(e,h),"limit"===t?S="privatePostOrderStopLimit":"market"===t&&(S="privatePostOrderStopMarket")),("market"!==t||void 0!==h)&&(void 0!==v||g)){if((g||"IOC"!==v)&&"limit"===t&&void 0!==h)throw new l(this.id+" createOrder() only supports the IOC option for stop-limit orders");g?k.option="MAKER_ONLY":void 0!==v&&(k.option=v)}}const T=this.safeInteger(o,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===T)throw new n(this.id+" createOrder() requires an account_id parameter for margin orders");k.account_id=T}o=this.omit(o,["reduceOnly","positionId","timeInForce","postOnly","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]);const O=await this[S](this.extend(k,o)),_=this.safeValue(O,"data");return this.parseOrder(_,c)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=this.market(t),r=this.safeValue(s,"stop"),a=i.swap,o={market:i.id};o[a?"order_id":"id"]=e;let c=a?"perpetualPrivatePostOrderCancel":"privateDeleteOrderPending";r&&(c=a?"perpetualPrivatePostOrderCancelStop":"privateDeleteOrderStopPendingId");const d=this.safeInteger(s,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===d)throw new n(this.id+" cancelOrder() requires an account_id parameter for margin orders");o.account_id=d}const h=this.omit(s,["stop","account_id"]),l=await this[c](this.extend(o,h)),u=this.safeValue(l,"data");return this.parseOrder(u,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new a(this.id+" cancellAllOrders() requires a symbol argument");await this.loadMarkets();const s=this.market(e),i=s.id,r=this.safeInteger(t,"account_id",0),n={market:i},o=s.swap,c=this.safeValue(t,"stop");let d;o?(d="perpetualPrivatePostOrderCancelAll",c&&(d="perpetualPrivatePostOrderCancelStopAll")):(d="privateDeleteOrderPending",c&&(d="privateDeleteOrderStopPending"),n.account_id=r),t=this.omit(t,["stop","account_id"]);return await this[d](this.extend(n,t))}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=i.swap,n=this.safeValue(s,"stop"),o={market:i.id};let c;o[r?"order_id":"id"]=e,c=r?n?"perpetualPrivateGetOrderStopStatus":"perpetualPrivateGetOrderStatus":"privateGetOrderStatus",s=this.omit(s,"stop");const d=await this[c](this.extend(o,s)),h=this.safeValue(d,"data");return this.parseOrder(h,i)}async fetchOrdersByStatus(e,t,s,i,r={}){await this.loadMarkets();const o={limit:i=void 0===i?100:i},c=this.safeValue(r,"stop"),d=this.safeInteger(r,"side");let h;r=this.omit(r,"stop"),void 0!==t&&(h=this.market(t),o.market=h.id);const[l,u]=this.handleMarketTypeAndParams("fetchOrdersByStatus",h,r);let f;if("swap"===l){if(void 0===t)throw new a(this.id+" fetchOrdersByStatus() requires a symbol argument for swap markets");f="perpetualPrivateGetOrder"+this.capitalize(e),c&&(f="perpetualPrivateGetOrderStopPending"),o.side=void 0!==d?d:0,o.offset=0}else f="privateGetOrder"+this.capitalize(e),c&&(f="privateGetOrderStop"+this.capitalize(e)),o.page=1;const p=this.safeInteger(r,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===p)throw new n(this.id+" fetchOpenOrders() and fetchClosedOrders() require an account_id parameter for margin orders");o.account_id=p}r=this.omit(u,"account_id");const m=await this[f](this.extend(o,r)),g="swap"===l?"records":"data",y=this.safeValue(m,"data"),b=this.safeValue(y,g,[]);return this.parseOrders(b,h,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("pending",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("finished",e,t,s,i)}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={coin_type:s.id};if("network"in t){const e=this.safeString(t,"network");t=this.omit(t,"network"),i.smart_contract_name=e}const r=await this.privatePutBalanceDepositAddressCoinType(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={coin_type:s.id},n=this.safeValue(s,"networks",{}),o=this.safeString(t,"network");t=this.omit(t,"network");const c=Object.keys(n).length;if(void 0!==n&&c>1){if(void 0===o)throw new a(this.id+" fetchDepositAddress() "+e+" requires a network parameter");if(!(o in n))throw new r(this.id+" fetchDepositAddress() "+o+" network not supported for "+e)}void 0!==o&&(i.smart_contract_name=o);const d=await this.privateGetBalanceDepositAddressCoinType(this.extend(i,t)),h=this.safeValue(d,"data",{}),l=this.parseDepositAddress(h,s),u=this.safeValue(this.options,"fetchDepositAddress",{});return this.safeValue(u,"fillResponseFromRequest",!0)&&(l.network=this.safeNetworkCode(o,s)),l}safeNetwork(e,t){const s=this.safeValue(t,"networks",{}),i=Object.keys(s);return void 0===e&&1===i.length?s[i[0]]:{id:e,network:void 0===e?void 0:e.toUpperCase()}}safeNetworkCode(e,t){return this.safeNetwork(e,t).network}parseDepositAddress(e,t){const s=this.safeString(e,"coin_address");return{info:e,currency:this.safeCurrencyCode(void 0,t),address:s,tag:void 0,network:void 0}}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0===s&&(s=100);const o={limit:s,offset:0};let c;if(void 0!==e&&(r=this.market(e),o.market=r.id),[c,i]=this.handleMarketTypeAndParams("fetchMyTrades",r,i),"spot"!==c&&void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument for non-spot markets");const d="swap"===c;let h;if(d){h="perpetualPublicGetMarketUserDeals";const e=this.safeInteger(i,"side");if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a side parameter for swap markets");void 0!==t&&(o.start_time=t),o.side=e,i=this.omit(i,"side")}else h="privateGetOrderUserDeals",o.page=1;const l=this.safeInteger(i,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===l)throw new n(this.id+" fetchMyTrades() requires an account_id parameter for margin trades");o.account_id=l,i=this.omit(i,"account_id")}const u=await this[h](this.extend(o,i)),f=d?"records":"data",p=this.safeValue(u,"data"),m=this.safeValue(p,f,[]);return this.parseTrades(m,r,t,s)}async fetchPositions(e,t={}){await this.loadMarkets();const s={};let i;if(void 0!==e){let t;if(Array.isArray(e)){if(e.length>1)throw new n(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;i=this.market(t),s.market=i.id}const r=await this.perpetualPrivateGetPositionPending(this.extend(s,t)),a=this.safeValue(r,"data",[]),o=[];for(let e=0;e<a.length;e++)o.push(this.parsePosition(a[e],i));return this.filterByArray(o,"symbol",e,!1)}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.perpetualPrivateGetPositionPending(this.extend(i,t)),a=this.safeValue(r,"data",[]);return this.parsePosition(a[0],s)}parsePosition(e,t){const s=this.safeString(e,"market"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeInteger(e,"position_id"),a=1===this.safeInteger(e,"type")?"isolated":"cross",n=this.safeString(e,"liq_price"),o=this.safeString(e,"open_price"),c=this.safeString(e,"profit_unreal"),d=this.safeString(e,"amount"),h=1===this.safeInteger(e,"side")?"short":"long",l=this.safeTimestamp(e,"update_time"),u=this.safeString(e,"mainten_margin_amount"),f=this.safeString(e,"mainten_margin"),p=this.safeString(e,"margin_amount"),m=this.safeNumber(e,"leverage");return{info:e,id:r,symbol:i,notional:void 0,marginMode:a,liquidationPrice:n,entryPrice:o,unrealizedPnl:c,percentage:void 0,contracts:void 0,contractSize:d,markPrice:void 0,side:h,hedged:void 0,timestamp:l,datetime:this.iso8601(l),maintenanceMargin:u,maintenanceMarginPercentage:f,collateral:p,initialMargin:void 0,initialMarginPercentage:void 0,leverage:m,marginRatio:void 0}}async setMarginMode(e,t,s={}){if(void 0===t)throw new a(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new n(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();const i=this.market(t);if("swap"!==i.type)throw new o(this.id+" setMarginMode() supports swap contracts only");const r=this.safeString2(this.options,"defaultMarginMode",e);let c;"isolated"===r?c=1:"cross"===r&&(c=2);const d=this.safeInteger(s,"leverage"),h=this.safeInteger(i.limits.leverage,"max",100),l=this.safeInteger(s,"position_type",c);if(void 0===d)throw new a(this.id+" setMarginMode() requires a leverage parameter");if(void 0===l)throw new a(this.id+" setMarginMode() requires a position_type parameter that will transfer margin to the specified trading pair");if(d<3||d>h)throw new n(this.id+" setMarginMode() leverage should be between 3 and "+h.toString()+" for "+t);const u={market:i.id,leverage:d.toString(),position_type:l};return await this.perpetualPrivatePostMarketAdjustLeverage(this.extend(u,s))}async setLeverage(e,t,s={}){if(void 0===t)throw new a(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();const i=this.safeString2(this.options,"defaultMarginMode","marginMode");let r;"isolated"===i?r=1:"cross"===i&&(r=2);const c=this.safeInteger(s,"position_type",r);if(void 0===c)throw new a(this.id+" setLeverage() requires a position_type parameter that will transfer margin to the specified trading pair");const d=this.market(t),h=this.safeInteger(d.limits.leverage,"max",100);if("swap"!==d.type)throw new o(this.id+" setLeverage() supports swap contracts only");if(e<3||e>h)throw new n(this.id+" setLeverage() leverage should be between 3 and "+h.toString()+" for "+t);const l={market:d.id,leverage:e.toString(),position_type:c};return await this.perpetualPrivatePostMarketAdjustLeverage(this.extend(l,s))}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.perpetualPublicGetMarketLimitConfig(t),i=this.safeValue(s,"data",{});return this.parseLeverageTiers(i,e,void 0)}parseLeverageTiers(e,t,s){const i={},r=Object.keys(e);for(let s=0;s<r.length;s++){const a=r[s],n=this.safeMarket(a),o=this.safeString(n,"symbol");let c=0;void 0!==t&&(c=t.length),void 0===o||0!==c&&!this.inArray(t,o)||(i[o]=this.parseMarketLeverageTiers(e[a],n))}return i}parseMarketLeverageTiers(e,t){const s=[];let i=0;for(let r=0;r<e.length;r++){const a=e[r],n=this.safeNumber(a,0);s.push({tier:r+1,currency:t.linear?t.base:t.quote,minNotional:i,maxNotional:n,maintenanceMarginRate:this.safeNumber(a,2),maxLeverage:this.safeInteger(a,1),info:a}),i=n}return s}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id,amount:this.amountToPrecision(e,t),type:s},n=await this.perpetualPrivatePostPositionAdjustMargin(this.extend(a,i)),o=this.safeString(n,"message"),c=1===s?"add":"reduce";return this.extend(this.parseMarginModification(n,r),{amount:this.parseNumber(t),type:c,status:o})}parseMarginModification(e,t){return{info:e,type:void 0,amount:void 0,code:t.quote,symbol:this.safeSymbol(void 0,t),status:void 0}}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,1,s)}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,2,s)}async fetchFundingHistory(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchFundingHistory() requires a symbol argument");s=void 0===s?100:s,await this.loadMarkets();const r={market:this.market(e).id,limit:s};void 0!==t&&(r.start_time=t);const n=await this.perpetualPrivateGetPositionFunding(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"records",[]),d=[];for(let t=0;t<c.length;t++){const s=c[t],i=this.safeTimestamp(s,"time"),r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r);d.push({info:s,symbol:e,code:a,timestamp:i,datetime:this.iso8601(i),id:this.safeNumber(s,"position_id"),amount:this.safeNumber(s,"funding")})}return d}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new o(this.id+" fetchFundingRate() supports swap contracts only");const i={market:s.id},r=await this.perpetualPublicGetMarketTicker(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"ticker",{});return this.parseFundingRate(n,s)}parseFundingRate(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:this.safeString(e,"sign_price"),indexPrice:this.safeString(e,"index_price"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeString(e,"funding_rate_next"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.safeString(e,"funding_rate_predict"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeString(e,"funding_rate_last"),previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e);i&&(s=s+":"+i);const n={coin_type:a.id,coin_address:s,actual_amount:parseFloat(t),transfer_method:"onchain"},o=await this.privatePostBalanceCoinWithdraw(this.extend(n,r)),c=this.safeValue(o,"data",{});return this.parseTransaction(c,a)}parseTransactionStatus(e){return this.safeString({audit:"pending",pass:"pending",processing:"pending",confirming:"pending",not_pass:"failed",cancel:"canceled",finish:"ok",fail:"failed"},e,e)}async fetchFundingRateHistory(e,t,s=100,i={}){if(void 0===e)throw new a(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={market:r.id,limit:s,offset:0};void 0!==t&&(n.start_time=t);const o=await this.perpetualPublicGetMarketFundingHistory(this.extend(n,i)),c=this.safeValue(o,"data"),d=this.safeValue(c,"records",[]),h=[];for(let e=0;e<d.length;e++){const t=d[e],s=this.safeString(t,"market"),i=this.safeSymbol(s),r=this.safeTimestamp(t,"time");h.push({info:t,symbol:i,fundingRate:this.safeString(t,"funding_rate"),timestamp:r,datetime:this.iso8601(r)})}const l=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(l,r.symbol,t,s)}parseTransaction(e,t){const s=this.safeString2(e,"coin_withdraw_id","coin_deposit_id"),i=this.safeString(e,"coin_address");let r=this.safeString(e,"remark");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeValue(e,"tx_id");void 0!==a&&a.length<1&&(a=void 0);const n=this.safeString(e,"coin_type"),o=this.safeCurrencyCode(n,t),c=this.safeTimestamp(e,"create_time"),d="coin_withdraw_id"in e?"withdraw":"deposit",h=this.parseTransactionStatus(this.safeString(e,"status"));let l=this.safeNumber(e,"amount"),u=this.safeNumber(e,"tx_fee");"deposit"===d&&(u=0);const f={cost:u,currency:o};return void 0!==l&&(l-=u),{info:e,id:s,txid:a,timestamp:c,datetime:this.iso8601(c),network:void 0,address:i,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:void 0,tagFrom:void 0,type:d,amount:l,currency:o,status:h,updated:void 0,fee:f}}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.currencyToPrecision(e,t),o={amount:n,coin_type:a.id};let c="privatePostContractBalanceTransfer";if("spot"===s&&"swap"===i)o.transfer_side="in";else if("swap"===s&&"spot"===i)o.transfer_side="out";else{const e=this.safeValue(this.options,"accountsById",{}),t=this.safeString(e,s,s),r=this.safeString(e,i,i);o.from_account=parseInt(t),o.to_account=parseInt(r),c="privatePostMarginTransfer"}const d=await this[c](this.extend(o,r));return this.extend(this.parseTransfer(d,a),{amount:this.parseNumber(n),fromAccount:s,toAccount:i})}parseTransferStatus(e){return this.safeString({0:"ok",SUCCESS:"ok"},e,e)}parseTransfer(e,t){const s=this.safeTimestamp(e,"created_at"),i=this.safeString(e,"transfer_type");let r,a;"transfer_out"===i?(r="swap",a="spot"):"transfer_in"===i?(r="spot",a="swap"):"IN"===i?(r="spot",a="margin"):"OUT"===i&&(r="margin",a="spot");const n=this.safeString(e,"asset"),o=this.safeCurrencyCode(n,t);return{id:this.safeInteger(e,"id"),timestamp:s,datetime:this.iso8601(s),currency:o,amount:this.safeNumber(e,"amount"),fromAccount:r,toAccount:a,status:this.parseTransferStatus(this.safeString2(e,"code","status"))}}async fetchTransfers(e,t,s,i={}){let r;await this.loadMarkets();const a={page:1,limit:s},n=this.safeInteger(i,"page");void 0!==n&&(a.page=n),void 0!==e&&(r=this.safeCurrencyCode(e),a.asset=r.id),void 0!==t&&(a.start_time=t),i=this.omit(i,"page");const o="margin"===this.safeString(this.options,"defaultType")?"privateGetMarginTransferHistory":"privateGetContractTransferHistory",c=await this[o](this.extend(a,i)),d=this.safeValue(c,"data",{}),h=this.safeValue(d,"records",[]);return this.parseTransfers(h,r,t,s)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={coin_type:r.id};void 0!==s&&(n.Limit=s);const o=await this.privateGetBalanceCoinWithdraw(this.extend(n,i));let c=this.safeValue(o,"data");return Array.isArray(c)||(c=this.safeValue(c,"data",[])),this.parseTransactions(c,r,t,s)}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={coin_type:r.id};void 0!==s&&(n.Limit=s);const o=await this.privateGetBalanceCoinDeposit(this.extend(n,i));let c=this.safeValue(o,"data");return Array.isArray(c)||(c=this.safeValue(c,"data",[])),this.parseTransactions(c,r,t,s)}parseBorrowRate(e,t){const s=this.milliseconds(),i=this.safeValue(e,t,{});return{currency:this.safeCurrencyCode(t),rate:this.safeNumber(i,"day_rate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:e}}async fetchBorrowRate(e,t={}){let s;if(await this.loadMarkets(),e in this.markets)s=this.market(e);else{const t=this.safeString(this.options,"defaultSettle","USDT");s=this.market(e+"/"+t)}const i={market:s.id},r=await this.privateGetMarginConfig(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseBorrowRate(a,s.base)}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetMarginConfig(e),s=this.milliseconds(),i=this.safeValue(t,"data",{}),r=[];for(let e=0;e<i.length;e++){const t=i[e],a=this.safeString(t,"market"),n=this.safeMarket(a),o=this.safeValue(t,n.base);r.push({currency:n.base,rate:this.safeNumber(o,"day_rate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:t})}return r}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.market=n.id),void 0!==i&&(a.limit=i);const o=await this.privateGetMarginLoanHistory(this.extend(a,r)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"data",[]),h=this.parseBorrowInterests(d,n);return this.filterByCurrencySinceLimit(h,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"market_type");t=this.safeMarket(s,t);const i=this.safeString(t,"symbol"),r=this.safeTimestamp(e,"expire_time"),a=this.safeString(e,"unflat_amount"),n=this.safeString(e,"loan_amount");let o=y.stringSub(a,n);return"0"===a&&(o=void 0),{account:void 0,symbol:i,marginMode:"isolated",marginType:void 0,currency:this.safeCurrencyCode(this.safeString(e,"coin_type")),interest:this.parseNumber(o),interestRate:this.safeNumber(e,"day_rate"),amountBorrowed:this.parseNumber(n),timestamp:r,datetime:this.iso8601(r),info:e}}async borrowMargin(e,t,s,i={}){if(void 0===s)throw new a(this.id+" borrowMargin() requires a symbol argument");await this.loadMarkets();const r=this.market(s),n=this.currency(e),o={market:r.id,coin_type:n.id,amount:this.currencyToPrecision(e,t)},c=await this.privatePostMarginLoan(this.extend(o,i)),d=this.safeValue(c,"data",{}),h=this.parseMarginLoan(d,n);return this.extend(h,{amount:t,symbol:s})}async repayMargin(e,t,s,i={}){if(void 0===s)throw new a(this.id+" repayMargin() requires a symbol argument");await this.loadMarkets();const r=this.market(s),n=this.currency(e),o={market:r.id,coin_type:n.id,amount:this.currencyToPrecision(e,t)},c=this.safeInteger(i,"loan_id");void 0!==c&&(o.loan_id=c);const d=await this.privatePostMarginFlat(this.extend(o,i)),h=this.parseMarginLoan(d,n);return this.extend(h,{amount:t,symbol:s})}parseMarginLoan(e,t){return{id:this.safeInteger(e,"loan_id"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){e=this.implodeParams(e,i);let n=this.urls.api[t]+"/"+this.version+"/"+e,o=this.omit(i,this.extractParams(e));const c=this.nonce().toString();if("perpetualPrivate"===t||"https://api.coinex.com/perpetual/v1/market/user_deals"===n){this.checkRequiredCredentials(),o=this.extend({access_id:this.apiKey,timestamp:c},o),o=this.keysort(o);const e=this.rawencode(o);r={Authorization:this.hash(this.encode(e+"&secret_key="+this.secret),"sha256").toLowerCase(),AccessId:this.apiKey},"GET"===s||"PUT"===s?n+="?"+e:(r["Content-Type"]="application/x-www-form-urlencoded",a=e)}else if("public"===t||"perpetualPublic"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),o=this.extend({access_id:this.apiKey,tonce:c},o),o=this.keysort(o);const e=this.rawencode(o);r={Authorization:this.hash(this.encode(e+"&secret_key="+this.secret)).toUpperCase(),"Content-Type":"application/json"},"GET"===s||"DELETE"===s||"PUT"===s?n+="?"+e:a=this.json(o)}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,g,y){if(void 0===o)return;const b=this.safeString(o,"code"),v=this.safeValue(o,"data"),w=this.safeString(o,"message");if("0"!==b||"Success"!==w&&"Succeeded"!==w&&"Ok"!==w&&!v){const e={23:f,24:u,25:u,34:u,35:p,36:m,213:c,107:d,600:h,601:l,602:l,606:l};throw new(this.safeValue(e,b,r))(o.message)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],189:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,RateLimitExceeded:n,ArgumentsRequired:o}=e("./base/errors"),{TICK_SIZE:c}=e("./base/functions/number"),d=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinfalcon",name:"CoinFalcon",countries:["GB"],rateLimit:1e3,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradinFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg",api:"https://coinfalcon.com",www:"https://coinfalcon.com",doc:"https://docs.coinfalcon.com",fees:"https://coinfalcon.com/fees",referral:"https://coinfalcon.com/?ref=CFJSVGTUPASB"},api:{public:{get:["markets","markets/{market}","markets/{market}/orders","markets/{market}/trades"]},private:{get:["user/accounts","user/orders","user/orders/{id}","user/orders/{id}/trades","user/trades","user/fees","account/withdrawals/{id}","account/withdrawals","account/deposit/{id}","account/deposits","account/deposit_address"],post:["user/orders","account/withdraw"],delete:["user/orders/{id}","account/withdrawals/{id}"]}},fees:{trading:{tierBased:!0,maker:0,taker:.002}},precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00000001")},precisionMode:c})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],[r,a]=t.name.split("-"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);i.push({id:t.name,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"size_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minPrice"),max:void 0},price:{min:this.safeNumber(t,"minVolume"),max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeString(e,"name");t=this.safeMarket(s,t,"-");const i=this.milliseconds(),r=this.safeString(e,"last_price");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"highest_bid"),bidVolume:void 0,ask:this.safeString(e,"lowest_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"change_in_24h"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();return(await this.fetchTickers([e],t))[e]}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarkets(t),i=this.safeValue(s,"data",[]),r={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market:i.id,level:"3"},a=await this.publicGetMarketsMarketOrders(this.extend(r,s)),n=this.safeValue(a,"data",{});return this.parseOrderBook(n,i.symbol,void 0,"bids","asks","price","size")}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"price"),r=this.safeString(e,"size"),a=t.symbol,n=this.safeString(e,"id"),o=this.safeString(e,"side"),c=this.safeString(e,"order_id");let d;const h=this.safeString(e,"fee");if(void 0!==h){const t=this.safeString(e,"fee_currency_code");d={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:a,id:n,order:c,type:void 0,side:o,takerOrMaker:void 0,price:i,amount:r,cost:void 0,fee:d},t)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==s&&(a.limit=s);const n=await this.privateGetUserTrades(this.extend(a,i)),c=this.safeValue(n,"data",[]);return this.parseTrades(c,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.since=this.iso8601(t));const n=await this.publicGetMarketsMarketTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetUserFees(e),s=this.safeValue(t,"data",{}),i=this.safeString(s,"maker_fee"),r=this.safeString(s,"taker_fee"),a=this.parseNumber(d.stringDiv(i,"100")),n=this.parseNumber(d.stringDiv(r,"100")),o={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];o[s]={info:t,symbol:s,maker:a,taker:n,percentage:!0,tierBased:!0}}return o}parseBalance(e){const t={info:e},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available_balance"),n.used=this.safeString(i,"hold_balance"),n.total=this.safeString(i,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserAccounts(e);return this.parseBalance(t)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"tag");return this.checkAddress(s),{currency:this.safeCurrencyCode(void 0,t),address:s,tag:i,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.safeCurrency(e),i={currency:this.safeStringLower(s,"id")},r=await this.privateGetAccountDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,s)}parseOrderStatus(e){return this.safeString({fulfilled:"closed",canceled:"canceled",pending:"open",open:"open",partially_filled:"open"},e,e)}parseOrder(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t,"-"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeString(e,"size_filled"),c=this.parseOrderStatus(this.safeString(e,"status"));let d=this.safeString(e,"operation_type");void 0!==d&&(d=d.split("_"),d=d[0]);const h=this.safeString(e,"order_type"),l=this.safeValue(e,"post_only");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,status:c,symbol:i,type:d,timeInForce:void 0,postOnly:l,side:h,price:a,stopPrice:void 0,cost:void 0,amount:n,filled:o,remaining:void 0,trades:void 0,fee:void 0,info:e,lastTradeTimestamp:void 0,average:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,size:this.amountToPrecision(e,i),order_type:s};"limit"===t&&(r=this.priceToPrecision(e,r),o.price=r.toString()),o.operation_type=t+"_order";const c=await this.privatePostUserOrders(this.extend(o,a)),d=this.safeValue(c,"data",{});return this.parseOrder(d,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateDeleteUserOrdersId(this.extend(i,s)),a=this.market(t),n=this.safeValue(r,"data",{});return this.parseOrder(n,a)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetUserOrdersId(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.market=a.id),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetUserOrders(this.extend(r,i)),o=this.safeValue(n,"data",[]),c=this.filterByArray(o,"status",["pending","open","partially_filled"],!1);return this.parseOrders(c,a,t,s)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=this.safeStringLower(a,"id")),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetAccountDeposits(this.extend(r,i)),o=this.safeValue(n,"data",[]);return o.reverse(),this.parseTransactions(o,a,void 0,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=this.safeStringLower(a,"id")),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetAccountWithdrawals(this.extend(r,i)),o=this.safeValue(n,"data",[]);return o.reverse(),this.parseTransactions(o,a,void 0,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:this.safeStringLower(a,"id"),address:s,amount:t};void 0!==i&&(n.tag=i);const o=await this.privatePostAccountWithdraw(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseTransaction(c,a)}parseTransactionStatus(e){return this.safeString({completed:"ok",denied:"failed",approval_pending:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"address"),r=this.safeString(e,"tag"),a=this.safeString(e,"txid"),n=this.safeString(e,"currency_code"),o=this.safeCurrencyCode(n,t);let c=this.safeString(e,"type");"withdraw"===c&&(c="withdrawal");const d=this.parseTransactionStatus(this.safeString(e,"status")),h=this.safeString(e,"amount"),l=this.parseNumber(h),u=this.safeString(e,"fee");let f=0;return void 0!==u&&(f=this.parseNumber(u)),{info:e,id:s,txid:a,timestamp:void 0,datetime:void 0,network:void 0,address:i,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:void 0,tagFrom:void 0,type:c,amount:l,currency:o,status:d,updated:void 0,fee:{currency:o,cost:f}}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):a=this.json(o);const e=this.seconds().toString();let t=[e,s,n].join("|");a&&(t+="|"+a);const i=this.hmac(this.encode(t),this.encode(this.secret));r={"CF-API-KEY":this.apiKey,"CF-API-TIMESTAMP":e,"CF-API-SIGNATURE":i,"Content-Type":"application/json"}}return{url:this.urls.api+n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,o,c,d,h,l){if(e<400)return;throw new(this.safeValue({401:a,429:n},e,r))(c)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],190:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,InvalidOrder:n,OrderNotFound:o,RateLimitExceeded:c,InsufficientFunds:d,AuthenticationError:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number"),u=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinmate",name:"CoinMate",countries:["GB","CZ","EU"],rateLimit:1e3,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg",api:"https://coinmate.io/api",www:"https://coinmate.io",fees:"https://coinmate.io/fees",doc:["https://coinmate.docs.apiary.io","https://coinmate.io/developers"],referral:"https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["orderBook","ticker","transactions","tradingPairs"]},private:{post:["balances","bitcoinCashWithdrawal","bitcoinCashDepositAddresses","bitcoinDepositAddresses","bitcoinWithdrawal","bitcoinWithdrawalFees","buyInstant","buyLimit","cancelOrder","cancelOrderWithInfo","createVoucher","dashDepositAddresses","dashWithdrawal","ethereumWithdrawal","ethereumDepositAddresses","litecoinWithdrawal","litecoinDepositAddresses","openOrders","order","orderHistory","orderById","pusherAuth","redeemVoucher","replaceByBuyLimit","replaceByBuyInstant","replaceBySellLimit","replaceBySellInstant","rippleDepositAddresses","rippleWithdrawal","sellInstant","sellLimit","transactionHistory","traderFees","tradeHistory","transfer","transferHistory","unconfirmedBitcoinDeposits","unconfirmedBitcoinCashDeposits","unconfirmedDashDeposits","unconfirmedEthereumDeposits","unconfirmedLitecoinDeposits","unconfirmedRippleDeposits"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:.0012,taker:.0025,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0035")],[this.parseNumber("10000"),this.parseNumber("0.0023")],[this.parseNumber("100000"),this.parseNumber("0.0021")],[this.parseNumber("250000"),this.parseNumber("0.0020")],[this.parseNumber("500000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0013")],[this.parseNumber("3000000"),this.parseNumber("0.0010")],[this.parseNumber("15000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("10000"),this.parseNumber("0.0011")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("250000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0005")],[this.parseNumber("1000000"),this.parseNumber("0.0003")],[this.parseNumber("3000000"),this.parseNumber("0.0002")],[this.parseNumber("15000000"),this.parseNumber("0")]]}}},options:{withdraw:{fillResponsefromRequest:!0,methods:{BTC:"privatePostBitcoinWithdrawal",LTC:"privatePostLitecoinWithdrawal",BCH:"privatePostBitcoinCashWithdrawal",ETH:"privatePostEthereumWithdrawal",XRP:"privatePostRippleWithdrawal",DASH:"privatePostDashWithdrawal",DAI:"privatePostDaiWithdrawal"}}},exceptions:{exact:{"No order with given ID":o},broad:{"Not enough account balance available":d,"Incorrect order ID":n,"Minimum Order Size ":n,"TOO MANY REQUESTS":c,"Access denied.":h}},precisionMode:l})}async fetchMarkets(e={}){const t=await this.publicGetTradingPairs(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeString(t,"firstCurrency"),n=this.safeString(t,"secondCurrency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=o+"/"+c;i.push({id:r,symbol:d,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"lotDecimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceDecimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseBalance(e){const t=this.safeValue(e,"data",{}),s={info:e},i=Object.keys(t);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=this.safeValue(t,r),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"reserved"),o.total=this.safeString(n,"balance"),s[a]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currencyPair:i.id,groupByPriceLimit:"False"},a=(await this.publicGetOrderBook(this.extend(r,s))).data,n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,i.symbol,n,"bids","asks","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={currencyPair:s.id},r=await this.publicGetTicker(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeTimestamp(a,"timestamp"),o=this.safeNumber(a,"last");return{symbol:s.symbol,timestamp:n,datetime:this.iso8601(n),high:this.safeNumber(a,"high"),low:this.safeNumber(a,"low"),bid:this.safeNumber(a,"bid"),bidVolume:void 0,ask:this.safeNumber(a,"ask"),vwap:void 0,askVolume:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(a,"amount"),quoteVolume:void 0,info:a}}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={limit:1e3};if(void 0!==s&&(r.limit=s),void 0!==t&&(r.timestampFrom=t),void 0!==e){const t=this.currency(e);r.currency=t.id}const a=(await this.privatePostTransferHistory(this.extend(r,i))).data;return this.parseTransactions(a,void 0,t,s)}parseTransactionStatus(e){return this.safeString({COMPLETED:"ok",WAITING:"pending",SENT:"pending",CREATED:"pending",OK:"ok",NEW:"pending",CANCELED:"canceled"},e,e)}parseTransaction(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeNumber(e,"amount"),r=this.safeNumber(e,"fee"),a=this.safeString(e,"txid"),n=this.safeString(e,"destination"),o=this.safeString(e,"destinationTag"),c=this.safeString(e,"amountCurrency"),d=this.safeCurrencyCode(c,t),h=this.safeStringLower(e,"transferType"),l=this.parseTransactionStatus(this.safeString(e,"transferStatus")),u=this.safeString2(e,"transactionId","id"),f=this.safeString(e,"walletType");return{id:u,timestamp:s,datetime:this.iso8601(s),currency:d,amount:i,type:h,txid:a,network:f,address:n,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,status:l,fee:{cost:r,currency:d},info:e}}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e),o=this.safeValue(this.options,"withdraw",{}),c=this.safeValue(o,"methods",{}),d=this.safeString(c,e);if(void 0===d){const e=Object.keys(c);throw new r(this.id+" withdraw() only allows withdrawing the following currencies: "+e.join(", "))}const h={amount:this.currencyToPrecision(e,t),address:s};void 0!==i&&(h.destinationTag=i);const l=await this[d](this.extend(h,a)),u=this.safeValue(l,"data"),f=this.parseTransaction(u,n);return this.safeValue(o,"fillResponseFromRequest",!0)&&(f.amount=t,f.currency=e,f.address=s,f.tag=i,f.type="withdrawal",f.status="pending"),f}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets(),void 0===s&&(s=1e3);const r={limit:s};if(void 0!==e){const t=this.market(e);r.currencyPair=t.id}void 0!==t&&(r.timestampFrom=t);const a=await this.privatePostTradeHistory(this.extend(r,i)),n=this.safeValue(a,"data",[]);return this.parseTrades(n,void 0,t,s)}parseTrade(e,t){const s=this.safeString(e,"currencyPair");t=this.safeMarket(s,t,"_");const i=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeStringLower2(e,"type","tradeType"),n=this.safeStringLower(e,"orderType"),o=this.safeString(e,"orderId"),c=this.safeString(e,"transactionId"),d=this.safeInteger2(e,"timestamp","createdTimestamp");let h;const l=this.safeString(e,"fee");void 0!==l&&(h={cost:l,currency:t.quote});let u=this.safeString(e,"feeType");return u="MAKER"===u?"maker":"taker",this.safeTrade({id:c,info:e,timestamp:d,datetime:this.iso8601(d),symbol:t.symbol,type:n,side:a,order:o,takerOrMaker:u,price:i,amount:r,cost:void 0,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currencyPair:r.id,minutesIntoHistory:10},n=await this.publicGetTransactions(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={currencyPair:s.id},r=await this.privatePostTraderFees(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeString(a,"maker"),o=this.safeString(a,"taker"),c=this.parseNumber(u.stringDiv(n,"100")),d=this.parseNumber(u.stringDiv(o,"100"));return{info:a,symbol:s.symbol,maker:c,taker:d,percentage:!0,tierBased:!0}}async fetchOpenOrders(e,t,s,i={}){const r=await this.privatePostOpenOrders(this.extend({},i));return this.parseOrders(r.data,void 0,t,s,{status:"open"})}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={currencyPair:r.id};void 0!==s&&(n.limit=s);const o=await this.privatePostOrderHistory(this.extend(n,i));return this.parseOrders(o.data,r,t,s)}parseOrderStatus(e){return this.safeString({FILLED:"closed",CANCELLED:"canceled",PARTIALLY_FILLED:"open",OPEN:"open"},e,e)}parseOrderType(e){return this.safeString({LIMIT:"limit",MARKET:"market"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeInteger(e,"timestamp"),r=this.safeStringLower(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"originalAmount"),o=this.safeString2(e,"remainingAmount","amount"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.parseOrderType(this.safeString(e,"orderTradeType")),h=this.safeString(e,"avgPrice"),l=this.safeString(e,"currencyPair"),u=this.safeSymbol(l,t,"_"),f=this.safeString(e,"clientOrderId"),p=this.safeNumber(e,"stopPrice");return this.safeOrder({id:s,clientOrderId:f,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:u,type:d,timeInForce:void 0,postOnly:void 0,side:r,price:a,stopPrice:p,amount:n,cost:void 0,average:h,filled:void 0,remaining:o,status:c,trades:void 0,info:e,fee:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();let n="privatePost"+this.capitalize(s);const o={currencyPair:this.market(e).id};"market"===t?("buy"===s?o.total=this.amountToPrecision(e,i):o.amount=this.amountToPrecision(e,i),n+="Instant"):(o.amount=this.amountToPrecision(e,i),o.price=this.priceToPrecision(e,r),n+=this.capitalize(t));const c=await this[n](this.extend(o,a));return{info:c,id:this.safeString(c,"data")}}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e};let r;t&&(r=this.market(t));const a=await this.privatePostOrderById(this.extend(i,s)),n=this.safeValue(a,"data");return this.parseOrder(n,r)}async cancelOrder(e,t,s={}){const i={orderId:e};return{info:await this.privatePostCancelOrderWithInfo(this.extend(i,s))}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+e;if("public"===t)Object.keys(i).length&&(n+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,s=this.hmac(this.encode(t),this.encode(this.secret));a=this.urlencode(this.extend({clientId:this.uid,nonce:e,publicKey:this.apiKey,signature:s.toUpperCase()},i)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"error"in o&&o.error){const e=this.safeString(o,"errorMessage"),t=this.id+" "+e;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r(this.id+" "+this.json(o))}if(e>400){if(n){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,n,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r(e)}throw new r(this.id+" "+n)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],191:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,BadRequest:a,ExchangeError:n,ArgumentsRequired:o,OrderNotFound:c,OnMaintenance:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinone",name:"CoinOne",countries:["KR"],rateLimit:667,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:void 0,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg",api:"https://api.coinone.co.kr",www:"https://coinone.co.kr",doc:"https://doc.coinone.co.kr"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["orderbook/","trades/","ticker/"]},private:{post:["account/deposit_address/","account/btc_deposit_address/","account/balance/","account/daily_balance/","account/user_info/","account/virtual_account/","order/cancel_all/","order/cancel/","order/limit_buy/","order/limit_sell/","order/complete_orders/","order/limit_orders/","order/order_info/","transaction/auth_number/","transaction/history/","transaction/krw/history/","transaction/btc/","transaction/coin/"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.002,maker:.002}},precision:{price:this.parseNumber("0.0001"),amount:this.parseNumber("0.0001"),cost:this.parseNumber("0.00000001")},precisionMode:h,exceptions:{405:d,104:c,108:r,107:a},commonCurrencies:{SOC:"Soda Coin"}})}async fetchMarkets(e={}){const t=await this.publicGetTicker({currency:"all"}),s=[],i=this.safeCurrencyCode("krw"),r=Object.keys(t);for(let e=0;e<r.length;e++){const a=r[e],n=this.safeValue(t,a,{});if(void 0===this.safeValue(n,"currency"))continue;const o=this.safeCurrencyCode(a);s.push({id:a,symbol:o+"/"+i,base:o,quote:i,settle:void 0,baseId:a,quoteId:"krw",settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:n})}return s}parseBalance(e){const t={info:e},s=this.omit(e,["errorCode","result","normalWallets"]),i=Object.keys(s);for(let e=0;e<i.length;e++){const r=i[e],a=s[r],n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"avail"),o.total=this.safeString(a,"balance"),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostAccountBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currency:i.id,format:"json"},a=await this.publicGetOrderbook(this.extend(r,s)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,i.symbol,n,"bid","ask","price","qty")}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(this.extend({currency:"all",format:"json"},t)),i={},r=Object.keys(s),a=this.safeTimestamp(s,"timestamp");for(let e=0;e<r.length;e++){const t=r[e];let n,o=t;if(t in this.markets_by_id){n=this.markets_by_id[t],o=n.symbol;const e=s[t];i[o]=this.parseTicker(e,n),i[o].timestamp=a}}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency:s.id,format:"json"},r=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTicker(e,t){const s=this.safeTimestamp(e,"timestamp"),i=this.safeString(e,"first"),r=this.safeString(e,"last"),a=this.safeString(e,"yesterday_last"),n=this.safeSymbol(void 0,t);return this.safeTicker({symbol:n,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:i,close:r,last:r,previousClose:a,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}parseTrade(e,t){const s=this.safeTimestamp(e,"timestamp");t=this.safeMarket(void 0,t);const i=this.safeString(e,"is_ask");let r=this.safeString(e,"type");void 0!==i?"1"===i?r="sell":"0"===i&&(r="buy"):"ask"===r?r="sell":"bid"===r&&(r="buy");const a=this.safeString(e,"price"),n=this.safeString(e,"qty"),o=this.safeString(e,"orderId");let c,d=this.safeString(e,"fee");if(void 0!==d){d=l.stringAbs(d);let s=this.safeString(e,"feeRate");s=l.stringAbs(s);c={cost:d,currency:"sell"===r?t.quote:t.base,rate:s}}return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:s,datetime:this.iso8601(s),order:o,symbol:t.symbol,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:c},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currency:r.id,format:"json"},n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"completeOrders",[]);return this.parseTrades(o,r,t,s)}async createOrder(e,t,s,i,r,a={}){if("limit"!==t)throw new n(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o={price:r,currency:this.market(e).id,qty:i},c="privatePostOrder"+this.capitalize(t)+this.capitalize(s),d=await this[c](this.extend(o,a));return this.parseOrder(d)}async fetchOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={order_id:e,currency:i.id},a=await this.privatePostOrderOrderInfo(this.extend(r,s)),n=this.safeValue(a,"info",{});return n.status=this.safeString(n,"status"),this.parseOrder(n,i)}parseOrderStatus(e){return this.safeString({live:"open",partially_filled:"open",filled:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"orderId"),i=this.safeString(e,"price"),r=this.safeTimestamp(e,"timestamp");let a=this.safeString(e,"type");"ask"===a?a="sell":"bid"===a&&(a="buy");const n=this.safeString(e,"remainQty"),o=this.safeString(e,"qty");let c,d,h,u=this.safeString(e,"status");if("live"===u&&void 0!==n&&void 0!==o){l.stringLt(n,o)&&(u="canceled")}u=this.parseOrderStatus(u);const f=this.safeStringLower(e,"currency");let p;void 0!==f&&(f in this.markets_by_id?t=this.markets_by_id[f]:(d=this.safeCurrencyCode(f),h="KRW",c=d+"/"+h)),void 0===c&&void 0!==t&&(c=t.symbol,d=t.base,h=t.quote);const m=this.safeString(e,"fee");if(void 0!==m){const t="sell"===a?h:d;p={cost:m,rate:this.safeString(e,"feeRate"),currency:t}}return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:c,type:"limit",timeInForce:void 0,postOnly:void 0,side:a,price:i,stopPrice:void 0,cost:void 0,average:void 0,amount:o,filled:void 0,remaining:n,status:u,fee:p,trades:void 0},t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchOpenOrders() allows fetching closed orders with a specific symbol");await this.loadMarkets();const r=this.market(e),a={currency:r.id},o=await this.privatePostOrderLimitOrders(this.extend(a,i)),c=this.safeValue(o,"limitOrders",[]);return this.parseOrders(c,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={currency:r.id},n=await this.privatePostOrderCompleteOrders(this.extend(a,i)),c=this.safeValue(n,"completeOrders",[]);return this.parseTrades(c,r,t,s)}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");const i=this.safeNumber(s,"price"),r=this.safeNumber(s,"qty"),a=this.safeInteger(s,"is_ask");if(void 0===i||void 0===r||void 0===a)throw new o(this.id+" cancelOrder() requires {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument.");await this.loadMarkets();const n={order_id:e,price:i,qty:r,is_ask:a,currency:this.marketId(t)};return await this.privatePostOrderCancel(this.extend(n,s))}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=await this.privatePostAccountDepositAddress(t),i=this.safeValue(s,"walletAddress",{}),r=Object.keys(i),a={};for(let e=0;e<r.length;e++){const t=r[e],s=i[t];if(!s||"-1"===s)continue;const n=t.split("_"),o=this.safeValue(n,0),c=this.safeValue(n,1),d=this.safeCurrencyCode(o);let h=this.safeValue(a,d);void 0===h&&(h={currency:d,address:void 0,tag:void 0,info:s});const l=this.safeString(h,"address",s);this.checkAddress(l),h.address=l,h.info=l,"tag"!==c&&"memo"!==c||(h.tag=s,h.info=[l,s]),a[d]=h}return a}sign(e,t="public",s="GET",i={},r,a){const n=this.implodeParams(e,i),o=this.omit(i,this.extractParams(e));let c=this.urls.api+"/";if("public"===t)c+=n,Object.keys(o).length&&(c+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),c+=this.version+"/"+n;const e=this.nonce().toString(),t=this.json(this.extend({access_token:this.apiKey,nonce:e},i)),s=this.stringToBase64(t);a=this.decode(s);const o=this.secret.toUpperCase();r={"Content-Type":"application/json","X-COINONE-PAYLOAD":s,"X-COINONE-SIGNATURE":this.hmac(s,this.encode(o),"sha512")}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0!==o){if(!("result"in o))throw new n(this.id+" "+a);if("success"!==o.result){const e=this.safeString(o,"errorCode"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,e,t),new n(t)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],192:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a}=e("./base/errors"),{TICK_SIZE:n}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"coinspot",name:"CoinSpot",countries:["AU"],rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg",api:{public:"https://www.coinspot.com.au/pubapi",private:"https://www.coinspot.com.au/api"},www:"https://www.coinspot.com.au",doc:"https://www.coinspot.com.au/api",referral:"https://www.coinspot.com.au/register?code=PJURCU"},api:{public:{get:["latest"]},private:{post:["orders","orders/history","my/coin/deposit","my/coin/send","quote/buy","quote/sell","my/balances","my/orders","my/buy","my/sell","my/buy/cancel","my/sell/cancel","ro/my/balances","ro/my/balances/{cointype}","ro/my/deposits","ro/my/withdrawals","ro/my/transactions","ro/my/transactions/{cointype}","ro/my/transactions/open","ro/my/transactions/{cointype}/open","ro/my/sendreceive","ro/my/affiliatepayments","ro/my/referralpayments"]}},markets:{"ADA/AUD":{id:"ada",symbol:"ADA/AUD",base:"ADA",quote:"AUD",baseId:"ada",quoteId:"aud",type:"spot",spot:!0},"BTC/AUD":{id:"btc",symbol:"BTC/AUD",base:"BTC",quote:"AUD",baseId:"btc",quoteId:"aud",type:"spot",spot:!0},"BTC/USDT":{id:"btc",symbol:"BTC/USDT",base:"BTC",quote:"USDT",baseId:"btc",quoteId:"usdt",type:"spot",spot:!0},"ETH/AUD":{id:"eth",symbol:"ETH/AUD",base:"ETH",quote:"AUD",baseId:"eth",quoteId:"aud",type:"spot",spot:!0},"XRP/AUD":{id:"xrp",symbol:"XRP/AUD",base:"XRP",quote:"AUD",baseId:"xrp",quoteId:"aud",type:"spot",spot:!0},"LTC/AUD":{id:"ltc",symbol:"LTC/AUD",base:"LTC",quote:"AUD",baseId:"ltc",quoteId:"aud",type:"spot",spot:!0},"DOGE/AUD":{id:"doge",symbol:"DOGE/AUD",base:"DOGE",quote:"AUD",baseId:"doge",quoteId:"aud",type:"spot",spot:!0},"RFOX/AUD":{id:"rfox",symbol:"RFOX/AUD",base:"RFOX",quote:"AUD",baseId:"rfox",quoteId:"aud",type:"spot",spot:!0},"POWR/AUD":{id:"powr",symbol:"POWR/AUD",base:"POWR",quote:"AUD",baseId:"powr",quoteId:"aud",type:"spot",spot:!0},"NEO/AUD":{id:"neo",symbol:"NEO/AUD",base:"NEO",quote:"AUD",baseId:"neo",quoteId:"aud",type:"spot",spot:!0},"TRX/AUD":{id:"trx",symbol:"TRX/AUD",base:"TRX",quote:"AUD",baseId:"trx",quoteId:"aud",type:"spot",spot:!0},"EOS/AUD":{id:"eos",symbol:"EOS/AUD",base:"EOS",quote:"AUD",baseId:"eos",quoteId:"aud",type:"spot",spot:!0},"XLM/AUD":{id:"xlm",symbol:"XLM/AUD",base:"XLM",quote:"AUD",baseId:"xlm",quoteId:"aud",type:"spot",spot:!0},"RHOC/AUD":{id:"rhoc",symbol:"RHOC/AUD",base:"RHOC",quote:"AUD",baseId:"rhoc",quoteId:"aud",type:"spot",spot:!0},"GAS/AUD":{id:"gas",symbol:"GAS/AUD",base:"GAS",quote:"AUD",baseId:"gas",quoteId:"aud",type:"spot",spot:!0}},commonCurrencies:{DRK:"DASH"},options:{fetchBalance:"private_post_my_balances"},precisionMode:n})}parseBalance(e){const t={info:e},s=this.safeValue2(e,"balance","balances");if(Array.isArray(s))for(let e=0;e<s.length;e++){const i=s[e],r=Object.keys(i);for(let e=0;e<r.length;e++){const s=r[e],a=i[s],n=this.safeCurrencyCode(s),o=this.account();o.total=this.safeString(a,"balance"),t[n]=o}}else{const e=Object.keys(s);for(let i=0;i<e.length;i++){const r=e[i],a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,r),t[a]=n}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(this.options,"fetchBalance","private_post_my_balances"),s=await this[t](e);return this.parseBalance(s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={cointype:i.id},a=await this.privatePostOrders(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"buyorders","sellorders","rate","amount")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.milliseconds(),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=await this.publicGetLatest(t);let r=s.id;r=r.toLowerCase();const a=this.safeValue(i,"prices"),n=this.safeValue(a,r);return this.parseTicker(n,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={cointype:r.id},n=await this.privatePostOrdersHistory(this.extend(a,i)),o=this.safeValue(n,"orders",[]);return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"rate"),i=this.safeString(e,"amount"),r=this.safeNumber(e,"total"),a=this.safeInteger(e,"solddate"),n=this.safeString(e,"market"),o=this.safeSymbol(n,t,"/");return this.safeTrade({info:e,id:void 0,symbol:o,timestamp:a,datetime:this.iso8601(a),order:void 0,type:void 0,side:void 0,takerOrMaker:void 0,price:s,amount:i,cost:r,fee:void 0},t)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o="privatePostMy"+this.capitalize(s);if("market"===t)throw new r(this.id+" createOrder() allows limit orders only");const c={cointype:this.market(e).id,amount:i,rate:a};return await this[o](this.extend(c,n))}async cancelOrder(e,t,s={}){const i=this.safeString(s,"side");if("buy"!==i&&"sell"!==i)throw new a(this.id+' cancelOrder() requires a side parameter, "buy" or "sell"');s=this.omit(s,"side");const r="privatePostMy"+this.capitalize(i)+"Cancel",n={id:e};return await this[r](this.extend(n,s))}sign(e,t="public",s="GET",i={},r,a){const n=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();const e=this.nonce();a=this.json(this.extend({nonce:e},i)),r={"Content-Type":"application/json",key:this.apiKey,sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:n,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],193:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadRequest:a,InvalidNonce:n,RequestTimeout:o,ExchangeNotAvailable:c,InsufficientFunds:d,OrderNotFound:h,InvalidOrder:l,DDoSProtection:u,AuthenticationError:f,BadSymbol:p,AccountSuspended:m,ArgumentsRequired:g}=e("./base/errors"),{TICK_SIZE:y}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"crex24",name:"CREX24",countries:["EE"],rateLimit:500,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","1d":"1d","1w":"1w","1M":"1mo"},urls:{logo:"https://user-images.githubusercontent.com/1294454/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg",api:"https://api.crex24.com",www:"https://crex24.com",referral:"https://crex24.com/?refid=slxsjsjtil8xexl9hksr",doc:"https://docs.crex24.com/trade-api/v2",fees:"https://crex24.com/fees"},api:{public:{get:["currencies","instruments","tickers","recentTrades","orderBook","ohlcv","tradingFeeSchedules","withdrawalFees","currencyTransport","currenciesWithdrawalFees"]},trading:{get:["orderStatus","orderTrades","activeOrders","orderHistory","tradeHistory","tradingFee","tradeFee"],post:["placeOrder","modifyOrder","cancelOrdersById","cancelOrdersByInstrument","cancelAllOrders"]},account:{get:["balance","depositAddress","moneyTransfers","moneyTransferStatus","previewWithdrawal"],post:["withdraw"]}},precisionMode:y,fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:-1e-4},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{ACM:"Actinium",BCC:"BCH",BIT:"BitMoney",BULL:"BuySell",CLC:"CaluraCoin",CREDIT:"TerraCredit",DMS:"Documentchain",EGG:"NestEGG Coin",EPS:"Epanus",FUND:"FUNDChains",GHOST:"GHOSTPRISM",GM:"GM Holding",GMT:"GMT Token",GTC:"GastroCoin",IQ:"IQ.Cash",ONE:"One Hundred Coin",PUT:"PutinCoin",SBTC:"SBTCT",SPH:"SapphireCoin",SUPER:"SuperCoin",UNI:"Universe",YOYO:"YOYOW"},options:{networks:{ETH:"ERC20",TRX:"TRC20",BSC:"BEP20"},fetchOrdersMethod:"tradingGetOrderHistory",fetchClosedOrdersMethod:"tradingGetOrderHistory",fetchTickersMethod:"publicGetTicker24hr",defaultTimeInForce:"GTC",hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,parseOrderToPrecision:!1,newOrderRespType:"RESULT",fetchTradingFees:{method:"fetchPrivateTradingFees"}},exceptions:{exact:{"Parameter 'filter' contains invalid value.":a,"Mandatory parameter 'instrument' is missing.":a,"The value of parameter 'till' must be greater than or equal to the value of parameter 'from'.":a,"Failed to verify request signature.":f,"Nonce error. Make sure that the value passed in the 'X-CREX24-API-NONCE' header is greater in each consecutive request than in the previous one for the corresponding API-Key provided in 'X-CREX24-API-KEY' header.":n,"Market orders are not supported by the instrument currently.":l,"Parameter 'instrument' contains invalid value.":p,"Trading has been disabled for the account until the verification is passed. To initiate the verification process, please log into your account at crex24.com and proceed to 'My account' -> 'Verification'.":m},broad:{"try again later":c,"API Key":f,"Insufficient funds":d,"has been delisted.":p,"is currently suspended.":p,"Mandatory parameter":a,"can not trade":m}}})}nonce(){return this.milliseconds()}async fetchMarkets(e={}){const t=await this.publicGetInstruments(e),s=await this.publicGetTradingFeeSchedules(e),i=[];for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"symbol"),n=this.safeString(r,"baseCurrency"),o=this.safeString(r,"quoteCurrency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);let h,l;const u=this.safeString(r,"feeSchedule");for(let e=0;e<s.length;e++){if(this.safeString(s[e],"name")===u){const t=this.safeValue(s[e],"feeRates",[]);for(let e=0;e<t.length;e++){if(0===this.safeNumber(t[e],"volumeThreshold")){h=this.safeNumber(t[e],"maker"),l=this.safeNumber(t[e],"taker");break}}break}}const f=this.safeString(r,"state");i.push({id:a,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"active"===f,contract:!1,linear:void 0,inverse:void 0,taker:l,maker:h,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(r,"volumeIncrement"),price:this.safeNumber(r,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(r,"minVolume"),max:this.safeNumber(r,"maxVolume")},price:{min:this.safeNumber(r,"minPrice"),max:this.safeNumber(r,"maxPrice")},cost:{min:this.safeNumber(r,"minQuoteVolume"),max:this.safeNumber(r,"maxQuoteVolume")}},info:r})}return i}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r),n=this.parseNumber(this.parsePrecision(this.safeString(i,"withdrawalPrecision"))),o=this.safeValue(i,"BaseAddress"),c=this.safeValue(i,"depositsAllowed"),d=this.safeValue(i,"withdrawalsAllowed"),h=this.safeValue(i,"isDelisted"),l=c&&d&&!h,u=this.safeValue(i,"isFiat")?"fiat":"crypto";s[a]={id:r,code:a,address:o,info:i,type:u,name:this.safeString(i,"name"),active:l,deposit:c,withdraw:d,fee:this.safeNumber(i,"flatWithdrawalFee"),precision:n,limits:{amount:{min:n,max:void 0},deposit:{min:this.safeNumber(i,"minDeposit"),max:void 0},withdraw:{min:this.safeNumber(i,"minWithdrawal"),max:this.safeNumber(i,"maxWithdrawal")}}}}return s}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.publicGetCurrenciesWithdrawalFees(t),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"fees");i[a]={};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"feeCurrency"),r=this.safeCurrencyCode(s),o=this.safeNumber(t,"amount");i[a][r]=o}}return{withdraw:i,deposit:{},info:s}}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.accountGetBalance(this.extend({},e));return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={instrument:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBook(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"buyLevels","sellLevels","price","volume")}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"timestamp")),i=this.safeString(e,"instrument"),r=this.safeSymbol(i,t,"-"),a=this.safeString(e,"last");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instrument:s.id},a=await this.publicGetTickers(this.extend(i,t));if(a.length<1)throw new r(this.id+" fetchTicker() could not load quotes for symbol "+e);return this.parseTicker(a[0],s)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.instrument=t.join(",")}const i=await this.publicGetTickers(this.extend(s,t));return this.parseTickers(i,e)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"timestamp")),i=this.safeString(e,"price"),r=this.safeString(e,"volume"),a=this.safeString(e,"id"),n=this.safeString(e,"side"),o=this.safeString(e,"orderId"),c=this.safeString(e,"instrument"),d=this.safeSymbol(c,t,"-");let h;const l=this.safeString(e,"feeCurrency"),u=this.safeCurrencyCode(l),f=this.safeString(e,"fee");void 0!==f&&(h={cost:f,currency:u});return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:d,id:a,order:o,type:void 0,takerOrMaker:undefined,side:n,price:i,cost:void 0,amount:r,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instrument:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetRecentTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){const e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[t](e)}async fetchPublicTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetTradingFeeSchedules(e),s=this.indexBy(t,"name"),i=this.safeValue(s,"OriginalSchedule",{}),r=this.safeValue(i,"feeRates",[]),a=this.safeValue(r,0,{}),n=this.safeNumber(a,"maker"),o=this.safeNumber(a,"taker"),c={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];c[s]={info:t,symbol:s,maker:n,taker:o,percentage:!0,tierBased:!0}}return c}async fetchPrivateTradingFees(e={}){await this.loadMarkets();const t=await this.tradingGetTradingFee(e),s=this.safeValue(t,"feeRates",[]),i=this.indexBy(s,"schedule"),r=this.safeValue(i,"OriginalSchedule",{}),a=this.safeNumber(r,"maker"),n=this.safeNumber(r,"taker"),o={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];o[s]={info:t,symbol:s,maker:a,taker:n,percentage:!0,tierBased:!0}}return o}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={granularity:this.timeframes[t],instrument:a.id};void 0!==i&&(n.limit=i);const o=await this.publicGetOhlcv(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseOrderStatus(e){const t={submitting:"open",unfilledActive:"open",partiallyFilledActive:"open",filled:"closed",partiallyFilledCancelled:"canceled",unfilledCancelled:"canceled"};return e in t?t[e]:e}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"status")),i=this.safeString(e,"instrument"),r=this.safeSymbol(i,t,"-"),a=this.parse8601(this.safeString(e,"timestamp")),n=this.safeString(e,"price"),o=this.safeString(e,"volume"),c=this.safeString(e,"remainingVolume"),d=this.parse8601(this.safeString(e,"lastUpdate")),h=this.safeString(e,"id",e),l=this.safeString(e,"type"),u=this.safeString(e,"side"),f=this.safeString(e,"timeInForce"),p=this.safeNumber(e,"stopPrice");return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:d,symbol:r,type:l,timeInForce:f,side:u,price:n,stopPrice:p,amount:o,cost:void 0,average:void 0,filled:void 0,remaining:c,status:s,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={instrument:n.id,volume:this.amountToPrecision(e,i),type:t,side:s};let c=!1,d=!1;if("limit"===t?c=!0:"stopLimit"===t&&(c=!0,d=!0),c){if(void 0===r)throw new l(this.id+" createOrder() requires a price argument for a "+t+" order");o.price=this.priceToPrecision(e,r)}if(d){const s=this.safeNumber(a,"stopPrice");if(void 0===s)throw new l(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order");o.stopPrice=this.priceToPrecision(e,s),a=this.omit(a,"stopPrice")}const h=await this.tradingPostPlaceOrder(this.extend(o,a));return this.parseOrder(h,n)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.tradingGetOrderStatus(this.extend(i,s));if(r.length<1)throw new h(this.id+" fetchOrder() could not fetch order id "+e);return this.parseOrder(r[0])}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==t&&(r.from=this.ymdhms(t,"T")),void 0!==s&&(r.limit=s),void 0!==e){const t=this.market(e);r.instrument=t.id}const a=this.safeString(this.options,"fetchOrdersMethod","tradingGetOrderHistory"),n=await this[a](this.extend(r,i));return this.parseOrders(n)}async fetchOrdersByIds(e,t,s,i={}){await this.loadMarkets();const r={id:e.join(",")},a=await this.tradingGetOrderStatus(this.extend(r,i));return this.parseOrders(a,void 0,t,s)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrument=r.id);const n=await this.tradingGetActiveOrders(this.extend(a,i));return this.parseOrders(n,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrument=r.id),void 0!==t&&(a.from=this.ymdhms(t,"T")),void 0!==s&&(a.limit=s);const n=this.safeString(this.options,"fetchClosedOrdersMethod","tradingGetOrderHistory"),o=await this[n](this.extend(a,i));return this.parseOrders(o,r,t,s)}async cancelOrder(e,t,s={}){const i=await this.cancelOrders([e],t,s);return this.safeValue(i,0)}async cancelOrders(e,t,s={}){if(!Array.isArray(e))throw new g(this.id+" cancelOrders() ids argument should be an array");await this.loadMarkets();const i={ids:[]};for(let t=0;t<e.length;t++){const s=parseInt(e[t]);i.ids.push(s)}const r=await this.tradingPostCancelOrdersById(this.extend(i,s));return this.parseOrders(r)}async cancelAllOrders(e,t={}){let s,i;if(void 0===e)s=await this.tradingPostCancelAllOrders(t);else{await this.loadMarkets(),i=this.market(e);const r={instruments:[i.id]};s=await this.tradingPostCancelOrdersByInstrument(this.extend(r,t))}return this.parseOrders(s,i,void 0,void 0,t)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={id:e},n=await this.tradingGetOrderTrades(this.extend(a,r));return this.parseTrades(n,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrument=r.id),void 0!==t&&(a.from=this.ymdhms(t,"T")),void 0!==s&&(a.limit=s);const n=await this.tradingGetTradeHistory(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTransactions(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.from=this.ymdhms(t,"T"));const n=await this.accountGetMoneyTransfers(this.extend(a,i));return this.parseTransactions(n,r,t,s)}async fetchDeposits(e,t,s,i={}){return this.fetchTransactions(e,t,s,this.extend({type:"deposit"},i))}async fetchWithdrawals(e,t,s,i={}){return this.fetchTransactions(e,t,s,this.extend({type:"withdrawal"},i))}parseTransactionStatus(e){return this.safeString({pending:"pending",success:"ok",failed:"failed"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"address"),r=this.safeString(e,"paymentId"),a=this.safeValue(e,"txId"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.safeString(e,"type"),d=this.parse8601(this.safeString(e,"createdAt")),h=this.parse8601(this.safeString(e,"processedAt")),l=this.parseTransactionStatus(this.safeString(e,"status")),u=this.safeNumber(e,"amount"),f={cost:this.safeNumber(e,"fee"),currency:o};return{info:e,id:s,txid:a,timestamp:d,datetime:this.iso8601(d),network:void 0,address:i,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:void 0,tagFrom:void 0,type:c,amount:u,currency:o,status:l,updated:h,fee:f}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.accountGetDepositAddress(this.extend(s,t)),r=this.safeString(i,"address"),a=this.safeString(i,"paymentId");return{currency:e,address:this.checkAddress(r),tag:a,network:void 0,info:i}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,address:s,amount:parseFloat(this.currencyToPrecision(e,t)),feeCurrency:a.id};void 0!==i&&(n.paymentId=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.transport=c,r=this.omit(r,"network"));const d=await this.accountPostWithdraw(this.extend(n,r));return this.parseTransaction(d)}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/"+t+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));"GET"===s&&Object.keys(o).length&&(n+="?"+this.urlencode(o));const c=this.urls.api+n;if("trading"===t||"account"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.base64ToBinary(this.secret);let o=n+e;r={"X-CREX24-API-KEY":this.apiKey,"X-CREX24-API-NONCE":e},"POST"===s&&(r["Content-Type"]="application/json",o+=a=this.json(i)),r["X-CREX24-API-SIGN"]=this.hmac(this.encode(o),t,"sha512","base64")}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,n,d,h,l,p){if(!this.isJsonEncodedObject(d))return;if(e>=200&&e<300)return;const m=this.safeString(h,"errorDescription"),g=this.id+" "+d;if(this.throwExactlyMatchedException(this.exceptions.exact,m,g),this.throwBroadlyMatchedException(this.exceptions.broad,m,g),400===e)throw new a(g);if(401===e)throw new f(g);if(403===e)throw new f(g);if(429===e)throw new u(g);if(500===e)throw new r(g);if(503===e)throw new c(g);if(504===e)throw new o(g);throw new r(g)}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],194:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ArgumentsRequired:a,ExchangeError:n,InsufficientFunds:o,DDoSProtection:c,InvalidNonce:d,PermissionDenied:h,BadRequest:l,BadSymbol:u,NotSupported:f,AccountNotEnabled:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"cryptocom",name:"Crypto.com",countries:["MT"],version:"v2",rateLimit:10,pro:!0,has:{CORS:!1,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:"emulated",fetchCurrencies:!1,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPositions:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/147792121-38ed5e36-c229-48d6-b49a-48d05fc19ed4.jpeg",test:"https://uat-api.3ona.co/v2",api:{spot:"https://api.crypto.com/v2",derivatives:"https://deriv-api.crypto.com/v1"},www:"https://crypto.com/",referral:"https://crypto.com/exch/5835vstech",doc:"https://exchange-docs.crypto.com/",fees:"https://crypto.com/exchange/document/fees-limits"},api:{spot:{public:{get:{"public/auth":1,"public/get-instruments":1,"public/get-book":1,"public/get-candlestick":1,"public/get-ticker":1,"public/get-trades":1,"public/margin/get-transfer-currencies":1,"public/margin/get-load-currenices":1,"public/respond-heartbeat":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/create-withdrawal":10/3,"private/get-withdrawal-history":10/3,"private/get-deposit-history":10/3,"private/get-deposit-address":10/3,"private/get-account-summary":10/3,"private/create-order":2/3,"private/cancel-order":2/3,"private/cancel-all-orders":2/3,"private/get-order-history":10/3,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/margin/get-user-config":10/3,"private/margin/get-account-summary":10/3,"private/margin/transfer":10/3,"private/margin/borrow":10/3,"private/margin/repay":10/3,"private/margin/get-transfer-history":10/3,"private/margin/get-borrow-history":10/3,"private/margin/get-interest-history":10/3,"private/margin/get-repay-history":10/3,"private/margin/get-liquidation-history":10/3,"private/margin/get-liquidation-orders":10/3,"private/margin/create-order":2/3,"private/margin/cancel-order":2/3,"private/margin/cancel-all-orders":2/3,"private/margin/get-order-history":10/3,"private/margin/get-open-orders":10/3,"private/margin/get-order-detail":1/3,"private/margin/get-trades":100,"private/deriv/transfer":10/3,"private/deriv/get-transfer-history":10/3,"private/subaccount/get-sub-accounts":10/3,"private/subaccount/get-transfer-history":10/3,"private/subaccount/transfer":10/3,"private/otc/get-otc-user":10/3,"private/otc/get-instruments":10/3,"private/otc/request-quote":100,"private/otc/accept-quote":100,"private/otc/get-quote-history":10/3,"private/otc/get-trade-history":10/3}}},derivatives:{public:{get:{"public/auth":10/3,"public/get-instruments":10/3,"public/get-book":1,"public/get-candlestick":1,"public/get-trades":1,"public/get-tickers":1,"public/get-valuations":1,"public/get-expired-settlement-price":10/3,"public/get-insurance":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/user-balance":10/3,"private/user-balance-history":10/3,"private/get-positions":10/3,"private/create-order":2/3,"private/cancel-order":2/3,"private/cancel-all-orders":2/3,"private/close-position":10/3,"private/convert-collateral":10/3,"private/get-order-history":100,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/change-account-leverage":10/3,"private/get-transactions":10/3}}}},fees:{trading:{maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("250000"),this.parseNumber("0.0009")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("20000000"),this.parseNumber("0.0007")],[this.parseNumber("100000000"),this.parseNumber("0.0006")],[this.parseNumber("200000000"),this.parseNumber("0.0004")]],taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0016")],[this.parseNumber("250000"),this.parseNumber("0.00015")],[this.parseNumber("1000000"),this.parseNumber("0.00014")],[this.parseNumber("20000000"),this.parseNumber("0.00013")],[this.parseNumber("100000000"),this.parseNumber("0.00012")],[this.parseNumber("200000000"),this.parseNumber("0.0001")]]}}},options:{defaultType:"spot",accountsById:{funding:"SPOT",spot:"SPOT",derivatives:"DERIVATIVES",swap:"DERIVATIVES",future:"DERIVATIVES"}},commonCurrencies:{USD_STABLE_COIN:"USDC"},precisionMode:m,exceptions:{exact:{10001:n,10002:h,10003:h,10004:l,10005:h,10006:c,10007:d,10008:l,10009:l,20001:l,20002:o,20005:p,30003:u,30004:l,30005:l,30006:l,30007:l,30008:l,30009:l,30010:l,30013:l,30014:l,30016:l,30017:l,30023:l,30024:l,30025:l,40001:l,40002:l,40003:l,40004:l,40005:l,40006:l,40007:l,40101:r,50001:l}}})}async fetchMarkets(e={}){const t=await this.spotPublicGetPublicGetInstruments(e),s=this.safeValue(t,"result",{}),i=this.safeValue(s,"instruments",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"instrument_name"),a=this.safeString(t,"base_currency"),n=this.safeString(t,"quote_currency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(t,"price_decimals"),h=this.parsePrecision(d),l=this.safeString(t,"min_quantity");let u=this.parseNumber("1");this.safeValue(t,"margin_trading_enabled_5x")&&(u=this.parseNumber("5"));this.safeValue(t,"margin_trading_enabled_10x")&&(u=this.parseNumber("10")),r.push({id:s,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(t,"margin_trading_enabled"),swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_decimals"))),price:this.parseNumber(this.parsePrecision(d))},limits:{leverage:{min:this.parseNumber("1"),max:u},amount:{min:this.parseNumber(l),max:this.safeNumber(t,"max_quantity")},price:{min:this.parseNumber(h),max:void 0},cost:{min:this.parseNumber(g.stringMul(l,h)),max:void 0}},info:t})}const a=await this.derivativesPublicGetPublicGetInstruments(),n=this.safeValue(a,"result",{}),o=this.safeValue(n,"data",[]);for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"inst_type"),i="PERPETUAL_SWAP"===s,a="FUTURE"===s,n=this.safeString(t,"base_ccy"),c=this.safeString(t,"quote_ccy"),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(c);let l=d+"/"+h+":"+h,u=this.safeInteger(t,"expiry_timestamp_ms");0===u&&(u=void 0);let f="swap";a&&(f="future",l=l+"-"+this.yymmdd(u));const p=this.safeNumber(t,"contract_size");r.push({id:this.safeString(t,"symbol"),symbol:l,base:d,quote:h,settle:h,baseId:n,quoteId:c,settleId:c,type:f,spot:!1,margin:!1,swap:i,future:a,option:!1,active:this.safeValue(t,"tradable"),contract:!0,linear:!0,inverse:!1,contractSize:p,expiry:u,expiryDatetime:this.iso8601(u),strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"quote_decimals"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_decimals")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"max_leverage")},amount:{min:this.parseNumber(p),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return r}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),r=this.getSupportedMapping(s,{spot:"spotPublicGetPublicGetTicker",future:"derivativesPublicGetPublicGetTickers",swap:"derivativesPublicGetPublicGetTickers"}),a=await this[r](i),n=this.safeValue(a,"result",{}),o=this.safeValue(n,"data",[]);return this.parseTickers(o,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instrument_name:s.id},[r,a]=this.handleMarketTypeAndParams("fetchTicker",s,t);if("spot"!==r)throw new f(this.id+" fetchTicker() only supports spot markets");const n=await this.spotPublicGetPublicGetTicker(this.extend(i,a)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"data",{});return this.parseTicker(c,s)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={instrument_name:r.id};void 0!==t&&(n.start_ts=t),void 0!==s&&(n.page_size=s);const[o,c]=this.handleMarketTypeAndParams("fetchOrders",r,i),d=this.getSupportedMapping(o,{spot:"spotPrivatePostPrivateGetOrderHistory",future:"derivativesPrivatePostPrivateGetOrderHistory",swap:"derivativesPrivatePostPrivateGetOrderHistory"}),h=await this[d](this.extend(n,c)),l=this.safeValue(h,"result",{}),u=this.safeValue2(l,"order_list","data",[]);return this.parseOrders(u,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id};void 0!==t&&(a.start_ts=t),void 0!==s&&(a.page_size=s);const[n,o]=this.handleMarketTypeAndParams("fetchTrades",r,i),c=this.getSupportedMapping(n,{spot:"spotPublicGetPublicGetTrades",future:"derivativesPublicGetPublicGetTrades",swap:"derivativesPublicGetPublicGetTrades"}),d=await this[c](this.extend(a,o)),h=this.safeValue(d,"result",{}),l=this.safeValue(h,"data",[]);return this.parseTrades(l,r,t,s)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={instrument_name:a.id,timeframe:this.timeframes[t]},[o,c]=this.handleMarketTypeAndParams("fetchOHLCV",a,r),d=this.getSupportedMapping(o,{spot:"spotPublicGetPublicGetCandlestick",future:"derivativesPublicGetPublicGetCandlestick",swap:"derivativesPublicGetPublicGetCandlestick"}),h=await this[d](this.extend(n,c)),l=this.safeValue(h,"result",{}),u=this.safeValue(l,"data",[]);return this.parseOHLCVs(u,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={instrument_name:i.id};t&&(r.depth=t);const[a,n]=this.handleMarketTypeAndParams("fetchOrderBook",i,s),o=this.getSupportedMapping(a,{spot:"spotPublicGetPublicGetBook",future:"derivativesPublicGetPublicGetBook",swap:"derivativesPublicGetPublicGetBook"}),c=await this[o](this.extend(r,n)),d=this.safeValue(c,"result"),h=this.safeValue(d,"data"),l=this.safeValue(h,0),u=this.safeInteger(l,"t");return this.parseOrderBook(l,e,u)}parseSwapBalance(e){const t=this.safeValue(e,"result",{}),s=this.safeValue(t,"data",[]),i={info:e};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"instrument_name"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,"total_cash_balance"),n.free=this.safeString(t,"total_available_balance"),i[a]=n}return this.safeBalance(i)}parseSpotBalance(e){const t=this.safeValue(e,"result",{}),s=this.safeValue(t,"accounts",[]),i={info:e};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,"balance"),n.free=this.safeString(t,"available"),n.used=this.safeString(t,"order"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i=this.getSupportedMapping(t,{spot:"spotPrivatePostPrivateGetAccountSummary",future:"derivativesPrivatePostPrivateUserBalance",swap:"derivativesPrivatePostPrivateUserBalance"}),r=await this[i](s);return this[this.getSupportedMapping(t,{spot:"parseSpotBalance",future:"parseSwapBalance",swap:"parseSwapBalance"})](r)}async fetchOrder(e,t,s={}){let i;await this.loadMarkets(),void 0!==t&&(i=this.market(t));const r={},[a,n]=this.handleMarketTypeAndParams("fetchOrder",i,s);r.order_id="spot"===a?e.toString():parseInt(e);const o=this.getSupportedMapping(a,{spot:"spotPrivatePostPrivateGetOrderDetail",future:"derivativesPrivatePostPrivateGetOrderDetail",swap:"derivativesPrivatePostPrivateGetOrderDetail"}),c=await this[o](this.extend(r,n)),d=this.safeValue(c,"result",{}),h=this.safeValue(d,"order_info",d);return this.parseOrder(h,i)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),c={instrument_name:n.id,side:s.toUpperCase(),type:o,quantity:this.amountToPrecision(e,i)};"LIMIT"!==o&&"STOP_LIMIT"!==o||(c.price=this.priceToPrecision(e,r));this.safeValue(a,"postOnly",!1)&&(c.exec_inst="POST_ONLY",a=this.omit(a,["postOnly"]));const[d,h]=this.handleMarketTypeAndParams("createOrder",n,a),l=this.getSupportedMapping(d,{spot:"spotPrivatePostPrivateCreateOrder",future:"derivativesPrivatePostPrivateCreateOrder",swap:"derivativesPrivatePostPrivateCreateOrder"}),u=await this[l](this.extend(c,h)),f=this.safeValue(u,"result",{});return this.parseOrder(f,n)}async cancelAllOrders(e,t={}){let s;await this.loadMarkets(),void 0!==e&&(s=this.market(e));const i={},[r,n]=this.handleMarketTypeAndParams("cancelAllOrders",s,t);if("spot"===r){if(void 0===e)throw new a(this.id+" cancelAllOrders() requires a symbol argument for "+r+" orders");i.instrument_name=s.id}const o=this.getSupportedMapping(r,{spot:"spotPrivatePostPrivateCancelAllOrders",future:"derivativesPrivatePostPrivateCancelAllOrders",swap:"derivativesPrivatePostPrivateCancelAllOrders"});return await this[o](this.extend(i,n))}async cancelOrder(e,t,s={}){let i;await this.loadMarkets(),void 0!==t&&(i=this.market(t));const r={},[n,o]=this.handleMarketTypeAndParams("cancelOrder",i,s);if("spot"===n){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument for "+n+" orders");r.instrument_name=i.id,r.order_id=e.toString()}else r.order_id=parseInt(e);const c=this.getSupportedMapping(n,{spot:"spotPrivatePostPrivateCancelOrder",future:"derivativesPrivatePostPrivateCancelOrder",swap:"derivativesPrivatePostPrivateCancelOrder"}),d=await this[c](this.extend(r,o)),h=this.safeValue(d,"result",d);return this.parseOrder(h)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrument_name=r.id),void 0!==s&&(a.page_size=s);const[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i),c=this.getSupportedMapping(n,{spot:"spotPrivatePostPrivateGetOpenOrders",future:"derivativesPrivatePostPrivateGetOpenOrders",swap:"derivativesPrivatePostPrivateGetOpenOrders"}),d=await this[c](this.extend(a,o)),h=this.safeValue(d,"result",{}),l=this.safeValue2(h,"order_list","data",[]);return this.parseOrders(l,r,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.market(e),r.instrument_name=a.id),void 0!==t){r.start_ts=t;const e=this.sum(t,864e5);r.end_ts=e}void 0!==s&&(r.page_size=s);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,i),c=this.getSupportedMapping(n,{spot:"spotPrivatePostPrivateGetTrades",future:"derivativesPrivatePostPrivateGetTrades",swap:"derivativesPrivatePostPrivateGetTrades"}),d=await this[c](this.extend(r,o)),h=this.safeValue(d,"result",{}),l=this.safeValue2(h,"trade_list","data",[]);return this.parseTrades(l,a,t,s)}parseAddress(e){let t,s,i;if(e.indexOf("?")>0){[t,i]=e.split("?");s=i.split("=")[1]}else t=e;return[t,s]}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,address:s};void 0!==i&&(n.address_tag=i);const o=await this.spotPrivatePostPrivateCreateWithdrawal(this.extend(n,r)),c=this.safeValue(o,"result");return this.parseTransaction(c,a)}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.spotPrivatePostPrivateGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"result",{}),a=this.safeValue(r,"deposit_address_list",[]);if(0===a.length)throw new n(this.id+" fetchDepositAddressesByNetwork() generating address...");const o={};for(let e=0;e<a.length;e++){const t=this.safeValue(a,e),s=this.safeString(t,"address"),i=this.safeString(t,"currency"),r=this.safeCurrencyCode(i),[n,c]=this.parseAddress(s);this.checkAddress(n);const d=this.safeString(t,"network"),h=this.safeNetwork(d);o[h]={info:t,currency:r,address:n,tag:c,network:h}}return o}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network");t=this.omit(t,["network"]);const i=await this.fetchDepositAddressesByNetwork(e,t);if(s in i)return i[s];return i[Object.keys(i)[0]]}safeNetwork(e){return e}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==s&&(a.page_size=s);const n=await this.spotPrivatePostPrivateGetDepositHistory(this.extend(a,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"deposit_list",[]);return this.parseTransactions(c,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==s&&(a.page_size=s);const n=await this.spotPrivatePostPrivateGetWithdrawalHistory(this.extend(a,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"withdrawal_list",[]);return this.parseTransactions(c,r,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);s=s.toLowerCase(),i=i.toLowerCase();const n=this.safeValue(this.options,"accountsById",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d={currency:a.id,amount:parseFloat(t),from:o,to:c},h=await this.spotPrivatePostPrivateDerivTransfer(this.extend(d,r));return this.parseTransfer(h,a)}async fetchTransfers(e,t,s,i={}){if(!("direction"in i))throw new a(this.id+' fetchTransfers() requires a direction param to be either "IN" or "OUT"');let r;await this.loadMarkets();const n={direction:"OUT"};void 0!==e&&(r=this.currency(e),n.currency=r.id);const o=await this.spotPrivatePostPrivateDerivGetTransferHistory(this.extend(n,i)),c=this.safeValue(o,"result",{}),d=this.safeValue(c,"transfer_list",[]);return this.parseTransfers(d,r,t,s,i)}parseTransferStatus(e){return this.safeString({COMPLETED:"ok",PROCESSING:"pending"},e,e)}parseTransfer(e,t){const s=this.safeInteger(e,"time"),i=this.safeNumber(e,"amount"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(e,"information");let o,c;if(void 0!==n){const e=n.split(" ");o=this.safeStringLower(e,1),c="spot"===o?"derivative":"spot"}const d=this.safeString(e,"status"),h=this.parseTransferStatus(d);return{info:e,id:this.safeString(e,"id"),timestamp:s,datetime:this.iso8601(s),currency:a,amount:i,fromAccount:o,toAccount:c,status:h}}parseTicker(e,t){const s=this.safeInteger(e,"t"),i=this.safeString(e,"i"),r=(t=this.safeMarket(i,t,"_")).symbol,a=this.safeString(e,"a"),n=this.safeString(e,"c");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeString(e,"b"),bidVolume:void 0,ask:this.safeString(e,"k"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:n,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:void 0,info:e},t)}parseTrade(e,t){const s=this.safeInteger2(e,"t","create_time"),i=this.safeString2(e,"i","instrument_name"),r=(t=this.safeMarket(i,t,"_")).symbol,a=this.safeString2(e,"p","traded_price"),n=this.safeString2(e,"q","traded_quantity");let o=this.safeString2(e,"s","side");void 0!==o&&(o=o.toLowerCase());const c=this.safeString2(e,"d","trade_id"),d=this.safeStringLower2(e,"liquidity_indicator","taker_side"),h=this.safeString(e,"order_id");let l,u=this.safeString2(e,"fee","fees");if(void 0!==u){let s;this.safeValue(t,"contract",!1)&&(u=g.stringNeg(u)),t.spot?s=this.safeString(e,"fee_currency"):t.linear&&(s=t.quote),l={currency:s,cost:u}}return this.safeTrade({info:e,id:c,timestamp:s,datetime:this.iso8601(s),symbol:r,side:o,price:a,amount:n,cost:void 0,order:h,takerOrMaker:d,type:void 0,fee:l},t)}parseOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled",FILLED:"closed",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCEL:"GTC",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"create_time"),i=this.safeInteger(e,"update_time"),r=this.safeString(e,"instrument_name"),a=this.safeSymbol(r,t),n=this.safeString(e,"quantity"),o=this.safeString(e,"cumulative_quantity"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"order_id"),h=this.safeString(e,"client_oid"),l=this.safeString2(e,"price","limit_price"),u=this.safeString(e,"avg_price"),f=this.safeStringLower2(e,"type","order_type"),p=this.safeStringLower(e,"side"),m=this.parseTimeInForce(this.safeString(e,"time_in_force")),g=this.safeString(e,"exec_inst");let y;void 0!==g&&(y="POST_ONLY"===g);const b=this.safeString(e,"cumulative_value"),v=this.safeString(e,"cumulative_fee");let w;if(void 0!==v){const t=this.safeString(e,"fee_instrument_name");w={cost:v,currency:this.safeCurrencyCode(t)}}return this.safeOrder({info:e,id:d,clientOrderId:h,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:i,status:c,symbol:a,type:f,timeInForce:m,postOnly:y,side:p,price:l,amount:n,filled:o,remaining:void 0,cost:b,fee:w,average:u,trades:[]},t)}parseDepositStatus(e){return this.safeString({0:"pending",1:"ok",2:"failed",3:"pending"},e,e)}parseWithdrawalStatus(e){return this.safeString({0:"pending",1:"pending",2:"failed",3:"pending",4:"failed",5:"ok",6:"canceled"},e,e)}parseTransaction(e,t){let s;const i=this.safeString(e,"status");let r;"client_wid"in e?(s="withdrawal",r=this.parseWithdrawalStatus(i)):(s="deposit",r=this.parseDepositStatus(i));const a=this.safeString(e,"id"),n=this.safeString(e,"address"),[o,c]=this.parseAddress(n),d=this.safeString(e,"currency"),h=this.safeCurrencyCode(d,t),l=this.safeInteger(e,"create_time"),u=this.safeNumber(e,"amount"),f=this.safeString(e,"txid"),p=this.safeNumber(e,"fee");let m;void 0!==p&&(m={currency:h,cost:p});const g=this.safeInteger(e,"update_time");return{info:e,id:a,txid:f,timestamp:l,datetime:this.iso8601(l),network:void 0,address:o,addressTo:o,addressFrom:void 0,tag:c,tagTo:c,tagFrom:void 0,type:s,amount:u,currency:h,status:r,updated:g,internal:void 0,fee:m}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const[n,o]=t;let c=this.urls.api[n]+"/"+e;const d=this.omit(i,this.extractParams(e));if("public"===o)Object.keys(d).length&&(c+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const t=this.nonce().toString(),s=this.extend({},i),n=this.keysort(s),o=Object.keys(n);let c="";for(let e=0;e<o.length;e++)c=c+o[e].toString()+s[o[e]].toString();const d=e+t+this.apiKey+c+t,h=this.hmac(this.encode(d),this.encode(this.secret)),l=o.length;if(a=this.json({id:t,method:e,params:i,api_key:this.apiKey,sig:h,nonce:t}),0===l){const e="{}",t="[]";a=a.replace(t,e)}r={"Content-Type":"application/json"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new n(this.id+" "+a)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],195:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,ExchangeError:a,ArgumentsRequired:n,ExchangeNotAvailable:o,InsufficientFunds:c,OrderNotFound:d,InvalidOrder:h,DDoSProtection:l,InvalidNonce:u,AuthenticationError:f,BadRequest:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"currencycom",name:"Currency.com",countries:["BY"],rateLimit:100,certified:!0,pro:!0,version:"v2",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:"emulated",fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:void 0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchLedger:!0,fetchLedgerEntry:!1,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:void 0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPosition:void 0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:!0,fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:!0,reduceMargin:void 0,setLeverage:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:void 0,withdraw:void 0},timeframes:{"1m":"1m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},hostname:"backend.currency.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg",api:{public:"https://api-adapter.{hostname}/api",private:"https://api-adapter.{hostname}/api",marketcap:"https://marketcap.{hostname}/api"},test:{public:"https://demo-api-adapter.{hostname}/api",private:"https://demo-api-adapter.{hostname}/api"},www:"https://www.currency.com",referral:"https://currency.com/trading/signup?c=362jaimv&pid=referral",doc:["https://currency.com/api"],fees:"https://currency.com/fees-charges"},api:{public:{get:{"v1/time":1,"v1/exchangeInfo":1,"v1/depth":1,"v1/aggTrades":1,"v1/klines":1,"v1/ticker/24hr":1,"v2/time":1,"v2/exchangeInfo":1,"v2/depth":1,"v2/aggTrades":1,"v2/klines":1,"v2/ticker/24hr":1}},marketcap:{get:{"v1/assets":1,"v1/candles":1,"v1/orderbook":1,"v1/summary":1,"v1/ticker":1,"v1/token/assets":1,"v1/token/orderbook":1,"v1/token/summary":1,"v1/token/ticker":1,"v1/token/trades":1,"v1/token_crypto/OHLC":1,"v1/token_crypto/assets":1,"v1/token_crypto/orderbook":1,"v1/token_crypto/summary":1,"v1/token_crypto/ticker":1,"v1/token_crypto/trades":1,"v1/trades":1}},private:{get:{"v1/account":1,"v1/currencies":1,"v1/deposits":1,"v1/depositAddress":1,"v1/ledger":1,"v1/leverageSettings":1,"v1/myTrades":1,"v1/openOrders":1,"v1/tradingPositions":1,"v1/tradingPositionsHistory":1,"v1/transactions":1,"v1/withdrawals":1,"v2/account":1,"v2/currencies":1,"v2/deposits":1,"v2/depositAddress":1,"v2/ledger":1,"v2/leverageSettings":1,"v2/myTrades":1,"v2/openOrders":1,"v2/tradingPositions":1,"v2/tradingPositionsHistory":1,"v2/transactions":1,"v2/withdrawals":1},post:{"v1/order":1,"v1/updateTradingPosition":1,"v1/updateTradingOrder":1,"v1/closeTradingPosition":1,"v2/order":1,"v2/updateTradingPosition":1,"v2/updateTradingOrder":1,"v2/closeTradingPosition":1},delete:{"v1/order":1,"v2/order":1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:m,options:{defaultTimeInForce:"GTC",warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"RESULT",stop:"RESULT"},leverage_markets_suffix:"_LEVERAGE",collateralCurrencies:["USD","EUR","USDT"]},exceptions:{broad:{"FIELD_VALIDATION_ERROR Cancel is available only for LIMIT order":h,"API key does not exist":f,"Order would trigger immediately.":h,"Account has insufficient balance for requested action.":c,"Rest API trading is not enabled.":o,"Combination of parameters invalid":p,"Invalid limit price":p,"Only leverage symbol allowed here:":r,"market data service is not available":o,"your time is ahead of server":u},exact:{"-1000":o,"-1013":h,"-1022":f,"-1030":h,"-1100":h,"-1104":a,"-1025":f,"-1128":p,"-2010":a,"-2011":d,"-2013":d,"-2014":f,"-2015":f}},commonCurrencies:{ACN:"Accenture",AMC:"AMC Entertainment Holdings",BNS:"Bank of Nova Scotia",CAR:"Avis Budget Group Inc",CLR:"Continental Resources",EDU:"New Oriental Education & Technology Group Inc",ETN:"Eaton",FOX:"Fox Corporation",GM:"General Motors Co",IQ:"iQIYI",OSK:"Oshkosh",PLAY:"Dave & Buster's Entertainment"}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetV2Time(e);return this.safeInteger(t,"serverTime")}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.privateGetV2Currencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"displaySymbol"),a=this.safeCurrencyCode(r),n=this.safeNumber(i,"commissionFixed");s[a]={id:r,code:a,address:this.safeString(i,"baseAddress"),type:this.safeStringLower(i,"type"),name:this.safeString(i,"name"),active:void 0,deposit:void 0,withdraw:void 0,fee:n,precision:this.parseNumber(this.parsePrecision(this.safeString(i,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(i,"minWithdrawal"),max:this.safeNumber(i,"maxWithdrawal")},deposit:{min:this.safeNumber(i,"minDeposit"),max:void 0}},info:i}}return s}async fetchMarkets(e={}){const t=await this.publicGetV2ExchangeInfo(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const s=this.safeValue(t,"symbols",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);let d=o+"/"+c;const h=this.safeString(t,"marketType"),l="SPOT"===h,u=!1,f="LEVERAGE"===h,p=f;f&&(d=d.replace(this.options.leverage_markets_suffix,""),d+=":"+c);const m="TRADING"===this.safeString(t,"status"),y=this.safeString2(t,"exchangeFee","tradingFee");let b=this.safeString(t,"makerFee",y),v=this.safeString(t,"takerFee",y);b=g.stringDiv(b,"100"),v=g.stringDiv(v,"100");const w=this.safeValue(t,"filters",[]),S=this.indexBy(w,"filterType");let k,T,O=this.safeNumber(t,"tickSize");if("PRICE_FILTER"in S){const e=this.safeValue(S,"PRICE_FILTER",{});O=this.safeNumber(e,"tickSize"),k=this.safeNumber(e,"minPrice");const t=this.safeNumber(e,"maxPrice");void 0!==t&&t>0&&(T=t)}let _=this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),x={min:void 0,max:void 0};if("LOT_SIZE"in S){const e=this.safeValue(S,"LOT_SIZE",{});_=this.safeNumber(e,"stepSize"),x={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}let M,I={min:void 0,max:void 0};if("MARKET_LOT_SIZE"in S){const e=this.safeValue(S,"MARKET_LOT_SIZE",{});I={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in S){const e=this.safeValue(S,"MIN_NOTIONAL",{});M=this.safeNumber(e,"minNotional")}const C=f||u;i.push({id:r,symbol:d,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:h,spot:l,margin:p,swap:f,future:u,option:!1,active:m,contract:C,linear:!!C||void 0,inverse:void 0,taker:this.parseNumber(v),maker:this.parseNumber(b),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:_,price:O},limits:{leverage:{min:void 0,max:void 0},amount:x,market:I,price:{min:k,max:T},cost:{min:M,max:void 0}},info:t})}return i}async fetchAccounts(e={}){const t=await this.privateGetV2Account(e),s=this.safeValue(t,"balances",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeInteger(t,"accountId"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);i.push({id:r,type:void 0,currency:n,info:t})}return i}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetV2Account(e),s=this.safeNumber(t,"makerCommission"),i=this.safeNumber(t,"takerCommission"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:s,taker:i,percentage:!0,tierBased:!1}}return r}parseBalance(e,t){const s={info:e},i=this.safeValue(e,"balances",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetV2Account(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id};void 0!==t&&(i.limit=t);const r=await this.publicGetV2Depth(this.extend(i,s)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t){const s=this.safeInteger2(e,"closeTime","timestamp"),i=this.safeString2(e,"symbol","symbolName");t=this.safeMarket(i,t,"/");const r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString2(e,"bidPrice","bid"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString2(e,"askPrice","ofr"),askVolume:this.safeString(e,"ofrQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:r,last:r,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetV2Ticker24hr(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetV2Ticker24hr(t);return this.parseTickers(s,e)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.timeframes[t]};void 0!==s&&(n.startTime=s),void 0!==i&&(n.limit=i);const o=await this.publicGetV2Klines(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseTrade(e,t){const s=this.safeInteger2(e,"T","time"),i=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString2(e,"a","id");let n;const o=this.safeString(e,"orderId");let c,d;"m"in e?(n=e.m?"sell":"buy",c="taker"):"isBuyer"in e&&(n=e.isBuyer?"buy":"sell",c=e.isMaker?"maker":"taker"),"commission"in e&&(d={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))});const h=this.safeString(e,"symbol"),l=this.safeSymbol(h,t);return this.safeTrade({id:a,order:o,timestamp:s,datetime:this.iso8601(s),symbol:l,type:void 0,takerOrMaker:c,side:n,price:i,amount:r,cost:void 0,fee:d,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s),void 0!==t&&(a.startTime=t);const n=await this.publicGetV2AggTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t,"/"),r=this.safeString(e,"orderId"),a=this.safeString(e,"price"),n=this.safeString(e,"origQty"),o=this.safeString(e,"executedQty"),c=g.stringAbs(o),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),l=this.parseOrderType(this.safeString(e,"type")),u=this.parseOrderSide(this.safeString(e,"side")),f=this.safeInteger2(e,"time","transactTime"),p=this.safeValue(e,"fills");return this.safeOrder({info:e,id:r,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,symbol:i,type:l,timeInForce:h,side:u,price:a,stopPrice:void 0,amount:n,cost:void 0,average:void 0,filled:c,remaining:void 0,status:d,fee:void 0,trades:p},t)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"stop"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=this.market(e);let c;if(o.margin&&(c=this.safeString(this.options,"accountId"),c=this.safeString(a,"accountId",c),void 0===c))throw new n(this.id+" createOrder() requires an accountId parameter or an exchange.options['accountId'] option for "+o.type+" markets");const d=this.safeValue(this.options.newOrderRespType,t,"RESULT"),h={symbol:o.id,quantity:this.amountToPrecision(e,i),type:t.toUpperCase(),side:s.toUpperCase(),newOrderRespType:d};if("limit"===t)h.price=this.priceToPrecision(e,r),h.timeInForce=this.options.defaultTimeInForce;else if("stop"===t)h.type="STOP",h.price=this.priceToPrecision(e,r);else if("market"===t){const t=this.safeNumber(a,"stopPrice");a=this.omit(a,"stopPrice"),void 0!==t&&(h.type="STOP",h.price=this.priceToPrecision(e,t))}const l=await this.privatePostV2Order(this.extend(h,a));return this.parseOrder(l,o)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const n={};if(void 0!==e)r=this.market(e),n.symbol=r.id;else if(this.options.warnOnFetchOpenOrdersWithoutSymbol){const e=this.symbols.length,t=parseInt(e/2);throw new a(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}const o=await this.privateGetV2OpenOrders(this.extend(n,i));return this.parseOrders(o,r,t,s,i)}async cancelOrder(e,t,s={}){if(void 0===t)throw new n(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeValue(s,"origClientOrderId"),a={symbol:i.id};void 0===r?a.orderId=e:a.origClientOrderId=r;const o=await this.privateDeleteV2Order(this.extend(a,s));return this.parseOrder(o,i)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s);const o=await this.privateGetV2MyTrades(this.extend(a,i));return this.parseTrades(o,r,t,s)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsByMethod("privateGetV2Deposits",e,t,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsByMethod("privateGetV2Withdrawals",e,t,s,i)}async fetchTransactions(e,t,s,i={}){return await this.fetchTransactionsByMethod("privateGetV2Transactions",e,t,s,i)}async fetchTransactionsByMethod(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.currency(t)),void 0!==s&&(a.startTime=s),void 0!==i&&(a.limit=i);const o=await this[e](this.extend(a,r));return this.parseTransactions(o,n,s,i,r)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"blockchainTransactionHash"),r=this.safeNumber(e,"amount"),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.parseTransactionStatus(this.safeString(e,"state")),d=this.parseTransactionType(this.safeString(e,"type")),h=this.safeString(e,"commission");let l;void 0!==h&&(l={currency:o,cost:h});return{id:s,txid:i,timestamp:a,datetime:this.iso8601(a),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:d,amount:r,currency:o,status:c,updated:void 0,comment:void 0,fee:l,info:e}}parseTransactionStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok"},e,e)}parseTransactionType(e){return this.safeString({deposit:"deposit",withdrawal:"withdrawal"},e,e)}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e)),void 0!==t&&(r.startTime=t),void 0!==s&&(r.limit=s);const n=await this.privateGetV2Ledger(this.extend(r,i));return this.parseLedger(n,a,t,s)}parseLedgerEntry(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"amount"),r=g.stringAbs(i),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.safeString(e,"commission");let d;void 0!==c&&(d={currency:o,cost:c});const h=g.stringLt(i,"0")?"out":"in";return{id:s,timestamp:a,datetime:this.iso8601(a),direction:h,account:void 0,referenceId:this.safeString(e,"blockchainTransactionHash"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:o,amount:r,before:void 0,after:this.safeString(e,"balance"),status:this.parseLedgerEntryStatus(this.safeString(e,"status")),fee:d,info:e}}parseLedgerEntryStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok",CANCELLED:"canceled"},e,e)}parseLedgerEntryType(e){return this.safeString({deposit:"transaction",withdrawal:"transaction",exchange_commission:"fee"},e,e)}async fetchLeverage(e,t={}){await this.loadMarkets();const s={symbol:this.market(e).id},i=await this.privateGetV2LeverageSettings(this.extend(s,t));return this.safeNumber(i,"value")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={coin:s.id},r=await this.privateGetV2DepositAddress(this.extend(i,t));return this.parseDepositAddress(r,s)}parseDepositAddress(e,t){const s=this.safeString(e,"address");return this.checkAddress(s),{currency:(t=this.safeCurrency(void 0,t)).code,address:s,tag:void 0,network:void 0,info:e}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+e;if("historicalTrades"===e&&(r={"X-MBX-APIKEY":this.apiKey}),"private"===t){this.checkRequiredCredentials();let e=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:this.options.recvWindow},i));e+="&signature="+this.hmac(this.encode(e),this.encode(this.secret)),r={"X-MBX-APIKEY":this.apiKey},"GET"===s||"DELETE"===s?n+="?"+e:(a=e,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(i).length&&(n+="?"+this.urlencode(i));return n=this.implodeHostname(n),{url:n,method:s,body:a,headers:r}}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.privateGetV2TradingPositions(t),i=this.safeValue(s,"positions",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,i=this.safeNumber(e,"createdTimestamp"),r=this.safeString(e,"openQuantity"),a=g.stringGt(r,"0")?"long":"short",n=g.stringAbs(r),o=this.safeNumber(e,"openPrice"),c=this.safeNumber(e,"upl"),d=this.safeString(e,"margin"),h=g.stringDiv("1",d);return{symbol:s,timestamp:i,datetime:this.iso8601(i),contracts:this.parseNumber(n),contractSize:void 0,entryPrice:o,collateral:void 0,side:a,unrealizedProfit:c,leverage:h,percentage:void 0,marginMode:void 0,notional:void 0,markPrice:void 0,liquidationPrice:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:this.parseNumber(d),maintenanceMarginPercentage:void 0,marginRatio:void 0,info:e}}handleErrors(e,t,s,i,r,n,o,c,d){if(418===e||429===e)throw new l(this.id+" "+e.toString()+" "+t+" "+n);if(e>=400){if(n.indexOf("Price * QTY is zero or less")>=0)throw new h(this.id+" order cost = amount * price is zero or less "+n);if(n.indexOf("LOT_SIZE")>=0)throw new h(this.id+" order amount should be evenly divisible by lot size "+n);if(n.indexOf("PRICE_FILTER")>=0)throw new h(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+n)}if(void 0===o)return;const u=this.safeString(o,"code");if(void 0!==u&&"0"!==u){const e=this.id+" "+this.json(o);this.throwExactlyMatchedException(this.exceptions.exact,u,e);const t=this.safeString(o,"msg");throw this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new a(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],196:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InsufficientFunds:a,BadRequest:n,BadSymbol:o,InvalidOrder:c,AuthenticationError:d,ArgumentsRequired:h,OrderNotFound:l,ExchangeNotAvailable:u}=e("./base/errors"),{TICK_SIZE:f}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"delta",name:"Delta Exchange",countries:["VC"],rateLimit:300,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDeposits:void 0,fetchLedger:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransfer:void 0,fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:void 0,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","1d":"1d","7d":"7d","1w":"1w","2w":"2w","1M":"30d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.delta.exchange",private:"https://api.delta.exchange"},www:"https://www.delta.exchange",doc:["https://docs.delta.exchange"],fees:"https://www.delta.exchange/fees",referral:"https://www.delta.exchange/app/signup/?code=IULYNB"},api:{public:{get:["assets","settings","indices","products","tickers","tickers/{symbol}","l2orderbook/{symbol}","trades/{symbol}","history/candles","history/sparklines"]},private:{get:["orders","orders/leverage","positions","positions/margined","orders/history","fills","fills/history/download/csv","wallet/balances","wallet/transactions","wallet/transactions/download","deposits/address"],post:["orders","orders/batch","orders/leverage","positions/change_margin"],put:["orders","orders/batch"],delete:["orders","orders/all","orders/batch"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:.0015,maker:.001,tiers:{taker:[[0,.0015],[100,.0013],[250,.0013],[1e3,.001],[5e3,9e-4],[1e4,75e-5],[2e4,65e-5]],maker:[[0,.001],[100,.001],[250,9e-4],[1e3,75e-5],[5e3,6e-4],[1e4,5e-4],[2e4,5e-4]]}}},precisionMode:f,requiredCredentials:{apiKey:!0,secret:!1},exceptions:{exact:{insufficient_margin:a,order_size_exceed_available:c,risk_limits_breached:n,invalid_contract:o,immediate_liquidation:c,out_of_bankruptcy:c,self_matching_disrupted_post_only:c,immediate_execution_post_only:c,bad_schema:n,invalid_api_key:d,invalid_signature:d,open_order_not_found:l,unavailable:u},broad:{}}})}async fetchTime(e={}){const t=await this.publicGetSettings(e),s=this.safeValue(t,"result",{});return this.safeIntegerProduct(s,"server_time",.001)}async fetchStatus(e={}){const t=await this.publicGetSettings(e),s=this.safeValue(t,"result",{});return{status:"true"===this.safeString(s,"under_maintenance")?"maintenance":"ok",updated:this.safeIntegerProduct(s,"server_time",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),s=this.safeValue(t,"result",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeInteger(t,"id"),n=this.safeCurrencyCode(r),o="enabled"===this.safeString(t,"deposit_status"),c="enabled"===this.safeString(t,"withdrawal_status"),d=o&&c;i[n]={id:r,numericId:a,code:n,name:this.safeString(t,"name"),info:t,active:d,deposit:o,withdraw:c,fee:this.safeNumber(t,"base_withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"min_withdrawal_amount"),max:void 0}}}}return i}async loadMarkets(e=!1,t={}){const s=await super.loadMarkets(e,t);(void 0===this.safeValue(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexBy(this.currencies,"numericId"));return(void 0===this.safeValue(this.options,"marketsByNumericId")||e)&&(this.options.marketsByNumericId=this.indexBy(this.markets,"numericId")),s}async fetchMarkets(e={}){const t=await this.publicGetProducts(e),s=this.safeValue(t,"result",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e];let r=this.safeString(t,"contract_type");const a=this.safeValue(t,"quoting_asset",{}),n=this.safeValue(t,"underlying_asset",{}),o=this.safeValue(t,"settling_asset"),c=this.safeValue(t,"product_specs",{}),d=this.safeString(n,"symbol"),h=this.safeString(a,"symbol"),l=this.safeString(o,"symbol"),u=this.safeString(t,"symbol"),f=this.safeInteger(t,"id"),p=this.safeCurrencyCode(d),m=this.safeCurrencyCode(h),g=this.safeCurrencyCode(l),y="put_options"===r,b="move_options"===r,v="spot"===r,w="perpetual_futures"===r,S="futures"===r,k="call_options"===r||y||b,T=this.safeString(t,"strike_price"),O=this.safeString(t,"settlement_time"),_=this.parse8601(O),x=this.safeNumber(t,"contract_value");let M;M=v?this.parseNumber(this.parsePrecision(this.safeString(c,"underlying_precision"))):this.parseNumber("1");const I=g===p;let C,P=p+"/"+m;if(w||S||k)if(P=P+":"+g,S||k)if(P=P+"-"+this.yymmdd(_),k){r="option";let e="C";C="call",y?(e="P",C="put"):b&&(e="M",C="move"),P=P+":"+T+":"+e}else r="future";else r="swap";else P=u;const A=this.safeString(t,"state");i.push({id:u,numericId:f,symbol:P,base:p,quote:m,settle:g,baseId:d,quoteId:h,settleId:l,type:r,spot:v,margin:!!v&&void 0,swap:w,future:S,option:k,active:"live"===A,contract:!v,linear:v?void 0:I,inverse:v?void 0:!I,taker:this.safeNumber(t,"taker_commission_rate"),maker:this.safeNumber(t,"maker_commission_rate"),contractSize:x,expiry:_,expiryDatetime:O,strike:this.parseNumber(T),optionType:C,precision:{amount:M,price:this.safeNumber(t,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber("1"),max:this.safeNumber(t,"position_size_limit")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_size"),max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeIntegerProduct(e,"timestamp",.001),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"close"),n=this.safeString(e,"open"),o=this.safeString(e,"volume"),c=this.safeString(e,"turnover");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTickersSymbol(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=this.safeValue(s,"result",[]),r={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL2orderbookSymbol(this.extend(r,s)),n=this.safeValue(a,"result",{});return this.parseOrderBook(n,i.symbol,void 0,"buy","sell","price","size")}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"order_id");let r=this.parse8601(this.safeString(e,"created_at"));r=this.safeIntegerProduct(e,"timestamp",.001,r);const a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeValue(e,"product",{}),c=this.safeString(o,"symbol"),d=this.safeSymbol(c,t),h=this.safeString(e,"seller_role");let l=this.safeString(e,"side");void 0===l&&("taker"===h?l="sell":"maker"===h&&(l="buy"));const u=this.safeString(e,"role"),f=this.safeValue(e,"meta_data",{});let p=this.safeString(f,"order_type");void 0!==p&&(p=p.replace("_order",""));const m=this.safeString(e,"commission");let g;if(void 0!==m){const e=this.safeValue(o,"settling_asset",{}),t=this.safeString(e,"symbol");g={cost:m,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:s,order:i,timestamp:r,datetime:this.iso8601(r),symbol:d,type:p,side:l,price:a,amount:n,cost:void 0,takerOrMaker:u,fee:g,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetTradesSymbol(this.extend(a,i)),o=this.safeValue(n,"result",[]);return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,resolution:this.timeframes[t]},o=this.parseTimeframe(t);if(i=i||2e3,void 0===s){const e=this.seconds();n.end=e,n.start=e-i*o}else{const e=parseInt(s/1e3);n.start=e,n.end=this.sum(e,i*o)}const c=await this.publicGetHistoryCandles(this.extend(n,r)),d=this.safeValue(c,"result",[]);return this.parseOHLCVs(d,a,t,s,i)}parseBalance(e){const t=this.safeValue(e,"result",[]),s={info:e},i=this.safeValue(this.options,"currenciesByNumericId",{});for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"asset_id"),n=this.safeValue(i,a),o=void 0===n?a:n.code,c=this.account();c.total=this.safeString(r,"balance"),c.free=this.safeString(r,"available_balance"),s[o]=c}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetWalletBalances(e);return this.parseBalance(t)}async fetchPosition(e,t={}){await this.loadMarkets();const s={product_id:this.market(e).numericId},i=await this.privateGetPositions(this.extend(s,t));return this.safeValue(i,"result",{})}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.privateGetPositionsMargined(t);return this.safeValue(s,"result",[])}parseOrderStatus(e){return this.safeString({open:"open",pending:"open",closed:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"client_order_id"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"product_id"),n=this.safeValue(this.options,"marketsByNumericId",{}),o=void 0===(t=this.safeValue(n,a,t))?a:t.symbol,c=this.parseOrderStatus(this.safeString(e,"state")),d=this.safeString(e,"side");let h=this.safeString(e,"order_type");h=h.replace("_order","");const l=this.safeString(e,"limit_price"),u=this.safeString(e,"size"),f=this.safeString(e,"unfilled_size"),p=this.safeString(e,"average_fill_price");let m;const g=this.safeString(e,"paid_commission");if(void 0!==g){let e;if(void 0!==t){const s=this.safeValue(t.info,"settling_asset",{}),i=this.safeString(s,"symbol");e=this.safeCurrencyCode(i)}m={cost:g,currency:e}}return this.safeOrder({info:e,id:s,clientOrderId:i,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:o,type:h,side:d,price:l,amount:u,cost:void 0,average:p,filled:void 0,remaining:f,status:c,fee:m,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=t+"_order",o=this.market(e),c={product_id:o.numericId,size:this.amountToPrecision(o.symbol,i),side:s,order_type:n};"limit"===t&&(c.limit_price=this.priceToPrecision(o.symbol,r));const d=this.safeString2(a,"clientOrderId","client_order_id");a=this.omit(a,["clientOrderId","client_order_id"]),void 0!==d&&(c.client_order_id=d);const h=await this.privatePostOrders(this.extend(c,a)),l=this.safeValue(h,"result",{});return this.parseOrder(l,o)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t),c={id:parseInt(e),product_id:o.numericId};void 0!==r&&(c.size=parseInt(this.amountToPrecision(t,r))),void 0!==a&&(c.limit_price=this.priceToPrecision(t,a));const d=await this.privatePutOrders(this.extend(c,n)),h=this.safeValue(d,"result");return this.parseOrder(h,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new h(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={id:parseInt(e),product_id:i.numericId},a=await this.privateDeleteOrders(this.extend(r,s)),n=this.safeValue(a,"result");return this.parseOrder(n,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new h(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s={product_id:this.market(e).numericId};return this.privateDeleteOrdersAll(this.extend(s,t))}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersWithMethod("privateGetOrders",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersWithMethod("privateGetOrdersHistory",e,t,s,i)}async fetchOrdersWithMethod(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.product_ids=n.numericId),void 0!==s&&(a.start_time=s.toString()+"000"),void 0!==i&&(a.page_size=i);const o=await this[e](this.extend(a,r)),c=this.safeValue(o,"result",[]);return this.parseOrders(c,n,s,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.product_ids=a.numericId),void 0!==t&&(r.start_time=t.toString()+"000"),void 0!==s&&(r.page_size=s);const n=await this.privateGetFills(this.extend(r,i)),o=this.safeValue(n,"result",[]);return this.parseTrades(o,a,t,s)}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_id=a.numericId),void 0!==s&&(r.page_size=s);const n=await this.privateGetWalletTransactions(this.extend(r,i)),o=this.safeValue(n,"result",[]);return this.parseLedger(o,a,t,s)}parseLedgerEntryType(e){return this.safeString({pnl:"pnl",deposit:"transaction",withdrawal:"transaction",commission:"fee",conversion:"trade",referral_bonus:"referral",commission_rebate:"rebate"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"uuid");let i;const r=this.safeValue(e,"meta_data",{}),a=this.safeString(r,"transaction_id");let n=this.safeString(e,"transaction_type");"deposit"===n||"commission_rebate"===n||"referral_bonus"===n||"pnl"===n||"withdrawal_cancellation"===n||"promo_credit"===n?i="in":"withdrawal"!==n&&"commission"!==n&&"conversion"!==n&&"perpetual_futures_funding"!==n||(i="out"),n=this.parseLedgerEntryType(n);const o=this.safeInteger(e,"asset_id"),c=this.safeValue(this.options,"currenciesByNumericId"),d=void 0===(t=this.safeValue(c,o,t))?void 0:t.code,h=this.safeNumber(e,"amount"),l=this.parse8601(this.safeString(e,"created_at")),u=this.safeNumber(e,"balance");return{info:e,id:s,direction:i,account:undefined,referenceId:a,referenceAccount:undefined,type:n,currency:d,amount:h,before:Math.max(0,u-h),after:u,status:"ok",timestamp:l,datetime:this.iso8601(l),fee:void 0}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={asset_symbol:this.currency(e).id},i=await this.privateGetDepositsAddress(this.extend(s,t)),r=this.safeValue(i,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,network:void 0,info:i}}sign(e,t="public",s="GET",i={},r,a){const n="/"+this.version+"/"+this.implodeParams(e,i);let o=this.urls.api[t]+n;const c=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(c).length&&(o+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e=this.seconds().toString();r={"api-key":this.apiKey,timestamp:e};let t=s+e+n;if("GET"===s||"DELETE"===s){if(Object.keys(c).length){const e="?"+this.urlencode(c);t+=e,o+=e}}else t+=a=this.json(c),r["Content-Type"]="application/json";const i=this.hmac(this.encode(t),this.encode(this.secret));r.signature=i}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"error",{}),l=this.safeString(h,"code");if(void 0!==l){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new r(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],197:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{AuthenticationError:a,ExchangeError:n,ArgumentsRequired:o,PermissionDenied:c,InvalidOrder:d,OrderNotFound:h,DDoSProtection:l,NotSupported:u,ExchangeNotAvailable:f,InsufficientFunds:p,BadRequest:m,InvalidAddress:g,OnMaintenance:y}=e("./base/errors"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"deribit",name:"Deribit",countries:["NL"],version:"v2",userAgent:void 0,rateLimit:50,has:{CORS:!0,spot:!1,margin:!1,swap:!0,future:!0,option:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDeposits:!0,fetchHistoricalVolatility:!0,fetchIndexOHLCV:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1","3m":"3","5m":"5","10m":"10","15m":"15","30m":"30","1h":"60","2h":"120","3h":"180","6h":"360","12h":"720","1d":"1D"},urls:{test:{rest:"https://test.deribit.com"},logo:"https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg",api:{rest:"https://www.deribit.com"},www:"https://www.deribit.com",doc:["https://docs.deribit.com/v2","https://github.com/deribit"],fees:"https://www.deribit.com/pages/information/fees",referral:{url:"https://www.deribit.com/reg-1189.4038",discount:.1}},api:{public:{get:{auth:1,exchange_token:1,fork_token:1,set_heartbeat:1,disable_heartbeat:1,get_time:1,hello:1,test:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,get_announcements:1,get_book_summary_by_currency:1,get_book_summary_by_instrument:1,get_contract_size:1,get_currencies:1,get_delivery_prices:1,get_funding_chart_data:1,get_funding_rate_history:1,get_funding_rate_value:1,get_historical_volatility:1,get_index:1,get_index_price:1,get_index_price_names:1,get_instrument:1,get_instruments:1,get_last_settlements_by_currency:1,get_last_settlements_by_instrument:1,get_last_trades_by_currency:1,get_last_trades_by_currency_and_time:1,get_last_trades_by_instrument:1,get_last_trades_by_instrument_and_time:1,get_mark_price_history:1,get_order_book:1,get_trade_volumes:1,get_tradingview_chart_data:1,get_volatility_index_data:1,ticker:1}},private:{get:{logout:1,enable_cancel_on_disconnect:1,disable_cancel_on_disconnect:1,get_cancel_on_disconnect:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,change_api_key_name:1,change_scope_in_api_key:1,change_subaccount_name:1,create_api_key:1,create_subaccount:1,disable_api_key:1,disable_tfa_for_subaccount:1,enable_affiliate_program:1,enable_api_key:1,get_access_log:1,get_account_summary:1,get_affiliate_program_info:1,get_email_language:1,get_new_announcements:1,get_portfolio_margins:1,get_position:1,get_positions:1,get_subaccounts:1,get_subaccounts_details:1,get_transaction_log:1,list_api_keys:1,remove_api_key:1,remove_subaccount:1,reset_api_key:1,set_announcement_as_read:1,set_api_key_as_default:1,set_email_for_subaccount:1,set_email_language:1,set_password_for_subaccount:1,toggle_notifications_from_subaccount:1,toggle_subaccount_login:1,execute_block_trade:4,get_block_trade:1,get_last_block_trades_by_currency:1,invalidate_block_trade_signature:1,verify_block_trade:4,buy:4,sell:4,edit:4,edit_by_label:4,cancel:4,cancel_all:4,cancel_all_by_currency:4,cancel_all_by_instrument:4,cancel_by_label:4,close_position:4,get_margins:1,get_mmp_config:1,get_open_orders_by_currency:1,get_open_orders_by_instrument:1,get_order_history_by_currency:1,get_order_history_by_instrument:1,get_order_margin_by_ids:1,get_order_state:1,get_stop_order_history:1,get_trigger_order_history:1,get_user_trades_by_currency:1,get_user_trades_by_currency_and_time:1,get_user_trades_by_instrument:1,get_user_trades_by_instrument_and_time:1,get_user_trades_by_order:1,reset_mmp:1,set_mmp_config:1,get_settlement_history_by_instrument:1,get_settlement_history_by_currency:1,cancel_transfer_by_id:1,cancel_withdrawal:1,create_deposit_address:1,get_current_deposit_address:1,get_deposits:1,get_transfers:1,get_withdrawals:1,submit_transfer_to_subaccount:1,submit_transfer_to_user:1,withdraw:1}}},exceptions:{9999:c,1e4:a,10001:n,10002:d,10003:d,10004:h,10005:d,10006:d,10007:d,10008:d,10009:p,10010:h,10011:d,10012:d,10013:c,10014:c,10015:c,10016:c,10017:c,10018:c,10019:c,10020:n,10021:d,10022:d,10023:d,10024:d,10025:d,10026:d,10027:d,10028:l,10029:h,10030:n,10031:n,10032:d,10033:u,10034:d,10035:d,10036:d,10040:f,10041:y,10043:d,10044:d,10045:d,10046:d,10047:l,10048:n,11008:d,11029:m,11030:n,11031:n,11035:l,11036:d,11037:m,11038:d,11039:d,11041:d,11042:c,11043:m,11044:d,11045:m,11046:m,11047:m,11048:n,11049:m,11050:m,11051:y,11052:n,11053:n,11090:g,11091:g,11092:g,11093:l,11094:n,11095:n,11096:n,12e3:a,12001:l,12002:n,12998:a,12003:a,12004:a,12005:a,12100:n,12999:a,13e3:a,13001:a,13002:c,13003:a,13004:a,13005:a,13006:a,13007:a,13008:n,13009:a,13010:m,13011:m,13012:c,13013:m,13014:m,13015:m,13016:m,13017:n,13018:n,13019:n,13020:n,13021:c,13025:n,"-32602":m,"-32601":m,"-32700":m,"-32000":m},precisionMode:r,options:{code:"BTC",fetchBalance:{code:"BTC"},fetchPositions:{code:"BTC"},transfer:{method:"privateGetSubmitTransferToSubaccount"}}})}async fetchTime(e={}){const t=await this.publicGetGetTime(e);return this.safeInteger(t,"result")}codeFromOptions(e,t={}){const s=this.safeValue(this.options,"code","BTC"),i=this.safeValue(this.options,e,{}),r=this.safeValue(i,"code",s);return this.safeValue(t,"code",r)}async fetchStatus(e={}){const t=await this.publicGetStatus(e),s=this.safeValue(t,"result");return{status:"false"===this.safeString(s,"locked")?"ok":"maintenance",updated:this.safeIntegerProduct(t,"usIn",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.privateGetGetSubaccounts(e),s=this.safeValue(t,"result",[]);return this.parseAccounts(s)}parseAccount(e,t){return{info:e,id:this.safeString(e,"id"),type:this.safeString(e,"type"),code:this.safeCurrencyCode(void 0,t)}}async fetchMarkets(e={}){const t=await this.publicGetGetCurrencies(e),s=this.safeValue(t,"result",[]),i=[];for(let t=0;t<s.length;t++){const r={currency:this.safeString(s[t],"currency")},a=await this.publicGetGetInstruments(this.extend(r,e)),n=this.safeValue(a,"result",[]);for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"instrument_name"),r=this.safeString(t,"base_currency"),a=this.safeString(t,"counter_currency"),o=this.safeString(t,"settlement_currency"),c=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),h=this.safeCurrencyCode(o),l=this.safeString(t,"kind"),u="perpetual"===this.safeValue(t,"settlement_period"),f=!u&&"future"===l,p="option"===l;let m=c+"/"+d+":"+h;const g=this.safeInteger(t,"expiration_timestamp");let y,b,v="swap";if(p||f)if(m=m+"-"+this.yymmdd(g,""),p){v="option",y=this.safeNumber(t,"strike"),b=this.safeString(t,"option_type");const e="call"===b?"C":"P";m=m+":"+this.numberToString(y)+":"+e}else v="future";const w=this.safeNumber(t,"min_trade_amount"),S=this.safeNumber(t,"tick_size");i.push({id:s,symbol:m,base:c,quote:d,settle:h,baseId:r,quoteId:a,settleId:o,type:v,spot:!1,margin:!1,swap:u,future:f,option:p,active:this.safeValue(t,"is_active"),contract:!0,linear:!1,inverse:!0,taker:this.safeNumber(t,"taker_commission"),maker:this.safeNumber(t,"maker_commission"),contractSize:this.safeNumber(t,"contract_size"),expiry:g,expiryDatetime:this.iso8601(g),strike:y,optionType:b,precision:{amount:w,price:S},limits:{leverage:{min:void 0,max:void 0},amount:{min:w,max:void 0},price:{min:S,max:void 0},cost:{min:void 0,max:void 0}},info:t})}}return i}parseBalance(e){const t={info:e},s=this.safeString(e,"currency"),i=this.safeCurrencyCode(s),r=this.account();return r.free=this.safeString(e,"available_funds"),r.used=this.safeString(e,"maintenance_margin"),r.total=this.safeString(e,"equity"),t[i]=r,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.codeFromOptions("fetchBalance",e),s={currency:this.currency(t).id},i=await this.privateGetGetAccountSummary(this.extend(s,e)),r=this.safeValue(i,"result",{});return this.parseBalance(r)}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetCreateDepositAddress(this.extend(s,t)),r=this.safeValue(i,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,info:i}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetGetCurrentDepositAddress(this.extend(s,t)),r=this.safeValue(i,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,network:void 0,info:i}}parseTicker(e,t){const s=this.safeInteger2(e,"timestamp","creation_timestamp"),i=this.safeString(e,"instrument_name"),r=this.safeSymbol(i,t),a=this.safeString2(e,"last_price","last"),n=this.safeValue(e,"stats",e);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString2(n,"high","max_price"),low:this.safeString2(n,"low","min_price"),bid:this.safeString2(e,"best_bid_price","bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),ask:this.safeString2(e,"best_ask_price","ask_price"),askVolume:this.safeString(e,"best_ask_amount"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(n,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instrument_name:s.id},r=await this.publicGetTicker(this.extend(i,t)),a=this.safeValue(r,"result");return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=this.codeFromOptions("fetchTickers",t),i={currency:this.currency(s).id},r=await this.publicGetGetBookSummaryByCurrency(this.extend(i,t)),a=this.safeValue(r,"result",[]),n={};for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n[t.symbol]=t}return this.filterByArray(n,"symbol",e)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={instrument_name:a.id,resolution:this.timeframes[t]},c=this.parseTimeframe(t),d=this.milliseconds();if(void 0===s){if(void 0===i)throw new o(this.id+" fetchOHLCV() requires a since argument or a limit argument");n.start_timestamp=d-(i-1)*c*1e3,n.end_timestamp=d}else n.start_timestamp=s,n.end_timestamp=void 0===i?d:this.sum(s,i*c*1e3);const h=await this.publicGetGetTradingviewChartData(this.extend(n,r)),l=this.safeValue(h,"result",{}),u=this.convertTradingViewToOHLCV(l,"ticks","open","high","low","close","volume",!0);return this.parseOHLCVs(u,a,t,s,i)}parseTrade(e,t){const s=this.safeString(e,"trade_id"),i=this.safeString(e,"instrument_name"),r=this.safeSymbol(i,t),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"direction"),o=this.safeString(e,"price"),c=this.safeString(e,"amount"),d=this.safeString(e,"liquidity");let h;void 0!==d&&(h="M"===d?"maker":"taker");const l=this.safeString(e,"fee");let u;if(void 0!==l){const t=this.safeString(e,"fee_currency");u={cost:l,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:s,info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,order:this.safeString(e,"order_id"),type:this.safeString(e,"order_type"),side:n,takerOrMaker:h,price:o,amount:c,cost:void 0,fee:u},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id,include_old:!0},n=void 0===t?"publicGetGetLastTradesByInstrument":"publicGetGetLastTradesByInstrumentAndTime";void 0!==t&&(a.start_timestamp=t),void 0!==s&&(a.count=s);const o=await this[n](this.extend(a,i)),c=this.safeValue(o,"result",{}),d=this.safeValue(c,"trades",[]);return this.parseTrades(d,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=this.codeFromOptions("fetchTradingFees",e),s={currency:this.currency(t).id,extended:!0},i=await this.privateGetGetAccountSummary(this.extend(s,e)),r=this.safeValue(i,"result",{}),a=this.safeValue(r,"fees",[]);let n={},o={},c={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"instrument_type");"future"===s?o={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"perpetual"===s?n={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"option"===s&&(c={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")})}const d={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],s=this.market(t);let i={info:s,symbol:t,percentage:!0,tierBased:!0,maker:s.maker,taker:s.taker};s.swap?i=this.extend(i,n):s.future?i=this.extend(i,o):s.option&&(i=this.extend(i,c)),d[t]=i}return d}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={instrument_name:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetGetOrderBook(this.extend(r,s)),n=this.safeValue(a,"result",{}),o=this.safeInteger(n,"timestamp"),c=this.safeInteger(n,"change_id"),d=this.parseOrderBook(n,i.symbol,o);return d.nonce=c,d}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed",rejected:"rejected",untriggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({good_til_cancelled:"GTC",fill_or_kill:"FOK",immediate_or_cancel:"IOC"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"creation_timestamp"),i=this.safeInteger(e,"last_update_timestamp"),r=this.safeString(e,"order_id");let a=this.safeString(e,"price");"market_price"===a&&(a=void 0);const n=this.safeString(e,"average_price"),o=this.safeString(e,"amount"),c=this.safeString(e,"filled_amount");let d;if(void 0!==c){b.stringGt(c,"0")&&(d=i)}const h=this.parseOrderStatus(this.safeString(e,"order_state")),l=this.safeString(e,"instrument_name");t=this.safeMarket(l,t);const u=this.safeStringLower(e,"direction");let f,p=this.safeString(e,"commission");void 0!==p&&(p=b.stringAbs(p),f={cost:p,currency:t.base});const m=this.safeString(e,"order_type");let g=this.safeValue(e,"trades");void 0!==g&&(g=this.parseTrades(g,t));const y=this.parseTimeInForce(this.safeString(e,"time_in_force")),v=this.safeValue(e,"stop_price"),w=this.safeValue(e,"post_only");return this.safeOrder({info:e,id:r,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:d,symbol:t.symbol,type:m,timeInForce:y,postOnly:w,side:u,price:a,stopPrice:v,amount:o,cost:void 0,average:n,filled:c,remaining:void 0,status:h,fee:f,trades:g},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetGetOrderState(this.extend(i,s)),a=this.safeValue(r,"result");return this.parseOrder(a)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),c={instrument_name:n.id,amount:this.amountToPrecision(e,i),type:t};let d=!1,h=!1;if("limit"===t?d=!0:"stop_limit"===t&&(d=!0,h=!0),d){if(void 0===r)throw new o(this.id+" createOrder() requires a price argument for a "+t+" order");c.price=this.priceToPrecision(e,r)}if(h){const s=this.safeNumber2(a,"stop_price","stopPrice");if(void 0===s)throw new o(this.id+" createOrder() requires a stop_price or stopPrice param for a "+t+" order");c.stop_price=this.priceToPrecision(e,s),a=this.omit(a,["stop_price","stopPrice"])}const l="privateGet"+this.capitalize(s),u=await this[l](this.extend(c,a)),f=this.safeValue(u,"result",{}),p=this.safeValue(f,"order"),m=this.safeValue(f,"trades",[]);return p.trades=m,this.parseOrder(p,n)}async editOrder(e,t,s,i,r,a,n={}){if(void 0===r)throw new o(this.id+" editOrder() requires an amount argument");if(void 0===a)throw new o(this.id+" editOrder() requires a price argument");await this.loadMarkets();const c={order_id:e,amount:this.amountToPrecision(t,r),price:this.priceToPrecision(t,a)},d=await this.privateGetEdit(this.extend(c,n)),h=this.safeValue(d,"result",{}),l=this.safeValue(h,"order"),u=this.safeValue(h,"trades",[]);return l.trades=u,this.parseOrder(l)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetCancel(this.extend(i,s)),a=this.safeValue(r,"result",{});return this.parseOrder(a)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;if(void 0===e)i="privateGetCancelAll";else{i="privateGetCancelAllByInstrument";const t=this.market(e);s.instrument_name=t.id}return await this[i](this.extend(s,t))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchOpenOrders",i),t=this.currency(e);r.currency=t.id,n="privateGetGetOpenOrdersByCurrency"}else a=this.market(e),r.instrument_name=a.id,n="privateGetGetOpenOrdersByInstrument";const o=await this[n](this.extend(r,i)),c=this.safeValue(o,"result",[]);return this.parseOrders(c,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchClosedOrders",i),t=this.currency(e);r.currency=t.id,n="privateGetGetOrderHistoryByCurrency"}else a=this.market(e),r.instrument_name=a.id,n="privateGetGetOrderHistoryByInstrument";const o=await this[n](this.extend(r,i)),c=this.safeValue(o,"result",[]);return this.parseOrders(c,a,t,s)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={order_id:e},n=await this.privateGetGetUserTradesByOrder(this.extend(a,r)),o=this.safeValue(n,"result",{});return this.parseTrades(o,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={include_old:!0};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchMyTrades",i),s=this.currency(e);r.currency=s.id,void 0===t?n="privateGetGetUserTradesByCurrency":(n="privateGetGetUserTradesByCurrencyAndTime",r.start_timestamp=t)}else a=this.market(e),r.instrument_name=a.id,void 0===t?n="privateGetGetUserTradesByInstrument":(n="privateGetGetUserTradesByInstrumentAndTime",r.start_timestamp=t);void 0!==s&&(r.count=s);const o=await this[n](this.extend(r,i)),c=this.safeValue(o,"result",{}),d=this.safeValue(c,"trades",[]);return this.parseTrades(d,a,t,s)}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),a={currency:r.id};void 0!==s&&(a.count=s);const n=await this.privateGetGetDeposits(this.extend(a,i)),c=this.safeValue(n,"result",{}),d=this.safeValue(c,"data",[]);return this.parseTransactions(d,r,t,s,i)}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),a={currency:r.id};void 0!==s&&(a.count=s);const n=await this.privateGetGetWithdrawals(this.extend(a,i)),c=this.safeValue(n,"result",{}),d=this.safeValue(c,"data",[]);return this.parseTransactions(d,r,t,s,i)}parseTransactionStatus(e){return this.safeString({completed:"ok",unconfirmed:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"currency"),i=this.safeCurrencyCode(s,t),r=this.safeInteger2(e,"created_timestamp","received_timestamp"),a=this.safeInteger(e,"updated_timestamp"),n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.safeString(e,"address"),c=this.safeNumber(e,"fee");let d,h="deposit";return void 0!==c&&(h="withdrawal",d={cost:c,currency:i}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"transaction_id"),timestamp:r,datetime:this.iso8601(r),address:o,addressTo:o,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:this.safeNumber(e,"amount"),currency:i,status:n,updated:a,fee:d}}parsePosition(e,t){const s=this.safeString(e,"instrument_name");t=this.safeMarket(s,t);let i=this.safeString(e,"direction");i="buy"===i?"long":"short";const r=this.safeString(e,"floating_profit_loss"),a=this.safeString(e,"initial_margin"),n=this.safeString(e,"size_currency"),o=this.safeString(e,"maintenance_margin"),c=b.stringMul(b.stringDiv(r,a),"100"),d=this.milliseconds();return{info:e,symbol:this.safeString(t,"symbol"),timestamp:d,datetime:this.iso8601(d),initialMargin:this.parseNumber(a),initialMarginPercentage:this.parseNumber(b.stringMul(b.stringDiv(a,n),"100")),maintenanceMargin:this.parseNumber(o),maintenanceMarginPercentage:this.parseNumber(b.stringMul(b.stringDiv(o,n),"100")),entryPrice:this.safeNumber(e,"average_price"),notional:this.parseNumber(n),leverage:this.safeInteger(e,"leverage"),unrealizedPnl:this.parseNumber(r),contracts:void 0,contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"estimated_liquidation_price"),markPrice:this.safeNumber(e,"mark_price"),collateral:void 0,marginMode:void 0,side:i,percentage:this.parseNumber(c)}}async fetchPosition(e,t={}){await this.loadMarkets();const s={instrument_name:this.market(e).id},i=await this.privateGetGetPosition(this.extend(s,t)),r=this.safeValue(i,"result");return this.parsePosition(r)}async fetchPositions(e,t={}){let s;if(await this.loadMarkets(),void 0===e)s=this.codeFromOptions("fetchPositions",t);else if("string"==typeof e)s=e,e=void 0;else if(Array.isArray(e)){if(1!==e.length)throw new m(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");s=this.market(e[0]).base}const i={currency:this.currency(s).id},r=await this.privateGetGetPositions(this.extend(i,t)),a=this.safeValue(r,"result");return this.parsePositions(a,e)}async fetchHistoricalVolatility(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.publicGetGetHistoricalVolatility(this.extend(s,t)),r=this.safeValue(i,"result",{}),a=[];for(let e=0;e<r.length;e++){const t=this.safeInteger(r[e],0),s=this.safeNumber(r[e],1);a.push({info:i,timestamp:t,datetime:this.iso8601(t),volatility:s})}return a}async fetchTransfers(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchTransfers() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),a={currency:r.id};void 0!==s&&(a.count=s);const n=await this.privateGetGetTransfers(this.extend(a,i)),c=this.safeValue(n,"result",{}),d=this.safeValue(c,"data",[]);return this.parseTransfers(d,r,t,s,i)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,destination:i};let o=this.safeString(r,"method");if(r=this.omit(r,"method"),void 0===o){const e=this.safeValue(this.options,"transfer",{});o=this.safeString(e,"method","privateGetSubmitTransferToSubaccount")}const c=await this[o](this.extend(n,r)),d=this.safeValue(c,"result",{});return this.parseTransfer(d,a)}parseTransfer(e,t){const s=this.safeTimestamp(e,"created_timestamp"),i=this.safeString(e,"state"),r=this.safeString(e,"other_side"),a=this.safeString(e,"direction"),n=this.safeString(e,"currency");return{info:e,id:this.safeString(e,"id"),status:this.parseTransferStatus(i),amount:this.safeNumber(e,"amount"),code:this.safeCurrencyCode(n,t),fromAccount:"payment"!==a?r:void 0,toAccount:"payment"===a?r:void 0,timestamp:s,datetime:this.iso8601(s)}}parseTransferStatus(e){return this.safeString({prepared:"pending",confirmed:"ok",cancelled:"cancelled",waiting_for_admin:"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,address:s,amount:t};void 0!==this.twofa&&(n.tfa=this.oath());const o=await this.privateGetWithdraw(this.extend(n,r));return this.parseTransaction(o,a)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.version+"/"+t+"/"+e;if("public"===t&&Object.keys(i).length&&(n+="?"+this.urlencode(i)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.milliseconds().toString(),a="";Object.keys(i).length&&(n+="?"+this.urlencode(i));const o=t+"\n"+e+"\n"+(s+"\n"+n+"\n"+a+"\n"),c=this.hmac(this.encode(o),this.encode(this.secret),"sha256");r={Authorization:"deri-hmac-sha256 id="+this.apiKey+",ts="+t+",sig="+c+",nonce="+e}}return{url:this.urls.api.rest+n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(!o)return;const h=this.safeValue(o,"error");if(void 0!==h){const e=this.safeString(h,"code"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,e,t),new n(t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],198:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AccountSuspended:r,BadRequest:a,BadResponse:n,NetworkError:o,DDoSProtection:c,AuthenticationError:d,PermissionDenied:h,ExchangeError:l,InsufficientFunds:u,InvalidOrder:f,InvalidNonce:p,OrderNotFound:m,InvalidAddress:g,RateLimitExceeded:y,BadSymbol:b}=e("./base/errors"),{TICK_SIZE:v}=e("./base/functions/number"),w=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"digifinex",name:"DigiFinex",countries:["SG"],version:"v3",rateLimit:900,has:{CORS:void 0,spot:!0,margin:!0,swap:void 0,future:!1,option:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,setMarginMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","12h":"720","1d":"1D","1w":"1W"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg",api:"https://openapi.digifinex.com",www:"https://www.digifinex.com",doc:["https://docs.digifinex.com"],fees:"https://digifinex.zendesk.com/hc/en-us/articles/360000328422-Fee-Structure-on-DigiFinex",referral:"https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp"},api:{public:{get:["{market}/symbols","kline","margin/currencies","margin/symbols","markets","order_book","ping","spot/symbols","time","trades","trades/symbols","ticker","currencies"]},private:{get:["{market}/financelog","{market}/mytrades","{market}/order","{market}/order/detail","{market}/order/current","{market}/order/history","margin/assets","margin/financelog","margin/mytrades","margin/order","margin/order/current","margin/order/history","margin/positions","otc/financelog","spot/assets","spot/financelog","spot/mytrades","spot/order","spot/order/current","spot/order/history","deposit/address","deposit/history","withdraw/history"],post:["{market}/order/cancel","{market}/order/new","{market}/order/batch_new","margin/order/cancel","margin/order/new","margin/position/close","spot/order/cancel","spot/order/new","transfer","withdraw/new","withdraw/cancel"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:v,exceptions:{exact:{10001:[a,"Wrong request method, please check it's a GET ot POST request"],10002:[d,"Invalid ApiKey"],10003:[d,"Sign doesn't match"],10004:[a,"Illegal request parameters"],10005:[c,"Request frequency exceeds the limit"],10006:[h,"Unauthorized to execute this request"],10007:[h,"IP address Unauthorized"],10008:[p,"Timestamp for this request is invalid, timestamp must within 1 minute"],10009:[o,"Unexist endpoint, please check endpoint URL"],10011:[r,"ApiKey expired. Please go to client side to re-create an ApiKey"],20001:[h,"Trade is not open for this trading pair"],20002:[h,"Trade of this trading pair is suspended"],20003:[f,"Invalid price or amount"],20007:[f,"Price precision error"],20008:[f,"Amount precision error"],20009:[f,"Amount is less than the minimum requirement"],20010:[f,"Cash Amount is less than the minimum requirement"],20011:[u,"Insufficient balance"],20012:[a,"Invalid trade type, valid value: buy/sell)"],20013:[f,"No order info found"],20014:[a,"Invalid date, Valid format: 2018-07-25)"],20015:[a,"Date exceeds the limit"],20018:[h,"Your trading rights have been banned by the system"],20019:[b,'Wrong trading pair symbol. Correct format:"usdt_btc". Quote asset is in the front'],20020:[c,"You have violated the API operation trading rules and temporarily forbid trading. At present, we have certain restrictions on the user's transaction rate and withdrawal rate."],5e4:[l,"Exception error"],20021:[a,"Invalid currency"],20022:[a,"The ending timestamp must be larger than the starting timestamp"],20023:[a,"Invalid transfer type"],20024:[a,"Invalid amount"],20025:[a,"This currency is not transferable at the moment"],20026:[u,"Transfer amount exceed your balance"],20027:[h,"Abnormal account status"],20028:[h,"Blacklist for transfer"],20029:[h,"Transfer amount exceed your daily limit"],20030:[a,"You have no position on this trading pair"],20032:[h,"Withdrawal limited"],20033:[a,"Wrong Withdrawal ID"],20034:[h,"Withdrawal service of this crypto has been closed"],20035:[h,"Withdrawal limit"],20036:[l,"Withdrawal cancellation failed"],20037:[g,"The withdrawal address, Tag or chain type is not included in the withdrawal management list"],20038:[g,"The withdrawal address is not on the white list"],20039:[l,"Can't be canceled in current status"],20040:[y,"Withdraw too frequently; limitation: 3 times a minute, 100 times a day"],20041:[h,"Beyond the daily withdrawal limit"],20042:[b,"Current trading pair does not support API trading"]},broad:{}},options:{defaultType:"spot",types:["spot","margin","otc"],accountsByType:{spot:"1",margin:"2",OTC:"3"}},commonCurrencies:{BHT:"Black House Test",EPS:"Epanus",FREE:"FreeRossDAO",MBN:"Mobilian Coin",TEL:"TEL666"}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeInteger(t,"deposit_status",1)>0,o=this.safeInteger(t,"withdraw_status",1)>0,c=n&&o,d=this.safeNumber(t,"withdraw_fee_rate");a in i?Array.isArray(i[a].info)?i[a].info.push(t):i[a].info=[i[a].info,t]:i[a]={id:r,code:a,info:t,type:void 0,name:void 0,active:c,deposit:n,withdraw:o,fee:d,precision:this.parseNumber("0.00000001"),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"min_withdraw_amount"),max:void 0}}}}return i}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),s=this.safeString(t,"method","fetch_markets_v2");return await this[s](e)}async fetchMarketsV2(e={}){const t=this.safeString(this.options,"defaultType"),s="margin"===t?"publicGetMarginSymbols":"publicGetTradesSymbols",i=await this[s](e),r=this.safeValue(i,"symbol_list",[]),a=[];for(let e=0;e<r.length;e++){const s=r[e],i=this.safeString(s,"symbol"),n=this.safeString(s,"base_asset"),o=this.safeString(s,"quote_asset"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeInteger(s,"is_allow",1),l="margin"===t?"margin":"spot",u="spot"===t||void 0,f="margin"===t||void 0;a.push({id:i,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:l,spot:u,margin:f,swap:!1,future:!1,option:!1,active:!!h||void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minimum_amount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"minimum_value"),max:void 0}},info:s})}return a}async fetchMarketsV1(e={}){const t=await this.publicGetMarkets(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"market"),[a,n]=r.split("_"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volume_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_volume"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_amount"),max:void 0}},info:t})}return i}parseBalance(e){const t=this.safeValue(e,"list",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(i,"frozen"),n.free=this.safeString(i,"free"),n.total=this.safeString(i,"total"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){const t=this.safeString(this.options,"defaultType","spot"),s=this.safeString(e,"type",t);e=this.omit(e,"type");const i="privateGet"+this.capitalize(s)+"Assets",r=await this[i](e);return this.parseBalance(r)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBook(this.extend(r,s)),n=this.safeTimestamp(a,"date");return this.parseOrderBook(a,i.symbol,n)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i={},r=this.safeValue(s,"ticker",[]),a=this.safeInteger(s,"date");for(let e=0;e<r.length;e++){const t=this.extend({date:a},r[e]),s=this.parseTicker(t);i[s.symbol]=s}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTicker(this.extend(i,t)),a=this.safeInteger(r,"date"),n=this.safeValue(r,"ticker",[]),o=this.safeValue(n,0,{}),c=this.extend({date:a},o);return this.parseTicker(c,s)}parseTicker(e,t){const s=this.safeStringUpper(e,"symbol"),i=this.safeSymbol(s,t,"_"),r=this.safeTimestamp(e,"date"),a=this.safeString(e,"last"),n=this.safeString(e,"change");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:n,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"base_vol"),info:e},t)}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"order_id"),r=this.safeTimestamp2(e,"date","timestamp");let a=this.safeString2(e,"type","side");const n=a.split("_");a=this.safeString(n,0);const o=this.safeString(n,1),c=this.safeString(e,"price"),d=this.safeString(e,"amount"),h=this.safeString(e,"symbol"),l=this.safeSymbol(h,t,"_"),u=this.safeValue(e,"is_maker"),f=this.safeString(e,"fee");let p;if(void 0!==f){const t=this.safeString(e,"fee_currency");p={cost:f,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:s,info:e,timestamp:r,datetime:this.iso8601(r),symbol:l,type:o,order:i,side:a,price:c,amount:d,cost:void 0,takerOrMaker:u,fee:p},t)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeTimestamp(t,"server_time")}async fetchStatus(e={}){const t=await this.publicGetPing(e);return{status:0===this.safeInteger(t,"code")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,5),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,1)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.timeframes[t]};if(void 0!==s){const e=parseInt(s/1e3);if(n.start_time=e,void 0!==i){const s=this.parseTimeframe(t);n.end_time=this.sum(e,i*s)}}else if(void 0!==i){const e=this.seconds(),s=this.parseTimeframe(t);n.startTime=this.sum(e,-i*s)}const o=await this.publicGetKline(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeString(this.options,"defaultType","spot"),c=this.safeString(a,"type",o);a=this.omit(a,"type");const d={market:c,symbol:n.id,amount:this.amountToPrecision(n.symbol,i)};let h="";"market"===t?h="_market":d.price=this.priceToPrecision(n.symbol,r),d.type=s+h;const l=await this.privatePostMarketOrderNew(this.extend(d,a)),u=this.parseOrder(l,n);return this.extend(u,{symbol:n.symbol,side:s,type:t,amount:i,price:r})}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",i);s=this.omit(s,"type");const a={market:r,order_id:e},n=await this.privatePostMarketOrderCancel(this.extend(a,s));if(1!==this.safeValue(n,"success",[]).length)throw new m(this.id+" cancelOrder() "+e+" not found");return n}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",i);s=this.omit(s,"type");const a={market:r,order_id:e.join(",")},n=await this.privatePostCancelOrder(this.extend(a,s));if(this.safeValue(n,"success",[]).length<1)throw new m(this.id+" cancelOrders() error");return n}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",3:"canceled",4:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"order_id"),i=this.safeTimestamp(e,"created_date"),r=this.safeTimestamp(e,"finished_date");let a,n=this.safeString(e,"type");if(void 0!==n){const e=n.split("_");e.length>1?(n=e[0],a=e[1]):a="limit"}const o=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeString(e,"symbol"),d=this.safeSymbol(c,t,"_"),h=this.safeString(e,"amount"),l=this.safeString(e,"executed_amount"),u=this.safeString(e,"price"),f=this.safeString(e,"avg_price");return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:r,symbol:d,type:a,timeInForce:void 0,postOnly:void 0,side:n,price:u,stopPrice:void 0,amount:h,filled:l,remaining:void 0,cost:void 0,average:f,status:o,fee:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,s,i={}){const r=this.safeString(this.options,"defaultType","spot"),a=this.safeString(i,"type",r);let n;i=this.omit(i,"type"),await this.loadMarkets();const o={market:a};void 0!==e&&(n=this.market(e),o.symbol=n.id);const c=await this.privateGetMarketOrderCurrent(this.extend(o,i)),d=this.safeValue(c,"data",[]);return this.parseOrders(d,n,t,s)}async fetchOrders(e,t,s,i={}){const r=this.safeString(this.options,"defaultType","spot"),a=this.safeString(i,"type",r);let n;i=this.omit(i,"type"),await this.loadMarkets();const o={market:a};void 0!==e&&(n=this.market(e),o.symbol=n.id),void 0!==t&&(o.start_time=parseInt(t/1e3)),void 0!==s&&(o.limit=s);const c=await this.privateGetMarketOrderHistory(this.extend(o,i)),d=this.safeValue(c,"data",[]);return this.parseOrders(d,n,t,s)}async fetchOrder(e,t,s={}){const i=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",i);let a;s=this.omit(s,"type"),await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={market:r,order_id:e},o=await this.privateGetMarketOrder(this.extend(n,s)),c=this.safeValue(o,"data",[]),d=this.safeValue(c,0);if(void 0===d)throw new m(this.id+" fetchOrder() order "+e+" not found");return this.parseOrder(d,a)}async fetchMyTrades(e,t,s,i={}){const r=this.safeString(this.options,"defaultType","spot"),a=this.safeString(i,"type",r);let n;i=this.omit(i,"type"),await this.loadMarkets();const o={market:a};void 0!==e&&(n=this.market(e),o.symbol=n.id),void 0!==t&&(o.start_time=parseInt(t/1e3)),void 0!==s&&(o.limit=s);const c=await this.privateGetMarketMytrades(this.extend(o,i)),d=this.safeValue(c,"list",[]);return this.parseTrades(d,n,t,s)}parseLedgerEntryType(e){return this.safeString({},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"num"),i=this.parseLedgerEntryType(this.safeString(e,"type")),r=this.safeCurrencyCode(this.safeString(e,"currency_mark"),t),a=this.safeTimestamp(e,"time");return{info:e,id:s,direction:void 0,account:undefined,referenceId:void 0,referenceAccount:void 0,type:i,currency:r,amount:void 0,before:undefined,after:this.safeNumber(e,"balance"),status:"ok",timestamp:a,datetime:this.iso8601(a),fee:void 0}}async fetchLedger(e,t,s,i={}){const r=this.safeString(this.options,"defaultType","spot"),a=this.safeString(i,"type",r);i=this.omit(i,"type"),await this.loadMarkets();const n={market:a};let o;void 0!==e&&(o=this.currency(e),n.currency_mark=o.id),void 0!==t&&(n.start_time=parseInt(t/1e3)),void 0!==s&&(n.limit=s);const c=await this.privateGetMarketFinancelog(this.extend(n,i)),d=this.safeValue(c,"data",{}),h=this.safeValue(d,"finance",[]);return this.parseLedger(h,o,t,s)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"addressTag"),r=this.safeStringUpper(e,"currency");return{info:e,currency:this.safeCurrencyCode(r),address:s,tag:i,network:void 0}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=this.parseDepositAddresses(r),n=this.safeValue(a,e);if(void 0===n)throw new g(this.id+" fetchDepositAddress() did not return an address for "+e+" - create the deposit address in the user settings on the exchange website first.");return n}async fetchTransactionsByType(e,t,s,i,r={}){let a;await this.loadMarkets();const n={};void 0!==t&&(a=this.currency(t),n.currency=a.id),void 0!==i&&(n.size=Math.min(500,i));const o="deposit"===e?"privateGetDepositHistory":"privateGetWithdrawHistory",c=await this[o](this.extend(n,r)),d=this.safeValue(c,"data",[]);return this.parseTransactions(d,a,s,i,{type:e})}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsByType("deposit",e,t,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsByType("withdrawal",e,t,s,i)}parseTransactionStatus(e){return this.safeString({1:"pending",2:"pending",3:"ok",4:"failed"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"id","withdraw_id"),i=this.safeString(e,"address"),r=this.safeString(e,"memo"),a=this.safeString(e,"hash"),n=this.safeStringUpper(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.parse8601(this.safeString(e,"created_date")),d=this.parse8601(this.safeString(e,"finished_date")),h=this.parseTransactionStatus(this.safeString(e,"state")),l=this.safeNumber(e,"amount"),u=this.safeNumber(e,"fee");let f;void 0!==u&&(f={currency:o,cost:u});const p=this.safeString(e,"chain");return{info:e,id:s,txid:a,timestamp:c,datetime:this.iso8601(c),network:p,address:i,addressTo:i,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:void 0,amount:l,currency:o,status:h,updated:d,fee:f}}parseTransferStatus(e){return this.safeString({0:"ok"},e,e)}parseTransfer(e,t){return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:this.safeNumber(e,"amount"),fromAccount:this.safeString(e,"fromAccount"),toAccount:this.safeString(e,"toAccount"),status:this.parseTransferStatus(this.safeString(e,"code"))}}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d={currency_mark:a.id,num:parseFloat(this.currencyToPrecision(e,t)),from:o,to:c},h=await this.privatePostTransfer(this.extend(d,r)),l=this.parseTransfer(h,a);return this.extend(l,{amount:t,currency:e,fromAccount:s,toAccount:i})}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={address:s,amount:parseFloat(t),currency:a.id};void 0!==i&&(n.memo=i);const o=await this.privatePostWithdrawNew(this.extend(n,r));return this.parseTransaction(o,a)}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=await this.privateGetMarginPositions(this.extend(a,r)),c=this.safeValue(o,"positions"),d=this.parseBorrowInterests(c,n);return this.filterByCurrencySinceLimit(d,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"symbol"),i=this.safeString(e,"amount"),r=this.safeString(e,"leverage_ratio"),a=w.stringDiv(i,r),n=w.stringSub(i,a),o=void 0===t?void 0:t.base;return{account:this.safeSymbol(s,t),currency:o,interest:void 0,interestRate:.001,amountBorrowed:this.parseNumber(n),timestamp:void 0,datetime:void 0,info:e}}async fetchBorrowRate(e,t={}){await this.loadMarkets();const s=await this.privateGetMarginAssets(this.extend({},t)),i=this.safeValue(s,"list",[]);let r=[];for(let t=0;t<i.length;t++){const s=i[t];this.safeString(s,"currency")===e&&(r=s)}const a=this.safeString(r,"currency");return this.parseBorrowRate(r,a)}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetMarginAssets(e),s=this.safeValue(t,"list");return this.parseBorrowRates(s,"currency")}parseBorrowRate(e,t){const s=this.milliseconds(),i=this.safeString(e,"currency");return{currency:this.safeCurrencyCode(i,t),rate:.001,period:864e5,timestamp:s,datetime:this.iso8601(s),info:e}}parseBorrowRates(e,t){const s={};for(let i=0;i<e.length;i++){const r=e[i],a=this.safeString(r,t),n=this.safeCurrencyCode(a),o=this.parseBorrowRate(r,a);s[n]=o}return s}sign(e,t="public",s="GET",i={},r,a){const n=this.version;let o=this.urls.api+"/"+n+"/"+this.implodeParams(e,i);const c=this.omit(i,this.extractParams(e)),d=this.urlencode(this.keysort(c));if("private"===t){const e=this.nonce().toString(),t=d,i=this.hmac(this.encode(t),this.encode(this.secret));"GET"===s?d&&(o+="?"+d):"POST"===s&&(r={"Content-Type":"application/x-www-form-urlencoded"},d&&(a=d)),r={"ACCESS-KEY":this.apiKey,"ACCESS-SIGN":i,"ACCESS-TIMESTAMP":e}}else d&&(o+="?"+d);return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(!o)return;const h=this.safeString(o,"code");if("0"===h||"200"===h)return;const u=this.id+" "+a;if(void 0===h)throw new n(u);const f=[l,u],[p,m]=this.safeValue(this.exceptions.exact,h,f);throw new p(m)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],199:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadSymbol:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number"),c=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"eqonex",name:"EQONEX",countries:["US","SG"],rateLimit:10,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchTicker:void 0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":1,"5m":2,"15m":3,"1h":4,"6h":5,"1d":6,"7d":7,"1w":7},urls:{logo:"https://user-images.githubusercontent.com/51840849/122649755-1a076c80-d138-11eb-8f2e-9a9166a03d79.jpg",test:{public:"https://testnet.eqonex.com/api",private:"https://testnet.eqonex.com/api"},api:{public:"https://eqonex.com/api",private:"https://eqonex.com/api"},www:"https://eqonex.com",doc:["https://developer.eqonex.com"],referral:"https://eqonex.com?referredByCode=zpa8kij4ouvBFup3"},api:{public:{get:["health","getInstruments","getInstrumentPairs","getOrderBook","getRisk","getTradeHistory","getFundingRateHistory","getChart","getExchangeInfo"]},private:{post:["logon","order","cancelOrder","cancelReplaceOrder","getOrder","getOrders","getOrderStatus","getOrderHistory","userTrades","getPositions","cancelAll","getUserHistory","getRisk","getDepositAddresses","getDepositHistory","getWithdrawRequests","sendWithdrawRequest","getTransferHistory"]}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},precisionMode:o,exceptions:{broad:{"symbol not found":n}}})}async fetchMarkets(e={}){const t=await this.publicGetGetInstrumentPairs(this.extend({verbose:!0},e)),s=this.safeValue(t,"instrumentPairs",[]),i=[];for(let e=0;e<s.length;e++){const t=this.parseMarket(s[e]);i.push(t)}return i}parseMarket(e){const t=this.safeString(e,"assetType"),s="PAIR"===t,i="PERPETUAL_SWAP"===t,r="DATED_FUTURE"===t,a=i||r,n=this.safeString(e,"instrumentId"),o=this.safeString(e,"currency"),c=this.safeString(e,"contAmtCurr"),d=a?this.safeString(e,"settlCurrency"):void 0,h=this.safeCurrencyCode(o),l=this.safeCurrencyCode(c),u=this.safeCurrencyCode(d);let f=h+"/"+l;const p=this.safeString(e,"symbol");let m,g,y="spot";const b=this.safeNumber(e,"contractExpireTime");a&&(f=f+":"+u,m=l===u,g=!m,i?y="swap":r?(f=f+"-"+this.yymmdd(b),y="future"):(f=p,y=t));return{id:n,uppercaseId:p,symbol:f,base:h,quote:l,settle:u,baseId:o,quoteId:c,settleId:d,type:y,spot:s,margin:!1,swap:i,future:r,option:!1,active:1===this.safeInteger(e,"securityStatus"),contract:a,linear:m,inverse:g,contractSize:this.safeNumber(e,"contractMultiplier"),expiry:b,expiryDatetime:this.iso8601(b),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(e,"quantity_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(e,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minTradeVol"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e}}async fetchCurrencies(e={}){const t=await this.publicGetGetInstruments(e),s={},i=this.safeValue(t,"instruments",[]);for(let e=0;e<i.length;e++){const t=this.parseCurrency(i[e]);s[t.code]=t}return s}parseCurrency(e){const t=this.safeString(e,0),s=this.safeString(e,1),i=this.safeCurrencyCode(s),r=this.safeString(e,6),a=1===this.safeInteger(e,4),n=this.safeNumber(e,5);return{id:t,info:e,uppercaseId:s,code:i,name:r,precision:this.parseNumber(this.parsePrecision(this.safeString(e,3))),fee:n,active:a,deposit:void 0,withdraw:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={pairId:parseInt(a.id),timespan:this.timeframes[t]};void 0!==i&&(n.limit=i);const o=await this.publicGetGetChart(this.extend(n,r)),c=this.safeValue(o,"chart",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.parseNumber(this.convertFromScale(this.safeString(e,1),t.precision.price)),this.parseNumber(this.convertFromScale(this.safeString(e,2),t.precision.price)),this.parseNumber(this.convertFromScale(this.safeString(e,3),t.precision.price)),this.parseNumber(this.convertFromScale(this.safeString(e,4),t.precision.price)),this.parseNumber(this.convertFromScale(this.safeString(e,5),t.precision.amount))]}parseBidAsk(e,t=0,s=1,i){if(void 0===i)throw new a(this.id+" parseBidAsk() requires a market argument");const r=this.safeString(e,t),n=this.safeString(e,s);return[this.parseNumber(this.convertFromScale(r,i.precision.price)),this.parseNumber(this.convertFromScale(n,i.precision.amount))]}parseOrderBook(e,t,s,i="bids",r="asks",a=0,n=1,o){const c={timestamp:s,datetime:this.iso8601(s),nonce:void 0},d=[i,r];for(let t=0;t<d.length;t++){const s=d[t],i=[],r=this.safeValue(e,s);for(let e=0;e<r.length;e++)i.push(this.parseBidAsk(r[e],a,n,o));c[s]=i}return c[i]=this.sortBy(c[i],0,!0),c[r]=this.sortBy(c[r],0),c}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pairId:parseInt(i.id)},a=await this.publicGetGetOrderBook(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks",0,1,i)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pairId:parseInt(r.id)},n=await this.publicGetGetTradeHistory(this.extend(a,i)),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,r,t,s,i)}parseTrade(e,t){let s,i,r,a,n,o,d,h,l;if(Array.isArray(e)){s=this.safeString(e,3),o=this.convertFromScale(this.safeString(e,0),t.precision.price),d=this.convertFromScale(this.safeString(e,1),t.precision.amount),i=this.toMilliseconds(this.safeString(e,2));const r=this.safeInteger(e,4);1===r?n="buy":2===r&&(n="sell")}else{s=this.safeString(e,"execId"),i=this.safeInteger(e,"time"),l=this.safeString(e,"symbol"),r=this.safeString(e,"orderId"),n=this.safeStringLower(e,"side"),a=this.parseOrderType(this.safeString(e,"ordType")),o=this.safeString(e,"lastPx"),d=this.safeString(e,"qty");let t=this.safeString(e,"commission");if(void 0!==t){t=c.stringNeg(t);const s=this.safeString(e,"commCurrency");h={cost:t,currency:this.safeCurrencyCode(s)}}}return t=this.safeMarket(l,t),this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:r,type:a,side:n,takerOrMaker:void 0,price:o,amount:d,cost:void 0,fee:h},t)}parseBalance(e){const t=this.safeValue(e,"positions",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e];if("ASSET"===this.safeString(i,"assetType")){const e=this.safeString(i,"symbol"),t=this.safeCurrencyCode(e),r=this.safeString(i,"quantity"),a=this.safeString(i,"availableQuantity"),n=this.safeInteger(i,"quantity_scale"),o=this.account();o.free=this.convertFromScale(a,n),o.total=this.convertFromScale(r,n),s[t]=o}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetPositions(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,n={}){await this.loadMarkets();const o=this.market(e),c="buy"===s?1:2,d=this.getScale(i),h={instrumentId:parseInt(o.id),symbol:o.uppercaseId,side:c,quantity:this.convertToScale(this.numberToString(i),d),quantity_scale:d};if("market"===t)h.ordType=1;else if("limit"===t){h.ordType=2;const e=this.getScale(r);h.price=this.convertToScale(this.numberToString(r),e),h.priceScale=e}else{const e=this.safeNumber2(n,"stopPrice","stopPx");if(n=this.omit(n,["stopPrice","stopPx"]),void 0===e){if("stop"===t){if(void 0===r)throw new a(this.id+" createOrder() requires a price argument or a stopPrice parameter or a stopPx parameter for "+t+" orders");h.ordType=3,h.stopPx=this.convertToScale(this.numberToString(r),this.getScale(r))}else if("stop limit"===t)throw new a(this.id+" createOrder() requires a stopPrice parameter or a stopPx parameter for "+t+" orders")}else if("stop"===t)h.ordType=3,h.stopPx=this.convertToScale(this.numberToString(e),this.getScale(e));else if("stop limit"===t){h.ordType=4;const t=this.getScale(r),s=this.getScale(e);h.price_scale=t,h.stopPx_scale=s,h.stopPx=this.convertToScale(this.numberToString(e),s),h.price=this.convertToScale(this.numberToString(r),t)}}const l=await this.privatePostOrder(this.extend(h,n));return this.parseOrder(l,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={origOrderId:parseInt(e),instrumentId:parseInt(i.id)},n=await this.privatePostCancelOrder(this.extend(r,s));return this.parseOrder(n,i)}async editOrder(e,t,s,i,r,n,o={}){await this.loadMarkets();const c=this.market(t),d="buy"===i?1:2,h=this.getScale(r),l={origOrderId:e,instrumentId:parseInt(c.id),symbol:c.uppercaseId,side:d,quantity:this.convertToScale(this.numberToString(r),h),quantity_scale:h};if("market"===s)l.ordType=1;else if("limit"===s)l.ordType=2,l.price=this.convertToScale(this.numberToString(n),this.getScale(n));else{const e=this.safeNumber2(o,"stopPrice","stopPx");if(o=this.omit(o,["stopPrice","stopPx"]),void 0===e){if("stop"===s){if(void 0===n)throw new a(this.id+" editOrder() requires a price argument or a stopPrice parameter or a stopPx parameter for "+s+" orders");l.ordType=3,l.stopPx=this.convertToScale(this.numberToString(n),this.getScale(n))}else if("stop limit"===s)throw new a(this.id+" editOrder() requires a stopPrice parameter or a stopPx parameter for "+s+" orders")}else if("stop"===s)l.ordType=3,l.stopPx=this.convertToScale(this.numberToString(e),this.getScale(e));else if("stop limit"===s){l.ordType=4;const t=this.getScale(n),s=this.getScale(e);l.price_scale=t,l.stopPx_scale=s,l.stopPx=this.convertToScale(this.numberToString(e),s),l.price=this.convertToScale(this.numberToString(n),t)}}const u=await this.privatePostOrder(this.extend(l,o));return this.parseOrder(u,c)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderId:parseInt(e)},r=await this.privatePostGetOrderStatus(this.extend(i,s));return this.parseOrder(r)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({ordStatus:"2"},i))}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({ordStatus:"4"},i))}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrumentId=parseInt(r.id)),void 0!==s&&(a.limit=s);const n=await this.privatePostGetOrders(this.extend(a,i)),o=this.safeValue(n,"orders",[]);return this.parseOrders(o,r,t,s,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instrumentId=a.id),void 0!==t&&(r.startTime=t);const n=await this.privatePostUserTrades(this.extend(r,i)),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,a,t,s,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={instrumentId:parseInt(s.id)},r=await this.privatePostGetDepositAddresses(this.extend(i,t)),a=this.safeValue(r,"addresses",[]),n=this.safeValue(a,0);return this.parseDepositAddress(n,s)}parseDepositAddress(e,t){const s=this.safeString(e,"symbol"),i=this.safeCurrencyCode(s,t),r=this.safeString(e,"address");return this.checkAddress(r),{currency:i,address:r,tag:void 0,network:void 0,info:e}}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.instrumentId=parseInt(a.id));const n=await this.privatePostGetDepositHistory(this.extend(r,i)),o=this.safeValue(n,"deposits",[]);return this.parseTransactions(o,a,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.instrumentId=parseInt(a.id));const n=await this.privatePostGetWithdrawRequests(this.extend(r,i)),o=this.safeValue(n,"addresses",[]);return this.parseTransactions(o,a,t,s,{type:"withdrawal"})}parseTransaction(e,t){const s=this.safeString(e,"id","transactionId"),i=this.safeString(e,"transactionUuid"),r=this.safeInteger(e,"timestamp");let a=this.safeString(e,"address");"null"===a&&(a=void 0);const n=this.safeString(e,"type");let o=this.safeNumber(e,"balance_change");if(void 0===o){o=this.safeString(e,"quantity");const t=this.safeInteger(e,"quantity_scale");o=this.parseNumber(this.convertFromScale(o,t))}const c=this.safeString(e,"symbol"),d=this.safeCurrencyCode(c,t),h=this.parseTransactionStatus(this.safeString(e,"status"));return{info:e,id:s,txid:i,timestamp:r,datetime:this.iso8601(r),network:void 0,addressFrom:void 0,address:a,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:n,amount:o,currency:d,status:h,updated:void 0,comment:void 0,fee:void 0}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"ok"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n=this.getScale(t),o=this.convertToScale(t,n),c={instrumentId:parseInt(a.id),symbol:a.uppercaseId,quantity:o,quantity_scale:n,address:s},d=await this.privatePostSendWithdrawRequest(this.extend(c,r));return this.parseTransaction(d,a)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetGetExchangeInfo(e),s=this.safeValue(t,"spotFees",[]),i=this.safeValue(s,0,{}),r=this.safeNumber(i,"maker"),a=this.safeNumber(i,"taker"),n=this.safeValue(t,"futuresFees",[]),o=this.safeValue(n,0,{}),c=this.safeNumber(o,"maker"),d=this.safeNumber(o,"taker"),h=[],l=[],u={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeNumber(t,"volume");h.push([i,this.safeNumber(t,"taker")]),l.push([i,this.safeNumber(t,"maker")])}const f={taker:h,maker:l},p=[],m=[];for(let e=0;e<n.length;e++){const t=n[e];p.push([void 0,this.safeNumber(t,"taker")]),m.push([void 0,this.safeNumber(t,"maker")])}const g={taker:p,maker:m};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e],i=this.market(s),n={info:t,symbol:s,percentage:!0,tierBased:!0};this.safeValue(i,"spot")?(n.maker=r,n.taker=a,n.tiers=f):this.safeValue(i,"contract")&&(n.maker=c,n.taker=d,n.tiers=g),u[s]=n}return u}async fetchTradingLimits(e,t={}){await this.loadMarkets();const s=await this.publicGetGetExchangeInfo(t);return{info:this.safeValue(s,"tradingLimits",[]),limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}}}async fetchFundingLimits(e={}){const t=await this.publicGetGetExchangeInfo(e);return{info:this.safeValue(t,"withdrawLimits",[]),withdraw:void 0}}parseOrder(e,t){let s=this.safeString2(e,"orderId","id");s=this.safeString(e,"origOrderId",s);const i=this.safeString(e,"clOrdId"),r=this.parseOrderType(this.safeString(e,"ordType")),a=this.parseOrderSide(this.safeString(e,"side")),n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeString(e,"instrumentId"),d=this.safeSymbol(o,t),h=this.toMilliseconds(this.safeString(e,"timeStamp"));let l=this.safeString(e,"price");const u=this.safeInteger(e,"price_scale");l=this.convertFromScale(l,u);let f=this.safeString(e,"quantity");const p=this.safeInteger(e,"quantity_scale");f=this.convertFromScale(f,p);let m=this.safeString(e,"cumQty");const g=this.safeInteger(e,"cumQty_scale");m=this.convertFromScale(m,g);let y=this.safeString(e,"leavesQty");const b=this.safeInteger(e,"leavesQty_scale");let v;y=this.convertFromScale(y,b);const w=this.safeInteger(e,"feeInstrumentId"),S=this.safeCurrencyCode(w);let k,T=this.safeString(e,"feeTotal");const O=this.safeInteger(e,"fee_scale");void 0!==T&&(T=c.stringNeg(T),k=this.convertFromScale(T,O)),void 0!==T&&(v={currency:S,cost:k,rate:void 0});let _=this.parseTimeInForce(this.safeString(e,"timeInForce"));"0"===_&&(_=void 0);const x=this.safeInteger(e,"stopPx_scale",0),M=this.parseNumber(this.convertFromScale(this.safeString(e,"stopPx"),x));return this.safeOrder({info:e,id:s,clientOrderId:i,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:undefined,symbol:d,type:r,timeInForce:_,postOnly:void 0,side:a,price:l,stopPrice:M,amount:f,cost:void 0,average:void 0,filled:m,remaining:y,status:n,fee:v,trades:void 0},t)}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",3:"open",4:"canceled",5:"canceled",6:"canceling",7:"canceled",8:"rejected",9:"canceled",A:"open",B:"open",C:"expired",D:"open",E:"canceling",F:"open"},e,e)}parseOrderSide(e){return this.safeString({1:"buy",2:"sell"},e,e)}parseOrderType(e){return this.safeString({1:"market",2:"limit",3:"stop",4:"stop limit"},e,e)}parseTimeInForce(e){return this.safeString({1:"GTC",3:"IOC",4:"FOK",5:"GTX",6:"GTD"},e,e)}toMilliseconds(e){if(void 0===e)return e;const t=e.split("-"),s=this.safeString(t,0),i=this.safeString(t,1);if(void 0===s||void 0===i)return;if(8!==s.length)return;const r=s.slice(0,4)+"-"+s.slice(4,6)+"-"+s.slice(6,8);return this.parse8601(r+" "+i)}convertFromScale(e,t){const s=this.getScale(t);if(void 0===e||void 0===s)return;const i=new c(e);return i.decimals=i.decimals+s,i.reduce(),i.toString()}getScale(e){const t=this.numberToString(e);return this.precisionFromString(t)}convertToScale(e,t){if(void 0===e||void 0===t)return;const s=new c(e);s.decimals=s.decimals-t,s.reduce();const i=s.toString();return parseInt(i)}nonce(){return this.milliseconds()}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,h,e),this.throwBroadlyMatchedException(this.exceptions,n,e),new r(this.id+" "+n)}}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeParams(e,i),o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){const e=this.safeValue(i,"format"),t=this.safeValue(i,"type"),s={};void 0!==e&&(s.format=e),void 0!==t&&(s.type=t),Object.keys(s).length&&(n+="?"+this.urlencode(s)),i=this.omit(i,["format","type"]),this.checkRequiredCredentials();const c=this.nonce();o=this.extend(o,{userId:this.uid,nonce:c}),i.nonce=this.nonce(),a=this.json(o);const d=this.hmac(this.encode(a),this.encode(this.secret),"sha384");r={"Content-Type":"application/json",requestToken:this.apiKey,signature:d}}return n=this.urls.api[t]+"/"+n,{url:n,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],200:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,ExchangeError:a,OrderNotFound:n,AuthenticationError:o,InsufficientFunds:c,InvalidOrder:d,InvalidNonce:h,OnMaintenance:l,RateLimitExceeded:u,BadRequest:f,PermissionDenied:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"exmo",name:"EXMO",countries:["LT"],rateLimit:350,version:"v1.1",has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchCanceledOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:"emulated",fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!0,setMargin:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","45m":"45","1h":"60","2h":"120","3h":"180","4h":"240","1d":"D","1w":"W","1M":"M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg",api:{public:"https://api.exmo.com",private:"https://api.exmo.com",web:"https://exmo.me"},www:"https://exmo.me",referral:"https://exmo.me/?ref=131685",doc:["https://exmo.me/en/api_doc?ref=131685"],fees:"https://exmo.com/en/docs/fees"},api:{web:{get:["ctrl/feesAndLimits","en/docs/fees"]},public:{get:["currency","currency/list/extended","order_book","pair_settings","ticker","trades","candles_history","required_amount","payments/providers/crypto/list"]},private:{post:["user_info","order_create","order_cancel","stop_market_order_create","stop_market_order_cancel","user_open_orders","user_trades","user_cancelled_orders","order_trades","deposit_address","withdraw_crypt","withdraw_get_txid","excode_create","excode_load","code_check","wallet_history","wallet_operations","margin/user/order/create","margin/user/order/update","margin/user/order/cancel","margin/user/position/close","margin/user/position/margin_add","margin/user/position/margin_remove","margin/currency/list","margin/pair/list","margin/settings","margin/funding/list","margin/user/info","margin/user/order/list","margin/user/order/history","margin/user/order/trades","margin/user/order/max_quantity","margin/user/position/list","margin/user/position/margin_remove_info","margin/user/position/margin_add_info","margin/user/wallet/list","margin/user/wallet/history","margin/user/trade/list","margin/trades","margin/liquidation/feed"]}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004")},funding:{tierBased:!1,percentage:!1}},options:{networks:{ETH:"ERC20",TRX:"TRC20"},fetchTradingFees:{method:"fetchPrivateTradingFees"},margin:{fillResponseFromRequest:!0}},commonCurrencies:{GMT:"GMT Token"},precisionMode:m,exceptions:{exact:{40005:o,40009:h,40015:a,40016:l,40017:o,40032:p,40033:p,40034:u,50052:c,50054:c,50304:n,50173:n,50277:d,50319:d,50321:d,50381:d},broad:{"range period is too long":f,"invalid syntax":f,"API rate limit exceeded":u}}})}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={position_id:r.id,quantity:t};let n;"add"===s?n="privatePostMarginUserPositionMarginAdd":"reduce"===s&&(n="privatePostMarginUserPositionMarginReduce");const o=await this[n](this.extend(a,i)),c=this.parseMarginModification(o,r),d=this.safeValue(this.options,"margin",{});return this.safeValue(d,"fillResponseFromRequest",!0)&&(c.type=s,c.amount=t),c}parseMarginModification(e,t){return{info:e,type:void 0,amount:void 0,code:this.safeValue(t,"quote"),symbol:this.safeSymbol(void 0,t),total:void 0,status:"ok"}}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"reduce",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"add",s)}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){const e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[t](e)}async fetchPrivateTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostMarginPairList(e),s=this.safeValue(t,"pairs",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeSymbol(r,void 0,"_"),n=this.safeString(t,"trade_maker_fee"),o=this.safeString(t,"trade_taker_fee"),c=this.parseNumber(g.stringDiv(n,"100")),d=this.parseNumber(g.stringDiv(o,"100"));i[a]={info:t,symbol:a,maker:c,taker:d,percentage:!0,tierBased:!0}}return i}async fetchPublicTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetPairSettings(e),s={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e],r=this.market(i),a=this.safeValue(t,r.id,{}),n=this.safeString(a,"commission_maker_percent"),o=this.safeString(a,"commission_taker_percent"),c=this.parseNumber(g.stringDiv(n,"100")),d=this.parseNumber(g.stringDiv(o,"100"));s[i]={info:a,symbol:i,maker:c,taker:d,percentage:!0,tierBased:!0}}return s}parseFixedFloatValue(e){if(void 0===e||"-"===e)return;if(""===e)return 0;const t=e.indexOf("%")>=0,s=e.split(" ")[0].replace("%",""),i=parseFloat(s);if(i>0&&t)throw new a(this.id+" parseFixedFloatValue() detected an unsupported non-zero percentage-based fee "+e);return i}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.publicGetCurrencyListExtended(t),i=await this.publicGetPaymentsProvidersCryptoList(t),r={info:i,withdraw:{},deposit:{}};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeString(t,"name"),n=this.safeCurrencyCode(a),o=this.safeValue(i,a,[]);for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"type"),i=this.safeString(t,"commission_desc"),a=this.parseFixedFloatValue(i),c=this.safeNumber(r[s],n);(void 0===c||void 0!==a&&a<c)&&(r[s][n]=a)}}return this.options.fundingFees=r,r}async fetchCurrencies(e={}){const t=await this.publicGetCurrencyListExtended(e),s=await this.publicGetPaymentsProvidersCryptoList(e),i={};for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"name"),n=this.safeString(r,"description"),o=this.safeValue(s,a);let c=!1,d="crypto";const h={deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}};let l,u,f;if(void 0===o)c=!0,d="fiat";else for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"type"),i=this.safeNumber(t,"min");let r=this.safeNumber(t,"max");0===r&&(r=void 0);const a=this.safeValue(t,"enabled");if("deposit"===s?a&&!u?u=!0:a||(u=!1):"withdraw"===s&&(a&&!f?f=!0:a||(f=!1)),a&&(c=!0,(void 0===h[s].min||i<h[s].min)&&(h[s].min=i,h[s].max=r,"withdraw"===s))){const e=this.safeString(t,"commission_desc");l=this.parseFixedFloatValue(e)}}const p=this.safeCurrencyCode(a);i[p]={id:a,code:p,name:n,type:d,active:c,deposit:u,withdraw:f,fee:l,precision:this.parseNumber("0.00000001"),limits:h,info:o}}return i}async fetchMarkets(e={}){const t=await this.publicGetPairSettings(e),s=Object.keys(t),i=[];for(let e=0;e<s.length;e++){const r=s[e],a=t[r],n=r.replace("_","/"),[o,c]=n.split("/"),d=this.safeCurrencyCode(o),h=this.safeCurrencyCode(c),l=this.safeString(a,"commission_taker_percent"),u=this.safeString(a,"commission_maker_percent");i.push({id:r,symbol:n,base:d,quote:h,settle:void 0,baseId:o,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!0,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(g.stringDiv(l,"100")),maker:this.parseNumber(g.stringDiv(u,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber(this.parsePrecision(this.safeString(a,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(a,"min_quantity"),max:this.safeNumber(a,"max_quantity")},price:{min:this.safeNumber(a,"min_price"),max:this.safeNumber(a,"max_price")},cost:{min:this.safeNumber(a,"min_amount"),max:this.safeNumber(a,"max_amount")}},info:a})}return i}async fetchOHLCV(e,t="1m",s,i,a={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,resolution:this.timeframes[t]},c=this.safeValue(this.options,"fetchOHLCV"),d=this.safeInteger(c,"maxLimit",3e3),h=this.parseTimeframe(t),l=this.milliseconds();if(void 0===s){if(void 0===i)throw new r(this.id+" fetchOHLCV() requires a since argument or a limit argument");if(i>d)throw new f(this.id+" fetchOHLCV() will serve "+d.toString()+" candles at most");o.from=parseInt(l/1e3)-i*h-1,o.to=parseInt(l/1e3)}else if(o.from=parseInt(s/1e3)-1,void 0===i)o.to=parseInt(l/1e3);else{if(i>d)throw new f(this.id+" fetchOHLCV() will serve "+d.toString()+" candles at most");const e=this.sum(s,i*h*1e3);o.to=parseInt(e/1e3)}const u=await this.publicGetCandlesHistory(this.extend(o,a)),p=this.safeValue(u,"candles",[]);return this.parseOHLCVs(p,n,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseBalance(e){const t={info:e},s=this.safeValue(e,"balances",{}),i=this.safeValue(e,"reserved",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){const a=r[e],n=this.safeCurrencyCode(a),o=this.account();a in s&&(o.free=this.safeString(s,a)),a in i&&(o.used=this.safeString(i,a)),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostUserInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBook(this.extend(r,s)),n=this.safeValue(a,i.id);return this.parseOrderBook(n,i.symbol,void 0,"bid","ask")}async fetchOrderBooks(e,t,s={}){let i;if(await this.loadMarkets(),void 0===e){if(i=this.ids.join(","),i.length>2048){const e=this.ids.length;throw new a(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=this.marketIds(e),i=i.join(",");const r={pair:i};void 0!==t&&(r.limit=t);const n=await this.publicGetOrderBook(this.extend(r,s)),o={},c=Object.keys(n);for(let e=0;e<c.length;e++){const t=c[e];let s=t;if(t in this.markets_by_id){s=this.markets_by_id[t].symbol}o[s]=this.parseOrderBook(n[t],s,void 0,"bid","ask")}return o}parseTicker(e,t){const s=this.safeTimestamp(e,"updated");t=this.safeMarket(void 0,t);const i=this.safeString(e,"last_trade");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:void 0,close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"vol_curr"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i={},r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeMarket(t,void 0,"_"),n=a.symbol,o=this.safeValue(s,t);i[n]=this.parseTicker(o,a)}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i=this.market(e);return this.parseTicker(s[i.id],i)}parseTrade(e,t){const s=this.safeTimestamp(e,"date");let i;const r=this.safeString(e,"trade_id"),a=this.safeString(e,"order_id"),n=this.safeString(e,"price"),o=this.safeString(e,"quantity"),c=this.safeString(e,"amount"),d=this.safeString(e,"type"),h=this.safeString(e,"pair");if(void 0!==h)if(h in this.markets_by_id)t=this.markets_by_id[h];else{const[e,t]=h.split("_");i=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t)}void 0===i&&void 0!==t&&(i=t.symbol);const l=this.safeString(e,"exec_type");let u;const f=this.safeString(e,"commission_amount");if(void 0!==f){const t=this.safeString(e,"commission_currency"),s=this.safeCurrencyCode(t);let i=this.safeString(e,"commission_percent");void 0!==i&&(i=g.stringDiv(i,"1000",18)),u={cost:f,currency:s,rate:i}}return this.safeTrade({id:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:i,order:a,type:undefined,side:d,takerOrMaker:l,price:n,amount:o,cost:c,fee:u},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchMyTrades() requires a symbol argument (a single symbol or an array)");let a,n;if(await this.loadMarkets(),Array.isArray(e)){if(e.length<1)throw new r(this.id+" fetchMyTrades() requires a non-empty symbol array");a=this.marketIds(e).join(",")}else n=this.market(e),a=n.id;const o={pair:a};void 0!==s&&(o.limit=s);const c=await this.privatePostUserTrades(this.extend(o,i));let d=[];const h=Object.keys(c);for(let e=0;e<h.length;e++){const i=h[e];let r;if(i in this.markets_by_id)n=this.markets_by_id[i],r=n.symbol;else{const[e,t]=i.split("_");r=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t)}const a=c[i],o=this.parseTrades(a,n,t,s,{symbol:r});d=this.arrayConcat(d,o)}return this.filterBySinceLimit(d,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=("market"===t?t+"_":"")+s;let c=r;"market"===t&&void 0===r&&(c=0);const h={pair:n.id,quantity:this.amountToPrecision(n.symbol,i),type:o,price:this.priceToPrecision(n.symbol,c)};let l="privatePostOrderCreate",u=this.safeValue2(a,"client_id","clientOrderId");if(void 0!==u){if(u=this.safeInteger2(a,"client_id","clientOrderId"),void 0===u)throw new f(this.id+" createOrder() client order id must be an integer / numeric literal");h.client_id=u,a=this.omit(a,["client_id","clientOrderId"])}if("stop"===t||"stop_limit"===t||"trailing_stop"===t){const s=this.safeNumber2(a,"stop_price","stopPrice");if(void 0===s)throw new d(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order");a=this.omit(a,["stopPrice","stop_price"]),h.stop_price=this.priceToPrecision(e,s),l="privatePostMarginUserOrderCreate"}const p=await this[l](this.extend(h,a)),m=this.safeString(p,"order_id"),g=this.milliseconds();return{id:m,info:p,timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:void 0,status:"open",symbol:n.symbol,type:t,side:s,price:r,cost:void 0,amount:i,remaining:i,filled:0,fee:void 0,trades:void 0,clientOrderId:u,average:void 0}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e};return await this.privatePostOrderCancel(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e.toString()},r=await this.privatePostOrderTrades(this.extend(i,s)),a=this.parseOrder(r);return this.extend(a,{id:e.toString()})}async fetchOrderTrades(e,t,s,i,r={}){let a;void 0!==t&&(a=this.market(t));const n={order_id:e.toString()},o=await this.privatePostOrderTrades(this.extend(n,r)),c=this.safeValue(o,"trades");return this.parseTrades(c,a,s,i)}async fetchOpenOrders(e,t,s,i={}){if(await this.loadMarkets(),void 0!==e){e=this.market(e).symbol}const r=await this.privatePostUserOpenOrders(i),a=Object.keys(r);let n=[];for(let e=0;e<a.length;e++){const t=a[e];let s;t in this.markets_by_id&&(s=this.markets_by_id[t]);const i=this.parseOrders(r[t],s);n=this.arrayConcat(n,i)}return this.filterBySymbolSinceLimit(n,e,t,s)}parseOrder(e,t){let s,i=this.safeString(e,"order_id"),r=this.safeTimestamp(e,"created");const a=this.safeString(e,"type");let n;"pair"in e?n=e.pair:"in_currency"in e&&"out_currency"in e&&(n="buy"===a?e.in_currency+"_"+e.out_currency:e.out_currency+"_"+e.in_currency),void 0!==n&&n in this.markets_by_id&&(t=this.markets_by_id[n]);let o=this.safeNumber(e,"quantity");if(void 0===o){const t="buy"===a?"in_amount":"out_amount";o=this.safeNumber(e,t)}let c=this.safeNumber(e,"price"),d=this.safeNumber(e,"amount"),h=0;const l=[],u=this.safeValue(e,"trades",[]);let f,p,m;const g=u.length;if(g>0){f=0;for(let e=0;e<g;e++){const s=this.parseTrade(u[e],t);void 0===i&&(i=s.order),void 0===r&&(r=s.timestamp),r>s.timestamp&&(r=s.timestamp),h=this.sum(h,s.amount),f=this.sum(f,s.fee.cost),l.push(s)}p=l[g-1].timestamp}let y,b,v=this.safeString(e,"status");void 0!==o&&(y=o-h,v=h>=o?"closed":"open"),void 0===t&&(t=this.getMarketFromTrades(l)),void 0!==t&&(s=t.symbol,b=t.quote),void 0===d?void 0!==c&&(d=c*h):h>0&&(void 0===m&&(m=d/h),void 0===c&&(c=d/h));const w={cost:f,currency:b};return{id:i,clientOrderId:this.safeInteger(e,"client_id"),datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:p,status:v,symbol:s,type:"limit",timeInForce:void 0,postOnly:void 0,side:a,price:c,stopPrice:void 0,cost:d,amount:o,filled:h,remaining:y,average:m,trades:l,fee:w,info:e}}async fetchCanceledOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.offset=s),void 0!==s&&(r.limit=s),void 0!==e&&(a=this.market(e));const n=await this.privatePostUserCancelledOrders(this.extend(r,i));return this.parseOrders(n,a,t,s,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=await this.privatePostDepositAddress(t),i=this.safeString(s,e);let r,a;if(i){const e=i.split(",");r=e[0];e.length>1&&(a=e[1])}return this.checkAddress(r),{currency:e,address:r,tag:a,network:void 0,info:s}}getMarketFromTrades(e){const t=this.indexBy(e,"pair"),s=Object.keys(t);if(1===s.length)return this.markets[s[0]]}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,address:s};void 0!==i&&(n.invoice=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.transport=c,r=this.omit(r,"network"));const d=await this.privatePostWithdrawCrypt(this.extend(n,r));return this.parseTransaction(d,a)}parseTransactionStatus(e){return this.safeString({transferred:"ok",paid:"ok",pending:"pending",processing:"pending",verifying:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"order_id","task_id"),i=this.safeTimestamp2(e,"dt","created"),r=this.safeTimestamp(e,"updated");let a=this.safeNumber(e,"amount");void 0!==a&&(a=Math.abs(a));const n=this.parseTransactionStatus(this.safeStringLower(e,"status"));let o=this.safeString(e,"txid");if(void 0===o){const t=this.safeValue(e,"extra",{}),s=this.safeString(t,"txid");""!==s&&(o=s)}const c=this.safeString(e,"type"),d=this.safeString2(e,"curr","currency"),h=this.safeCurrencyCode(d,t);let l;const u=void 0;let f;const p=this.safeString(e,"account");if("deposit"===c)f=p;else if("withdrawal"===c&&(l=p,void 0!==l)){const e=l.split(":");2===e.length&&(l=this.safeString(e,1),l=l.replace(" ",""))}let m;if(!this.fees.funding.percentage){const t="withdrawal"===c?"withdraw":"deposit";let s=this.safeNumber(e,"commission");void 0===s&&(s=this.safeNumber(this.options.fundingFees[t],h));"cashback"===this.safeString(e,"provider")&&(s=0),void 0!==s&&("withdrawal"===c&&(a-=s),m={cost:s,currency:h,rate:void 0})}const g=this.safeString(e,"provider");return{info:e,id:s,timestamp:i,datetime:this.iso8601(i),currency:h,amount:a,network:g,address:l,addressTo:l,addressFrom:void 0,tag:u,tagTo:u,tagFrom:void 0,status:n,type:c,updated:r,comment:f,txid:o,fee:m}}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.date=parseInt(t/1e3)),void 0!==e&&(a=this.currency(e));const n=await this.privatePostWalletHistory(this.extend(r,i));return this.parseTransactions(n.history,a,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets();const a={type:"withdraw"};void 0!==s&&(a.limit=s),void 0!==e&&(r=this.currency(e),a.currency=r.id);const n=await this.privatePostWalletOperations(this.extend(a,i)),o=this.safeValue(n,"items",[]);return this.parseTransactions(o,r,t,s)}async fetchWithdrawal(e,t,s={}){let i;await this.loadMarkets();const r={order_id:e,type:"withdraw"};void 0!==t&&(i=this.currency(t),r.currency=i.id);const a=await this.privatePostWalletOperations(this.extend(r,s)),n=this.safeValue(a,"items",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,i)}async fetchDeposit(e,t,s={}){let i;await this.loadMarkets();const r={order_id:e,type:"deposit"};void 0!==t&&(i=this.currency(t),r.currency=i.id);const a=await this.privatePostWalletOperations(this.extend(r,s)),n=this.safeValue(a,"items",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,i)}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={type:"deposit"};void 0!==s&&(a.limit=s),void 0!==e&&(r=this.currency(e),a.currency=r.id);const n=await this.privatePostWalletOperations(this.extend(a,i)),o=this.safeValue(n,"items",[]);return this.parseTransactions(o,r,t,s)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/";if("web"!==t&&(n+=this.version+"/"),n+=e,"public"===t||"web"===t)Object.keys(i).length&&(n+="?"+this.urlencode(i));else if("private"===t){this.checkRequiredCredentials();const e=this.nonce();a=this.urlencode(this.extend({nonce:e},i)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:n,method:s,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0!==o&&("result"in o||"errmsg"in o)){let e=this.safeValue(o,"result",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){let e;const t=this.safeString2(o,"error","errmsg"),s=t.split(":");if(s.length>1){const t=s[0].split(" ");e=t.length>1?t[1]:t[0]}const i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new a(i)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],201:[function(e,t,s){"use strict";const i=e("./ndax.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"flowbtc",name:"flowBTC",countries:["BR"],rateLimit:1e3,urls:{logo:"https://user-images.githubusercontent.com/51840849/87443317-01c0d080-c5fe-11ea-95c2-9ebe1a8fafd9.jpg",api:{public:"https://api.flowbtc.com.br:8443/ap/",private:"https://api.flowbtc.com.br:8443/ap/"},www:"https://www.flowbtc.com.br",doc:"https://www.flowbtc.com.br/api.html"},fees:{trading:{tierBased:!1,percentage:!0,maker:.0025,taker:.005}}})}}},{"./ndax.js":231}],202:[function(e,t,s){"use strict";const i=e("./hitbtc.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"fmfwio",name:"FMFW.io",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/159177712-b685b40c-5269-4cea-ac83-f7894c49525d.jpg",api:{public:"https://api.fmfw.io",private:"https://api.fmfw.io"},www:"https://fmfw.io",doc:"https://api.fmfw.io/api/2/explore/",fees:"https://fmfw.io/fees-and-limits",referral:"https://fmfw.io/referral/da948b21d6c92d69"},fees:{trading:{maker:this.parseNumber("0.005"),taker:this.parseNumber("0.005")}}})}}},{"./hitbtc.js":208}],203:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{ExchangeError:a,InvalidOrder:n,BadRequest:o,InsufficientFunds:c,OrderNotFound:d,AuthenticationError:h,RateLimitExceeded:l,ExchangeNotAvailable:u,CancelPending:f,ArgumentsRequired:p,PermissionDenied:m,BadSymbol:g,DuplicateOrderId:y,BadResponse:b}=e("./base/errors"),v=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ftx",name:"FTX",countries:["BS"],rateLimit:28.57,certified:!0,pro:!0,hostname:"ftx.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg",www:"https://ftx.com",api:{public:"https://{hostname}",private:"https://{hostname}"},doc:"https://github.com/ftexchange/ftx",fees:"https://ftexchange.zendesk.com/hc/en-us/articles/360024479432-Fees",referral:{url:"https://ftx.com/#a=ccxt",discount:.05}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!0,fetchBorrowRateHistory:!0,fetchBorrowRates:!0,fetchClosedOrders:void 0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:void 0,fetchTransfer:void 0,fetchTransfers:void 0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"15s":"15","1m":"60","5m":"300","15m":"900","1h":"3600","4h":"14400","1d":"86400","3d":"259200","1w":"604800","2w":"1209600","1M":"2592000"},api:{public:{get:{coins:1,markets:1,"markets/{market_name}":1,"markets/{market_name}/orderbook":1,"markets/{market_name}/trades":1,"markets/{market_name}/candles":1,futures:1,"futures/{future_name}":1,"futures/{future_name}/stats":1,funding_rates:1,"indexes/{index_name}/weights":1,expired_futures:1,"indexes/{market_name}/candles":1,"wallet/coins":1,"lt/tokens":1,"lt/{token_name}":1,"etfs/rebalance_info":1,"options/requests":1,"options/trades":1,"options/historical_volumes/BTC":1,"stats/24h_options_volume":1,"options/open_interest/BTC":1,"options/historical_open_interest/BTC":1,"spot_margin/history":1,"spot_margin/borrow_summary":1,"nft/nfts":1,"nft/{nft_id}":1,"nft/{nft_id}/trades":1,"nft/all_trades":1,"nft/{nft_id}/account_info":1,"nft/collections":1,"ftxpay/apps/{user_specific_id}/details":1},post:{"ftxpay/apps/{user_specific_id}/orders":1}},private:{get:{subaccounts:1,"subaccounts/{nickname}/balances":1,account:1,positions:1,"wallet/balances":1,"wallet/all_balances":1,"wallet/deposit_address/{coin}":1,"wallet/deposits":1,"wallet/withdrawals":1,"wallet/airdrops":1,"wallet/withdrawal_fee":1,"wallet/saved_addresses":1,orders:1,"orders/history":1,"orders/{order_id}":1,"orders/by_client_id/{client_order_id}":1,conditional_orders:1,"conditional_orders/{conditional_order_id}/triggers":1,"conditional_orders/history":1,fills:1,funding_payments:1,"lt/balances":1,"lt/creations":1,"lt/redemptions":1,"options/my_requests":1,"options/requests/{request_id}/quotes":1,"options/my_quotes":1,"options/account_info":1,"options/positions":1,"options/fills":1,"staking/stakes":1,"staking/unstake_requests":1,"staking/balances":1,"staking/staking_rewards":1,"otc/quotes/{quoteId}":1,"spot_margin/borrow_rates":1,"spot_margin/lending_rates":1,"spot_margin/market_info":1,"spot_margin/borrow_history":1,"spot_margin/lending_history":1,"spot_margin/offers":1,"spot_margin/lending_info":1,"nft/balances":1,"nft/bids":1,"nft/deposits":1,"nft/withdrawals":1,"nft/fills":1,"nft/gallery/{gallery_id}":1,"nft/gallery_settings":1,"stats/latency_stats":1,"pnl/historical_changes":1,"support/tickets":1,"support/tickets/{ticketId}/messages":1,"support/tickets/count_unread":1},post:{subaccounts:1,"subaccounts/update_name":1,"subaccounts/transfer":1,"account/leverage":1,"wallet/deposit_address/list":1,"wallet/withdrawals":90,"wallet/saved_addresses":1,orders:1,conditional_orders:1,"orders/{order_id}/modify":1,"orders/by_client_id/{client_order_id}/modify":1,"conditional_orders/{order_id}/modify":1,"lt/{token_name}/create":1,"lt/{token_name}/redeem":1,"options/requests":1,"options/requests/{request_id}/quotes":1,"options/quotes/{quote_id}/accept":1,"staking/unstake_requests":1,"srm_stakes/stakes":1,"otc/quotes/{quote_id}/accept":1,"otc/quotes":1,"spot_margin/offers":1,"nft/offer":1,"nft/buy":1,"nft/auction":1,"nft/edit_auction":1,"nft/cancel_auction":1,"nft/bids":1,"nft/redeem":1,"nft/gallery_settings":1,"ftxpay/apps/{user_specific_id}/orders":1,"support/tickets":1,"support/tickets/{ticketId}/messages":1,"support/tickets/{ticketId}/status":1,"support/tickets/{ticketId}/mark_as_read":1},delete:{subaccounts:1,"wallet/saved_addresses/{saved_address_id}":1,"orders/{order_id}":1,"orders/by_client_id/{client_order_id}":1,orders:1,"conditional_orders/{order_id}":1,"options/requests/{request_id}":1,"options/quotes/{quote_id}":1,"staking/unstake_requests/{request_id}":1}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0002"),taker:this.parseNumber("0.0007"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0007")],[this.parseNumber("2000000"),this.parseNumber("0.0006")],[this.parseNumber("5000000"),this.parseNumber("0.00055")],[this.parseNumber("10000000"),this.parseNumber("0.0005")],[this.parseNumber("25000000"),this.parseNumber("0.0045")],[this.parseNumber("50000000"),this.parseNumber("0.0004")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0002")],[this.parseNumber("2000000"),this.parseNumber("0.00015")],[this.parseNumber("5000000"),this.parseNumber("0.0001")],[this.parseNumber("10000000"),this.parseNumber("0.00005")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("50000000"),this.parseNumber("0")]]}},funding:{withdraw:{}}},exceptions:{exact:{"Slow down":l,"Size too small for provide":n,"Not enough balances":c,InvalidPrice:n,"Size too small":n,"Size too large":n,"Invalid price":n,"Missing parameter price":n,"Order not found":d,"Order already closed":n,"Trigger price too high":n,"Trigger price too low":n,"Order already queued for cancellation":f,"Duplicate client order ID":y,"Spot orders cannot be reduce-only":n,"Invalid reduce-only order":n,"Account does not have enough balances":c,"Not authorized for subaccount-specific access":m,"Not approved to trade this product":m,"Internal Error":u},broad:{"Not logged in":h,"Account does not have enough margin for order":c,"Invalid parameter":o,"The requested URL was not found on the server":o,"No such coin":o,"No such subaccount":h,"No such future":g,"No such market":g,"Do not send more than":l,"Cannot send more than":l,"An unexpected error occurred":u,"Please retry request":u,"Please try again":u,"Try again":u,"Only have permissions for subaccount":m}},precisionMode:r,options:{fetchMarkets:{throwOnUndefinedExpiry:!1},cancelOrder:{method:"privateDeleteOrdersOrderId"},fetchOpenOrders:{method:"privateGetOrders"},fetchOrders:{method:"privateGetOrdersHistory"},sign:{"ftx.com":"FTX","ftx.us":"FTXUS"},networks:{SOL:"sol",SPL:"sol",TRX:"trx",TRC20:"trx",ETH:"erc20",ERC20:"erc20",OMNI:"omni",BEP2:"bep2",BNB:"bep2",BEP20:"bsc",BSC:"bsc"}},commonCurrencies:{AMC:"AMC Entertainment Holdings",STARS:"StarLaunch"}})}async fetchCurrencies(e={}){const t=await this.publicGetCoins(e),s=this.safeValue(t,"result",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeCurrencyCode(r),n=this.safeString(t,"name");i[a]={id:r,code:a,info:t,type:void 0,name:n,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{withdraw:{min:void 0,max:void 0},amount:{min:void 0,max:void 0}}}}return i}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e);let s;this.has.future&&"ftx.us"!==this.hostname&&(s=await this.publicGetFutures());const i=[],r=this.safeValue(t,"result",[]),a=this.safeValue(s,"result",[]),n=this.indexBy(a,"name");for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"name"),a=this.safeValue(n,s),o="future"===this.safeString(t,"type"),c=this.safeString2(t,"baseCurrency","underlying"),d=this.safeString(t,"quoteCurrency","USD"),h=o?"USD":void 0;let l=this.safeCurrencyCode(c);const u=this.safeCurrencyCode(d),f=this.safeCurrencyCode(h),p=!o,m=!o,g=this.safeValue(a,"perpetual",!1),y=!1,w=o&&!g;let S;const k=this.safeString(a,"expiry");let T="spot",O=l+"/"+u;if(g)T="swap",O=l+"/"+u+":"+f;else if(w){if(T="future",S=this.parse8601(k),void 0===S){const e=this.safeValue(this.options,"fetchMarkets",{});if(this.safeValue(e,"throwOnUndefinedExpiry",!1))throw new b(this.id+" symbol '"+s+"' is a future contract with an invalid expiry datetime.");continue}const e=s.split("-");e.length>2&&(e.pop(),l=e.join("-")),O=l+"/"+u+":"+f+"-"+this.yymmdd(S,"")}const _=this.safeString(t,"sizeIncrement"),x=this.safeString(t,"minProvideSize");let M=_;void 0!==x&&(M=v.stringGt(x,_)?_:x),i.push({id:s,symbol:O,base:l,quote:u,settle:f,baseId:c,quoteId:d,settleId:h,type:T,spot:p,margin:m,swap:g,future:w,option:y,active:this.safeValue(t,"enabled"),contract:o,linear:!!o||void 0,inverse:!o&&void 0,contractSize:this.parseNumber("1"),expiry:S,expiryDatetime:this.iso8601(S),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(_),price:this.safeNumber(t,"priceIncrement")},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber("20")},amount:{min:this.parseNumber(M),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeString(e,"name");s in this.markets_by_id&&(t=this.markets_by_id[s]);const i=this.safeSymbol(s,t),r=this.safeString(e,"last"),a=this.safeTimestamp(e,"time",this.milliseconds());let n=this.safeString(e,"change24h");return void 0!==n&&(n=v.stringMul(n,"100")),this.safeTicker({symbol:i,timestamp:a,datetime:this.iso8601(a),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:n,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"quoteVolume24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market_name:s.id},r=await this.publicGetMarketsMarketName(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const s=await this.publicGetMarkets(t),i=this.safeValue(s,"result",[]);return this.parseTickers(i,e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market_name:this.market(e).id};void 0!==t&&(i.depth=t);const r=await this.publicGetMarketsMarketNameOrderbook(this.extend(i,s)),a=this.safeValue(r,"result",{});return this.parseOrderBook(a,e)}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}getMarketId(e,t,s={}){const i=this.getMarketParams(e,t,s);return this.safeString(i,1,e)}getMarketParams(e,t,s={}){let i,r;return e in this.markets?(i=this.market(e),r=i.id):r=this.safeString(s,t,e),[i,r]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const[a,n]=this.getMarketParams(e,"market_name",r);i=void 0===i?1500:Math.min(i,5e3);const o={resolution:this.timeframes[t],market_name:n,limit:i},c=this.safeString(r,"price"),d=this.safeInteger(r,"until");if(r=this.omit(r,["price","until"]),void 0!==s){const e=parseInt(s/1e3);o.start_time=e;const r=this.parseTimeframe(t),a=this.sum(e,i*r);if(o.end_time=Math.min(a,this.seconds()),r>86400){const e=parseInt(r/86400);o.limit=Math.min(i*e,5e3)}}void 0!==d&&(o.end_time=parseInt(d/1e3));let h="publicGetMarketsMarketNameCandles";"index"===c&&(e in this.markets&&(o.market_name=a.baseId),h="publicGetIndexesMarketNameCandles");const l=await this[h](this.extend(o,r)),u=this.safeValue(l,"result",[]);return this.parseOHLCVs(u,a,t,s,i)}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"liquidity"),r=this.safeString(e,"baseCurrency"),a=this.safeString(e,"quoteCurrency");let n;void 0!==r&&void 0!==a&&(n=r+"/"+a);const o=this.safeString(e,"market",n),c=(t=this.safeMarket(o,t,"/")).symbol,d=this.parse8601(this.safeString(e,"time")),h=this.safeString(e,"price"),l=this.safeString(e,"size"),u=this.safeString(e,"side");let f;const p=this.safeString(e,"fee");if(void 0!==p){const t=this.safeString(e,"feeCurrency");f={cost:p,currency:this.safeCurrencyCode(t),rate:this.safeString(e,"feeRate")}}const m=this.safeString(e,"orderId");return this.safeTrade({info:e,timestamp:d,datetime:this.iso8601(d),symbol:c,id:s,order:m,type:void 0,takerOrMaker:i,side:u,price:h,amount:l,cost:void 0,fee:f},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const[r,a]=this.getMarketParams(e,"market_name",i),n={market_name:a};void 0!==t&&(n.start_time=parseInt(t/1e3),n.end_time=this.seconds()),void 0!==s&&(n.limit=s);const o=await this.publicGetMarketsMarketNameTrades(this.extend(n,i)),c=this.safeValue(o,"result",[]);return this.parseTrades(c,r,t,s)}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.safeNumber(e,"makerFee"),taker:this.safeNumber(e,"takerFee"),percentage:!0,tierBased:!0}}parseTradingFees(e){const t={};for(let s=0;s<this.symbols.length;s++){const i=this.symbols[s],r=this.market(i);t[i]=this.parseTradingFee(e,r)}return t}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i=await this.privateGetAccount(t),r=this.safeValue(i,"result",{});return this.parseTradingFee(r,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccount(e),s=this.safeValue(t,"result",{});return this.parseTradingFees(s)}async fetchFundingRateHistory(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);e=t.symbol,r.future=t.id}void 0!==t&&(r.start_time=parseInt(t/1e3));const a=this.safeInteger2(i,"until","till");i=this.omit(i,["until","till"]),void 0!==a&&(r.end_time=parseInt(a/1e3));const n=await this.publicGetFundingRates(this.extend(r,i)),o=this.safeValue(n,"result",[]),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"future"),i=this.parse8601(this.safeString(t,"time"));c.push({info:t,symbol:this.safeSymbol(s),fundingRate:this.safeNumber(t,"rate"),timestamp:i,datetime:this.iso8601(i)})}const d=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(d,e,t,s)}parseBalance(e){const t={info:e},s=this.safeValue(e,"result",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeCurrencyCode(this.safeString(i,"coin")),a=this.account();a.free=this.safeString2(i,"availableWithoutBorrow","free"),a.total=this.safeString(i,"total"),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetWalletBalances(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({new:"open",open:"open",closed:"closed",triggered:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"createdAt"));let r=this.parseOrderStatus(this.safeString(e,"status"));const a=this.safeString(e,"size"),n=this.safeString(e,"filledSize");let o=this.safeString(e,"remainingSize");v.stringEquals(o,"0")&&(o=v.stringSub(a,n),v.stringGt(o,"0")&&(r="canceled"));const c=this.safeString(e,"market");let d=(t=this.safeMarket(c,t)).symbol;void 0===d&&(d=c);const h=this.safeString(e,"side"),l=this.safeString(e,"type"),u=this.safeString(e,"avgFillPrice"),f=this.safeString2(e,"price","triggerPrice",u),p=this.parse8601(this.safeString(e,"triggeredAt")),m=this.safeString(e,"clientId"),g=this.safeNumber(e,"triggerPrice"),y=this.safeValue(e,"postOnly");let b;return this.safeValue(e,"ioc")&&(b="IOC"),y&&(b="PO"),this.safeOrder({info:e,id:s,clientOrderId:m,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:p,symbol:d,type:l,timeInForce:b,postOnly:y,reduceOnly:this.safeValue(e,"reduceOnly"),side:h,price:f,stopPrice:g,amount:a,cost:void 0,average:u,filled:n,remaining:o,status:r,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=this.market(e),c={market:o.id,side:s,size:parseFloat(this.amountToPrecision(e,i))},d=this.safeValue(a,"reduceOnly");!0===d&&(c.reduceOnly=d);const h=this.safeString2(a,"clientId","clientOrderId");let l;void 0!==h&&(c.clientId=h,a=this.omit(a,["clientId","clientOrderId"]));let u=this.safeValue2(a,"triggerPrice","stopPrice");const f=this.safeValue(a,"stopLossPrice"),m=this.safeValue(a,"takeProfitPrice");let g="takeProfit"===t,y="stop"===t,b=!1;void 0!==u?b=!g&&!y:void 0!==m?(g=!0,u=m):void 0!==f&&(y=!0,u=f),b||(c.type=t);const v=g||y||b;if(a=this.omit(a,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]),v){if(void 0===u){if(g)throw new p(this.id+" createOrder() requires a triggerPrice param, a stopPrice or a takeProfitPrice param for a takeProfit order");if(y)throw new p(this.id+" createOrder() requires a triggerPrice param, a stopPrice or a stopLossPrice param for a stop order")}if(l="privatePostConditionalOrders",c.triggerPrice=parseFloat(this.priceToPrecision(e,u)),"limit"===t&&void 0===r)throw new p(this.id+" createOrder () requires a price argument for stop limit orders");void 0!==r&&(c.orderPrice=parseFloat(this.priceToPrecision(e,r))),(y||g)&&(c.type=y?"stop":"takeProfit")}else if("limit"===t||"market"===t){l="privatePostOrders";let s=!1;"limit"===t?c.price=parseFloat(this.priceToPrecision(e,r)):"market"===t&&(c.price=null,s=!0);const i=this.safeString(a,"timeInForce"),o=this.isPostOnly(s,void 0,a);if(a=this.omit(a,["timeInForce","postOnly"]),void 0!==i&&"IOC"!==i&&"PO"!==i)throw new n(this.id+" createOrder () does not accept timeInForce: "+i+" orders, only IOC and PO orders are allowed");const d="IOC"===i;o&&(c.postOnly=!0),d&&(c.ioc=!0)}else{if("trailingStop"!==t)throw new n(this.id+" createOrder () does not support order type "+t+", only limit, market, stop, trailingStop, or takeProfit orders are supported");{const s=this.safeNumber(a,"trailValue",r);if(void 0===s)throw new p(this.id+" createOrder () requires a trailValue parameter or a price argument (negative or positive) for a "+t+" order");l="privatePostConditionalOrders",c.trailValue=parseFloat(this.priceToPrecision(e,s))}}const w=await this[l](this.extend(c,a)),S=this.safeValue(w,"result",[]);return this.parseOrder(S,o)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t),c={};let d;const h=this.safeString2(n,"client_order_id","clientOrderId"),l=this.safeNumber(n,"triggerPrice"),u=this.safeNumber(n,"orderPrice"),f=this.safeNumber(n,"trailValue");n=this.omit(n,["client_order_id","clientOrderId","triggerPrice","orderPrice","trailValue"]);const p=void 0!==l,m=void 0!==u,g=void 0!==f;p||m||g?(d="privatePostConditionalOrdersOrderIdModify",c.order_id=e,p&&(c.triggerPrice=parseFloat(this.priceToPrecision(t,l))),m&&(c.orderPrice=parseFloat(this.priceToPrecision(t,u))),g&&(c.trailValue=parseFloat(this.priceToPrecision(t,f)))):(void 0===h?(d="privatePostOrdersOrderIdModify",c.order_id=e):(d="privatePostOrdersByClientIdClientOrderIdModify",c.client_order_id=h),void 0!==a&&(c.price=parseFloat(this.priceToPrecision(t,a)))),void 0!==r&&(c.size=parseFloat(this.amountToPrecision(t,r)));const y=await this[d](this.extend(c,n)),b=this.safeValue(y,"result",{});return this.parseOrder(b,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeValue(this.options,"cancelOrder",{}),a=this.safeString(r,"method","privateDeleteOrdersOrderId");let n=this.safeString(s,"method",a);const o=this.safeValue(s,"type"),c=this.safeValue(s,"stop"),d=this.safeValue2(s,"client_order_id","clientOrderId");void 0===d?(i.order_id=parseInt(e),(c||"stop"===o||"trailingStop"===o||"takeProfit"===o)&&(n="privateDeleteConditionalOrdersOrderId")):(i.client_order_id=d,n="privateDeleteOrdersByClientIdClientOrderId");const h=this.omit(s,["method","type","client_order_id","clientOrderId","stop"]),l=await this[n](this.extend(i,h));return this.safeValue(l,"result",{})}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={},i=this.getMarketId(e,"market",t);void 0!==i&&(s.market=i);const r=await this.privateDeleteOrders(this.extend(s,t));return this.safeValue(r,"result",{})}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeValue2(s,"client_order_id","clientOrderId");let a="privateGetOrdersOrderId";void 0===r?i.order_id=e:(i.client_order_id=r,s=this.omit(s,["client_order_id","clientOrderId"]),a="privateGetOrdersByClientIdClientOrderId");const n=await this[a](this.extend(i,s)),o=this.safeValue(n,"result",{});return this.parseOrder(o)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={},[a,n]=this.getMarketParams(e,"market",i);void 0!==n&&(r.market=n);const o=this.safeValue(this.options,"fetchOpenOrders",{}),c=this.safeString(o,"method","privateGetOrders");let d=this.safeString(i,"method",c);const h=this.safeValue(i,"type");(this.safeValue(i,"stop")||"stop"===h||"trailingStop"===h||"takeProfit"===h)&&(d="privateGetConditionalOrders");const l=this.omit(i,["method","type","stop"]),u=await this[d](this.extend(r,l)),f=this.safeValue(u,"result",[]);return this.parseOrders(f,a,t,s)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={},[a,n]=this.getMarketParams(e,"market",i);void 0!==n&&(r.market=n),void 0!==s&&(r.limit=s),void 0!==t&&(r.start_time=parseInt(t/1e3));const o=this.safeValue(this.options,"fetchOrders",{}),c=this.safeString(o,"method","privateGetOrdersHistory");let d=this.safeString(i,"method",c);const h=this.safeValue(i,"type");"stop"!==h&&"trailingStop"!==h&&"takeProfit"!==h||(d="privateGetConditionalOrdersHistory");const l=this.omit(i,["method","type"]),u=await this[d](this.extend(r,l)),f=this.safeValue(u,"result",[]);return this.parseOrders(f,a,t,s)}async fetchOrderTrades(e,t,s,i,r={}){const a={orderId:e};return await this.fetchMyTrades(t,s,i,this.extend(a,r))}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const[r,a]=this.getMarketParams(e,"market",i),n={};void 0!==a&&(n.market=a),void 0!==r&&(e=r.symbol);const o=this.safeInteger2(i,"until","till");void 0!==t&&(n.start_time=parseInt(t/1e3),n.end_time=this.seconds()),void 0!==o&&(n.end_time=parseInt(o/1e3),i=this.omit(i,["until","till"])),void 0!==s&&(n.limit=s);const c=await this.privateGetFills(this.extend(n,i)),d=this.safeValue(c,"result",[]);return this.parseTrades(d,r,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={coin:a.id,source:s,destination:i,size:t},o=await this.privatePostSubaccountsTransfer(this.extend(n,r)),c=this.safeValue(o,"result",{});return this.parseTransfer(c,a)}parseTransfer(e,t){const s=this.safeString(e,"coin"),i=this.safeString(e,"notes",""),r=this.safeString(e,"status"),a=i.replace("Transfer from ","").split(" to ");let n=this.safeString(a,0);n=n.replace(" account","");let o=this.safeString(a,1);return o=o.replace(" account",""),{info:e,id:this.safeString(e,"id"),timestamp:void 0,datetime:this.safeString(e,"time"),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"size"),fromAccount:n,toAccount:o,status:this.parseTransferStatus(r)}}parseTransferStatus(e){return this.safeString({complete:"ok"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={coin:a.id,size:t,address:s};void 0!==this.password&&(n.password=this.password),void 0!==i&&(n.tag=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.method=c,r=this.omit(r,"network"));const d=await this.privatePostWalletWithdrawals(this.extend(n,r)),h=this.safeValue(d,"result",{});return this.parseTransaction(h,a)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.privateGetPositions(this.extend({showAvgPrice:!0},t)),i=this.safeValue(s,"result",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=this.safeString(e,"size"),i="buy"===this.safeString(e,"side")?"long":"short",r=this.safeString(e,"future"),a=this.safeSymbol(r,t),n=this.safeString(e,"estimatedLiquidationPrice"),o=this.safeString(e,"initialMarginRequirement"),c=parseInt(v.stringDiv("1",o,0)),d=this.safeString(e,"entryPrice"),h=v.stringMul(s,d),l=v.stringMul(h,o),u=this.safeString(e,"maintenanceMarginRequirement"),f=v.stringMul(h,u),p=this.safeString(e,"unrealizedPnl"),m=this.parseNumber(v.stringMul(v.stringDiv(p,l,4),"100")),g=this.safeString(e,"recentAverageOpenPrice");let y,b,w;if(void 0!==g&&v.stringGt(n,"0")){y="long"===i?v.stringSub(d,n):v.stringSub(n,d);const e=v.stringMul(y,s);b=v.stringAdd(e,f),w=this.parseNumber(v.stringDiv(f,b,4))}return{info:e,symbol:a,timestamp:void 0,datetime:void 0,initialMargin:this.parseNumber(l),initialMarginPercentage:this.parseNumber(o),maintenanceMargin:this.parseNumber(f),maintenanceMarginPercentage:this.parseNumber(u),entryPrice:this.parseNumber(g),notional:this.parseNumber(h),leverage:c,unrealizedPnl:this.parseNumber(p),contracts:this.parseNumber(s),contractSize:this.safeValue(t,"contractSize"),marginRatio:w,liquidationPrice:this.parseNumber(n),markPrice:this.parseNumber(d),collateral:this.parseNumber(b),marginMode:"cross",side:i,percentage:m}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={coin:this.currency(e).id},i=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeStringLower(i,r,r),void 0!==r&&(s.method=r,t=this.omit(t,"network"));const a=await this.privateGetWalletDepositAddressCoin(this.extend(s,t)),n=this.safeValue(a,"result",{}),o=this.safeString(n,"method"),c=this.safeString(n,"address");return this.checkAddress(c),{currency:e,address:c,tag:this.safeString(n,"tag"),network:this.safeNetwork(o),info:a}}safeNetwork(e){return this.safeString({trx:"TRC20",erc20:"ERC20",sol:"SOL",bsc:"BEP20",bep2:"BEP2"},e,e)}parseTransactionStatus(e){return this.safeString({confirmed:"ok",complete:"ok",cancelled:"canceled"},e,e)}parseTransaction(e,t){const s=this.safeCurrencyCode(this.safeString(e,"coin")),i=this.safeString(e,"id"),r=this.safeNumber(e,"size"),a=this.parseTransactionStatus(this.safeString(e,"status")),n=this.parse8601(this.safeString(e,"time")),o=this.safeString(e,"txid");let c,d=this.safeValue(e,"address");if("string"!=typeof d&&(c=this.safeString(d,"tag"),d=this.safeString(d,"address")),void 0===d){const t=this.safeString(e,"notes");void 0!==t&&t.indexOf("Transfer to")>=0&&(d=t.slice(12))}const h=this.safeNumber(e,"fee");return{info:e,id:i,txid:o,timestamp:n,datetime:this.iso8601(n),network:void 0,addressFrom:void 0,address:d,addressTo:d,tagFrom:void 0,tag:c,tagTo:c,type:void 0,amount:r,currency:s,status:a,updated:void 0,fee:{currency:s,cost:h,rate:void 0}}}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r=await this.privateGetWalletDeposits(i),a=this.safeValue(r,"result",[]);let n;return void 0!==e&&(n=this.currency(e)),this.parseTransactions(a,n,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r=await this.privateGetWalletWithdrawals(i),a=this.safeValue(r,"result",[]);let n;return void 0!==e&&(n=this.currency(e)),this.parseTransactions(a,n,t,s,{type:"withdrawal"})}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.implodeParams(e,i);const o=this.safeValue(this.options,"sign",{}),c=this.safeString(o,this.hostname,"FTX"),d=c+"-SUBACCOUNT",h=this.safeString2(i,d,"subaccount");void 0!==h&&(i=this.omit(i,[d,"subaccount"]));const l=this.omit(i,this.extractParams(e));let u=this.implodeHostname(this.urls.api[t])+n;if("POST"!==s&&Object.keys(l).length){const e="?"+this.urlencode(l);u+=e,n+=e}if("private"===t){this.checkRequiredCredentials();const e=this.milliseconds().toString();let t=e+s+n;r={},"POST"!==s&&"DELETE"!==s||(t+=a=this.json(l),r["Content-Type"]="application/json");const i=this.hmac(this.encode(t),this.encode(this.secret),"sha256");r[c+"-KEY"]=this.apiKey,r[c+"-TS"]=e,r[c+"-SIGN"]=i,void 0!==h&&(r[d]=h)}return{url:u,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;if(!this.safeValue(o,"success")){const e=this.id+" "+n,t=this.safeString(o,"error");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new a(e)}}async setLeverage(e,t,s={}){if(e<1||e>20)throw new o(this.id+" setLeverage () leverage should be between 1 and 20");const i={leverage:e};return await this.privatePostAccountLeverage(this.extend(i,s))}parseIncome(e,t){const s=this.safeString(e,"future"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"payment"),a=this.safeCurrencyCode("USD"),n=this.safeString(e,"id"),o=this.safeString(e,"time"),c=this.parse8601(o),d=this.safe_number(e,"rate");return{info:e,symbol:i,code:a,timestamp:c,datetime:this.iso8601(c),id:n,amount:r,rate:d}}parseIncomes(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s],a=this.parseIncome(i,t);r.push(a)}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,s,i,"timestamp")}async fetchFundingHistory(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.future=a.id),void 0!==t&&(r.start_time=parseInt(t/1e3),r.end_time=this.seconds());const n=this.safeInteger(i,"till");void 0!==n&&(r.end_time=parseInt(n/1e3),i=this.omit(i,"till"));const o=await this.privateGetFundingPayments(this.extend(r,i)),c=this.safeValue(o,"result",[]);return this.parseIncomes(c,a,t,s)}parseFundingRate(e,t){const s=this.safeString(e,"nextFundingTime"),i=this.parse8601(s),r=this.safeNumber(e,"predictedExpirationPrice");return{info:e,symbol:t.symbol,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:r,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"nextFundingRate"),fundingTimestamp:i,fundingDatetime:this.iso8601(i),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={future_name:s.id},r=await this.publicGetFuturesFutureNameStats(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseFundingRate(a,s)}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetSpotMarginBorrowRates(e),s=this.safeValue(t,"result");return this.parseBorrowRates(s,"coin")}async fetchBorrowRateHistories(e,t,s,i={}){await this.loadMarkets();const r={};let a=0,n=this.safeNumber2(i,"till","end_time");if(void 0!==e&&(a=e.length),1===a){const i=18e9;if(void 0!==s&&s>5e3)throw new o(this.id+" fetchBorrowRateHistories () limit cannot exceed 5000 for a single currency");if(void 0!==n&&void 0!==t&&n-t>i)throw new o(this.id+" fetchBorrowRateHistories () requires the time range between the since time and the end time to be less than 5000 hours for a single currency");const a=this.currency(e[0]);r.coin=a.id}else{const e=1728e5;if(void 0!==s&&s>48)throw new o(this.id+" fetchBorrowRateHistories () limit cannot exceed 48 for multiple currencies");if(void 0!==n&&void 0!==t&&n-t>e)throw new o(this.id+" fetchBorrowRateHistories () requires the time range between the since time and the end time to be less than 48 hours for multiple currencies")}const c=36e5;if(void 0!==t){if(r.start_time=parseInt(t/1e3),void 0===n){const e=this.milliseconds(),i=void 0===s?2:s;n=this.sum(t,c*(i-1)),n=Math.min(n,e)}}else if(void 0!==s){void 0===n&&(n=this.milliseconds());const e=this.sum(n-c*s,1e3);r.start_time=parseInt(e/1e3)}void 0!==n&&(r.end_time=parseInt(n/1e3));const d=await this.publicGetSpotMarginHistory(this.extend(r,i)),h=this.safeValue(d,"result");return this.parseBorrowRateHistories(h,e,t,s)}async fetchBorrowRateHistory(e,t,s,i={}){const r=await this.fetchBorrowRateHistories([e],t,s,i),a=this.safeValue(r,e);if(void 0===a)throw new o(this.id+" fetchBorrowRateHistory () returned no data for "+e);return a}parseBorrowRateHistories(e,t,s,i){const r=this.fees.trading.taker.toString(),a=v.stringMul("500",r),n={};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeCurrencyCode(this.safeString(i,"coin"));if(void 0===t||this.inArray(r,t)){r in n||(n[r]=[]);const e=this.safeString(i,"rate"),t=v.stringMul(e,v.stringAdd("1",a)),s=this.extend(this.parseBorrowRate(i),{rate:t});n[r].push(s)}}const o=Object.keys(n);for(let e=0;e<o.length;e++){const t=o[e];n[t]=this.filterByCurrencySinceLimit(n[t],t,s,i)}return n}parseBorrowRates(e,t){const s={};for(let i=0;i<e.length;i++){const r=e[i],a=this.safeString(r,t),n=this.safeCurrencyCode(a),o=this.parseBorrowRate(r);s[n]=o}return s}parseBorrowRate(e,t){const s=this.safeString(e,"coin"),i=this.safeString(e,"time"),r=this.parse8601(i);return{currency:this.safeCurrencyCode(s),rate:this.safeNumber(e,"previous"),period:36e5,timestamp:r,datetime:this.iso8601(r),info:e}}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a={};void 0!==s&&(a.start_time=parseInt(s/1e3));const n=await this.privateGetSpotMarginBorrowHistory(this.extend(a,r)),o=this.safeValue(n,"result"),c=this.parseBorrowInterests(o);return this.filterByCurrencySinceLimit(c,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"coin"),i=this.safeString(e,"time");return{account:"cross",symbol:void 0,marginMode:"cross",currency:this.safeCurrencyCode(s),interest:this.safeNumber(e,"cost"),interestRate:this.safeNumber(e,"rate"),amountBorrowed:this.safeNumber(e,"size"),timestamp:this.parse8601(i),datetime:i,info:e}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],204:[function(e,t,s){"use strict";const i=e("./ftx.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ftxus",name:"FTX US",countries:["US"],certified:!1,hostname:"ftx.us",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchPremiumIndexOHLCV:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/141506670-12f6115f-f425-4cd8-b892-b51d157ca01f.jpg",www:"https://ftx.us/",docs:"https://docs.ftx.us/",fees:"https://help.ftx.us/hc/en-us/articles/360043579273-Fees"}})}}},{"./ftx.js":203}],205:[function(e,t,s){"use strict";const i=e("./base/Exchange"),r=e("./base/Precise"),{TICK_SIZE:a}=e("./base/functions/number"),{ExchangeError:n,BadRequest:o,ArgumentsRequired:c,AuthenticationError:d,PermissionDenied:h,AccountSuspended:l,InsufficientFunds:u,RateLimitExceeded:f,ExchangeNotAvailable:p,BadSymbol:m,InvalidOrder:g,OrderNotFound:y,NotSupported:b,AccountNotEnabled:v,OrderImmediatelyFillable:w}=e("./base/errors");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"gate",name:"Gate.io",countries:["KR"],rateLimit:10/3,version:"v4",certified:!0,pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg",doc:"https://www.gate.io/docs/apiv4/en/index.html",www:"https://gate.io/",api:{public:{wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4"},private:{withdrawals:"https://api.gateio.ws/api/v4",wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4"}},test:{public:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4"},private:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4"}},referral:{url:"https://www.gate.io/ref/2436035",discount:.2}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createPostOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchNetworkDepositAddress:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchWithdrawals:!0,repayMargin:!0,setLeverage:!0,setMarginMode:!1,transfer:!0,withdraw:!0},api:{public:{wallet:{get:{"wallet/currency_chains":1.5}},spot:{get:{currencies:1,"currencies/{currency}":1,currency_pairs:1,"currency_pairs/{currency_pair}":1,tickers:1,order_book:1,trades:1,candlesticks:1}},margin:{get:{currency_pairs:1,"currency_pairs/{currency_pair}":1,"cross/currencies":1,"cross/currencies/{currency}":1,funding_book:1}},futures:{get:{"{settle}/contracts":1.5,"{settle}/contracts/{contract}":1.5,"{settle}/order_book":1.5,"{settle}/trades":1.5,"{settle}/candlesticks":1.5,"{settle}/tickers":1.5,"{settle}/funding_rate":1.5,"{settle}/insurance":1.5,"{settle}/contract_stats":1.5,"{settle}/liq_orders":1.5}},delivery:{get:{"{settle}/contracts":1.5,"{settle}/contracts/{contract}":1.5,"{settle}/order_book":1.5,"{settle}/trades":1.5,"{settle}/candlesticks":1.5,"{settle}/tickers":1.5,"{settle}/insurance":1.5}},options:{get:{underlyings:1.5,expirations:1.5,contracts:1.5,"contracts/{contract}":1.5,settlements:1.5,"settlements/{contract}":1.5,order_book:1.5,tickers:1.5,"underlying/tickers/{underlying}":1.5,candlesticks:1.5,"underlying/candlesticks":1.5,trades:1.5}}},private:{withdrawals:{post:{"":3e3},delete:{"{withdrawal_id}":300}},wallet:{get:{deposit_address:300,withdrawals:300,deposits:300,sub_account_transfers:300,withdraw_status:300,sub_account_balances:300,fee:300,total_balance:300},post:{transfers:300,sub_account_transfers:300}},spot:{get:{accounts:1,open_orders:1,orders:1,"orders/{order_id}":1,my_trades:1,price_orders:1,"price_orders/{order_id}":1},post:{batch_orders:1,orders:1,cancel_batch_orders:1,price_orders:1},delete:{orders:1,"orders/{order_id}":1,price_orders:1,"price_orders/{order_id}":1}},margin:{get:{accounts:1.5,account_book:1.5,funding_accounts:1.5,loans:1.5,"loans/{loan_id}":1.5,"loans/{loan_id}/repayment":1.5,loan_records:1.5,"loan_records/{load_record_id}":1.5,auto_repay:1.5,transferable:1.5,"cross/accounts":1.5,"cross/account_book":1.5,"cross/loans":1.5,"cross/loans/{loan_id}":1.5,"cross/loans/repayments":1.5,"cross/transferable":1.5,"loan_records/{loan_record_id}":1.5,borrowable:1.5,"cross/repayments":1.5,"cross/borrowable":1.5},post:{loans:1.5,merged_loans:1.5,"loans/{loan_id}/repayment":1.5,auto_repay:1.5,"cross/loans":1.5,"cross/loans/repayments":1.5,"cross/repayments":1.5},patch:{"loans/{loan_id}":1.5,"loan_records/{loan_record_id}":1.5},delete:{"loans/{loan_id}":1.5}},futures:{get:{"{settle}/accounts":1.5,"{settle}/account_book":1.5,"{settle}/positions":1.5,"{settle}/positions/{contract}":1.5,"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/my_trades":1.5,"{settle}/position_close":1.5,"{settle}/liquidates":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5,"{settle}/dual_comp/positions/{contract}":1.5},post:{"{settle}/positions/{contract}/margin":1.5,"{settle}/positions/{contract}/leverage":1.5,"{settle}/positions/{contract}/risk_limit":1.5,"{settle}/dual_mode":1.5,"{settle}/dual_comp/positions/{contract}":1.5,"{settle}/dual_comp/positions/{contract}/margin":1.5,"{settle}/dual_comp/positions/{contract}/leverage":1.5,"{settle}/dual_comp/positions/{contract}/risk_limit":1.5,"{settle}/orders":1.5,"{settle}/price_orders":1.5},delete:{"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5}},delivery:{get:{"{settle}/accounts":1.5,"{settle}/account_book":1.5,"{settle}/positions":1.5,"{settle}/positions/{contract}":1.5,"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/my_trades":1.5,"{settle}/position_close":1.5,"{settle}/liquidates":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5,"{settle}/settlements":1.5},post:{"{settle}/positions/{contract}/margin":1.5,"{settle}/positions/{contract}/leverage":1.5,"{settle}/positions/{contract}/risk_limit":1.5,"{settle}/orders":1.5,"{settle}/price_orders":1.5},delete:{"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5}},options:{get:{accounts:1.5,account_book:1.5,positions:1.5,"positions/{contract}":1.5,position_close:1.5,orders:1.5,"orders/{order_id}":1.5,my_trades:1.5},post:{orders:1.5},delete:{orders:1.5,"orders/{order_id}":1.5}}}},timeframes:{"10s":"10s","1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","8h":"8h","1d":"1d","7d":"7d","1w":"7d"},commonCurrencies:{"88MPH":"MPH",AXIS:"Axis DeFi",BIFI:"Bitcoin File",BOX:"DefiBox",BTCBEAR:"BEAR",BTCBULL:"BULL",BYN:"BeyondFi",EGG:"Goose Finance",GTC:"Game.com",GTC_HT:"Game.com HT",GTC_BSC:"Game.com BSC",HIT:"HitChain",MM:"Million",MPH:"Morpher",RAI:"Rai Reflex Index",SBTC:"Super Bitcoin",TNC:"Trinity Network Credit",TON:"TONToken",VAI:"VAIOT"},requiredCredentials:{apiKey:!0,secret:!0},headers:{"X-Gate-Channel-Id":"ccxt"},options:{createOrder:{expiration:86400},networks:{TRC20:"TRX",ERC20:"ETH",BEP20:"BSC"},timeInForce:{GTC:"gtc",IOC:"ioc",PO:"poc",POC:"poc"},accountsByType:{funding:"spot",spot:"spot",margin:"margin",cross_margin:"cross_margin",cross:"cross_margin",isolated:"margin",swap:"futures",future:"delivery",futures:"futures",delivery:"delivery"},defaultType:"spot",swap:{fetchMarkets:{settlementCurrencies:["usdt","btc"]}},future:{fetchMarkets:{settlementCurrencies:["usdt","btc"]}}},precisionMode:a,fees:{trading:{tierBased:!0,feeSide:"get",percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00185")],[this.parseNumber("3"),this.parseNumber("0.00175")],[this.parseNumber("6"),this.parseNumber("0.00165")],[this.parseNumber("12.5"),this.parseNumber("0.00155")],[this.parseNumber("25"),this.parseNumber("0.00145")],[this.parseNumber("75"),this.parseNumber("0.00135")],[this.parseNumber("200"),this.parseNumber("0.00125")],[this.parseNumber("500"),this.parseNumber("0.00115")],[this.parseNumber("1250"),this.parseNumber("0.00105")],[this.parseNumber("2500"),this.parseNumber("0.00095")],[this.parseNumber("3000"),this.parseNumber("0.00085")],[this.parseNumber("6000"),this.parseNumber("0.00075")],[this.parseNumber("11000"),this.parseNumber("0.00065")],[this.parseNumber("20000"),this.parseNumber("0.00055")],[this.parseNumber("40000"),this.parseNumber("0.00055")],[this.parseNumber("75000"),this.parseNumber("0.00055")]],taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00195")],[this.parseNumber("3"),this.parseNumber("0.00185")],[this.parseNumber("6"),this.parseNumber("0.00175")],[this.parseNumber("12.5"),this.parseNumber("0.00165")],[this.parseNumber("25"),this.parseNumber("0.00155")],[this.parseNumber("75"),this.parseNumber("0.00145")],[this.parseNumber("200"),this.parseNumber("0.00135")],[this.parseNumber("500"),this.parseNumber("0.00125")],[this.parseNumber("1250"),this.parseNumber("0.00115")],[this.parseNumber("2500"),this.parseNumber("0.00105")],[this.parseNumber("3000"),this.parseNumber("0.00095")],[this.parseNumber("6000"),this.parseNumber("0.00085")],[this.parseNumber("11000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")],[this.parseNumber("40000"),this.parseNumber("0.00065")],[this.parseNumber("75000"),this.parseNumber("0.00065")]]}},swap:{tierBased:!0,feeSide:"base",percentage:!0,maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0005"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0000")],[this.parseNumber("1.5"),this.parseNumber("-0.00005")],[this.parseNumber("3"),this.parseNumber("-0.00005")],[this.parseNumber("6"),this.parseNumber("-0.00005")],[this.parseNumber("12.5"),this.parseNumber("-0.00005")],[this.parseNumber("25"),this.parseNumber("-0.00005")],[this.parseNumber("75"),this.parseNumber("-0.00005")],[this.parseNumber("200"),this.parseNumber("-0.00005")],[this.parseNumber("500"),this.parseNumber("-0.00005")],[this.parseNumber("1250"),this.parseNumber("-0.00005")],[this.parseNumber("2500"),this.parseNumber("-0.00005")],[this.parseNumber("3000"),this.parseNumber("-0.00008")],[this.parseNumber("6000"),this.parseNumber("-0.01000")],[this.parseNumber("11000"),this.parseNumber("-0.01002")],[this.parseNumber("20000"),this.parseNumber("-0.01005")],[this.parseNumber("40000"),this.parseNumber("-0.02000")],[this.parseNumber("75000"),this.parseNumber("-0.02005")]],taker:[[this.parseNumber("0"),this.parseNumber("0.00050")],[this.parseNumber("1.5"),this.parseNumber("0.00048")],[this.parseNumber("3"),this.parseNumber("0.00046")],[this.parseNumber("6"),this.parseNumber("0.00044")],[this.parseNumber("12.5"),this.parseNumber("0.00042")],[this.parseNumber("25"),this.parseNumber("0.00040")],[this.parseNumber("75"),this.parseNumber("0.00038")],[this.parseNumber("200"),this.parseNumber("0.00036")],[this.parseNumber("500"),this.parseNumber("0.00034")],[this.parseNumber("1250"),this.parseNumber("0.00032")],[this.parseNumber("2500"),this.parseNumber("0.00030")],[this.parseNumber("3000"),this.parseNumber("0.00030")],[this.parseNumber("6000"),this.parseNumber("0.00030")],[this.parseNumber("11000"),this.parseNumber("0.00030")],[this.parseNumber("20000"),this.parseNumber("0.00030")],[this.parseNumber("40000"),this.parseNumber("0.00030")],[this.parseNumber("75000"),this.parseNumber("0.00030")]]}}},exceptions:{exact:{INVALID_PARAM_VALUE:o,INVALID_PROTOCOL:o,INVALID_ARGUMENT:o,INVALID_REQUEST_BODY:o,MISSING_REQUIRED_PARAM:c,BAD_REQUEST:o,INVALID_CONTENT_TYPE:o,NOT_ACCEPTABLE:o,METHOD_NOT_ALLOWED:o,NOT_FOUND:n,INVALID_CREDENTIALS:d,INVALID_KEY:d,IP_FORBIDDEN:d,READ_ONLY:h,INVALID_SIGNATURE:d,MISSING_REQUIRED_HEADER:d,REQUEST_EXPIRED:d,ACCOUNT_LOCKED:l,FORBIDDEN:h,SUB_ACCOUNT_NOT_FOUND:n,SUB_ACCOUNT_LOCKED:l,MARGIN_BALANCE_EXCEPTION:n,MARGIN_TRANSFER_FAILED:n,TOO_MUCH_FUTURES_AVAILABLE:n,FUTURES_BALANCE_NOT_ENOUGH:u,ACCOUNT_EXCEPTION:n,SUB_ACCOUNT_TRANSFER_FAILED:n,ADDRESS_NOT_USED:n,TOO_FAST:f,WITHDRAWAL_OVER_LIMIT:n,API_WITHDRAW_DISABLED:p,INVALID_WITHDRAW_ID:n,INVALID_WITHDRAW_CANCEL_STATUS:n,INVALID_PRECISION:g,INVALID_CURRENCY:m,INVALID_CURRENCY_PAIR:m,POC_FILL_IMMEDIATELY:w,ORDER_NOT_FOUND:y,CLIENT_ID_NOT_FOUND:y,ORDER_CLOSED:g,ORDER_CANCELLED:g,QUANTITY_NOT_ENOUGH:g,BALANCE_NOT_ENOUGH:u,MARGIN_NOT_SUPPORTED:g,MARGIN_BALANCE_NOT_ENOUGH:u,AMOUNT_TOO_LITTLE:g,AMOUNT_TOO_MUCH:g,REPEATED_CREATION:g,LOAN_NOT_FOUND:y,LOAN_RECORD_NOT_FOUND:y,NO_MATCHED_LOAN:n,NOT_MERGEABLE:n,NO_CHANGE:n,REPAY_TOO_MUCH:n,TOO_MANY_CURRENCY_PAIRS:g,TOO_MANY_ORDERS:g,MIXED_ACCOUNT_TYPE:g,AUTO_BORROW_TOO_MUCH:n,TRADE_RESTRICTED:u,USER_NOT_FOUND:v,CONTRACT_NO_COUNTER:n,CONTRACT_NOT_FOUND:m,RISK_LIMIT_EXCEEDED:n,INSUFFICIENT_AVAILABLE:u,LIQUIDATE_IMMEDIATELY:g,LEVERAGE_TOO_HIGH:g,LEVERAGE_TOO_LOW:g,ORDER_NOT_OWNED:n,ORDER_FINISHED:n,POSITION_CROSS_MARGIN:n,POSITION_IN_LIQUIDATION:n,POSITION_IN_CLOSE:n,POSITION_EMPTY:g,REMOVE_TOO_MUCH:n,RISK_LIMIT_NOT_MULTIPLE:n,RISK_LIMIT_TOO_HIGH:n,RISK_LIMIT_TOO_lOW:n,PRICE_TOO_DEVIATED:g,SIZE_TOO_LARGE:g,SIZE_TOO_SMALL:g,PRICE_OVER_LIQUIDATION:g,PRICE_OVER_BANKRUPT:g,ORDER_POC_IMMEDIATE:w,INCREASE_POSITION:g,CONTRACT_IN_DELISTING:n,INTERNAL:p,SERVER_ERROR:p,TOO_BUSY:p,CROSS_ACCOUNT_NOT_FOUND:n}},broad:{}})}async fetchMarkets(e={}){let t=[];const[s,i]=this.handleMarketTypeAndParams("fetchMarkets",void 0,e);"spot"!==s&&"margin"!==s||(t=await this.fetchSpotMarkets(i)),"swap"!==s&&"future"!==s||(t=await this.fetchContractMarkets(i)),"option"===s&&(t=await this.fetchOptionMarkets(i));if(0===t.length)throw new n(this.id+" does not support '"+s+"' type, set exchange.options['defaultType'] to 'spot', 'margin', 'swap', 'future' or 'option'");return t}async fetchSpotMarkets(e){const t=await this.publicMarginGetCurrencyPairs(e),s=await this.publicSpotGetCurrencyPairs(e),i=this.indexBy(t,"id"),a=[];for(let e=0;e<s.length;e++){const t=s[e],n=this.safeString(t,"id"),o=this.safeValue(i,n),c=this.deepExtend(o,t),[d,h]=n.split("_"),l=this.safeCurrencyCode(d),u=this.safeCurrencyCode(h),f=this.safeString(c,"fee"),p=this.safeString(c,"maker_fee_rate",f),m=this.parseNumber(this.parsePrecision(this.safeString(c,"amount_precision"))),g=this.safeString(c,"trade_status"),y=void 0!==this.safeNumber(c,"leverage");a.push({id:n,symbol:l+"/"+u,base:l,quote:u,settle:void 0,baseId:d,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:y,swap:!1,future:!1,option:!1,active:"tradable"===g,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(r.stringDiv(f,"100")),maker:this.parseNumber(r.stringDiv(p,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:m,price:this.parseNumber(this.parsePrecision(this.safeString(c,"precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(c,"leverage",1)},amount:{min:this.safeNumber(t,"min_base_amount",m),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(c,"min_quote_amount"),max:this.safeNumber(c,"max_quote_amount")}},info:c})}return a}async fetchContractMarkets(e){const t=[],s=this.getSettlementCurrencies("swap","fetchMarkets"),i=this.getSettlementCurrencies("future","fetchMarkets");for(let i=0;i<s.length;i++){const r=s[i],a=e;a.settle=r;const n=await this.publicFuturesGetSettleContracts(a);for(let e=0;e<n.length;e++){const s=this.parseContractMarket(n[e],r);t.push(s)}}for(let s=0;s<i.length;s++){const r=i[s],a=e;a.settle=r;const n=await this.publicDeliveryGetSettleContracts(a);for(let e=0;e<n.length;e++){const s=this.parseContractMarket(n[e],r);t.push(s)}}return t}parseContractMarket(e,t){const s=this.safeString(e,"name"),i=s.split("_"),a=this.safeString(i,0),n=this.safeString(i,1),o=this.safeString(i,2),c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(t),l=this.safeTimestamp(e,"expire_time");let u="",f="swap";void 0!==o?(u=c+"/"+d+":"+h+"-"+this.yymmdd(l,""),f="future"):u=c+"/"+d+":"+h;const p=this.safeString(e,"order_price_deviate"),m=this.safeString(e,"mark_price"),g=r.stringSub("1",p),y=r.stringAdd("1",p),b=r.stringMul(g,m),v=r.stringMul(y,m),w=this.safeString(e,"taker_fee_rate"),S=this.safeString(e,"maker_fee_rate",w),k=d===h;return{id:s,symbol:u,base:c,quote:d,settle:h,baseId:a,quoteId:n,settleId:t,type:f,spot:!1,margin:!1,swap:"swap"===f,future:"future"===f,option:"option"===f,active:!0,contract:!0,linear:k,inverse:!k,taker:this.parseNumber(r.stringDiv(w,"100")),maker:this.parseNumber(r.stringDiv(S,"100")),contractSize:this.safeNumber(e,"quanto_multiplier"),expiry:l,expiryDatetime:this.iso8601(l),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1"),price:this.safeNumber(e,"order_price_round")},limits:{leverage:{min:this.safeNumber(e,"leverage_min"),max:this.safeNumber(e,"leverage_max")},amount:{min:this.safeNumber(e,"order_size_min"),max:this.safeNumber(e,"order_size_max")},price:{min:this.parseNumber(b),max:this.parseNumber(v)},cost:{min:void 0,max:void 0}},info:e}}async fetchOptionMarkets(e={}){const t=[],s=await this.fetchOptionUnderlyings();for(let i=0;i<s.length;i++){const a=s[i],n=e;n.underlying=a;const o=await this.publicOptionsGetContracts(n);for(let e=0;e<o.length;e++){const s=o[e],i=this.safeString(s,"name"),n=a.split("_"),c=this.safeString(n,0),d=this.safeString(n,1),h=this.safeCurrencyCode(c),l=this.safeCurrencyCode(d);let u=h+"/"+l;const f=this.safeTimestamp(s,"expiration_time"),p=this.safeString(s,"strike_price"),m=this.safeValue(s,"is_call"),g=m?"C":"P",y=m?"call":"put";u=u+":"+l+"-"+this.yymmdd(f)+":"+p+":"+g;const b=this.safeString(s,"order_price_deviate"),v=this.safeString(s,"mark_price"),w=r.stringSub("1",b),S=r.stringAdd("1",b),k=r.stringMul(w,v),T=r.stringMul(S,v),O=this.safeString(s,"taker_fee_rate"),_=this.safeString(s,"maker_fee_rate",O);t.push({id:i,symbol:u,base:h,quote:l,settle:l,baseId:c,quoteId:d,settleId:d,type:"option",spot:!1,margin:!1,swap:!1,future:!1,option:!0,active:!0,contract:!0,linear:!0,inverse:!1,taker:this.parseNumber(r.stringDiv(O,"100")),maker:this.parseNumber(r.stringDiv(_,"100")),contractSize:this.parseNumber("1"),expiry:f,expiryDatetime:this.iso8601(f),strike:p,optionType:y,precision:{amount:this.parseNumber("1"),price:this.safeNumber(s,"order_price_round")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"order_size_min"),max:this.safeNumber(s,"order_size_max")},price:{min:this.parseNumber(k),max:this.parseNumber(T)},cost:{min:void 0,max:void 0}},info:s})}}return t}async fetchOptionUnderlyings(){const e=await this.publicOptionsGetUnderlyings(),t=[];for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"name");void 0!==r&&t.push(r)}return t}prepareRequest(e,t,s={}){const i={};if(void 0!==e)e.contract?(i.contract=e.id,i.settle=e.settleId):i.currency_pair=e.id;else{const e="swap"===t;if(e||"future"===t){const t=e?"usdt":"btc",r=this.safeStringLower(s,"settle",t);s=this.omit(s,"settle"),i.settle=r}}return[i,s]}spotOrderPrepareRequest(e,t=!1,s={}){const[i,r]=this.getMarginMode(t,s),a={};if(!t){if(void 0===e)throw new c(this.id+" spotOrderPrepareRequest() requires a market argument for non-stop orders");a.account=i,a.currency_pair=e.id}return[a,r]}multiOrderSpotPrepareRequest(e,t=!1,s={}){const[i,r]=this.getMarginMode(t,s),a={account:i};return void 0!==e&&(t?a.market=e.id:a.currency_pair=e.id),[a,r]}getMarginMode(e,t){const s=this.safeStringLower2(this.options,"defaultMarginMode","marginMode","spot");let i=this.safeStringLower2(t,"marginMode","account",s);if(t=this.omit(t,["marginMode","account"]),"cross"===i?i="cross_margin":"isolated"===i?i="margin":""===i&&(i="spot"),e&&("spot"===i&&(i="normal"),"cross_margin"===i))throw new o(this.id+" getMarginMode() does not support stop orders for cross margin");return[i,t]}getSettlementCurrencies(e,t){const s=this.safeValue(this.options,e,{}),i=this.safeValue(s,t,{}),r="swap"===e?["usdt"]:["btc"];return this.safeValue(i,"settlementCurrencies",r)}async fetchCurrencies(e={}){if(void 0!==this.safeValue(this.urls,"apiBackup"))return;const t=await this.publicSpotGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeStringLower(i,"currency"),n=this.safeCurrencyCode(r),o=this.safeValue(i,"delisted"),c=this.safeValue(i,"withdraw_disabled",!1),d=this.safeValue(i,"deposit_disabled",!1),h=this.safeValue(i,"trade_disabled",!1),l=!c,u=!d,f=!o&&!h&&l&&u;s[n]={id:r,lowerCaseId:a,name:void 0,code:n,precision:this.parseNumber("1e-6"),info:i,active:f,deposit:u,withdraw:l,fee:void 0,fees:[],limits:this.limits}}return s}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new m(this.id+" fetchFundingRate() supports swap contracts only");const[i,r]=this.prepareRequest(s,void 0,t),a=await this.publicFuturesGetSettleContractsContract(this.extend(i,r));return this.parseFundingRate(a)}async fetchFundingRates(e,t={}){await this.loadMarkets();const[s,i]=this.prepareRequest(void 0,"swap",t),r=await this.publicFuturesGetSettleContracts(this.extend(s,i)),a=this.parseFundingRates(r);return this.filterByArray(a,"symbol",e)}parseFundingRate(e,t){const s=this.safeString(e,"name"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"mark_price"),a=this.safeNumber(e,"index_price"),n=this.safeNumber(e,"interest_rate"),o=this.safeNumber(e,"funding_rate"),c=1e3*this.safeInteger(e,"funding_next_apply"),d=this.safeNumber(e,"funding_rate_indicative");return{info:e,symbol:i,markPrice:r,indexPrice:a,interestRate:n,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:o,fundingTimestamp:c,fundingDatetime:this.iso8601(c),nextFundingRate:d,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchNetworkDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateWalletGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"multichain_addresses"),a=this.safeString(i,"currency");e=this.safeCurrencyCode(a);const n={};for(let t=0;t<r.length;t++){const s=r[t];if(this.safeInteger(s,"obtain_failed"))continue;const i=this.safeString(s,"chain"),a=this.safeString(s,"address");let o=this.safeString(s,"payment_id");o=o.length?o:void 0,n[i]={info:s,code:e,address:a,tag:o}}return n}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateWalletGetDepositAddress(this.extend(s,t)),r=this.safeString(i,"currency");e=this.safeCurrencyCode(r);const a=this.safeString(i,"address");let n,o;if(void 0!==a)if(a.indexOf(" ")>=0){const e=a.split(" ");o=e[0],n=e[1]}else o=a;return this.checkAddress(o),{info:i,code:e,address:o,tag:n,network:void 0}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency_pair:s.id},r=await this.privateWalletGetFee(this.extend(i,t));return this.parseTradingFee(r,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateWalletGetFee(e);return this.parseTradingFees(t)}parseTradingFees(e){const t={};for(let s=0;s<this.symbols.length;s++){const i=this.symbols[s],r=this.market(i);t[i]=this.parseTradingFee(e,r)}return t}parseTradingFee(e,t){const s=this.safeValue(t,"contract"),i=s?"futures_taker_fee":"taker_fee",r=s?"futures_maker_fee":"maker_fee";return{info:e,symbol:this.safeString(t,"symbol"),maker:this.safeNumber(e,r),taker:this.safeNumber(e,i)}}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.privateWalletGetWithdrawStatus(t),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r);i[a]={};let n=this.safeValue(t,"withdraw_fix_on_chains");void 0===n&&(n={},n[a]=this.safeNumber(t,"withdraw_fix"));const o=Object.keys(n);for(let e=0;e<o.length;e++){const t=o[e];i[a][t]=this.parseNumber(n[t])}}return{info:s,withdraw:i,deposit:{}}}async fetchFundingHistory(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const[a,n]=this.handleMarketTypeAndParams("fetchFundingHistory",r,i),[o,c]=this.prepareRequest(r,a,n);o.type="fund",void 0!==t&&(o.from=t/1e3),void 0!==s&&(o.limit=s);const d=this.getSupportedMapping(a,{swap:"privateFuturesGetSettleAccountBook",future:"privateDeliveryGetSettleAccountBook"}),h=await this[d](this.extend(o,c));return this.parseFundingHistories(h,e,t,s)}parseFundingHistories(e,t,s,i){const r=[];for(let t=0;t<e.length;t++){const s=e[t],i=this.parseFundingHistory(s);r.push(i)}const a=this.sortBy(r,"timestamp");return this.filterBySymbolSinceLimit(a,t,s,i)}parseFundingHistory(e,t){const s=this.safeTimestamp(e,"time"),i=this.safeString(e,"text");return t=this.safeMarket(i,t),{info:e,symbol:this.safeString(t,"symbol"),code:this.safeString(t,"settle"),timestamp:s,datetime:this.iso8601(s),id:void 0,amount:this.safeNumber(e,"change")}}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),[r,a]=this.prepareRequest(i,void 0,s),n=this.getSupportedMapping(i.type,{spot:"publicSpotGetOrderBook",margin:"publicSpotGetOrderBook",swap:"publicFuturesGetSettleOrderBook",future:"publicDeliveryGetSettleOrderBook"});void 0!==t&&(r.limit=t),r.with_id=!0;const o=await this[n](this.extend(r,a));let c=this.safeInteger(o,"current");i.spot||(c*=1e3);const d=i.spot?0:"p",h=i.spot?1:"s",l=this.safeInteger(o,"id"),u=this.parseOrderBook(o,e,c,"bids","asks",d,h);return u.nonce=l,u}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),[i,r]=this.prepareRequest(s,void 0,t),a=this.getSupportedMapping(s.type,{spot:"publicSpotGetTickers",margin:"publicSpotGetTickers",swap:"publicFuturesGetSettleTickers",future:"publicDeliveryGetSettleTickers"}),n=await this[a](this.extend(i,r)),o=this.safeValue(n,0);return this.parseTicker(o,s)}parseTicker(e,t){const s=this.safeString2(e,"currency_pair","contract"),i=this.safeSymbol(s,t),r=this.safeString(e,"last"),a=this.safeString(e,"lowest_ask"),n=this.safeString(e,"highest_bid"),o=this.safeString(e,"high_24h"),c=this.safeString(e,"low_24h"),d=this.safeString2(e,"base_volume","volume_24h_base"),h=this.safeString2(e,"quote_volume","volume_24h_quote"),l=this.safeString(e,"change_percentage");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:o,low:c,bid:n,bidVolume:void 0,ask:a,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:l,average:void 0,baseVolume:d,quoteVolume:h,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),[r,a]=this.prepareRequest(void 0,s,i),n=this.getSupportedMapping(s,{spot:"publicSpotGetTickers",margin:"publicSpotGetTickers",swap:"publicFuturesGetSettleTickers",future:"publicDeliveryGetSettleTickers"}),o=await this[n](this.extend(r,a));return this.parseTickers(o,e)}fetchBalanceHelper(e){const t=this.account();return t.used=this.safeString2(e,"freeze","locked"),t.free=this.safeString(e,"available"),t.total=this.safeString(e,"total"),t}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"symbol");e=this.omit(e,"symbol");const[s,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[r,a]=this.prepareRequest(void 0,s,i),[n,o]=this.getMarginMode(!1,a);if(void 0!==t){const e=this.market(t);r.currency_pair=e.id}const c=this.getSupportedMapping(s,{spot:this.getSupportedMapping(n,{spot:"privateSpotGetAccounts",margin:"privateMarginGetAccounts",cross_margin:"privateMarginGetCrossAccounts"}),funding:"privateMarginGetFundingAccounts",swap:"privateFuturesGetSettleAccounts",future:"privateDeliveryGetSettleAccounts"});let d=await this[c](this.extend(r,o));("swap"===s||"future"===s)&&(d=[d]);const h={info:d},l="cross_margin"===n,u="margin"===n;let f=d;if("balances"in f){const e=[],t=this.safeValue(f,"balances",[]),s=Object.keys(t);for(let i=0;i<s.length;i++){const r=s[i],a=t[r];a.currency=r,e.push(a)}f=e}for(let e=0;e<f.length;e++){const t=f[e];if(u&&!l){const e=this.safeString(t,"currency_pair"),s=this.safeSymbol(e,void 0,"_"),i=this.safeValue(t,"base",{}),r=this.safeValue(t,"quote",{}),a=this.safeCurrencyCode(this.safeString(i,"currency",{})),n=this.safeCurrencyCode(this.safeString(r,"currency",{})),o={};o[a]=this.fetchBalanceHelper(i),o[n]=this.fetchBalanceHelper(r),h[s]=this.safeBalance(o)}else{h[this.safeCurrencyCode(this.safeString(t,"currency",{}))]=this.fetchBalanceHelper(t)}}return u&&!l?h:this.safeBalance(h)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price");let o={};[o,r]=this.prepareRequest(a,void 0,r),o.interval=this.timeframes[t];let c="publicSpotGetCandlesticks",d=1e3;if(a.contract){d=1999,i=void 0===i?d:Math.min(i,d),a.future?c="publicDeliveryGetSettleCandlesticks":a.swap&&(c="publicFuturesGetSettleCandlesticks");("mark"===n||"index"===n)&&(o.contract=n+"_"+a.id,r=this.omit(r,"price"))}i=void 0===i?d:Math.min(i,d);let h=this.safeInteger(r,"until");if(void 0!==h&&(h=parseInt(h/1e3),r=this.omit(r,"until")),void 0!==s){const e=this.parseTimeframe(t);o.from=parseInt(s/1e3);const r=this.sum(o.from,i*e-1),a=this.seconds(),n=Math.min(r,a);o.to=void 0!==h?Math.min(n,h):n}else void 0!==h&&(o.to=h),o.limit=i;const l=await this[c](this.extend(o,r));return this.parseOHLCVs(l,a,t,s,i)}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new c(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e);if(!r.swap)throw new m(this.id+" fetchFundingRateHistory() supports swap contracts only");const[a,n]=this.prepareRequest(r,void 0,i);void 0!==s&&(a.limit=s);const o=await this.publicFuturesGetSettleFundingRate(this.extend(a,n)),d=[];for(let t=0;t<o.length;t++){const s=o[t],i=this.safeTimestamp(s,"t");d.push({info:s,symbol:e,fundingRate:this.safeNumber(s,"r"),timestamp:i,datetime:this.iso8601(i)})}const h=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,s)}parseOHLCV(e,t){return Array.isArray(e)?[this.safeTimestamp(e,0),this.safeNumber(e,5),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,1)]:[this.safeTimestamp(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),[a,n]=this.prepareRequest(r,void 0,i),o=this.getSupportedMapping(r.type,{spot:"publicSpotGetTrades",margin:"publicSpotGetTrades",swap:"publicFuturesGetSettleTrades",future:"publicDeliveryGetSettleTrades"});void 0!==s&&(a.limit=s),void 0!==t&&r.contract&&(a.from=parseInt(t/1e3));const c=await this[o](this.extend(a,n));return this.parseTrades(c,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){if(await this.loadMarkets(),void 0===t)throw new c(this.id+" fetchOrderTrades requires a symbol argument");return await this.fetchMyTrades(t,s,i,{order_id:e})}async fetchMyTrades(e,t,s,i={}){let r,a;await this.loadMarkets();let n={};const o=void 0!==e?this.market(e):void 0,c=this.safeInteger2(i,"until","till");i=this.omit(i,["until","till"]),[r,i]=this.handleMarketTypeAndParams("fetchMyTrades",o,i);"swap"===r||"future"===r?[n,i]=this.prepareRequest(o,r,i):(void 0!==o&&(n.currency_pair=o.id),[a,i]=this.getMarginMode(!1,i),n.account=a),void 0!==s&&(n.limit=s),void 0!==t&&(n.from=parseInt(t/1e3)),void 0!==c&&(n.to=parseInt(c/1e3));const d=this.getSupportedMapping(r,{spot:"privateSpotGetMyTrades",margin:"privateSpotGetMyTrades",swap:"privateFuturesGetSettleMyTrades",future:"privateDeliveryGetSettleMyTrades"}),h=await this[d](this.extend(n,i));return this.parseTrades(h,o,t,s)}parseTrade(e,t){const s=this.safeString(e,"id");let i=this.safeTimestamp2(e,"time","create_time");i=this.safeInteger(e,"create_time_ms",i);const a=this.safeString2(e,"currency_pair","contract");t=this.safeMarket(a,t);let n=this.safeString2(e,"amount","size");const o=this.safeString(e,"price"),c=r.stringLt(n,"0")?"sell":"buy";n=r.stringAbs(n);const d=this.safeString2(e,"side","type",c),h=this.safeString(e,"order_id"),l=this.safeString(e,"fee"),u=this.safeString(e,"gt_fee"),f=this.safeString(e,"point_fee"),p=[];if(void 0!==l&&!r.stringEq(l,"0")){const s=this.safeString(e,"fee_currency");let i=this.safeCurrencyCode(s);void 0===i&&(i=this.safeString(t,"settle")),p.push({cost:l,currency:i})}void 0===u||r.stringEq(u,"0")||p.push({cost:u,currency:"GT"}),void 0===f||r.stringEq(f,"0")||p.push({cost:f,currency:"POINT"});const m=this.safeString(e,"role");return this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:h,type:void 0,side:d,takerOrMaker:m,price:o,amount:n,cost:void 0,fee:void 0,fees:p},t)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s),void 0!==t){const e=parseInt(t/1e3);r.from=e,r.to=this.sum(e,2592e3)}const n=await this.privateWalletGetDeposits(this.extend(r,i));return this.parseTransactions(n,a)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s),void 0!==t){const e=parseInt(t/1e3);r.from=e,r.to=this.sum(e,2592e3)}const n=await this.privateWalletGetWithdrawals(this.extend(r,i));return this.parseTransactions(n,a)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,address:s,amount:this.currencyToPrecision(e,t)};void 0!==i&&(n.memo=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.chain=c,r=this.omit(r,"network"));const d=await this.privateWithdrawalsPost(this.extend(n,r));return this.parseTransaction(d,a)}parseTransactionStatus(e){return this.safeString({PEND:"pending",REQUEST:"pending",DMOVE:"pending",CANCEL:"failed",DONE:"ok",BCODE:"ok"},e,e)}parseTransactionType(e){return this.safeString({d:"deposit",w:"withdrawal"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id");let i,a=this.safeString(e,"amount");"b"===s[0]?(i=r.stringGt(a,"0")?"deposit":"withdrawal",a=r.stringAbs(a)):void 0!==s&&(i=this.parseTransactionType(s[0]));const n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n),c=this.safeString(e,"txid"),d=this.safeString(e,"status"),h=this.parseTransactionStatus(d),l=this.safeString(e,"address"),u=this.safeNumber(e,"fee"),f=this.safeString(e,"memo"),p=this.safeTimestamp(e,"timestamp");return{info:e,id:s,txid:c,currency:o,amount:this.parseNumber(a),network:void 0,address:l,addressTo:void 0,addressFrom:void 0,tag:f,tagTo:void 0,tagFrom:void 0,status:h,type:i,timestamp:p,datetime:this.iso8601(p),updated:void 0,fee:u}}async createOrder(e,t,s,i,a,d={}){await this.loadMarkets();const h=this.market(e),l=h.contract,u=this.safeValue(d,"trigger"),f=this.safeValue2(d,"triggerPrice","stopPrice"),p=this.safeValue(d,"stopLossPrice",f),m=this.safeValue(d,"takeProfitPrice"),y=void 0!==p,b=void 0!==m,v=y||b;if(y&&b)throw new n(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");let w="Orders";const S=this.safeValue(d,"reduceOnly"),k=this.safeStringLower2(d,"time_in_force","tif"),T=this.isPostOnly("market"===t,"poc"===k,d);let O=this.handleTimeInForce(d);d=this.omit(d,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice","reduceOnly","timeInForce","postOnly"]),T&&(O="poc");const _="limit"===t,x="market"===t;if(_&&void 0===a)throw new c(this.id+" createOrder () requires a price argument for "+t+" orders");if(l){const t=this.amountToPrecision(e,i),o="sell"===s?r.stringNeg(t):t;if(i=parseInt(o),x){if("poc"===O||"gtc"===O)throw new n(this.id+' createOrder () timeInForce for market orders must be "IOC"');O="ioc",a=0}}else if(!_)throw new g(this.id+" createOrder () does not support "+t+" orders for "+h.type+" markets");let M;if(v||void 0!==u){if(l){if(M={initial:{contract:h.id,size:i,price:this.priceToPrecision(e,a)},settle:h.settleId},void 0===u){let t,i;y?(t="buy"===s?1:2,i=this.priceToPrecision(e,p)):b&&(t="buy"===s?2:1,i=this.priceToPrecision(e,m)),M.trigger={price_type:0,price:this.priceToPrecision(e,i),rule:t}}void 0!==S&&(M.initial.reduce_only=S),void 0!==O&&(M.initial.tif=O)}else{const r=this.safeValue(this.options,"createOrder",{});let n;if([n,d]=this.getMarginMode(!0,d),M={put:{type:t,side:s,price:this.priceToPrecision(e,a),amount:this.amountToPrecision(e,i),account:n,time_in_force:"gtc"},market:h.id},void 0===u){const t=this.safeInteger(r,"expiration"),i=this.safeInteger(d,"expiration",t);let a,n;y?(a="buy"===s?">=":"<=",n=this.priceToPrecision(e,p)):b&&(a="buy"===s?"<=":">=",n=this.priceToPrecision(e,m)),M.trigger={price:this.priceToPrecision(e,n),rule:a,expiration:i}}void 0!==O&&(M.put.time_in_force=O)}w="PriceOrders"}else{if(l)M={contract:h.id,size:i,price:this.priceToPrecision(e,a),settle:h.settleId},void 0!==S&&(M.reduce_only=S),void 0!==O&&(M.tif=O);else{let r;[r,d]=this.getMarginMode(!1,d),M={currency_pair:h.id,type:t,account:r,side:s,amount:this.amountToPrecision(e,i),price:this.priceToPrecision(e,a)},void 0!==O&&(M.time_in_force=O)}let r=this.safeString2(d,"text","clientOrderId");if(void 0!==r){if(r.length>28)throw new o(this.id+" createOrder () clientOrderId or text param must be up to 28 characters");d=this.omit(d,["text","clientOrderId"]),"t"!==r[0]&&(r="t-"+r),M.text=r}}const I=this.getSupportedMapping(h.type,{spot:"privateSpotPost"+w,margin:"privateSpotPost"+w,swap:"privateFuturesPostSettle"+w,future:"privateDeliveryPostSettle"+w}),C=await this[I](this.deepExtend(M,d));return this.parseOrder(C,h)}parseOrderStatus(e){return this.safeString({_new:"open",filled:"closed",cancelled:"canceled",liquidated:"closed",ioc:"canceled"},e,e)}parseOrder(e,t){const s=this.safeValue2(e,"put","initial"),i=this.safeValue(e,"trigger");let a=this.safeString(s,"contract"),n=this.safeString(s,"type"),o=this.safeStringUpper2(s,"time_in_force","tif"),c=this.safeString2(s,"amount","size"),d=this.safeString(s,"side"),h=this.safeString(s,"price");a=this.safeString(e,"contract",a),n=this.safeString(e,"type",n),o=this.safeStringUpper2(e,"time_in_force","tif",o),"POC"===o&&(o="PO");const l="PO"===o;c=this.safeString2(e,"amount","size",c),d=this.safeString(e,"side",d),h=this.safeString(e,"price",h);let u,f,p=this.safeString(e,"left"),m=r.stringSub(c,p),g=this.safeString(e,"filled_total");if(s&&(p=c,m="0",g="0"),a){n=r.stringEquals(h,"0")&&"IOC"===o?"market":"limit",d=r.stringGt(c,"0")?"buy":"sell",u=this.safeString(e,"finish_as","open"),f=this.safeNumber(e,"fill_price")}else u=this.safeString(e,"status");let y=this.safeInteger(e,"create_time_ms");void 0===y&&(y=this.safeTimestamp2(e,"create_time","ctime"));let b=this.safeInteger(e,"update_time_ms");void 0===b&&(b=this.safeTimestamp2(e,"update_time","finish_time"));const v=this.safeString2(e,"currency_pair","market",a),w=[],S=this.safeString(e,"gt_fee");S&&w.push({currency:"GT",cost:S});const k=this.safeString(e,"fee");k&&w.push({currency:this.safeCurrencyCode(this.safeString(e,"fee_currency")),cost:k});const T=this.safeString(e,"rebated_fee");T&&w.push({currency:this.safeCurrencyCode(this.safeString(e,"rebated_fee_currency")),cost:r.stringNeg(T)});const O=w.length>1,_=this.parseOrderStatus(u);return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"text"),timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:b,status:_,symbol:this.safeSymbol(v),type:n,timeInForce:o,postOnly:l,reduceOnly:this.safeValue(e,"is_reduce_only"),side:d,price:this.parseNumber(h),stopPrice:this.safeNumber(i,"price"),average:f,amount:this.parseNumber(r.stringAbs(c)),cost:r.stringAbs(g),filled:this.parseNumber(r.stringAbs(m)),remaining:this.parseNumber(r.stringAbs(p)),fee:O?void 0:this.safeValue(w,0),fees:O?w:[],trades:void 0,info:e},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"is_stop_order","stop",!1);s=this.omit(s,["is_stop_order","stop"]);let r=this.safeString2(s,"text","clientOrderId"),a=e;void 0!==r&&(s=this.omit(s,["text","clientOrderId"]),"t"!==r[0]&&(r="t-"+r),a=r);const n=void 0===t?void 0:this.market(t),[o,c]=this.handleMarketTypeAndParams("fetchOrder",n,s),d="swap"===o||"future"===o,[h,l]=d?this.prepareRequest(n,o,c):this.spotOrderPrepareRequest(n,i,c);h.order_id=a;const u=i?"PriceOrders":"Orders",f=this.getSupportedMapping(o,{spot:"privateSpotGet"+u+"OrderId",margin:"privateSpotGet"+u+"OrderId",swap:"privateFuturesGetSettle"+u+"OrderId",future:"privateDeliveryGetSettle"+u+"OrderId"}),p=await this[f](this.extend(h,l));return this.parseOrder(p,n)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("open",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("finished",e,t,s,i)}async fetchOrdersByStatus(e,t,s,i,r={}){await this.loadMarkets();const a=void 0===t?void 0:this.market(t),n=this.safeValue(r,"stop");r=this.omit(r,"stop");const[o,c]=this.handleMarketTypeAndParams("fetchOrdersByStatus",a,r),d="spot"===o||"margin"===o,[h,l]=d?this.multiOrderSpotPrepareRequest(a,n,c):this.prepareRequest(a,o,c);"closed"===e&&(e="finished"),h.status=e,void 0!==i&&(h.limit=i),void 0!==s&&d&&(h.from=parseInt(s/1e3));let u=n?"PriceOrders":"Orders";const f=d&&"open"===e&&!n;f&&(u="OpenOrders");const p=this.getSupportedMapping(o,{spot:"privateSpotGet"+u,margin:"privateSpotGet"+u,swap:"privateFuturesGetSettle"+u,future:"privateDeliveryGetSettle"+u}),m=await this[p](this.extend(h,l));let g=m;if(f){g=[];for(let e=0;e<m.length;e++){const t=this.safeValue(m[e],"orders");g=this.arrayConcat(g,t)}}const y=this.parseOrders(g,a,s,i);return this.filterBySymbolSinceLimit(y,t,s,i)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=void 0===t?void 0:this.market(t),r=this.safeValue2(s,"is_stop_order","stop",!1);s=this.omit(s,["is_stop_order","stop"]);const[a,n]=this.handleMarketTypeAndParams("cancelOrder",i,s),[o,c]="spot"===a||"margin"===a?this.spotOrderPrepareRequest(i,r,n):this.prepareRequest(i,a,n);o.order_id=e;const d=r?"Price":"",h=this.getSupportedMapping(a,{spot:"privateSpotDelete"+d+"OrdersOrderId",margin:"privateSpotDelete"+d+"OrdersOrderId",swap:"privateFuturesDeleteSettle"+d+"OrdersOrderId",future:"privateDeliveryDeleteSettle"+d+"OrdersOrderId"}),l=await this[h](this.extend(o,c));return this.parseOrder(l,i)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s=void 0===e?void 0:this.market(e),i=this.safeValue(t,"stop");t=this.omit(t,"stop");const[r,a]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),[n,o]="spot"===r?this.multiOrderSpotPrepareRequest(s,i,a):this.prepareRequest(s,r,a),c=i?"PriceOrders":"Orders",d=this.getSupportedMapping(r,{spot:"privateSpotDelete"+c,margin:"privateSpotDelete"+c,swap:"privateFuturesDeleteSettle"+c,future:"privateDeliveryDeleteSettle"+c}),h=await this[d](this.extend(n,o));return this.parseOrders(h,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.parseAccount(s),o=this.parseAccount(i),d=this.currencyToPrecision(e,t),h={currency:a.id,amount:d};if(n in this.options.accountsByType?h.from=n:(h.from="margin",h.currency_pair=n),o in this.options.accountsByType?h.to=o:(h.to="margin",h.currency_pair=o),"margin"===n||"margin"===o){const e=this.safeString2(r,"symbol","currency_pair");if(void 0===e)throw new c(this.id+' transfer requires params["symbol"] for isolated margin transfers');const t=this.market(e);h.currency_pair=t.id,r=this.omit(r,"symbol")}"futures"!==o&&"delivery"!==o&&"futures"!==n&&"delivery"!==n||(h.settle=a.lowerCaseId);const l=await this.privateWalletPostTransfers(this.extend(h,r)),u=this.parseTransfer(l,a);return this.extend(u,{fromAccount:s,toAccount:i,amount:this.parseNumber(d)})}parseAccount(e){const t=this.options.accountsByType;if(e in t)return t[e];if(e in this.markets){return this.market(e).id}{const e=Object.keys(t);throw new n(this.id+" accounts must be one of "+e.join(", ")+" or an isolated margin symbol")}}parseTransfer(e,t){const s=this.milliseconds();return{id:void 0,timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async setLeverage(e,t,s={}){if(void 0===t)throw new c(this.id+" setLeverage() requires a symbol argument");if(e<0||e>100)throw new o(this.id+" setLeverage() leverage should be between 1 and 100");await this.loadMarkets();const i=this.market(t),r=this.getSupportedMapping(i.type,{swap:"privateFuturesPostSettlePositionsContractLeverage",future:"privateDeliveryPostSettlePositionsContractLeverage"}),[a,n]=this.prepareRequest(i,void 0,s),d=this.safeString2(this.options,"marginMode","defaultMarginMode"),h=this.safeString(n,"cross_leverage_limit");let l=this.safeString(n,"marginMode",d);void 0!==h&&(l="cross",e=h),a.query="cross"===l||"cross_margin"===l?{cross_leverage_limit:e.toString(),leverage:"0"}:{leverage:e.toString()};return await this[r](this.extend(a,n))}parsePosition(e,t){const s=this.safeString(e,"contract");t=this.safeMarket(s,t);const i=this.safeString(e,"size");let a;r.stringGt(i,"0")?a="long":r.stringLt(i,"0")&&(a="short");const n=this.safeString(e,"maintenance_rate"),o=this.safeString(e,"value"),c=this.safeString(e,"leverage");let d;d="0"===c?"cross":"isolated";const h=this.safeString(e,"unrealised_pnl"),l=r.stringMul("0.00075",o),u=r.stringAdd(r.stringDiv(o,c),l),f=r.stringMul(r.stringDiv(h,u),"100");return{info:e,symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,initialMargin:this.parseNumber(u),initialMarginPercentage:this.parseNumber(r.stringDiv(u,o)),maintenanceMargin:this.parseNumber(r.stringMul(n,o)),maintenanceMarginPercentage:this.parseNumber(n),entryPrice:this.safeNumber(e,"entry_price"),notional:this.parseNumber(o),leverage:this.safeNumber(e,"leverage"),unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(r.stringAbs(i)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liq_price"),markPrice:this.safeNumber(e,"mark_price"),collateral:this.safeNumber(e,"margin"),marginMode:d,side:a,percentage:this.parseNumber(f)}}async fetchPositions(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchPositions",void 0,t),[r,a]=this.prepareRequest(void 0,s,i),n=this.getSupportedMapping(s,{swap:"privateFuturesGetSettlePositions",future:"privateDeliveryGetSettlePositions"}),o=await this[n](this.extend(r,a));return this.parsePositions(o,e)}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t),[r,a]=this.prepareRequest(void 0,s,i);if("future"!==s&&"swap"!==s)throw new o(this.id+" fetchLeverageTiers only supports swap and future");const n=this.getSupportedMapping(s,{swap:"publicFuturesGetSettleContracts",future:"publicDeliveryGetSettleContracts"}),c=await this[n](this.extend(r,a));return this.parseLeverageTiers(c,e,"name")}parseMarketLeverageTiers(e,t){const s=this.safeString(e,"maintenance_rate"),i=this.safeString(e,"leverage_max"),a=this.safeString(e,"risk_limit_step"),n=this.safeString(e,"risk_limit_max"),o=r.stringDiv("1",i);let c=s,d=o,h="0";const l=[];for(;r.stringLt(h,n);){const i=r.stringAdd(h,a);l.push({tier:this.parseNumber(r.stringDiv(i,a)),currency:this.safeString(t,"settle"),minNotional:this.parseNumber(h),maxNotional:this.parseNumber(i),maintenanceMarginRate:this.parseNumber(c),maxLeverage:this.parseNumber(r.stringDiv("1",d)),info:e}),c=r.stringAdd(c,s),d=r.stringAdd(d,o),h=i}return l}async repayMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e);let a;void 0!==s&&(a=this.market(s));const n={currency:r.id,amount:this.currencyToPrecision(e,t)},o=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),d=this.safeString(i,"marginMode",o);let h="privateMarginPostCrossRepayments";if("isolated"===d){if(void 0===s)throw new c(this.id+" repayMargin() requires a symbol argument for isolated margin");const e=this.safeString(i,"mode");if(void 0===e)throw new c(this.id+" repayMargin() requires a mode parameter for isolated margin");const t=this.safeString2(i,"loan_id","id");if(void 0===t)throw new c(this.id+" repayMargin() requires an id parameter for isolated margin");h="privateMarginPostLoansLoanIdRepayment",n.currency_pair=a.id,n.mode=e,n.loan_id=t}i=this.omit(i,["marginMode","mode","loan_id","id"]);let l=await this[h](this.extend(n,i));return"cross"===d&&(l=l[0]),this.parseMarginLoan(l,r)}async borrowMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e);let a;void 0!==s&&(a=this.market(s),s=a.symbol);const n={currency:r.id,amount:this.currencyToPrecision(e,t)},o=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");let d="privateMarginPostCrossLoans";if("isolated"===this.safeString(i,"marginMode",o)){if(void 0===s)throw new c(this.id+" borrowMargin() requires a symbol argument for isolated margin");n.currency_pair=a.id;const e=this.safeString(i,"rate");if(void 0===e)throw new c(this.id+" borrowMargin() requires a rate parameter for isolated margin");n.rate=e,n.side="borrow",d="privateMarginPostLoans"}i=this.omit(i,["marginMode","rate"]);const h=await this[d](this.extend(n,i));return this.parseMarginLoan(h,r)}parseMarginLoan(e,t){const s=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");let i=this.safeInteger(e,"create_time");"isolated"===s&&(i=this.safeTimestamp(e,"create_time"));const r=this.safeString(e,"currency"),a=this.safeString(e,"currency_pair");return{id:this.safeInteger(e,"id"),currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"amount"),symbol:this.safeSymbol(a,void 0),timestamp:i,datetime:this.iso8601(i),info:e}}sign(e,t=[],s="GET",i={},r,a){const n=t[0],o=t[1];let c=this.omit(i,this.extractParams(e));const d="/"+o+(""===(e=this.implodeParams(e,i))?"":"/"+e);let h=this.urls.api[n][o];if(void 0===h)throw new b(this.id+" does not have a testnet for the "+o+" market type.");if(h+=d,"public"===n)Object.keys(c).length&&(h+="?"+this.urlencode(c));else{let e="";if("GET"===s||"DELETE"===s)Object.keys(c).length&&(e=this.urlencode(c),h+="?"+e);else{const t=this.safeValue(c,"query",{});Object.keys(t).length&&(e=this.urlencode(t),h+="?"+e),c=this.omit(c,"query"),a=this.json(c)}const t=void 0===a?"":a,i=this.hash(this.encode(t),"sha512"),n=this.seconds().toString(),o="/api/"+this.version+d,l=[s.toUpperCase(),o,e,i,n].join("\n"),u=this.hmac(this.encode(l),this.encode(this.secret),"sha512");r={KEY:this.apiKey,Timestamp:n,SIGN:u,"Content-Type":"application/json"}}return{url:h,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0===o)return;const h=this.safeString(o,"label");if(void 0!==h){const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new n(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],206:[function(e,t,s){"use strict";const i=e("./gate.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"gateio",alias:!0})}}},{"./gate.js":205}],207:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadRequest:n,OrderNotFound:o,InvalidOrder:c,InvalidNonce:d,InsufficientFunds:h,AuthenticationError:l,PermissionDenied:u,NotSupported:f,OnMaintenance:p,RateLimitExceeded:m,ExchangeNotAvailable:g}=e("./base/errors"),{TICK_SIZE:y}=e("./base/functions/number"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"gemini",name:"Gemini",countries:["US"],rateLimit:100,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:void 0,fetchDepositAddress:void 0,fetchDepositAddressesByNetwork:!0,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchWithdrawals:void 0,postOnly:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg",api:{public:"https://api.gemini.com",private:"https://api.gemini.com",web:"https://docs.gemini.com"},www:"https://gemini.com/",doc:["https://docs.gemini.com/rest-api","https://docs.sandbox.gemini.com"],test:{public:"https://api.sandbox.gemini.com",private:"https://api.sandbox.gemini.com",web:"https://docs.gemini.com"},fees:["https://gemini.com/api-fee-schedule","https://gemini.com/trading-fees","https://gemini.com/transfer-fees"]},api:{web:{get:["rest-api"]},public:{get:{"v1/symbols":5,"v1/symbols/details/{symbol}":5,"v1/pubticker/{symbol}":5,"v2/ticker/{symbol}":5,"v2/candles/{symbol}/{timeframe}":5,"v1/trades/{symbol}":5,"v1/auction/{symbol}":5,"v1/auction/{symbol}/history":5,"v1/pricefeed":5,"v1/book/{symbol}":5,"v1/earn/rates":5}},private:{post:{"v1/order/new":1,"v1/order/cancel":1,"v1/wrap/{symbol}":1,"v1/order/cancel/session":1,"v1/order/cancel/all":1,"v1/order/status":1,"v1/orders":1,"v1/mytrades":1,"v1/notionalvolume":1,"v1/tradevolume":1,"v1/clearing/new":1,"v1/clearing/status":1,"v1/clearing/cancel":1,"v1/clearing/confirm":1,"v1/balances":1,"v1/notionalbalances/{currency}":1,"v1/transfers":1,"v1/addresses/{network}":1,"v1/deposit/{network}/newAddress":1,"v1/deposit/{currency}/newAddress":1,"v1/withdraw/{currency}":1,"v1/account/transfer/{currency}":1,"v1/payments/addbank":1,"v1/payments/methods":1,"v1/payments/sen/withdraw":1,"v1/balances/earn":1,"v1/earn/interest":1,"v1/approvedAddresses/{network}/request":1,"v1/approvedAddresses/account/{network}":1,"v1/approvedAddresses/{network}/remove":1,"v1/account":1,"v1/account/create":1,"v1/account/list":1,"v1/heartbeat":1}}},precisionMode:y,fees:{trading:{taker:.004,maker:.002}},httpExceptions:{400:n,403:u,404:o,406:h,429:m,500:r,502:g,503:p},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1hr","6h":"6hr","1d":"1day"},exceptions:{exact:{AuctionNotOpen:n,ClientOrderIdTooLong:n,ClientOrderIdMustBeString:n,ConflictingOptions:n,EndpointMismatch:n,EndpointNotFound:n,IneligibleTiming:n,InsufficientFunds:h,InvalidJson:n,InvalidNonce:d,InvalidOrderType:c,InvalidPrice:c,InvalidQuantity:c,InvalidSide:c,InvalidSignature:l,InvalidSymbol:n,InvalidTimestampInPayload:n,Maintenance:p,MarketNotOpen:c,MissingApikeyHeader:l,MissingOrderField:c,MissingRole:l,MissingPayloadHeader:l,MissingSignatureHeader:l,NoSSL:l,OptionsMustBeArray:n,OrderNotFound:o,RateLimit:m,System:r,UnsupportedOption:n},broad:{"The Gemini Exchange is currently undergoing maintenance.":p,"We are investigating technical issues with the Gemini Exchange.":g}},options:{fetchMarketsMethod:"fetch_markets_from_web",fetchTickerMethod:"fetchTickerV1",networkIds:{bitcoin:"BTC",ethereum:"ERC20",bitcoincash:"BCH",litecoin:"LTC",zcash:"ZEC",filecoin:"FIL",dogecoin:"DOGE",tezos:"XTZ"},networks:{BTC:"bitcoin",ERC20:"ethereum",BCH:"bitcoincash",LTC:"litecoin",ZEC:"zcash",FIL:"filecoin",DOGE:"dogecoin",XTZ:"tezos"}}})}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarketsMethod","fetch_markets_from_api");return await this[t](e)}async fetchMarketsFromWeb(e={}){const t=(await this.webGetRestApi(e)).split('<h1 id="symbols-and-minimums">Symbols and minimums</h1>'),s=t.length,i=this.id+" fetchMarketsFromWeb() the "+this.name+" API doc HTML markup has changed, breaking the parser of order limits and precision info for "+this.name+" markets.";if(2!==s)throw new f(i);const r=t[1].split("tbody>");if(r.length<2)throw new f(i);const a=r[1].split("\n<tr>\n"),n=a.length;if(n<2)throw new f(i);const o=[];for(let e=1;e<n;e++){const t=a[e],s=t.split("</td>\n");if(s.length<5)throw new f(i);const r=s[0].replace("<td>",""),n=s[1].replace("<td>","").split(" "),c=this.safeNumber(n,0),d=s[2].replace("<td>","").split(" "),h=r.length-0,l=h-3,u=s[3].replace("<td>","").split(" "),p=this.safeStringLower(u,1,r.slice(l,h)),m=this.safeStringLower(d,1,r.replace(p,"")),g=this.safeCurrencyCode(m),y=this.safeCurrencyCode(p);o.push({id:r,symbol:g+"/"+y,base:g,quote:y,settle:void 0,baseId:m,quoteId:p,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(d,0),price:this.safeNumber(u,0)},limits:{leverage:{min:void 0,max:void 0},amount:{min:c,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return o}async fetchMarketsFromAPI(e={}){const t=await this.publicGetV1Symbols(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=i,a=i.length-0,n=i.slice(0,a-3),o=i.slice(a-3,a),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);s.push({id:i,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:void 0,amount:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:r})}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);const a=await this.publicGetV1BookSymbol(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","price","amount")}async fetchTickerV1(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetV1PubtickerSymbol(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickerV2(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetV2TickerSymbol(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickerV1AndV2(e,t={}){const s=await this.fetchTickerV1(e,t),i=await this.fetchTickerV2(e,t);return this.deepExtend(s,{open:i.open,high:i.high,low:i.low,change:i.change,percentage:i.percentage,average:i.average,info:i.info})}async fetchTicker(e,t={}){const s=this.safeValue(this.options,"fetchTickerMethod","fetchTickerV1");return await this[s](e,t)}parseTicker(e,t){const s=this.safeValue(e,"volume",{}),i=this.safeInteger(s,"timestamp");let r;const a=this.safeStringLower(e,"pair");let n,o,c,d;if(t=this.safeMarket(a,t),void 0!==a&&void 0===t){7===a.length-0?(n=a.slice(0,4),o=a.slice(4,7)):(n=a.slice(0,3),o=a.slice(3,6)),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),r=c+"/"+d}void 0===r&&void 0!==t&&(r=t.symbol,n=this.safeStringUpper(t,"baseId"),o=this.safeStringUpper(t,"quoteId"));const h=this.safeString(e,"price"),l=this.safeString2(e,"last","close",h),u=this.safeString(e,"percentChange24h"),f=this.safeString(e,"open"),p=this.safeString(s,n),m=this.safeString(s,o);return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:f,close:l,last:l,previousClose:void 0,change:void 0,percentage:u,average:void 0,baseVolume:p,quoteVolume:m,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetV1Pricefeed(t);return this.parseTickers(s,e)}parseTrade(e,t){const s=this.safeInteger(e,"timestampms"),i=this.safeString(e,"tid"),r=this.safeString(e,"order_id"),a=this.safeString(e,"fee_currency"),n=this.safeCurrencyCode(a),o={cost:this.safeString(e,"fee_amount"),currency:n},c=this.safeString(e,"price"),d=this.safeString(e,"amount"),h=this.safeStringLower(e,"type"),l=this.safeSymbol(void 0,t);return this.safeTrade({id:i,order:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:l,type:void 0,side:h,takerOrMaker:void 0,price:c,cost:void 0,amount:d,fee:o},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetV1TradesSymbol(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.total=this.safeString(i,"amount"),t[a]=n}return this.safeBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostV1Notionalvolume(e),s=this.safeString(t,"api_maker_fee_bps"),i=this.safeString(t,"api_taker_fee_bps"),r=b.stringDiv(s,"10000"),a=b.stringDiv(i,"10000"),n=this.parseNumber(r),o=this.parseNumber(a),c={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];c[s]={info:t,symbol:s,maker:n,taker:o,percentage:!0,tierBased:!0}}return c}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostV1Balances(e);return this.parseBalance(t)}parseOrder(e,t){const s=this.safeInteger(e,"timestampms"),i=this.safeString(e,"original_amount"),r=this.safeString(e,"remaining_amount"),a=this.safeString(e,"executed_amount");let n="closed";e.is_live&&(n="open"),e.is_cancelled&&(n="canceled");const o=this.safeString(e,"price"),c=this.safeString(e,"avg_execution_price");let d=this.safeString(e,"type");d="exchange limit"===d?"limit":"market buy"===d||"market sell"===d?"market":e.type;const h=this.safeString(e,"symbol"),l=this.safeSymbol(h,t),u=this.safeString(e,"order_id"),f=this.safeStringLower(e,"side"),p=this.safeString(e,"client_order_id"),m=this.safeValue(e,"options",[]),g=this.safeString(m,0);let y="GTC",b=!1;return void 0!==g&&("immediate-or-cancel"===g?y="IOC":"fill-or-kill"===g?y="FOK":"maker-or-cancel"===g&&(y="PO",b=!0)),this.safeOrder({id:u,clientOrderId:p,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:n,symbol:l,type:d,timeInForce:y,postOnly:b,side:f,price:o,stopPrice:void 0,average:c,cost:void 0,amount:i,filled:a,remaining:r,fee:undefined,trades:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privatePostV1OrderStatus(this.extend(i,s));return this.parseOrder(r)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=await this.privatePostV1Orders(i);let a;return void 0!==e&&(a=this.market(e)),this.parseOrders(r,a,t,s)}async createOrder(e,t,s,i,n,o={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" createOrder() allows limit orders only");let c=this.safeString2(o,"clientOrderId","client_order_id");o=this.omit(o,["clientOrderId","client_order_id"]),void 0===c&&(c=this.nonce());const d=this.market(e),h=this.amountToPrecision(e,i),l=this.priceToPrecision(e,n),u={client_order_id:c.toString(),symbol:d.id,amount:h,price:l,side:s,type:"exchange limit"};t=this.safeString(o,"type",t),o=this.omit(o,"type");const f=this.safeString2(o,"stop_price","stopPrice");if(o=this.omit(o,["stop_price","stopPrice","type"]),"stopLimit"===t)throw new a(this.id+" createOrder() requires a stopPrice parameter or a stop_price parameter for "+t+" orders");if(void 0!==f)u.stop_price=this.priceToPrecision(e,f),u.type="exchange stop limit";else{const e=this.safeString(o,"timeInForce");o=this.omit(o,"timeInForce"),void 0!==e&&("IOC"===e||"immediate-or-cancel"===e?u.options=["immediate-or-cancel"]:"FOK"===e||"fill-or-kill"===e?u.options=["fill-or-kill"]:"PO"===e&&(u.options=["maker-or-cancel"]));const t=this.safeValue(o,"postOnly",!1);o=this.omit(o,"postOnly"),t&&(u.options=["maker-or-cancel"]);const s=this.safeString(o,"options");void 0!==s&&(u.options=[s])}const p=await this.privatePostV1OrderNew(this.extend(u,o));return this.parseOrder(p)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privatePostV1OrderCancel(this.extend(i,s));return this.parseOrder(r)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id};void 0!==s&&(n.limit_trades=s),void 0!==t&&(n.timestamp=parseInt(t/1e3));const o=await this.privatePostV1Mytrades(this.extend(n,i));return this.parseTrades(o,r,t,s)}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e),o={currency:n.id,amount:t,address:s},c=await this.privatePostV1WithdrawCurrency(this.extend(o,a));if("error"===this.safeString(c,"result"))throw new r(this.id+" withdraw() failed: "+this.json(c));return this.parseTransaction(c,n)}nonce(){return this.milliseconds()}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.limit_transfers=s),void 0!==t&&(r.timestamp=t);const a=await this.privatePostV1Transfers(this.extend(r,i));return this.parseTransactions(a)}parseTransaction(e,t){const s=this.safeInteger(e,"timestampms"),i=this.safeString(e,"currency"),r=this.safeCurrencyCode(i,t),a=this.safeString(e,"destination"),n=this.safeStringLower(e,"type"),o=this.safeString(e,"status");let c;const d=this.safeNumber(e,"feeAmount");return void 0!==d&&(c={cost:d,currency:r}),{info:e,id:this.safeString2(e,"eid","withdrawalId"),txid:this.safeString(e,"txHash"),timestamp:s,datetime:this.iso8601(s),network:void 0,address:a,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:n,amount:this.safeNumber(e,"amount"),currency:r,status:this.parseTransactionStatus(o),updated:void 0,fee:c}}parseTransactionStatus(e){return this.safeString({Advanced:"ok",Complete:"ok"},e,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address");return{currency:this.safeCurrencyCode(void 0,t),network:void 0,address:s,tag:void 0,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s=this.safeString(t,"network");if(void 0===s)throw new a(this.id+" fetchDepositAddressesByNetwork() requires a network parameter");t=this.omit(t,"network");const i=this.safeValue(this.options,"networks",{}),r=this.safeString(i,s,s),n=this.safeValue(this.options,"networkIds",{}),o=this.safeString(n,r,s),c={network:r},d=await this.privatePostV1AddressesNetwork(this.extend(c,t)),h=this.parseDepositAddresses(d,[e],!1,{network:o,currency:e});return this.groupBy(h,"network")}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();if(this.apiKey.indexOf("account")<0)throw new l(this.id+" sign() requires an account-key, master-keys are not-supported");const e=this.nonce(),t=this.extend({request:n,nonce:e},o);let s=this.json(t);s=this.stringToBase64(s);const i=this.hmac(s,this.encode(this.secret),"sha384");r={"Content-Type":"text/plain","X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":this.decode(s),"X-GEMINI-SIGNATURE":i}}else Object.keys(o).length&&(n+="?"+this.urlencode(o));return n=this.urls.api[t]+n,"POST"!==s&&"DELETE"!==s||(a=this.json(o)),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o){if("string"==typeof n){const e=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,e)}return}if("error"===this.safeString(o,"result")){const e=this.safeString(o,"reason"),t=this.safeString(o,"message"),s=this.id+" "+t;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r(s)}}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privatePostV1DepositCurrencyNewAddress(this.extend(s,t)),r=this.safeString(i,"address");return this.checkAddress(r),{currency:e,address:r,tag:void 0,info:i}}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={timeframe:this.timeframes[t],symbol:a.id},o=await this.publicGetV2CandlesSymbolTimeframe(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],208:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,PermissionDenied:a,ExchangeError:n,ExchangeNotAvailable:o,OrderNotFound:c,InsufficientFunds:d,InvalidOrder:h,RequestTimeout:l,AuthenticationError:u}=e("./base/errors"),{TRUNCATE:f,TICK_SIZE:p}=e("./base/functions/number"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"hitbtc",name:"HitBTC",countries:["HK"],rateLimit:3.333,version:"2",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,fetchWithdrawals:void 0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",test:{public:"https://api.demo.hitbtc.com",private:"https://api.demo.hitbtc.com"},api:{public:"https://api.hitbtc.com",private:"https://api.hitbtc.com"},www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:["https://api.hitbtc.com/v2"],fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:{currency:3,"currency/{currency}":3,symbol:3,"symbol/{symbol}":3,ticker:3,"ticker/{symbol}":3,trades:3,"trades/{symbol}":3,orderbook:3,"orderbook/{symbol}":3,candles:3,"candles/{symbol}":3}},private:{get:{"trading/balance":15.0015,order:15.0015,"order/{clientOrderId}":15.0015,"trading/fee/all":15.0015,"trading/fee/{symbol}":15.0015,"margin/account":15.0015,"margin/account/{symbol}":15.0015,"margin/position":15.0015,"margin/position/{symbol}":15.0015,"margin/order":15.0015,"margin/order/{clientOrderId}":15.0015,"history/order":15.0015,"history/trades":15.0015,"history/order/{orderId}/trades":15.0015,"account/balance":15.0015,"account/crypto/address/{currency}":15.0015,"account/crypto/addresses/{currency}":15.0015,"account/crypto/used-addresses/{currency}":15.0015,"account/crypto/estimate-withdraw":15.0015,"account/crypto/is-mine/{address}":15.0015,"account/transactions":15.0015,"account/transactions/{id}":15.0015,"sub-acc":15.0015,"sub-acc/acl":15.0015,"sub-acc/balance/{subAccountUserID}":15.0015,"sub-acc/deposit-address/{subAccountUserId}/{currency}":15.0015},post:{order:1,"margin/order":1,"account/crypto/address/{currency}":1,"account/crypto/withdraw":1,"account/crypto/transfer-convert":1,"account/transfer":1,"account/transfer/internal":1,"sub-acc/freeze":1,"sub-acc/activate":1,"sub-acc/transfer":1},put:{"order/{clientOrderId}":1,"margin/account/{symbol}":1,"margin/order/{clientOrderId}":1,"account/crypto/withdraw/{id}":1,"sub-acc/acl/{subAccountUserId}":1},delete:{order:1,"order/{clientOrderId}":1,"margin/account":1,"margin/account/{symbol}":1,"margin/position":1,"margin/position/{symbol}":1,"margin/order":1,"margin/order/{clientOrderId}":1,"account/crypto/withdraw/{id}":1},patch:{"order/{clientOrderId}":1}}},precisionMode:p,fees:{trading:{tierBased:!1,percentage:!0,maker:.001,taker:.002}},options:{networks:{ETH:"T20",ERC20:"T20",TRX:"TTRX",TRC20:"TTRX",OMNI:""},defaultTimeInForce:"FOK",accountsByType:{funding:"bank",spot:"exchange"},fetchBalanceMethod:{account:"account",bank:"account",main:"account",funding:"account",exchange:"trading",spot:"trading",trade:"trading",trading:"trading"}},commonCurrencies:{AUTO:"Cube",BCC:"BCC",BDP:"BidiPass",BET:"DAO.Casino",BIT:"BitRewards",BOX:"BOX Token",CPT:"Cryptaur",GET:"Themis",GMT:"GMT Token",HSR:"HC",IQ:"IQ.Cash",LNC:"LinkerCoin",PLA:"PlayChip",PNT:"Penta",SBTC:"Super Bitcoin",STEPN:"GMT",STX:"STOX",TV:"Tokenville",USD:"USDT",XMT:"MTL",XPNT:"PNT"},exceptions:{504:l,1002:u,1003:a,2010:h,2001:r,2011:h,2020:h,20002:c,20001:d,20010:r,20045:h}})}feeToPrecision(e,t){return this.decimalToPrecision(t,f,1e-8,p)}async fetchMarkets(e={}){const t=await this.publicGetSymbol(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"baseCurrency"),n=this.safeString(i,"quoteCurrency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);let d=o+"/"+c;r.indexOf("_")>=0&&(d=r);const h=this.safeString(i,"quantityIncrement"),l=this.safeString(i,"tickSize"),u=this.parseNumber(h),f=this.parseNumber(l),p=this.safeString(i,"feeCurrency");s.push(this.extend(this.fees.trading,{id:r,symbol:d,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(i,"takeLiquidityRate"),maker:this.safeNumber(i,"provideLiquidityRate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,feeCurrency:this.safeCurrencyCode(p),precision:{amount:u,price:f},limits:{leverage:{min:void 0,max:void 0},amount:{min:u,max:void 0},price:{min:f,max:void 0},cost:{min:this.parseNumber(m.stringMul(h,l)),max:void 0}},info:i}))}return s}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),o=this.currencyToPrecision(e,t),c={currency:a.id,amount:o};let d=this.safeString(r,"type");if(void 0===d){const e=this.safeValue(this.options,"accountsByType",{}),t=this.safeString(e,s,s),r=this.safeString(e,i,i);if(t===r)throw new n(this.id+" transfer() from and to cannot be the same account");d=t+"To"+this.capitalize(r)}c.type=d;const h=await this.privatePostAccountTransfer(this.extend(c,r)),l=this.parseTransfer(h,a);return this.extend(l,{fromAccount:s,toAccount:i,amount:this.parseNumber(o)})}parseTransfer(e,t){const s=this.milliseconds();return{id:this.safeString(e,"id"),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async fetchCurrencies(e={}){const t=await this.publicGetCurrency(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"precisionTransfer","8"),n=this.parseNumber(a),o=this.safeCurrencyCode(r),c=this.safeValue(i,"payinEnabled"),d=this.safeValue(i,"payoutEnabled"),h=this.safeValue(i,"transferEnabled");let l=c&&d&&h;"disabled"in i&&i.disabled&&(l=!1);let u="fiat";"crypto"in i&&i.crypto&&(u="crypto");const f=this.safeString(i,"fullName");s[o]={id:r,code:o,type:u,payin:c,payout:d,transfer:h,info:i,name:f,active:l,deposit:c,withdraw:d,fee:this.safeNumber(i,"payoutFee"),precision:this.parseNumber(this.parsePrecision(a)),limits:{amount:{min:1/Math.pow(10,n),max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.safeNumber(e,"provideLiquidityRate"),taker:this.safeNumber(e,"takeLiquidityRate"),percentage:!0,tierBased:!0}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.privateGetTradingFeeSymbol(i);return this.parseTradingFee(r,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"type","trading"),s=this.safeValue(this.options,"fetchBalanceMethod",{}),i=this.safeString(s,t);if(void 0===i)throw new n(this.id+" fetchBalance() account type must be either main or trading");const r="privateGet"+this.capitalize(i)+"Balance",a=this.omit(e,"type"),o=await this[r](a);return this.parseBalance(o)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"max"),this.safeNumber(e,"min"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.timeframes[t]};void 0!==s&&(n.from=this.iso8601(s)),void 0!==i&&(n.limit=i);const o=await this.publicGetCandlesSymbol(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderbookSymbol(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bid","ask","price","size")}parseTicker(e,t){const s=this.parse8601(e.timestamp),i=this.safeSymbol(void 0,t),r=this.safeString(e,"volume"),a=this.safeString(e,"volumeQuote"),n=this.safeString(e,"open"),o=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:a,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r);i[a.symbol]=this.parseTicker(t,a)}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTickerSymbol(this.extend(i,t));if("message"in r)throw new n(this.id+" "+r.message);return this.parseTicker(r,s)}parseTrade(e,t){const s=this.parse8601(e.timestamp),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t)).symbol;let a;const n=this.safeString(e,"fee");if(void 0!==n){a={cost:n,currency:t?t.feeCurrency:void 0}}const o=this.safeString(e,"clientOrderId"),c=this.safeString(e,"price"),d=this.safeString(e,"quantity"),h=this.safeString(e,"side"),l=this.safeString(e,"id");return this.safeTrade({info:e,id:l,order:o,timestamp:s,datetime:this.iso8601(s),symbol:r,type:void 0,side:h,takerOrMaker:void 0,price:c,amount:d,cost:void 0,fee:a},t)}async fetchTransactions(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.asset=r.id),void 0!==t&&(a.startTime=t);const n=await this.privateGetAccountTransactions(this.extend(a,i));return this.parseTransactions(n,r,t,s)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"createdAt")),r=this.parse8601(this.safeString(e,"updatedAt")),a=this.safeString(e,"currency"),n=this.safeCurrencyCode(a,t),o=this.parseTransactionStatus(this.safeString(e,"status")),c=this.safeNumber(e,"amount"),d=this.safeString(e,"address"),h=this.safeString(e,"hash");let l;const u=this.safeNumber(e,"fee");void 0!==u&&(l={cost:u,currency:n});const f=this.parseTransactionType(this.safeString(e,"type"));return{info:e,id:s,txid:h,timestamp:i,datetime:this.iso8601(i),network:void 0,address:d,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:f,amount:c,currency:n,status:o,updated:r,fee:l}}parseTransactionStatus(e){return this.safeString({pending:"pending",failed:"failed",success:"ok"},e,e)}parseTransactionType(e){return this.safeString({payin:"deposit",payout:"withdrawal",withdraw:"withdrawal"},e,e)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s),void 0!==t&&(a.sort="ASC",a.from=this.iso8601(t));const n=await this.publicGetTradesSymbol(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o=this.uuid().split("-").join("");o=o.slice(0,32),i=parseFloat(i);const c={clientOrderId:o,symbol:n.id,side:s,quantity:this.amountToPrecision(e,i),type:t};"limit"===t?c.price=this.priceToPrecision(e,r):c.timeInForce=this.options.defaultTimeInForce;const d=await this.privatePostOrder(this.extend(c,a)),l=this.parseOrder(d);if("rejected"===l.status)throw new h(this.id+" order was rejected by the exchange "+this.json(l));return l}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();let o=this.uuid().split("-").join("");o=o.slice(0,32);const c={clientOrderId:e,requestClientId:o};void 0!==r&&(c.quantity=this.amountToPrecision(t,r)),void 0!==a&&(c.price=this.priceToPrecision(t,a));const d=await this.privatePatchOrderClientOrderId(this.extend(c,n));return this.parseOrder(d)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={clientOrderId:e},r=await this.privateDeleteOrderClientOrderId(this.extend(i,s));return this.parseOrder(r)}parseOrderStatus(e){return this.safeString({new:"open",suspended:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",expired:"failed"},e,e)}parseOrder(e,t){const s=this.parse8601(this.safeString(e,"createdAt")),i=this.parse8601(this.safeString(e,"updatedAt")),r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.safeString(e,"quantity"),o=this.safeString(e,"cumQuantity"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"clientOrderId"),h=d,l=this.safeString(e,"price"),u=this.safeString(e,"type"),f=this.safeString(e,"side"),p=this.safeValue(e,"tradesReport"),m=this.safeString(e,"avgPrice"),g=this.safeString(e,"timeInForce");return this.safeOrder({id:d,clientOrderId:h,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:i,status:c,symbol:a,type:u,timeInForce:g,side:f,price:l,stopPrice:void 0,average:m,amount:n,cost:void 0,filled:o,remaining:void 0,fee:undefined,trades:p,info:e},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={clientOrderId:e},r=await this.privateGetHistoryOrder(this.extend(i,s));if(r.length>0)return this.parseOrder(r[0]);throw new c(this.id+" order "+e+" not found")}async fetchOpenOrder(e,t,s={}){await this.loadMarkets();const i={clientOrderId:e},r=await this.privateGetOrderClientOrderId(this.extend(i,s));return this.parseOrder(r)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);const n=await this.privateGetOrder(this.extend(a,i));return this.parseOrders(n,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.limit=s),void 0!==t&&(a.from=this.iso8601(t));const n=await this.privateGetHistoryOrder(this.extend(a,i)),o=this.parseOrders(n,r),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=t.status;"closed"!==s&&"canceled"!==s||c.push(t)}return this.filterBySinceLimit(c,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=this.iso8601(t)),void 0!==s&&(r.limit=s);const n=await this.privateGetHistoryTrades(this.extend(r,i));return this.parseTrades(n,a,t,s)}async fetchOrderTrades(e,t,s,i,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={orderId:e},o=await this.privateGetHistoryOrderOrderIdTrades(this.extend(n,r));if(o.length>0)return this.parseTrades(o,a,s,i);throw new c(this.id+" order "+e+" not found, "+this.id+'.fetchOrderTrades() requires an exchange-specific order id, you need to grab it from order["info"]["id"]')}async createDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privatePostAccountCryptoAddressCurrency(this.extend(i,t)),a=this.safeString(r,"address");this.checkAddress(a);return{currency:s,address:a,tag:this.safeString(r,"paymentId"),info:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=this.safeString(t,"network");if(void 0!==r){t=this.omit(t,"network");const e=this.safeValue(this.options,"networks"),s=this.safeString(e,r,r);i.currency+=s}const a=await this.privateGetAccountCryptoAddressCurrency(this.extend(i,t)),n=this.safeString(a,"address");this.checkAddress(n);const o=this.safeString(a,"paymentId");return{currency:s.code,address:n,tag:o,network:void 0,info:a}}async convertCurrencyNetwork(e,t,s,i,r){await this.loadMarkets();const a=this.currency(e),o=this.safeValue(this.options,"networks",{});if((s=this.safeString(o,s,s))===(i=this.safeString(o,i,i)))throw new n(this.id+" convertCurrencyNetwork() fromNetwork cannot be the same as toNetwork");const c={fromCurrency:a.id+s,toCurrency:a.id+i,amount:parseFloat(this.currencyToPrecision(e,t))};return{info:await this.privatePostAccountCryptoTransferConvert(this.extend(c,r))}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={currency:a.id,amount:parseFloat(t),address:s};i&&(n.paymentId=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.currency+=c,r=this.omit(r,"network"));const d=await this.privatePostAccountCryptoWithdraw(this.extend(n,r));return this.parseTransaction(d,a)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/api/"+this.version+"/";const o=this.omit(i,this.extractParams(e));if("public"===t)n+=t+"/"+this.implodeParams(e,i),Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),n+=this.implodeParams(e,i),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o));const t=this.encode(this.apiKey+":"+this.secret),c=this.stringToBase64(t);r={Authorization:"Basic "+this.decode(c),"Content-Type":"application/json"}}return n=this.urls.api[t]+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,c,d,l){if(void 0!==c&&e>=400){const t=this.id+" "+a;if(503===e||504===e)throw new o(t);if(429===e)return;if("{"===a[0]&&"error"in c){const e=this.safeString(c.error,"code");this.throwExactlyMatchedException(this.exceptions,e,t);if("Duplicate clientOrderId"===this.safeString(c.error,"message"))throw new h(t)}throw new n(t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],209:[function(e,t,s){const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),a=e("./base/Precise"),{BadSymbol:n,BadRequest:o,OnMaintenance:c,AccountSuspended:d,PermissionDenied:h,ExchangeError:l,RateLimitExceeded:u,ExchangeNotAvailable:f,OrderNotFound:p,InsufficientFunds:m,InvalidOrder:g,AuthenticationError:y,ArgumentsRequired:b}=e("./base/errors");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"hitbtc3",name:"HitBTC",countries:["HK"],rateLimit:3.333,version:"3",pro:!0,has:{CORS:!1,spot:!0,margin:!0,swap:!0,future:!1,option:void 0,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:void 0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchLeverage:!0,fetchLeverageTiers:void 0,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPremiumIndexOHLCV:!0,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},precisionMode:r,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",test:{public:"https://api.demo.hitbtc.com",private:"https://api.demo.hitbtc.com"},api:{public:"https://api.hitbtc.com/api/3",private:"https://api.hitbtc.com/api/3"},www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:["https://api.hitbtc.com","https://github.com/hitbtc-com/hitbtc-api/blob/master/APIv2.md"],fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:{"public/currency":10,"public/symbol":10,"public/ticker":10,"public/price/rate":10,"public/trades":10,"public/orderbook":10,"public/candles":10,"public/futures/info":10,"public/futures/history/funding":10,"public/futures/candles/index_price":10,"public/futures/candles/mark_price":10,"public/futures/candles/premium_index":10,"public/futures/candles/open_interest":10}},private:{get:{"spot/balance":15,"spot/order":15,"spot/order/{client_order_id}":15,"spot/fee":15,"spot/fee/{symbol}":15,"spot/history/order":15,"spot/history/trade":15,"margin/account":15,"margin/account/isolated/{symbol}":15,"margin/order":15,"margin/order/{client_order_id}":15,"margin/history/clearing":15,"margin/history/order":15,"margin/history/positions":15,"margin/history/trade":15,"futures/balance":15,"futures/account":15,"futures/account/isolated/{symbol}":15,"futures/order":15,"futures/order/{client_order_id}":15,"futures/fee":15,"futures/fee/{symbol}":15,"futures/history/clearing":15,"futures/history/order":15,"futures/history/positions":15,"futures/history/trade":15,"wallet/balance":15,"wallet/crypto/address":15,"wallet/crypto/address/recent-deposit":15,"wallet/crypto/address/recent-withdraw":15,"wallet/crypto/address/check-mine":15,"wallet/transactions":15,"wallet/crypto/check-offchain-available":15,"wallet/crypto/fee/estimate":15,"sub-account":15,"sub-account/acl":15,"sub-account/balance/{subAccID}":15,"sub-account/crypto/address/{subAccID}/{currency}":15},post:{"spot/order":1,"margin/order":1,"futures/order":1,"wallet/convert":15,"wallet/crypto/address":15,"wallet/crypto/withdraw":15,"wallet/transfer":15,"sub-account/freeze":15,"sub-account/activate":15,"sub-account/transfer":15,"sub-account/acl":15},patch:{"spot/order/{client_order_id}":1,"margin/order/{client_order_id}":1,"futures/order/{client_order_id}":1},delete:{"spot/order":1,"spot/order/{client_order_id}":1,"margin/position":1,"margin/position/isolated/{symbol}":1,"margin/order":1,"margin/order/{client_order_id}":1,"futures/position":1,"futures/position/isolated/{symbol}":1,"futures/order":1,"futures/order/{client_order_id}":1,"wallet/crypto/withdraw/{id}":1},put:{"margin/account/isolated/{symbol}":1,"futures/account/isolated/{symbol}":1,"wallet/crypto/withdraw/{id}":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0009"),maker:this.parseNumber("0.0009"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0009")],[this.parseNumber("10"),this.parseNumber("0.0007")],[this.parseNumber("100"),this.parseNumber("0.0006")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0003")],[this.parseNumber("5000"),this.parseNumber("0.0002")],[this.parseNumber("10000"),this.parseNumber("0.0001")],[this.parseNumber("20000"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.0001")],[this.parseNumber("100000"),this.parseNumber("-0.0001")]],taker:[[this.parseNumber("0"),this.parseNumber("0.0009")],[this.parseNumber("10"),this.parseNumber("0.0008")],[this.parseNumber("100"),this.parseNumber("0.0007")],[this.parseNumber("500"),this.parseNumber("0.0007")],[this.parseNumber("1000"),this.parseNumber("0.0006")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0004")],[this.parseNumber("50000"),this.parseNumber("0.0003")],[this.parseNumber("100000"),this.parseNumber("0.0002")]]}}},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},exceptions:{exact:{429:u,500:l,503:f,504:f,600:h,800:l,1002:y,1003:h,1004:y,1005:y,2001:n,2002:o,2003:o,2010:o,2011:o,2012:o,2020:o,2022:o,10001:o,10021:d,10022:o,20001:m,20002:p,20003:l,20004:l,20005:l,20006:l,20007:l,20008:g,20009:g,20010:c,20011:l,20012:l,20014:l,20016:l,20031:l,20032:l,20033:l,20034:l,20040:l,20041:l,20042:l,20043:l,20044:h,20045:g,20080:l,21001:l,21003:d,21004:d},broad:{}},options:{networks:{ETH:"USDT20",ERC20:"USDT20",TRX:"USDTRX",TRC20:"USDTRX",OMNI:"USDT"},accountsByType:{spot:"spot",funding:"wallet",future:"derivatives"}},commonCurrencies:{AUTO:"Cube",BCC:"BCC",BDP:"BidiPass",BET:"DAO.Casino",BIT:"BitRewards",BOX:"BOX Token",CPT:"Cryptaur",GET:"Themis",GMT:"GMT Token",HSR:"HC",IQ:"IQ.Cash",LNC:"LinkerCoin",PLA:"PlayChip",PNT:"Penta",SBTC:"Super Bitcoin",STEPN:"GMT",STX:"STOX",TV:"Tokenville",USD:"USDT",XMT:"MTL",XPNT:"PNT"}})}nonce(){return this.milliseconds()}async fetchMarkets(e={}){const t=await this.publicGetPublicSymbol(e),s=[],i=Object.keys(t);for(let e=0;e<i.length;e++){const r=i[e],n=this.safeValue(t,r),o=this.safeString(n,"type"),c=this.safeInteger(n,"expiry"),d="futures"===o,h="spot"===o,l=this.safeValue(n,"margin_trading",!1),u=h&&l,f=void 0!==c,p=d&&!f,m=!1,g=this.safeString2(n,"base_currency","underlying"),y=this.safeString(n,"quote_currency"),b=this.safeString(n,"fee_currency"),v=this.safeCurrencyCode(g),w=this.safeCurrencyCode(y),S=this.safeCurrencyCode(b);let k,T,O,_,x,M=v+"/"+w,I="spot";d&&(O=this.parseNumber("1"),k=b,T=this.safeCurrencyCode(k),_=void 0!==w&&w===T,x=!_,M=M+":"+T,f?(M=M+"-"+c,I="future"):I="swap");const C=this.safeString(n,"quantity_increment"),P=this.safeString(n,"tick_size"),A=this.parseNumber(C),N=this.parseNumber(P);s.push({id:r,symbol:M,base:v,quote:w,settle:T,baseId:g,quoteId:y,settleId:k,type:I,spot:h,margin:u,swap:p,future:f,option:m,active:!0,contract:d,linear:_,inverse:x,taker:this.safeNumber(n,"take_rate"),maker:this.safeNumber(n,"make_rate"),contractSize:O,expiry:c,expiryDatetime:void 0,strike:void 0,optionType:void 0,feeCurrency:S,precision:{amount:A,price:N},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(n,"max_initial_leverage",1)},amount:{min:A,max:void 0},price:{min:N,max:void 0},cost:{min:this.parseNumber(a.stringMul(C,P)),max:void 0}},info:n})}return s}async fetchCurrencies(e={}){const t=await this.publicGetPublicCurrency(e),s={},i=Object.keys(t);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=t[r],o=this.safeString(n,"full_name"),c=this.safeNumber(n,"precision_transfer"),d=this.safeValue(n,"payin_enabled",!1),h=this.safeValue(n,"payout_enabled",!1),l=this.safeValue(n,"transfer_enabled",!1),u=d&&h&&l,f=this.safeValue(n,"networks",[]),p={};let m,g,y;for(let e=0;e<f.length;e++){const t=f[e],s=this.safeString2(t,"protocol","network"),i=this.safeNetwork(s);m=this.safeNumber(t,"payout_fee");const r=this.safeNumber(t,"precision_payout"),a=this.safeValue(n,"payin_enabled",!1),o=this.safeValue(n,"payout_enabled",!1),c=a&&o;a&&!g?g=!0:a||(g=!1),o&&!y?y=!0:o||(y=!1),p[i]={info:t,id:s,network:i,fee:m,active:c,deposit:a,withdraw:o,precision:r,limits:{withdraw:{min:void 0,max:void 0}}}}const b=Object.keys(p).length;s[a]={info:n,code:a,id:r,precision:c,name:o,active:u,deposit:g,withdraw:y,networks:p,fee:b<=1?m:void 0,limits:{amount:{min:void 0,max:void 0}}}}return s}safeNetwork(e){return void 0===e?void 0:e.toUpperCase()}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=this.safeStringUpper(t,"network");if(void 0!==i&&"USDT"===e){const e=this.safeValue(this.options,"networks"),r=this.safeString(e,i);void 0!==r&&(s.currency=r),t=this.omit(t,"network")}const r=await this.privatePostWalletCryptoAddress(this.extend(s,t)),a=this.safeString(r,"currency");return{currency:this.safeCurrencyCode(a),address:this.safeString(r,"address"),tag:this.safeString(r,"payment_id"),network:void 0,info:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=this.safeStringUpper(t,"network");if(void 0!==i&&"USDT"===e){const e=this.safeValue(this.options,"networks"),r=this.safeString(e,i);void 0!==r&&(s.currency=r),t=this.omit(t,"network")}const r=await this.privateGetWalletCryptoAddress(this.extend(s,t)),a=this.safeValue(r,0),n=this.safeString(a,"address"),o=this.safeString(a,"currency");return{info:r,address:n,tag:this.safeString(a,"payment_id"),code:this.safeCurrencyCode(o),network:void 0}}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeStringLower(e,"type","spot");e=this.omit(e,["type"]);const s=this.safeValue(this.options,"accountsByType",{}),i=this.safeString(s,t,t);let r;if("wallet"===i)r=await this.privateGetWalletBalance(e);else if("spot"===i)r=await this.privateGetSpotBalance(e);else{if("derivatives"!==i){const e=Object.keys(s);throw new o(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}r=await this.privateGetFuturesBalance(e)}return this.parseBalance(r)}async fetchTicker(e,t={}){const s=await this.fetchTickers([e],t);return this.safeValue(s,e)}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e).join(",");s.symbols=t}const i=await this.publicGetPublicTicker(this.extend(s,t)),r={},a=Object.keys(i);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeMarket(t),n=s.symbol,o=i[t];r[n]=this.parseTicker(o,s)}return this.filterByArray(r,"symbol",e)}parseTicker(e,t){const s=this.parse8601(e.timestamp),i=this.safeSymbol(void 0,t),r=this.safeString(e,"volume"),a=this.safeString(e,"volume_quote"),n=this.safeString(e,"open"),o=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:a,info:e},t)}async fetchTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbols=r.id),void 0!==s&&(a.limit=s),void 0!==t&&(a.from=t);const n=await this.publicGetPublicTrades(this.extend(a,i)),o=Object.keys(n);let c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.market(t),i=n[t],r=this.parseTrades(i,s);c=this.arrayConcat(c,r)}return c}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.limit=s),void 0!==t&&(a.from=t);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",r,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotHistoryTrade",swap:"privateGetFuturesHistoryTrade",margin:"privateGetMarginHistoryTrade"}),d=await this[c](this.extend(a,o));return this.parseTrades(d,r,t,s)}parseTrade(e,t){const s=this.parse8601(e.timestamp),i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t)).symbol;let a;const n=this.safeString(e,"fee"),o=this.safeValue(e,"taker");let c;if(void 0!==o&&(c=o?"taker":"maker"),void 0!==n){const e=this.safeValue(t,"info",{}),s=this.safeString(e,"fee_currency");a={cost:n,currency:this.safeCurrencyCode(s)}}const d=this.safeString(e,"clientOrderId"),h=this.safeString(e,"price"),l=this.safeString2(e,"quantity","qty"),u=this.safeString(e,"side"),f=this.safeString(e,"id");return this.safeTrade({info:e,id:f,order:d,timestamp:s,datetime:this.iso8601(s),symbol:r,type:void 0,side:u,takerOrMaker:c,price:h,amount:l,cost:void 0,fee:a},t)}async fetchTransactionsHelper(e,t,s,i,r){await this.loadMarkets();const a={types:e};let n;void 0!==t&&(n=this.currency(t),a.currencies=n.id),void 0!==s&&(a.from=this.iso8601(s)),void 0!==i&&(a.limit=i);const o=await this.privateGetWalletTransactions(this.extend(a,r));return this.parseTransactions(o,n,s,i,r)}parseTransactionStatus(e){return this.safeString({PENDING:"pending",FAILED:"failed",SUCCESS:"ok"},e,e)}parseTransactionType(e){return this.safeString({DEPOSIT:"deposit",WITHDRAW:"withdrawal"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"created_at")),r=this.parse8601(this.safeString(e,"updated_at")),a=this.parseTransactionType(this.safeString(e,"type")),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeValue(e,"native",{}),c=this.safeString(o,"currency"),d=this.safeCurrencyCode(c),h=this.safeString(o,"hash"),l=this.safeString(o,"address"),u=l,f=this.safeString(o,"payment_id"),p=f,m=this.safeValue(o,"senders"),g=this.safeString(m,0),y=this.safeNumber(o,"amount");let b;const v=this.safeNumber(o,"fee");return void 0!==v&&(b={code:d,cost:v}),{info:e,id:s,txid:h,code:d,amount:y,network:void 0,address:l,addressFrom:g,addressTo:u,tag:f,tagFrom:void 0,tagTo:p,timestamp:i,datetime:this.iso8601(i),updated:r,status:n,type:a,fee:b}}async fetchTransactions(e,t,s,i={}){return await this.fetchTransactionsHelper("DEPOSIT,WITHDRAW",e,t,s,i)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsHelper("DEPOSIT",e,t,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsHelper("WITHDRAW",e,t,s,i)}async fetchOrderBooks(e,t,s={}){await this.loadMarkets();const i={};if(void 0!==e){const t=this.marketIds(e);i.symbols=t.join(",")}void 0!==t&&(i.depth=t);const r=await this.publicGetPublicOrderbook(this.extend(i,s)),a={},n=Object.keys(r);for(let e=0;e<n.length;e++){const t=n[e],s=r[t],i=this.safeSymbol(t),o=this.parse8601(this.safeString(s,"timestamp"));a[i]=this.parseOrderBook(r[t],i,o,"bid","ask")}return a}async fetchOrderBook(e,t,s={}){return(await this.fetchOrderBooks([e],t,s))[e]}parseTradingFee(e,t){const s=this.safeNumber(e,"take_rate"),i=this.safeNumber(e,"make_rate"),r=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(r,t),taker:s,maker:i}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=this.getSupportedMapping(s.type,{spot:"privateGetSpotFeeSymbol",swap:"privateGetFuturesFeeSymbol"}),a=await this[r](this.extend(i,t));return this.parseTradingFee(a,s)}async fetchTradingFees(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTradingFees",void 0,t),r=this.getSupportedMapping(s,{spot:"privateGetSpotFee",swap:"privateGetFuturesFee"}),a=await this[r](i),n={};for(let e=0;e<a.length;e++){const t=this.parseTradingFee(a[e]);n[t.symbol]=t}return n}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbols:a.id,period:this.timeframes[t]};void 0!==s&&(n.from=this.iso8601(s)),void 0!==i&&(n.limit=i);const o=this.safeString(r,"price");r=this.omit(r,"price");let c="publicGetPublicCandles";"mark"===o?c="publicGetPublicFuturesCandlesMarkPrice":"index"===o?c="publicGetPublicFuturesCandlesIndexPrice":"premiumIndex"===o&&(c="publicGetPublicFuturesCandlesPremiumIndex");const d=await this[c](this.extend(n,r)),h=this.safeValue(d,a.id);return this.parseOHLCVs(h,a,t,s,i)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"max"),this.safeNumber(e,"min"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.from=this.iso8601(t)),void 0!==s&&(a.limit=s);const[n,o]=this.handleMarketTypeAndParams("fetchClosedOrders",r,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotHistoryOrder",swap:"privateGetFuturesHistoryOrder",margin:"privateGetMarginHistoryOrder"}),d=await this[c](this.extend(a,o)),h=this.parseOrders(d,r,t,s);return this.filterByArray(h,"status",["closed","canceled"],!1)}async fetchOrder(e,t,s={}){let i;await this.loadMarkets(),void 0!==t&&(i=this.market(t));const[r,a]=this.handleMarketTypeAndParams("fetchOrder",i,s),n=this.getSupportedMapping(r,{spot:"privateGetSpotHistoryOrder",swap:"privateGetFuturesHistoryOrder",margin:"privateGetMarginHistoryOrder"}),o={client_order_id:e},c=await this[n](this.extend(o,a)),d=this.safeValue(c,0);return this.parseOrder(d,i)}async fetchOrderTrades(e,t,s,i,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e},[o,c]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r),d=this.getSupportedMapping(o,{spot:"privateGetSpotHistoryTrade",swap:"privateGetFuturesHistoryTrade",margin:"privateGetMarginHistoryTrade"}),h=await this[d](this.extend(n,c));return this.parseTrades(h,a,s,i)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);const[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i),c=this.getSupportedMapping(n,{spot:"privateGetSpotOrder",swap:"privateGetFuturesOrder",margin:"privateGetMarginOrder"}),d=await this[c](this.extend(a,o));return this.parseOrders(d,r,t,s)}async fetchOpenOrder(e,t,s={}){let i;await this.loadMarkets(),void 0!==t&&(i=this.market(t));const[r,a]=this.handleMarketTypeAndParams("fetchOpenOrder",i,s),n=this.getSupportedMapping(r,{spot:"privateGetSpotOrderClientOrderId",swap:"privateGetFuturesOrderClientOrderId",margin:"privateGetMarginOrderClientOrderId"}),o={client_order_id:e},c=await this[n](this.extend(o,a));return this.parseOrder(c,i)}async cancelAllOrders(e,t={}){let s;await this.loadMarkets();const i={};void 0!==e&&(s=this.market(e),i.symbol=s.id);const[r,a]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),n=this.getSupportedMapping(r,{spot:"privateDeleteSpotOrder",swap:"privateDeleteFuturesOrder",margin:"privateDeleteMarginOrder"}),o=await this[n](this.extend(i,a));return this.parseOrders(o,s)}async cancelOrder(e,t,s={}){let i;await this.loadMarkets();const r={client_order_id:e};void 0!==t&&(i=this.market(t));const[a,n]=this.handleMarketTypeAndParams("cancelOrder",i,s),o=this.getSupportedMapping(a,{spot:"privateDeleteSpotOrderClientOrderId",swap:"privateDeleteFuturesOrderClientOrderId",margin:"privateDeleteMarginOrderClientOrderId"}),c=await this[o](this.extend(r,n));return this.parseOrder(c,i)}async editOrder(e,t,s,i,r,a,n={}){let o;await this.loadMarkets();const c={client_order_id:e,quantity:this.amountToPrecision(t,r)};if("limit"===s||"stopLimit"===s){if(void 0===a)throw new l(this.id+" editOrder() limit order requires price");c.price=this.priceToPrecision(t,a)}void 0!==t&&(o=this.market(t));const[d,h]=this.handleMarketTypeAndParams("editOrder",o,n),u=this.getSupportedMapping(d,{spot:"privatePatchSpotOrderClientOrderId",swap:"privatePatchFuturesOrderClientOrderId",margin:"privatePatchMarginOrderClientOrderId"}),f=await this[u](this.extend(c,h));return this.parseOrder(f,o)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={type:t,side:s,quantity:this.amountToPrecision(e,i),symbol:n.id},c=this.safeValue(a,"reduceOnly");if(void 0!==c&&"swap"!==n.type&&"margin"!==n.type)throw new g(this.id+" createOrder() does not support reduce_only for "+n.type+" orders, reduce_only orders are supported for swap and margin markets only");!0===c&&(o.reduce_only=c);const d=this.safeString2(a,"timeInForce","time_in_force"),h=this.safeString(a,"expire_time"),u=this.safeNumber2(a,"stopPrice","stop_price");if("limit"===t||"stopLimit"===t||"takeProfitLimit"===t){if(void 0===r)throw new l(this.id+" createOrder() requires a price argument for limit orders");o.price=this.priceToPrecision(e,r)}if("GTD"===d){if(void 0===h)throw new l(this.id+" createOrder() requires an expire_time parameter for a GTD order");o.expire_time=h}if("stopLimit"===t||"stopMarket"===t||"takeProfitLimit"===t||"takeProfitMarket"===t){if(void 0===u)throw new l(this.id+" createOrder() requires a stopPrice parameter for stop-loss and take-profit orders");o.stop_price=this.priceToPrecision(e,u)}const[f,p]=this.handleMarketTypeAndParams("createOrder",n,a),m=this.getSupportedMapping(f,{spot:"privatePostSpotOrder",swap:"privatePostFuturesOrder",margin:"privatePostMarginOrder"}),y=await this[m](this.extend(o,p));return this.parseOrder(y,n)}parseOrderStatus(e){return this.safeString({new:"open",suspended:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",expired:"failed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"client_order_id"),i=this.safeString(e,"side"),r=this.safeString(e,"type"),a=this.safeString(e,"quantity"),n=this.safeString(e,"price"),o=this.safeString(e,"price_average"),c=this.safeString(e,"created_at"),d=this.parse8601(c),h=this.safeString(e,"updated_at");let l;h!==c&&(l=this.parse8601(h));const u=this.safeString(e,"quantity_cumulative"),f=this.parseOrderStatus(this.safeString(e,"status")),p=this.safeString(e,"symbol"),m=(t=this.safeMarket(p,t)).symbol,g=this.safeValue(e,"post_only"),y=this.safeString(e,"time_in_force"),b=this.safeValue(e,"trades");return this.safeOrder({info:e,id:s,clientOrderId:s,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:l,symbol:m,price:n,amount:a,type:r,side:i,timeInForce:y,postOnly:g,reduceOnly:this.safeValue(e,"reduce_only"),filled:u,remaining:void 0,cost:void 0,status:f,average:o,trades:b,fee:void 0},t)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.currencyToPrecision(e,t),c=this.safeValue(this.options,"accountsByType",{});s=s.toLowerCase(),i=i.toLowerCase();const d=this.safeString(c,s,s),h=this.safeString(c,i,i);if(d===h)throw new o(this.id+" transfer() fromAccount and toAccount arguments cannot be the same account");const l={currency:a.id,amount:n,source:d,destination:h},u=await this.privatePostWalletTransfer(this.extend(l,r)),f=this.parseTransfer(u,a);return this.extend(f,{fromAccount:s,toAccount:i,amount:this.parseNumber(n)})}parseTransfer(e,t){const s=this.milliseconds();return{id:this.safeString(e,0),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async convertCurrencyNetwork(e,t,s,i,r){if(await this.loadMarkets(),"USDT"!==e)throw new l(this.id+" convertCurrencyNetwork() only supports USDT currently");const a=this.safeValue(this.options,"networks",{});if(s=s.toUpperCase(),i=i.toUpperCase(),(s=this.safeString(a,s))===(i=this.safeString(a,i)))throw new o(this.id+" convertCurrencyNetwork() fromNetwork cannot be the same as toNetwork");if(void 0===s||void 0===i){const e=Object.keys(a);throw new b(this.id+" convertCurrencyNetwork() requires a fromNetwork parameter and a toNetwork parameter, supported networks are "+e.join(", "))}const n={from_currency:s,to_currency:i,amount:this.currencyToPrecision(e,t)};return{info:await this.privatePostWalletConvert(this.extend(n,r))}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={currency:a.id,amount:t,address:s};void 0!==i&&(n.payment_id=i);const o=this.safeValue(this.options,"networks",{}),c=this.safeStringUpper(r,"network");if(void 0!==c&&"USDT"===e){const e=this.safeString(o,c);void 0!==e&&(n.currency=e),r=this.omit(r,"network")}const d=await this.privatePostWalletCryptoWithdraw(this.extend(n,r));return this.parseTransaction(d,a)}async fetchFundingRateHistory(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),e=r.symbol,a.symbols=r.id),void 0!==t&&(a.from=t),void 0!==s&&(a.limit=s);const n=await this.publicGetPublicFuturesHistoryFunding(this.extend(a,i)),o=Object.keys(n),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeMarket(t),i=n[t];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeSymbol(s.symbol),a=this.safeNumber(t,"funding_rate"),n=this.safeString(t,"timestamp");c.push({info:t,symbol:r,fundingRate:a,timestamp:this.parse8601(n),datetime:n})}}const d=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(d,e,t,s)}async fetchPositions(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchPositions",void 0,t),r=this.getSupportedMapping(s,{swap:"privateGetFuturesAccount",margin:"privateGetMarginAccount"}),a=await this[r](this.extend({},i)),n=[];for(let e=0;e<a.length;e++)n.push(this.parsePosition(a[e]));return n}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),[i,r]=this.handleMarketTypeAndParams("fetchPosition",s,t),a=this.getSupportedMapping(i,{swap:"privateGetFuturesAccountIsolatedSymbol",margin:"privateGetMarginAccountIsolatedSymbol"}),n={symbol:s.id},o=await this[a](this.extend(n,r));return this.parsePosition(o,s)}parsePosition(e,t){const s=this.safeString(e,"type"),i=this.safeNumber(e,"leverage"),r=this.safeString(e,"updated_at"),a=this.safeValue(e,"positions",[]);let n,o,c;for(let e=0;e<a.length;e++){const t=a[e];n=this.safeNumber(t,"price_liquidation"),o=this.safeNumber(t,"price_entry"),c=this.safeNumber(t,"quantity")}const d=this.safeValue(e,"currencies",[]);let h;for(let e=0;e<d.length;e++){const t=d[e];h=this.safeNumber(t,"margin_balance")}const l=this.safeString(e,"symbol");return{info:e,symbol:(t=this.safeMarket(l,t)).symbol,notional:void 0,marginMode:s,marginType:s,liquidationPrice:n,entryPrice:o,unrealizedPnl:void 0,percentage:void 0,contracts:c,contractSize:void 0,markPrice:void 0,side:void 0,hedged:void 0,timestamp:this.parse8601(r),datetime:r,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:h,initialMargin:void 0,initialMarginPercentage:void 0,leverage:i,marginRatio:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new n(this.id+" fetchFundingRate() supports swap contracts only");const i={};void 0!==e&&(e=s.symbol,i.symbols=s.id);const r=await this.publicGetPublicFuturesInfo(this.extend(i,t)),a=this.safeValue(r,s.id,{});return this.parseFundingRate(a,s)}parseFundingRate(e,t){const s=this.safeString(e,"next_funding_time"),i=this.safeString(e,"timestamp");return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:this.safeNumber(e,"mark_price"),indexPrice:this.safeNumber(e,"index_price"),interestRate:this.safeNumber(e,"interest_rate"),estimatedSettlePrice:void 0,timestamp:this.parse8601(i),datetime:i,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.safeNumber(e,"indicative_funding_rate"),nextFundingTimestamp:this.parse8601(s),nextFundingDatetime:s,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeString(i,"leverage");if("swap"===r.type&&void 0===a)throw new b(this.id+" modifyMarginHelper() requires a leverage parameter for swap markets");t=this.amountToPrecision(e,t);const n={symbol:r.id,margin_balance:t};void 0!==a&&(n.leverage=a);const[o,c]=this.handleMarketTypeAndParams("modifyMarginHelper",r,i),d=this.getSupportedMapping(o,{swap:"privatePutFuturesAccountIsolatedSymbol",margin:"privatePutMarginAccountIsolatedSymbol"}),h=await this[d](this.extend(n,c));return this.extend(this.parseMarginModification(h,r),{amount:this.parseNumber(t),type:s})}parseMarginModification(e,t){const s=this.safeValue(e,"currencies",[]),i=this.safeValue(s,0);return{info:e,type:void 0,amount:void 0,code:this.safeString(i,"code"),symbol:t.symbol,status:void 0}}async reduceMargin(e,t,s={}){if(0!==t)throw new o(this.id+" reduceMargin() on hitbtc3 requires the amount to be 0 and that will remove the entire margin amount");return await this.modifyMarginHelper(e,t,"reduce",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"add",s)}async fetchLeverage(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=this.getSupportedMapping(s.type,{spot:"privateGetMarginAccountIsolatedSymbol",margin:"privateGetMarginAccountIsolatedSymbol",swap:"privateGetFuturesAccountIsolatedSymbol"}),a=await this[r](this.extend(i,t));return this.safeNumber(a,"leverage")}async setLeverage(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new b(this.id+" setLeverage() requires a symbol argument");if(void 0===s.margin_balance)throw new b(this.id+" setLeverage() requires a margin_balance parameter that will transfer margin to the specified trading pair");const i=this.market(t),r=this.safeNumber(s,"margin_balance"),a=this.safeInteger(i.limits.leverage,"max",50);if("swap"!==i.type)throw new n(this.id+" setLeverage() supports swap contracts only");if(e<1||e>a)throw new o(this.id+" setLeverage() leverage should be between 1 and "+a.toString()+" for "+t);const c={symbol:i.id,leverage:e.toString(),margin_balance:this.amountToPrecision(t,r)};return await this.privatePutFuturesAccountIsolatedSymbol(this.extend(c,s))}handleErrors(e,t,s,i,r,a,n,o,c){const d=this.safeValue(n,"error"),h=this.safeString(d,"code");if(void 0!==h){const e=this.id+" "+a,t=this.safeString2(d,"message","description");throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new l(e)}}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e)),o=this.implodeParams(e,i);let c,d=this.urls.api[t]+"/"+o;const h=Object.keys(n).length;if(r={"Content-Type":"application/json"},"GET"===s?h&&(c="?"+this.urlencode(n),d+=c):a=this.json(i),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=[s,"/api/3/"+o];"GET"===s?void 0!==c&&t.push(c):t.push(a),t.push(e);const i=t.join(""),n=this.hmac(this.encode(i),this.encode(this.secret),"sha256","hex"),d=this.apiKey+":"+n+":"+e,h=this.decode(this.stringToBase64(d));r.Authorization="HS256 "+h}return{url:d,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],210:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadRequest:r,AuthenticationError:a,NetworkError:n,ArgumentsRequired:o,OrderImmediatelyFillable:c,OrderNotFound:d,InsufficientFunds:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number"),u=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"hollaex",name:"HollaEx",countries:["KR"],rateLimit:250,version:"v2",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketSellOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:"emulated",fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg",test:{rest:"https://api.sandbox.hollaex.com"},api:{rest:"https://api.hollaex.com"},www:"https://hollaex.com",doc:"https://apidocs.hollaex.com",referral:"https://pro.hollaex.com/signup?affiliation_code=QSWA6G"},precisionMode:l,requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{health:1,constants:1,kit:1,tiers:1,ticker:1,tickers:1,orderbook:1,orderbooks:1,trades:1,chart:1,charts:1,"udf/config":1,"udf/history":1,"udf/symbols":1}},private:{get:{user:1,"user/balance":1,"user/deposits":1,"user/withdrawals":1,"user/withdrawal/fee":1,"user/trades":1,orders:1,order:1},post:{"user/withdrawal":1,order:1},delete:{"order/all":1,order:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:.001}},exceptions:{broad:{"Invalid token":a,"Order not found":d,"Insufficient balance":h,"Error 1001 - Order rejected. Order could not be submitted as this order was set to a post only order.":c},exact:{400:r,403:a,404:r,405:r,410:r,429:r,500:n,503:n}},options:{"api-expires":parseInt(this.timeout/1e3),networks:{BTC:"btc",ETH:"eth",ERC20:"eth",TRX:"trx",TRC20:"trx",XRP:"xrp",XLM:"xlm"}}})}async fetchMarkets(e={}){const t=await this.publicGetConstants(e),s=this.safeValue(t,"pairs",{}),i=Object.keys(s),r=[];for(let e=0;e<i.length;e++){const t=s[i[e]],a=this.safeString(t,"pair_base"),n=this.safeString(t,"pair_2"),o=this.commonCurrencyCode(a.toUpperCase()),c=this.commonCurrencyCode(n.toUpperCase());r.push({id:this.safeString(t,"name"),symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"increment_size"),price:this.safeNumber(t,"increment_price")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_size"),max:this.safeNumber(t,"max_size")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},info:t})}return r}async fetchCurrencies(e={}){const t=await this.publicGetConstants(e),s=this.safeValue(t,"coins",{}),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=s[i[e]],a=this.safeString(t,"symbol"),n=this.safeInteger(t,"id"),o=this.safeCurrencyCode(a),c=this.safeString(t,"fullname"),d=this.safeValue(t,"allow_deposit"),h=this.safeValue(t,"allow_withdrawal"),l=this.safeValue(t,"active")&&d&&h,u=this.safeNumber(t,"withdrawal_fee"),f=this.safeValue(t,"withdrawal_limits",[]);r[o]={id:a,numericId:n,code:o,info:t,name:c,active:l,deposit:d,withdraw:h,fee:u,precision:this.safeNumber(t,"increment_unit"),limits:{amount:{min:this.safeNumber(t,"min"),max:this.safeNumber(t,"max")},withdraw:{min:void 0,max:this.safeValue(f,0)}}}}return r}async fetchOrderBooks(e,t,s={}){await this.loadMarkets();const i=await this.publicGetOrderbooks(s),r={},a=Object.keys(i);for(let e=0;e<a.length;e++){const t=a[e],s=i[t],n=this.safeSymbol(t,void 0,"-"),o=this.parse8601(this.safeString(s,"timestamp"));r[n]=this.parseOrderBook(i[t],n,o)}return r}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a=await this.publicGetOrderbooks(this.extend(r,s)),n=this.safeValue(a,i.id),o=this.parse8601(this.safeString(n,"timestamp"));return this.parseOrderBook(n,i.symbol,o)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(this.extend(t));return this.parseTickers(s,e)}parseTickers(e,t,s={}){const i={},r=Object.keys(e);for(let t=0;t<r.length;t++){const a=r[t],n=e[a],o=this.safeString(n,"symbol",a),c=this.safeMarket(o,void 0,"-");i[c.symbol]=this.extend(this.parseTicker(n,c),s)}return this.filterByArray(i,"symbol",t)}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t,"-")).symbol,r=this.parse8601(this.safeString2(e,"time","timestamp")),a=this.safeString(e,"close");return this.safeTicker({symbol:i,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:this.safeString(e,"last",a),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t,"-")).symbol,r=this.safeString(e,"timestamp"),a=this.parse8601(r),n=this.safeString(e,"side"),o=this.safeString(e,"order_id"),c=this.safeString(e,"price"),d=this.safeString(e,"size"),h=this.safeString(e,"fee");let l;return void 0!==h&&(l={cost:h,currency:t.quote}),this.safeTrade({info:e,id:void 0,timestamp:a,datetime:r,symbol:i,order:o,type:void 0,side:n,takerOrMaker:void 0,price:c,amount:d,cost:void 0,fee:l},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetTiers(e),s=this.safeValue(t,"1",{}),i=this.safeValue(s,"fees",{}),r=this.safeValue(i,"maker",{}),a=this.safeValue(i,"taker",{}),n={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],s=this.market(t),o=this.safeString(r,s.id),c=this.safeString(a,s.id);n[t]={info:i,symbol:t,maker:this.parseNumber(u.stringDiv(o,"100")),taker:this.parseNumber(u.stringDiv(c,"100")),percentage:!0,tierBased:!0}}return n}async fetchOHLCV(e,t="1h",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,resolution:this.timeframes[t]},c=this.parseTimeframe(t);if(void 0===s){if(void 0===i)throw new o(this.id+" fetchOHLCV() requires a 'since' or a 'limit' argument");{const e=this.seconds(),t=e-c*i;n.to=e,n.from=t}}else if(void 0===i)n.from=parseInt(s/1e3),n.to=this.seconds();else{const e=parseInt(s/1e3);n.from=e,n.to=this.sum(e,c*i)}const d=await this.publicGetChart(this.extend(n,r));return this.parseOHLCVs(d,a,t,s,i)}parseOHLCV(e,t,s="1h",i,r){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseBalance(e){const t=this.parse8601(this.safeString(e,"updated_at")),s={info:e,timestamp:t,datetime:this.iso8601(t)},i=Object.keys(this.currencies_by_id);for(let t=0;t<i.length;t++){const r=i[t],a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(e,r+"_available"),n.total=this.safeString(e,r+"_balance"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserBalance(e);return this.parseBalance(t)}async fetchOpenOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetOrder(this.extend(i,s));return this.parseOrder(r)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({open:!0},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({open:!1},i))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetOrder(this.extend(i,s));if(void 0===r)throw new d(this.id+" fetchOrder() could not find order id "+e);return this.parseOrder(r)}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.start_date=this.iso8601(t)),void 0!==s&&(a.limit=s);const n=await this.privateGetOrders(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseOrders(o,r,t,s)}parseOrderStatus(e){return this.safeString({new:"open",pfilled:"open",filled:"closed",canceled:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t,"-"),r=this.safeString(e,"id"),a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"type"),o=this.safeString(e,"side"),c=this.safeString(e,"price"),d=this.safeString(e,"stop"),h=this.safeString(e,"size"),l=this.safeString(e,"filled"),u=this.parseOrderStatus(this.safeString(e,"status")),f=this.safeValue(e,"meta",{}),p=this.safeValue(f,"post_only",!1);return this.safeOrder({id:r,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:u,symbol:i,type:n,timeInForce:void 0,postOnly:p,side:o,price:c,stopPrice:d,amount:h,filled:l,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,side:s,size:this.normalizeNumberIfNeeded(i),type:t},c=this.safeNumber2(a,"stopPrice","stop"),d=this.safeValue(a,"meta",{}),h=this.safeValue(d,"post_only",!1),l="market"===t,u=this.isPostOnly(l,h,a);if(a=this.omit(a,["stopPrice","stop","meta","postOnly"]),!l){const t=parseFloat(this.priceToPrecision(e,r));o.price=this.normalizeNumberIfNeeded(t)}void 0!==c&&(o.stop=this.normalizeNumberIfNeeded(parseFloat(this.priceToPrecision(e,c)))),u&&(o.meta={post_only:!0});const f=await this.privatePostOrder(this.extend(o,a));return this.parseOrder(f,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateDeleteOrder(this.extend(i,s));return this.parseOrder(r)}async cancelAllOrders(e,t={}){if(void 0===e)throw new o(this.id+" cancelAllOrders() requires a 'symbol' argument");await this.loadMarkets();const s={};let i;i=this.market(e),s.symbol=i.id;const r=await this.privateDeleteOrderAll(this.extend(s,t));return this.parseOrders(r,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserTrades(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,a,t,s)}parseDepositAddress(e,t){let s,i=this.safeString(e,"address");if(void 0!==i){const e=i.split(":");i=this.safeString(e,0),s=this.safeString(e,1)}this.checkAddress(i);const r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeString(e,"network");return{currency:t.code,address:i,tag:s,network:a,info:e}}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=this.safeString(t,"network");t=this.omit(t,"network");const i=await this.privateGetUser(t),r=this.safeValue(i,"wallet",[]),a=void 0===s?r:this.filterBy(r,"network",s);return this.parseDepositAddresses(a,e)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserDeposits(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,s)}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={transaction_id:e};let r;void 0!==t&&(r=this.currency(t),i.currency=r.id);const a=await this.privateGetUserWithdrawals(this.extend(i,s)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,r)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserWithdrawals(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,s)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"transaction_id"),r=this.parse8601(this.safeString(e,"created_at")),a=this.parse8601(this.safeString(e,"updated_at")),n=this.safeString(e,"type"),o=this.safeNumber(e,"amount");let c,d=this.safeString(e,"address");let h,l;if(void 0!==d){const e=d.split(":");d=this.safeString(e,0),h=this.safeString(e,1),c=d,l=h}const u=this.safeString(e,"currency");t=this.safeCurrency(u,t);let f=this.safeValue(e,"status");const p=this.safeValue(e,"dismissed"),m=this.safeValue(e,"rejected");f=f?"ok":p?"canceled":m?"failed":"pending";const g=this.safeString(e,"fee_coin"),y=this.safeCurrencyCode(g,t),b=this.safeNumber(e,"fee");let v;return void 0!==b&&(v={currency:y,cost:b}),{info:e,id:s,txid:i,timestamp:r,datetime:this.iso8601(r),network:void 0,addressFrom:undefined,address:d,addressTo:c,tagFrom:undefined,tag:h,tagTo:l,type:n,amount:o,currency:t.code,status:f,updated:a,fee:v}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e);void 0!==i&&(s+=":"+i);const n=this.safeString(r,"network");if(void 0===n)throw new o(this.id+" withdraw() requires a network parameter");r=this.omit(r,"network");const c=this.safeValue(this.options,"networks",{}),d=this.safeStringLower2(c,n,e,n),h={currency:a.id,amount:t,address:s,network:d},l=await this.privatePostUserWithdrawal(this.extend(h,r));return this.parseTransaction(l,a)}normalizeNumberIfNeeded(e){return e%1==0&&(e=parseInt(e)),e}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e));e="/"+this.version+"/"+this.implodeParams(e,i),"GET"!==s&&"DELETE"!==s||Object.keys(n).length&&(e+="?"+this.urlencode(n));const o=this.urls.api.rest+e;if("private"===t){this.checkRequiredCredentials();const t=this.safeInteger2(this.options,"api-expires","expires",parseInt(this.timeout/1e3)),i=this.sum(this.seconds(),t).toString();let o=s+e+i;r={"api-key":this.apiKey,"api-expires":i},"POST"===s&&(r["Content-type"]="application/json",Object.keys(n).length&&(o+=a=this.json(n)));const c=this.hmac(this.encode(o),this.encode(this.secret));r["api-signature"]=c}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(void 0!==n&&e>=400&&e<=503){const t=this.id+" "+a,s=this.safeString(n,"message");this.throwBroadlyMatchedException(this.exceptions.broad,s,t);const i=e.toString();this.throwExactlyMatchedException(this.exceptions.exact,i,t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],211:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AccountNotEnabled:r,ArgumentsRequired:a,AuthenticationError:n,ExchangeError:o,PermissionDenied:c,ExchangeNotAvailable:d,OnMaintenance:h,InvalidOrder:l,OrderNotFound:u,InsufficientFunds:f,BadSymbol:p,BadRequest:m,RateLimitExceeded:g,RequestTimeout:y,NetworkError:b,InvalidAddress:v,NotSupported:w}=e("./base/errors"),{TICK_SIZE:S,TRUNCATE:k}=e("./base/functions/number"),T=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"huobi",name:"Huobi",countries:["CN"],rateLimit:100,userAgent:this.userAgents.chrome100,certified:!0,version:"v1",accounts:void 0,accountsById:void 0,hostname:"api.huobi.pro",pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!0,fetchBorrowRate:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:!0,fetchBorrowRatesPerSymbol:!0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchL3OrderBook:void 0,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!0,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTradingLimits:!0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchTransfers:void 0,fetchWithdrawAddressesByNetwork:!0,fetchWithdrawal:void 0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:void 0,reduceMargin:void 0,repayMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,signIn:void 0,transfer:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg",hostnames:{contract:"api.hbdm.com",spot:"api.huobi.pro",status:{spot:"status.huobigroup.com",future:{inverse:"status-dm.huobigroup.com",linear:"status-linear-swap.huobigroup.com"},swap:{inverse:"status-swap.huobigroup.com",linear:"status-linear-swap.huobigroup.com"}}},api:{status:"https://{hostname}",contract:"https://{hostname}",spot:"https://{hostname}",market:"https://{hostname}",public:"https://{hostname}",private:"https://{hostname}",v2Public:"https://{hostname}",v2Private:"https://{hostname}"},www:"https://www.huobi.com",referral:{url:"https://www.huobi.com/en-us/topic/double-reward/?invite_code=6rmm2223",discount:.15},doc:["https://huobiapi.github.io/docs/spot/v1/cn/","https://huobiapi.github.io/docs/dm/v1/cn/","https://huobiapi.github.io/docs/coin_margined_swap/v1/cn/","https://huobiapi.github.io/docs/usdt_swap/v1/cn/","https://huobiapi.github.io/docs/option/v1/cn/"],fees:"https://www.huobi.com/about/fee/"},api:{v2Public:{get:{"reference/currencies":1,"market-status":1}},v2Private:{get:{"account/ledger":1,"account/withdraw/quota":1,"account/withdraw/address":1,"account/deposit/address":1,"account/repayment":5,"reference/transact-fee-rate":1,"account/asset-valuation":.2,"point/account":5,"sub-user/user-list":1,"sub-user/user-state":1,"sub-user/account-list":1,"sub-user/deposit-address":1,"sub-user/query-deposit":1,"user/api-key":1,"user/uid":1,"algo-orders/opening":1,"algo-orders/history":1,"algo-orders/specific":1,"c2c/offers":1,"c2c/offer":1,"c2c/transactions":1,"c2c/repayment":1,"c2c/account":1,"etp/reference":1,"etp/transactions":5,"etp/transaction":5,"etp/rebalance":1,"etp/limit":1},post:{"account/transfer":1,"account/repayment":5,"point/transfer":5,"sub-user/management":1,"sub-user/creation":1,"sub-user/tradable-market":1,"sub-user/transferability":1,"sub-user/api-key-generation":1,"sub-user/api-key-modification":1,"sub-user/api-key-deletion":1,"sub-user/deduct-mode":1,"algo-orders":1,"algo-orders/cancel-all-after":1,"algo-orders/cancellation":1,"c2c/offer":1,"c2c/cancellation":1,"c2c/cancel-all":1,"c2c/repayment":1,"c2c/transfer":1,"etp/creation":5,"etp/redemption":5,"etp/{transactId}/cancel":10,"etp/batch-cancel":50}},market:{get:{"history/kline":1,"detail/merged":1,depth:1,trade:1,"history/trade":1,detail:1,tickers:1,etp:1}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}},status:{public:{spot:{get:{"api/v2/summary.json":1}},future:{inverse:{get:{"api/v2/summary.json":1}},linear:{get:{"api/v2/summary.json":1}}},swap:{inverse:{get:{"api/v2/summary.json":1}},linear:{get:{"api/v2/summary.json":1}}}}},spot:{public:{get:{"v2/market-status":1,"v1/common/symbols":1,"v1/common/currencys":1,"v2/reference/currencies":1,"v1/common/timestamp":1,"v1/common/exchange":1,"market/history/candles":1,"market/history/kline":1,"market/detail/merged":1,"market/tickers":1,"market/depth":1,"market/trade":1,"market/history/trade":1,"market/detail/":1,"market/etp":1,"v2/etp/reference":1,"v2/etp/rebalance":1}},private:{get:{"v1/account/accounts":.2,"v1/account/accounts/{account-id}/balance":.2,"v2/account/valuation":1,"v2/account/asset-valuation":.2,"v1/account/history":4,"v2/account/ledger":1,"v2/point/account":5,"v2/account/deposit/address":1,"v2/account/withdraw/quota":1,"v2/account/withdraw/address":1,"v2/reference/currencies":1,"v1/query/deposit-withdraw":1,"v2/user/api-key":1,"v2/user/uid":1,"v2/sub-user/user-list":1,"v2/sub-user/user-state":1,"v2/sub-user/account-list":1,"v2/sub-user/deposit-address":1,"v2/sub-user/query-deposit":1,"v1/subuser/aggregate-balance":10,"v1/account/accounts/{sub-uid}":1,"v1/order/openOrders":.4,"v1/order/orders/{order-id}":.4,"v1/order/orders/getClientOrder":.4,"v1/order/orders/{order-id}/matchresults":.4,"v1/order/orders":.4,"v1/order/history":1,"v1/order/matchresults":1,"v2/reference/transact-fee-rate":1,"v2/algo-orders/opening":1,"v2/algo-orders/history":1,"v2/algo-orders/specific":1,"v1/margin/loan-info":1,"v1/margin/loan-orders":.2,"v1/margin/accounts/balance":.2,"v1/cross-margin/loan-info":1,"v1/cross-margin/loan-orders":1,"v1/cross-margin/accounts/balance":1,"v2/account/repayment":5,"v1/stable-coin/quote":1,"v2/etp/transactions":5,"v2/etp/transaction":5,"v2/etp/limit":1},post:{"v1/account/transfer":1,"v1/futures/transfer":1,"v2/point/transfer":5,"v2/account/transfer":1,"v1/dw/withdraw/api/create":1,"v1/dw/withdraw-virtual/{withdraw-id}/cancel":1,"v2/sub-user/deduct-mode":1,"v2/sub-user/creation":1,"v2/sub-user/management":1,"v2/sub-user/tradable-market":1,"v2/sub-user/transferability":1,"v2/sub-user/api-key-generation":1,"v2/sub-user/api-key-modification":1,"v2/sub-user/api-key-deletion":1,"v1/subuser/transfer":10,"v1/order/orders/place":.2,"v1/order/batch-orders":.4,"v1/order/orders/{order-id}/submitcancel":.2,"v1/order/orders/submitCancelClientOrder":.2,"v1/order/orders/batchCancelOpenOrders":.4,"v1/order/orders/batchcancel":.4,"v2/algo-orders/cancel-all-after":1,"v2/algo-orders":1,"v2/algo-orders/cancellation":1,"v2/account/repayment":5,"v1/dw/transfer-in/margin":10,"v1/dw/transfer-out/margin":10,"v1/margin/orders":10,"v1/margin/orders/{order-id}/repay":10,"v1/cross-margin/transfer-in":1,"v1/cross-margin/transfer-out":1,"v1/cross-margin/orders":1,"v1/cross-margin/orders/{order-id}/repay":1,"v1/stable-coin/exchange":1,"v2/etp/creation":5,"v2/etp/redemption":5,"v2/etp/{transactId}/cancel":10,"v2/etp/batch-cancel":50}}},contract:{public:{get:{"api/v1/timestamp":1,"heartbeat/":1,"api/v1/contract_contract_info":1,"api/v1/contract_index":1,"api/v1/contract_price_limit":1,"api/v1/contract_open_interest":1,"api/v1/contract_delivery_price":1,"market/depth":1,"market/bbo":1,"market/history/kline":1,"index/market/history/mark_price_kline":1,"market/detail/merged":1,"market/detail/batch_merged":1,"market/trade":1,"market/history/trade":1,"api/v1/contract_risk_info":1,"api/v1/contract_insurance_fund":1,"api/v1/contract_adjustfactor":1,"api/v1/contract_his_open_interest":1,"api/v1/contract_ladder_margin":1,"api/v1/contract_api_state":1,"api/v1/contract_elite_account_ratio":1,"api/v1/contract_elite_position_ratio":1,"api/v1/contract_liquidation_orders":1,"api/v1/contract_settlement_records":1,"index/market/history/index":1,"index/market/history/basis":1,"api/v1/contract_estimated_settlement_price":1,"swap-api/v1/swap_contract_info":1,"swap-api/v1/swap_index":1,"swap-api/v1/swap_price_limit":1,"swap-api/v1/swap_open_interest":1,"swap-ex/market/depth":1,"swap-ex/market/bbo":1,"swap-ex/market/history/kline":1,"index/market/history/swap_mark_price_kline":1,"swap-ex/market/detail/merged":1,"swap-ex/market/detail/batch_merged":1,"swap-ex/market/trade":1,"swap-ex/market/history/trade":1,"swap-api/v1/swap_risk_info":1,"swap-api/v1/swap_insurance_fund":1,"swap-api/v1/swap_adjustfactor":1,"swap-api/v1/swap_his_open_interest":1,"swap-api/v1/swap_ladder_margin":1,"swap-api/v1/swap_api_state":1,"swap-api/v1/swap_elite_account_ratio":1,"swap-api/v1/swap_elite_position_ratio":1,"swap-api/v1/swap_estimated_settlement_price":1,"swap-api/v1/swap_liquidation_orders":1,"swap-api/v1/swap_settlement_records":1,"swap-api/v1/swap_funding_rate":1,"swap-api/v1/swap_batch_funding_rate":1,"swap-api/v1/swap_historical_funding_rate":1,"index/market/history/swap_premium_index_kline":1,"index/market/history/swap_estimated_rate_kline":1,"index/market/history/swap_basis":1,"linear-swap-api/v1/swap_contract_info":1,"linear-swap-api/v1/swap_index":1,"linear-swap-api/v1/swap_price_limit":1,"linear-swap-api/v1/swap_open_interest":1,"linear-swap-ex/market/depth":1,"linear-swap-ex/market/bbo":1,"linear-swap-ex/market/history/kline":1,"index/market/history/linear_swap_mark_price_kline":1,"linear-swap-ex/market/detail/merged":1,"linear-swap-ex/market/detail/batch_merged":1,"linear-swap-ex/market/trade":1,"linear-swap-ex/market/history/trade":1,"linear-swap-api/v1/swap_risk_info":1,"swap-api/v1/linear-swap-api/v1/swap_insurance_fund":1,"linear-swap-api/v1/swap_adjustfactor":1,"linear-swap-api/v1/swap_cross_adjustfactor":1,"linear-swap-api/v1/swap_his_open_interest":1,"linear-swap-api/v1/swap_ladder_margin":1,"linear-swap-api/v1/swap_cross_ladder_margin":1,"linear-swap-api/v1/swap_api_state":1,"linear-swap-api/v1/swap_cross_transfer_state":1,"linear-swap-api/v1/swap_cross_trade_state":1,"linear-swap-api/v1/swap_elite_account_ratio":1,"linear-swap-api/v1/swap_elite_position_ratio":1,"linear-swap-api/v1/swap_liquidation_orders":1,"linear-swap-api/v1/swap_settlement_records":1,"linear-swap-api/v1/swap_funding_rate":1,"linear-swap-api/v1/swap_batch_funding_rate":1,"linear-swap-api/v1/swap_historical_funding_rate":1,"index/market/history/linear_swap_premium_index_kline":1,"index/market/history/linear_swap_estimated_rate_kline":1,"index/market/history/linear_swap_basis":1,"linear-swap-api/v1/swap_estimated_settlement_price":1}},private:{get:{"api/v1/contract_api_trading_status":1,"swap-api/v1/swap_api_trading_status":1,"linear-swap-api/v1/swap_api_trading_status":1},post:{"api/v1/contract_balance_valuation":1,"api/v1/contract_account_info":1,"api/v1/contract_position_info":1,"api/v1/contract_sub_auth":1,"api/v1/contract_sub_account_list":1,"api/v1/contract_sub_account_info_list":1,"api/v1/contract_sub_account_info":1,"api/v1/contract_sub_position_info":1,"api/v1/contract_financial_record":1,"api/v1/contract_financial_record_exact":1,"api/v1/contract_user_settlement_records":1,"api/v1/contract_order_limit":1,"api/v1/contract_fee":1,"api/v1/contract_transfer_limit":1,"api/v1/contract_position_limit":1,"api/v1/contract_account_position_info":1,"api/v1/contract_master_sub_transfer":1,"api/v1/contract_master_sub_transfer_record":1,"api/v1/contract_available_level_rate":1,"api/v1/contract_order":1,"v1/contract_batchorder":1,"api/v1/contract_cancel":1,"api/v1/contract_cancelall":1,"api/v1/contract_switch_lever_rate":1,"api/v1/lightning_close_position":1,"api/v1/contract_order_info":1,"api/v1/contract_order_detail":1,"api/v1/contract_openorders":1,"api/v1/contract_hisorders":1,"api/v1/contract_hisorders_exact":1,"api/v1/contract_matchresults":1,"api/v1/contract_matchresults_exact":1,"api/v1/contract_trigger_order":1,"api/v1/contract_trigger_cancel":1,"api/v1/contract_trigger_cancelall":1,"api/v1/contract_trigger_openorders":1,"api/v1/contract_trigger_hisorders":1,"api/v1/contract_tpsl_order":1,"api/v1/contract_tpsl_cancel":1,"api/v1/contract_tpsl_cancelall":1,"api/v1/contract_tpsl_openorders":1,"api/v1/contract_tpsl_hisorders":1,"api/v1/contract_relation_tpsl_order":1,"api/v1/contract_track_order":1,"api/v1/contract_track_cancel":1,"api/v1/contract_track_cancelall":1,"api/v1/contract_track_openorders":1,"api/v1/contract_track_hisorders":1,"swap-api/v1/swap_balance_valuation":1,"swap-api/v1/swap_account_info":1,"swap-api/v1/swap_position_info":1,"swap-api/v1/swap_account_position_info":1,"swap-api/v1/swap_sub_auth":1,"swap-api/v1/swap_sub_account_list":1,"swap-api/v1/swap_sub_account_info_list":1,"swap-api/v1/swap_sub_account_info":1,"swap-api/v1/swap_sub_position_info":1,"swap-api/v1/swap_financial_record":1,"swap-api/v1/swap_financial_record_exact":1,"swap-api/v1/swap_user_settlement_records":1,"swap-api/v1/swap_available_level_rate":1,"swap-api/v1/swap_order_limit":1,"swap-api/v1/swap_fee":1,"swap-api/v1/swap_transfer_limit":1,"swap-api/v1/swap_position_limit":1,"swap-api/v1/swap_master_sub_transfer":1,"swap-api/v1/swap_master_sub_transfer_record":1,"swap-api/v1/swap_order":1,"swap-api/v1/swap_batchorder":1,"swap-api/v1/swap_cancel":1,"swap-api/v1/swap_cancelall":1,"swap-api/v1/swap_lightning_close_position":1,"swap-api/v1/swap_switch_lever_rate":1,"swap-api/v1/swap_order_info":1,"swap-api/v1/swap_order_detail":1,"swap-api/v1/swap_openorders":1,"swap-api/v1/swap_hisorders":1,"swap-api/v1/swap_hisorders_exact":1,"swap-api/v1/swap_matchresults":1,"swap-api/v1/swap_matchresults_exact":1,"swap-api/v1/swap_trigger_order":1,"swap-api/v1/swap_trigger_cancel":1,"swap-api/v1/swap_trigger_cancelall":1,"swap-api/v1/swap_trigger_openorders":1,"swap-api/v1/swap_trigger_hisorders":1,"swap-api/v1/swap_tpsl_order":1,"swap-api/v1/swap_tpsl_cancel":1,"swap-api/v1/swap_tpsl_cancelall":1,"swap-api/v1/swap_tpsl_openorders":1,"swap-api/v1/swap_tpsl_hisorders":1,"swap-api/v1/swap_relation_tpsl_order":1,"swap-api/v1/swap_track_order":1,"swap-api/v1/swap_track_cancel":1,"swap-api/v1/swap_track_cancelall":1,"swap-api/v1/swap_track_openorders":1,"swap-api/v1/swap_track_hisorders":1,"linear-swap-api/v1/swap_lever_position_limit":1,"linear-swap-api/v1/swap_cross_lever_position_limit":1,"linear-swap-api/v1/swap_balance_valuation":1,"linear-swap-api/v1/swap_account_info":1,"linear-swap-api/v1/swap_cross_account_info":1,"linear-swap-api/v1/swap_position_info":1,"linear-swap-api/v1/swap_cross_position_info":1,"linear-swap-api/v1/swap_account_position_info":1,"linear-swap-api/v1/swap_cross_account_position_info":1,"linear-swap-api/v1/swap_sub_auth":1,"linear-swap-api/v1/swap_sub_account_list":1,"linear-swap-api/v1/swap_cross_sub_account_list":1,"linear-swap-api/v1/swap_sub_account_info_list":1,"linear-swap-api/v1/swap_cross_sub_account_info_list":1,"linear-swap-api/v1/swap_sub_account_info":1,"linear-swap-api/v1/swap_cross_sub_account_info":1,"linear-swap-api/v1/swap_sub_position_info":1,"linear-swap-api/v1/swap_cross_sub_position_info":1,"linear-swap-api/v1/swap_financial_record":1,"linear-swap-api/v1/swap_financial_record_exact":1,"linear-swap-api/v1/swap_user_settlement_records":1,"linear-swap-api/v1/swap_cross_user_settlement_records":1,"linear-swap-api/v1/swap_available_level_rate":1,"linear-swap-api/v1/swap_cross_available_level_rate":1,"linear-swap-api/v1/swap_order_limit":1,"linear-swap-api/v1/swap_fee":1,"linear-swap-api/v1/swap_transfer_limit":1,"linear-swap-api/v1/swap_cross_transfer_limit":1,"linear-swap-api/v1/swap_position_limit":1,"linear-swap-api/v1/swap_cross_position_limit":1,"linear-swap-api/v1/swap_master_sub_transfer":1,"linear-swap-api/v1/swap_master_sub_transfer_record":1,"linear-swap-api/v1/swap_transfer_inner":1,"linear-swap-api/v1/swap_order":1,"linear-swap-api/v1/swap_cross_order":1,"linear-swap-api/v1/swap_batchorder":1,"linear-swap-api/v1/swap_cross_batchorder":1,"linear-swap-api/v1/swap_cancel":1,"linear-swap-api/v1/swap_cross_cancel":1,"linear-swap-api/v1/swap_cancelall":1,"linear-swap-api/v1/swap_cross_cancelall":1,"linear-swap-api/v1/swap_switch_lever_rate":1,"linear-swap-api/v1/swap_cross_switch_lever_rate":1,"linear-swap-api/v1/swap_lightning_close_position":1,"linear-swap-api/v1/swap_cross_lightning_close_position":1,"linear-swap-api/v1/swap_order_info":1,"linear-swap-api/v1/swap_cross_order_info":1,"linear-swap-api/v1/swap_order_detail":1,"linear-swap-api/v1/swap_cross_order_detail":1,"linear-swap-api/v1/swap_openorders":1,"linear-swap-api/v1/swap_cross_openorders":1,"linear-swap-api/v1/swap_hisorders":1,"linear-swap-api/v1/swap_cross_hisorders":1,"linear-swap-api/v1/swap_hisorders_exact":1,"linear-swap-api/v1/swap_cross_hisorders_exact":1,"linear-swap-api/v1/swap_matchresults":1,"linear-swap-api/v1/swap_cross_matchresults":1,"linear-swap-api/v1/swap_matchresults_exact":1,"linear-swap-api/v1/swap_cross_matchresults_exact":1,"linear-swap-api/v1/swap_switch_position_mode":1,"linear-swap-api/v1/swap_cross_switch_position_mode":1,"linear-swap-api/v1/swap_trigger_order":1,"linear-swap-api/v1/swap_cross_trigger_order":1,"linear-swap-api/v1/swap_trigger_cancel":1,"linear-swap-api/v1/swap_cross_trigger_cancel":1,"linear-swap-api/v1/swap_trigger_cancelall":1,"linear-swap-api/v1/swap_cross_trigger_cancelall":1,"linear-swap-api/v1/swap_trigger_openorders":1,"linear-swap-api/v1/swap_cross_trigger_openorders":1,"linear-swap-api/v1/swap_trigger_hisorders":1,"linear-swap-api/v1/swap_cross_trigger_hisorders":1,"linear-swap-api/v1/swap_tpsl_order":1,"linear-swap-api/v1/swap_cross_tpsl_order":1,"linear-swap-api/v1/swap_tpsl_cancel":1,"linear-swap-api/v1/swap_cross_tpsl_cancel":1,"linear-swap-api/v1/swap_tpsl_cancelall":1,"linear-swap-api/v1/swap_cross_tpsl_cancelall":1,"linear-swap-api/v1/swap_tpsl_openorders":1,"linear-swap-api/v1/swap_cross_tpsl_openorders":1,"linear-swap-api/v1/swap_tpsl_hisorders":1,"linear-swap-api/v1/swap_cross_tpsl_hisorders":1,"linear-swap-api/v1/swap_relation_tpsl_order":1,"linear-swap-api/v1/swap_cross_relation_tpsl_order":1,"linear-swap-api/v1/swap_track_order":1,"linear-swap-api/v1/swap_cross_track_order":1,"linear-swap-api/v1/swap_track_cancel":1,"linear-swap-api/v1/swap_cross_track_cancel":1,"linear-swap-api/v1/swap_track_cancelall":1,"linear-swap-api/v1/swap_cross_track_cancelall":1,"linear-swap-api/v1/swap_track_openorders":1,"linear-swap-api/v1/swap_cross_track_openorders":1,"linear-swap-api/v1/swap_track_hisorders":1,"linear-swap-api/v1/swap_cross_track_hisorders":1}}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":h,maintain:h},exact:{403:n,1010:r,1013:p,1017:u,1034:l,1036:l,1039:l,1041:l,1047:f,1048:f,1051:l,1066:p,1067:l,1094:l,1220:r,1461:l,"bad-request":m,"validation-format-error":m,"validation-constraints-required":m,"base-date-limit-error":m,"api-not-support-temp-addr":c,timeout:y,"gateway-internal-error":d,"account-frozen-balance-insufficient-error":f,"invalid-amount":l,"order-limitorder-amount-min-error":l,"order-limitorder-amount-max-error":l,"order-marketorder-amount-min-error":l,"order-limitorder-price-min-error":l,"order-limitorder-price-max-error":l,"order-invalid-price":l,"order-holding-limit-failed":l,"order-orderprice-precision-error":l,"order-etp-nav-price-max-error":l,"order-orderstate-error":u,"order-queryorder-invalid":u,"order-update-error":d,"api-signature-check-failed":n,"api-signature-not-valid":n,"base-record-invalid":u,"base-symbol-trade-disabled":p,"base-symbol-error":p,"system-maintenance":h,"base-request-exceed-frequency-limit":g,"invalid symbol":p,"symbol trade not open now":p,"require-symbol":p,"invalid-address":m,"base-currency-chain-error":m,"dw-insufficient-balance":f}},precisionMode:S,options:{fetchMarkets:{types:{spot:!0,future:{linear:!0,inverse:!0},swap:{linear:!0,inverse:!0}}},defaultType:"spot",defaultSubType:"inverse",defaultNetwork:"ERC20",networks:{ETH:"erc20",TRX:"trc20",HRC20:"hrc20",HECO:"hrc20",HT:"hrc20",ALGO:"algo",OMNI:""},fetchOrdersByStatesMethod:"spot_private_get_v1_order_orders",createMarketBuyOrderRequiresPrice:!0,language:"en-US",broker:{id:"AA03022abc"},accountsByType:{spot:"pro",funding:"pro",future:"futures"},accountsById:{spot:"spot",margin:"margin",otc:"otc",point:"point","super-margin":"super-margin",investment:"investment",borrow:"borrow","grid-trading":"grid-trading","deposit-earning":"deposit-earning","otc-options":"otc-options"},marginAccounts:{cross:"super-margin",isolated:"margin"},typesByAccount:{pro:"spot",futures:"future"},spot:{stopOrderTypes:{"stop-limit":!0,"buy-stop-limit":!0,"sell-stop-limit":!0,"stop-limit-fok":!0,"buy-stop-limit-fok":!0,"sell-stop-limit-fok":!0},limitOrderTypes:{limit:!0,"buy-limit":!0,"sell-limit":!0,ioc:!0,"buy-ioc":!0,"sell-ioc":!0,"limit-maker":!0,"buy-limit-maker":!0,"sell-limit-maker":!0,"stop-limit":!0,"buy-stop-limit":!0,"sell-stop-limit":!0,"limit-fok":!0,"buy-limit-fok":!0,"sell-limit-fok":!0,"stop-limit-fok":!0,"buy-stop-limit-fok":!0,"sell-stop-limit-fok":!0}}},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",HOT:"Hydro Protocol",PNT:"Penta",SBTC:"Super Bitcoin",BIFI:"Bitcoin File"}})}async fetchStatus(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchMyTrades",void 0,e);let s="statusPublicSpotGetApiV2SummaryJson";if("spot"!==t){const i=this.safeString(e,"subType",this.options.defaultSubType);"swap"===t?"linear"===i?s="statusPublicSwapLinearGetApiV2SummaryJson":"inverse"===i&&(s="statusPublicSwapInverseGetApiV2SummaryJson"):"future"===t?"linear"===i?s="statusPublicFutureLinearGetApiV2SummaryJson":"inverse"===i&&(s="statusPublicFutureInverseGetApiV2SummaryJson"):"contract"===t&&(s="contractPublicGetHeartbeat")}const i=await this[s]();let r,a,n;if("contractPublicGetHeartbeat"===s){r="ok"===this.safeString(i,"status")?"ok":"maintenance",a=this.safeString(i,"ts")}else{const e=this.safeValue(i,"status",{});r="none"===this.safeString(e,"indicator")?"ok":"maintenance";const t=this.safeValue(i,"page",{}),s=this.safeString(t,"updated_at");a=this.parse8601(s),n=this.safeString(t,"url")}return{status:r,updated:a,eta:void 0,url:n,info:i}}async fetchTime(e={}){const t=this.safeValue(this.options,"fetchTime",{}),s=this.safeString(this.options,"defaultType","spot");let i=this.safeString(t,"type",s);i=this.safeString(e,"type",i);let r="spotPublicGetV1CommonTimestamp";"future"!==i&&"swap"!==i||(r="contractPublicGetApiV1Timestamp");const a=await this[r](e);return this.safeInteger2(a,"data","ts")}parseTradingFee(e,t){const s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),maker:this.safeNumber(e,"actualMakerRate"),taker:this.safeNumber(e,"actualTakerRate")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbols:s.id},r=await this.spotPrivateGetV2ReferenceTransactFeeRate(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTradingFee(n,s)}async fetchTradingLimits(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const s={};for(let i=0;i<e.length;i++){const r=e[i];s[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return s}async fetchTradingLimitsById(e,t={}){const s={symbol:e},i=await this.spotPublicGetV1CommonExchange(this.extend(s,t));return this.parseTradingLimits(this.safeValue(i,"data",{}))}parseTradingLimits(e,t,s={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,k,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),s=this.safeValue(t,"types",{});let i=[],r=[];const a=Object.keys(s);for(let t=0;t<a.length;t++){const i=a[t],n=this.safeValue(s,i);if(!0===n)r.push(this.fetchMarketsByTypeAndSubType(i,void 0,e));else{const t=Object.keys(n);for(let s=0;s<t.length;s++){const a=t[s];this.safeValue(n,a)&&r.push(this.fetchMarketsByTypeAndSubType(i,a,e))}}}r=await Promise.all(r);for(let e=0;e<r.length;e++)i=this.arrayConcat(i,r[e]);return i}async fetchMarketsByTypeAndSubType(e,t,s={}){let i="spotPublicGetV1CommonSymbols";const r=this.omit(s,["type","subType"]),a="spot"===e,n="spot"!==e,o="future"===e,c="swap"===e;let d,h;const l={};n&&(d="linear"===t,h="inverse"===t,d?(i="contractPublicGetLinearSwapApiV1SwapContractInfo",o&&(l.business_type="futures")):h&&(o?i="contractPublicGetApiV1ContractContractInfo":c&&(i="contractPublicGetSwapApiV1SwapContractInfo")));const u=await this[i](this.extend(l,r)),f=this.safeValue(u,"data",[]);if(f.length<1)throw new b(this.id+" fetchMarkets() returned an empty response: "+this.json(f));const p=[];for(let t=0;t<f.length;t++){const s=f[t];let i,r,l,u,m,g;if(n){if(u=this.safeString(s,"contract_code"),m=u.toLowerCase(),c){const e=u.split("-");i=this.safeString(s,"symbol"),g=i.toLowerCase(),r=this.safeStringLower(e,1),l=h?i:r}else if(o)if(i=this.safeString(s,"symbol"),g=i.toLowerCase(),h)r="USD",l=i;else{const e=this.safeString(s,"pair").split("-");r=this.safeString(e,1),l=r}}else i=this.safeString(s,"base-currency"),g=i.toLowerCase(),r=this.safeString(s,"quote-currency"),u=i+r,m=u.toLowerCase();const y=this.safeCurrencyCode(i),b=this.safeCurrencyCode(r),v=this.safeCurrencyCode(l);let w,S=y+"/"+b;n&&(h?S+=":"+y:d&&(S+=":"+b),o&&(w=this.safeInteger(s,"delivery_time"),S+="-"+this.yymmdd(w)));const k=this.safeNumber(s,"contract_size");let O,_,x,M,I;a?(O=this.parseNumber(this.parsePrecision(this.safeString(s,"price-precision"))),_=this.parseNumber(this.parsePrecision(this.safeString(s,"amount-precision"))),x=this.parseNumber(this.parsePrecision(this.safeString(s,"value-precision")))):(O=this.safeNumber(s,"price_tick"),_=this.parseNumber("1")),a&&(M="OMG"===y?0:.002,I="OMG"===y?0:.002);const C=this.safeNumber(s,"min-order-amt"),P=this.safeNumber(s,"max-order-amt"),A=this.safeNumber(s,"min-order-value",0);let N;if(a){N="online"===this.safeString(s,"state")}else if(n){N=1===this.safeInteger(s,"contract_status")}const V=this.safeString(s,"leverage-ratio","1"),B=this.safeString(s,"super-margin-leverage-ratio","1"),E=T.stringGt(V,"1")||T.stringGt(B,"1");p.push({id:u,lowercaseId:m,symbol:S,base:y,quote:b,settle:v,baseId:i,lowercaseBaseId:g,quoteId:r,settleId:l,type:e,spot:a,margin:a&&E,swap:c,future:o,option:!1,active:N,contract:n,linear:d,inverse:h,taker:I,maker:M,contractSize:k,expiry:w,expiryDatetime:this.iso8601(w),strike:void 0,optionType:void 0,precision:{amount:_,price:O,cost:x},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(V),superMax:this.parseNumber(B)},amount:{min:C,max:P},price:{min:void 0,max:void 0},cost:{min:A,max:void 0}},info:s})}return p}parseTicker(e,t){const s=this.safeString2(e,"symbol","contract_code"),i=this.safeSymbol(s,t),r=this.safeInteger(e,"ts");let a,n,o,c;"bid"in e&&(Array.isArray(e.bid)?(a=this.safeString(e.bid,0),n=this.safeString(e.bid,1)):(a=this.safeString(e,"bid"),n=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(o=this.safeString(e.ask,0),c=this.safeString(e.ask,1)):(o=this.safeString(e,"ask"),c=this.safeString(e,"askSize")));const d=this.safeString(e,"open"),h=this.safeString(e,"close"),l=this.safeString(e,"amount"),u=this.safeString(e,"vol");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:a,bidVolume:n,ask:o,askVolume:c,vwap:void 0,open:d,close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:l,quoteVolume:u,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={};let r="symbol",a="spotPublicGetMarketDetailMerged";s.linear?(a="contractPublicGetLinearSwapExMarketDetailMerged",r="contract_code"):s.inverse&&(s.future?a="contractPublicGetMarketDetailMerged":s.swap&&(a="contractPublicGetSwapExMarketDetailMerged",r="contract_code")),i[r]=s.id;const n=await this[a](this.extend(i,t)),o=this.safeValue(n,"tick",{}),c=this.parseTicker(o,s),d=this.safeInteger(n,"ts");return c.timestamp=d,c.datetime=this.iso8601(d),c}async fetchTickers(e,t={}){await this.loadMarkets();const s=this.safeValue(this.options,"fetchTickers",{}),i=this.safeString(this.options,"defaultType","spot");let r=this.safeString(s,"type",i);r=this.safeString(t,"type",r);let a="spotPublicGetMarketTickers";const n=this.safeString(this.options,"defaultSubType","inverse");let o=this.safeString(s,"subType",n);o=this.safeString(t,"subType",o);const c={},d="future"===r,h="swap"===r,l="linear"===o,u="inverse"===o;(d||h)&&(l?(a="contractPublicGetLinearSwapExMarketDetailBatchMerged",d&&(c.business_type="futures")):u&&(d?a="contractPublicGetMarketDetailBatchMerged":h&&(a="contractPublicGetSwapExMarketDetailBatchMerged"))),t=this.omit(t,["type","subType"]);const f=await this[a](this.extend(c,t)),p=this.safeValue2(f,"data","ticks",[]),m=this.safeInteger(f,"ts"),g={};for(let e=0;e<p.length;e++){const t=this.parseTicker(p[e]);if(d&&l)for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e],i=this.market(s),r=this.safeString(i.info,"contract_type");if("this_week"===r&&t.symbol===i.baseId+"-"+i.quoteId+"-CW"){t.symbol=i.symbol;break}if("next_week"===r&&t.symbol===i.baseId+"-"+i.quoteId+"-NW"){t.symbol=i.symbol;break}if("this_quarter"===r&&t.symbol===i.baseId+"-"+i.quoteId+"-CQ"){t.symbol=i.symbol;break}if("next_quarter"===r&&t.symbol===i.baseId+"-"+i.quoteId+"-NQ"){t.symbol=i.symbol;break}}const s=t.symbol;t.timestamp=m,t.datetime=this.iso8601(m),g[s]=t}return this.filterByArray(g,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={type:"step0"};let a="symbol",n="spotPublicGetMarketDepth";if(i.linear)n="contractPublicGetLinearSwapExMarketDepth",a="contract_code";else if(i.inverse)i.future?n="contractPublicGetMarketDepth":i.swap&&(n="contractPublicGetSwapExMarketDepth",a="contract_code");else if(void 0!==t){if(5!==t&&10!==t&&20!==t&&150!==t)throw new m(this.id+" fetchOrderBook() limit argument must be undefined, 5, 10, 20, or 150, default is 150");150!==t&&(r.depth=t)}r[a]=i.id;const c=await this[n](this.extend(r,s));if("tick"in c){if(!c.tick)throw new p(this.id+" fetchOrderBook() returned empty response: "+this.json(c));const t=this.safeValue(c,"tick"),s=this.safeInteger(t,"ts",this.safeInteger(c,"ts")),i=this.parseOrderBook(t,e,s);return i.nonce=this.safeInteger(t,"version"),i}throw new o(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(c))}parseTrade(e,t){const s=this.safeString2(e,"contract_code","symbol"),i=(t=this.safeMarket(s,t)).symbol;let r=this.safeInteger2(e,"ts","created-at");r=this.safeInteger2(e,"created_at","create_date",r);const a=this.safeString2(e,"order-id","order_id");let n=this.safeString(e,"direction"),o=this.safeString(e,"type");if(void 0!==o){const e=o.split("-");n=e[0],o=e[1]}const c=this.safeStringLower(e,"role"),d=this.safeString2(e,"price","trade_price");let h=this.safeString2(e,"filled-amount","amount");h=this.safeString(e,"trade_volume",h);const l=this.safeString(e,"trade_turnover");let u,f=this.safeString2(e,"filled-fees","trade_fee");const p=this.safeString2(e,"fee-currency","fee_asset");let m=this.safeCurrencyCode(p);const g=this.safeString(e,"filled-points");if(void 0!==g&&(void 0===f||T.stringEquals(f,"0"))){const t=this.safeString(e,"fee-deduct-currency");""!==t&&(f=g,m=this.safeCurrencyCode(t))}void 0!==f&&(u={cost:f,currency:m});const y=this.safeString2(e,"trade-id","tradeId"),b=this.safeString2(e,"trade_id","id",y);return this.safeTrade({id:b,info:e,order:a,timestamp:r,datetime:this.iso8601(r),symbol:i,type:o,side:n,takerOrMaker:c,price:d,amount:h,cost:l,fee:u},t)}async fetchOrderTrades(e,t,s,i,r={}){let a;[a,r]=this.handleMarketTypeAndParams("fetchOrderTrades",void 0,r);const n=this.getSupportedMapping(a,{spot:"fetchSpotOrderTrades"});return await this[n](e,t,s,i,r)}async fetchSpotOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={"order-id":e},n=await this.spotPrivateGetV1OrderOrdersOrderIdMatchresults(this.extend(a,r));return this.parseTrades(n.data,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),[r,i]=this.handleMarketTypeAndParams("fetchMyTrades",void 0,i);const n={};let o,c;if("spot"===r)void 0!==e&&(c=this.market(e),n.symbol=c.id),void 0!==s&&(n.size=s),void 0!==t&&(n["start-time"]=t),o="spotPrivateGetV1OrderMatchresults";else{if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol for "+r+" orders");const t=this.market(e);if(n.contract_code=t.id,n.trade_type=0,t.linear){const e=t.future?"cross":"isolated",s=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===s?o="contractPrivatePostLinearSwapApiV1SwapMatchresultsExact":"cross"===s&&(o="contractPrivatePostLinearSwapApiV1SwapCrossMatchresultsExact")}else if(t.inverse)if("future"===r)o="contractPrivatePostApiV1ContractMatchresultsExact",n.symbol=t.settleId;else{if("swap"!==r)throw new w(this.id+" fetchMyTrades() does not support "+r+" markets");o="contractPrivatePostSwapApiV1SwapMatchresultsExact"}}const d=await this[o](this.extend(n,i));let h=this.safeValue(d,"data");return Array.isArray(h)||(h=this.safeValue(h,"trades")),this.parseTrades(h,c,t,s)}async fetchTrades(e,t,s=1e3,i={}){await this.loadMarkets();const r=this.market(e),a={};let n="symbol",o="spotPublicGetMarketHistoryTrade";r.future?r.inverse?o="contractPublicGetMarketHistoryTrade":r.linear&&(o="contractPublicGetLinearSwapExMarketHistoryTrade",n="contract_code"):r.swap&&(r.inverse?o="contractPublicGetSwapExMarketHistoryTrade":r.linear&&(o="contractPublicGetLinearSwapExMarketHistoryTrade"),n="contract_code"),a[n]=r.id,void 0!==s&&(a.size=s);const c=await this[o](this.extend(a,i)),d=this.safeValue(c,"data",[]);let h=[];for(let e=0;e<d.length;e++){const t=this.safeValue(d[e],"data",[]);for(let e=0;e<t.length;e++){const s=this.parseTrade(t[e],r);h.push(s)}}return h=this.sortBy(h,"timestamp"),this.filterBySymbolSinceLimit(h,r.symbol,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={period:this.timeframes[t]};let o="symbol";const c=this.safeString(r,"price");r=this.omit(r,"price");let d="spotPublicGetMarketHistoryCandles";if(a.spot)void 0!==s&&(n.from=parseInt(s/1e3)),void 0!==i&&(n.size=i);else if(a.future){if(a.inverse)if("mark"===c)d="contractPublicGetIndexMarketHistoryMarkPriceKline";else if("index"===c)d="contractPublicGetIndexMarketHistoryIndex";else{if("premiumIndex"===c)throw new m(this.id+" "+a.type+" has no api endpoint for "+c+" kline data");d="contractPublicGetMarketHistoryKline"}else if(a.linear){if("mark"===c)d="contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline";else{if("index"===c)throw new m(this.id+" "+a.type+" has no api endpoint for "+c+" kline data");d="premiumIndex"===c?"contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline":"contractPublicGetLinearSwapExMarketHistoryKline"}o="contract_code"}}else if(a.swap){if(a.inverse)if("mark"===c)d="contractPublicGetIndexMarketHistorySwapMarkPriceKline";else{if("index"===c)throw new m(this.id+" "+a.type+" has no api endpoint for "+c+" kline data");d="premiumIndex"===c?"contractPublicGetIndexMarketHistorySwapPremiumIndexKline":"contractPublicGetSwapExMarketHistoryKline"}else if(a.linear)if("mark"===c)d="contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline";else{if("index"===c)throw new m(this.id+" "+a.type+" has no api endpoint for "+c+" kline data");d="premiumIndex"===c?"contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline":"contractPublicGetLinearSwapExMarketHistoryKline"}o="contract_code"}if(a.contract&&(void 0===i&&(i=2e3),n.size=i,void 0===c)){const e=this.parseTimeframe(t);if(void 0===s){const t=this.seconds();n.from=t-e*(i-1),n.to=t}else{const t=parseInt(s/1e3);n.from=t,n.to=this.sum(t,e*(i-1))}}n[o]=a.id;const h=await this[d](this.extend(n,r)),l=this.safeValue(h,"data",[]);return this.parseOHLCVs(l,a,t,s,i)}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1AccountAccounts(e),s=this.safeValue(t,"data");return this.parseAccounts(s)}parseAccount(e){const t=this.safeString(e,"type"),s=this.safeValue(this.options,"accountsById",{}),i=this.safeValue(s,t,t);return{info:e,id:this.safeString(e,"id"),type:i,code:void 0}}async fetchAccountIdByType(e,t={}){const s=await this.loadAccounts(),i=this.safeValue(t,"account-id");if(void 0!==i)return i;const r=this.indexBy(s,"type"),a=this.safeValue(s,0,{}),n=this.safeValue(r,e,a);return this.safeString(n,"id")}async fetchCurrencies(e={}){const t=await this.spotPublicGetV2ReferenceCurrencies(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"chains",[]),o={},c="normal"===this.safeString(t,"instStatus");let d,h,l,u,f,p;for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"chain");let i=this.safeString(t,"baseChainProtocol");void 0===i&&(i="h"+r===s?"ERC20":this.safeString(t,"displayName"));const a=this.safeNetwork(i);l=this.safeNumber(t,"minWithdrawAmt"),u=this.safeNumber(t,"maxWithdrawAmt");const c="allowed"===this.safeString(t,"withdrawStatus"),m="allowed"===this.safeString(t,"depositStatus"),g=c&&m,y=this.parseNumber(this.parsePrecision(this.safeString(t,"withdrawPrecision")));void 0!==y&&(h=void 0===h?y:Math.max(y,h)),c&&!p?p=!0:c||(p=!1),m&&!f?f=!0:m||(f=!1),d=this.safeNumber(t,"transactFeeWithdraw"),o[a]={info:t,id:s,network:a,limits:{withdraw:{min:l,max:u}},active:g,deposit:m,withdraw:c,fee:d,precision:y}}const m=Object.keys(o).length;i[a]={info:t,code:a,id:r,active:c,deposit:f,withdraw:p,fee:m<=1?d:void 0,name:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:m<=1?l:void 0,max:m<=1?u:void 0}},precision:h,networks:o}}return i}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);const s=this.safeValue(this.options,"fetchBalance",{}),i={};let r;const a="margin"===t,n="spot"===t,o="future"===t,c="swap"===t,d=this.safeString2(this.options,"defaultSubType","subType","inverse");let h=this.safeString2(s,"defaultSubType","subType",d);h=this.safeString2(e,"defaultSubType","subType",h);const l="inverse"===h,u="linear"===h;let f=this.safeString2(this.options,"defaultMarginMode","marginMode","isolated");f=this.safeString2(s,"defaultMarginMode","marginMode",f),f=this.safeString2(e,"defaultMarginMode","marginMode",f),e=this.omit(e,["defaultSubType","subType","defaultMarginMode","marginMode"]);const p="isolated"===f,m="cross"===f;if(n){await this.loadAccounts();const s=await this.fetchAccountIdByType(t,e);i["account-id"]=s,r="spotPrivateGetV1AccountAccountsAccountIdBalance"}else a?p?r="spotPrivateGetV1MarginAccountsBalance":m&&(r="spotPrivateGetV1CrossMarginAccountsBalance"):u?p?r="contractPrivatePostLinearSwapApiV1SwapAccountInfo":m&&(r="contractPrivatePostLinearSwapApiV1SwapCrossAccountInfo"):l&&(o?r="contractPrivatePostApiV1ContractAccountInfo":c&&(r="contractPrivatePostSwapApiV1SwapAccountInfo"));const g=await this[r](this.extend(i,e)),y={info:g},b=this.safeValue(g,"data");if(n||a){const e=this.safeValue(b,"list",[]);for(let t=0;t<e.length;t++){const s=e[t],i=this.safeString(s,"currency"),r=this.safeCurrencyCode(i);let a;a=r in y?y[r]:this.account(),"trade"===s.type&&(a.free=this.safeString(s,"balance")),"frozen"===s.type&&(a.used=this.safeString(s,"balance")),y[r]=a}}else if(u){const e=this.safeValue(b,0,{});if(m){const t=this.account();t.free=this.safeString(e,"margin_balance","margin_available"),t.used=this.safeString(e,"margin_frozen");const s=this.safeString2(e,"margin_asset","symbol");y[this.safeCurrencyCode(s)]=t}else if(p){for(let e=0;e<b.length;e++){const t=b[e],s=this.safeString2(t,"contract_code","margin_account"),i=this.safeMarket(s),r=this.safeString(t,"margin_asset"),a=this.safeCurrency(r),n=this.safeString(i,"settle",a.code);if(void 0!==n){const e=this.account();e.free=this.safeString(t,"margin_balance"),e.used=this.safeString(t,"margin_frozen");const s={};s[n]=e;y[i.symbol]=this.safeBalance(s)}}return y}}else if(l)for(let e=0;e<b.length;e++){const t=b[e],s=this.safeString(t,"symbol"),i=this.safeCurrencyCode(s),r=this.account();r.free=this.safeString(t,"margin_available"),r.used=this.safeString(t,"margin_frozen"),y[i]=r}return this.safeBalance(y)}async fetchOrder(e,t,s={}){let i;await this.loadMarkets(),[i,s]=this.handleMarketTypeAndParams("fetchOrder",void 0,s);const r={};let n,o;if("spot"===i){n="spotPrivateGetV1OrderOrdersOrderId",void 0!==this.safeString(s,"clientOrderId")?n="spotPrivateGetV1OrderOrdersGetClientOrder":r["order-id"]=e}else{if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol for "+i+" orders");if(o=this.market(t),r.contract_code=o.id,o.linear){const e=o.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===t?n="contractPrivatePostLinearSwapApiV1SwapOrderInfo":"cross"===t&&(n="contractPrivatePostLinearSwapApiV1SwapCrossOrderInfo")}else if(o.inverse)if("future"===i)n="contractPrivatePostApiV1ContractOrderInfo",r.symbol=o.settleId;else{if("swap"!==i)throw new w(this.id+" fetchOrder() does not support "+i+" markets");n="contractPrivatePostSwapApiV1SwapOrderInfo"}const c=this.safeString2(s,"client_order_id","clientOrderId");void 0===c?r.order_id=e:(r.client_order_id=c,s=this.omit(s,["client_order_id","clientOrderId"]))}const c=await this[n](this.extend(r,s));let d=this.safeValue(c,"data");return Array.isArray(d)&&(d=this.safeValue(d,0)),this.parseOrder(d)}async fetchSpotOrdersByStates(e,t,s,i,r={}){const n=this.safeString(this.options,"fetchOrdersByStatesMethod","spot_private_get_v1_order_orders");if("spot_private_get_v1_order_orders"===n&&void 0===t)throw new a(this.id+" fetchOrders() requires a symbol argument");let o;await this.loadMarkets();const c={states:e};void 0!==t&&(o=this.market(t),c.symbol=o.id),void 0!==s&&(c["start-time"]=s,c["end-time"]=this.sum(s,1728e5)),void 0!==i&&(c.size=i);const d=await this[n](this.extend(c,r)),h=this.safeValue(d,"data",[]);return this.parseOrders(h,o,s,i)}async fetchSpotOrders(e,t,s,i={}){return await this.fetchSpotOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,s,i)}async fetchClosedSpotOrders(e,t,s,i={}){return await this.fetchSpotOrdersByStates("filled,partial-canceled,canceled",e,t,s,i)}async fetchContractOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchContractOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);let n;[n,i]=this.handleMarketTypeAndParams("fetchOrders",r,i);const o={contract_code:r.id,trade_type:0,type:1,status:"0",create_date:90};let c;if(o.contract_code=r.id,r.linear){const e=r.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);c=this.getSupportedMapping(t,{isolated:"contractPrivatePostLinearSwapApiV1SwapHisorders",cross:"contractPrivatePostLinearSwapApiV1SwapCrossHisorders"})}else r.inverse&&(c=this.getSupportedMapping(n,{future:"contractPrivatePostApiV1ContractHisorders",swap:"contractPrivatePostSwapApiV1SwapHisorders"}),"future"===n&&(o.symbol=r.settleId));void 0!==s&&(o.page_size=s);const d=await this[c](this.extend(o,i)),h=this.safeValue(d,"data",{}),l=this.safeValue(h,"orders",[]);return this.parseOrders(l,r,t,s)}async fetchClosedContractOrders(e,t,s,i={}){return await this.fetchContractOrders(e,t,s,this.extend({status:"5,6,7"},i))}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets(),[r,i]=this.handleMarketTypeAndParams("fetchOrders",void 0,i);const n=this.getSupportedMapping(r,{spot:"fetchSpotOrders",swap:"fetchContractOrders",future:"fetchContractOrders"});if(void 0===n)throw new w(this.id+" fetchOrders() does not support "+r+" markets yet");if(("swap"===r||"future"===r)&&void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument for "+r+" orders");return await this[n](e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets(),[r,i]=this.handleMarketTypeAndParams("fetchClosedOrders",void 0,i);const a=this.getSupportedMapping(r,{spot:"fetchClosedSpotOrders",swap:"fetchClosedContractOrders",future:"fetchClosedContractOrders"});if(void 0===a)throw new w(this.id+" fetchClosedOrders() does not support "+r+" markets yet");return await this[a](e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),[r,i]=this.handleMarketTypeAndParams("fetchOpenOrders",void 0,i);const n={};let o,c;if("spot"===r){o="spotPrivateGetV1OrderOpenOrders",void 0!==e&&(c=this.market(e),n.symbol=c.id);let t=this.safeString(i,"account-id");if(void 0===t){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){const s=this.accounts[e];if("spot"===s.type&&(t=this.safeString(s,"id"),void 0!==t))break}}n["account-id"]=t,void 0!==s&&(n.size=s),i=this.omit(i,"account-id")}else{if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol for "+r+" orders");const t=this.market(e);if(n.contract_code=t.id,t.linear){const e=t.future?"cross":"isolated",s=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===s?o="contractPrivatePostLinearSwapApiV1SwapOpenorders":"cross"===s&&(o="contractPrivatePostLinearSwapApiV1SwapCrossOpenorders")}else t.inverse&&(t.future?(o="contractPrivatePostApiV1ContractOpenorders",n.symbol=t.settleId):t.swap&&(o="contractPrivatePostSwapApiV1SwapOpenorders"));void 0!==s&&(n.page_size=s)}const d=await this[o](this.extend(n,i));let h=this.safeValue(d,"data");return Array.isArray(h)||(h=this.safeValue(h,"orders",[])),this.parseOrders(h,c,t,s)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open",created:"open",1:"open",2:"open",3:"open",4:"open",5:"canceled",6:"closed",7:"canceled",11:"canceling"},e,e)}parseOrder(e,t){const s=this.safeString2(e,"id","order_id_str");let i=this.safeString(e,"direction"),r=this.safeString(e,"order_price_type");if("type"in e){const t=e.type.split("-");i=t[0],r=t[1]}const a=this.parseOrderStatus(this.safeString2(e,"state","status")),n=this.safeString2(e,"contract_code","symbol");t=this.safeMarket(n,t);const o=this.safeIntegerN(e,["created_at","created-at","create_date"]),c=this.safeString2(e,"client_order_id","client-order-id"),d=this.safeString2(e,"volume","amount");let h=this.safeString2(e,"filled-amount","field-amount");h=this.safeString(e,"trade_volume",h);const l=this.safeString(e,"price");let u=this.safeString2(e,"filled-cash-amount","field-cash-amount");u=this.safeString(e,"trade_turnover",u);let f,p=this.safeString2(e,"filled-fees","field-fees");if(p=this.safeString(e,"fee",p),void 0!==p){let s;const r=this.safeString(e,"fee_asset");s=void 0!==r?this.safeCurrencyCode(r):"sell"===i?t.quote:t.base,f={cost:p,currency:s}}const m=this.safeString(e,"stop-price"),g=this.safeString(e,"trade_avg_price"),y=this.safeValue(e,"trades");return this.safeOrder({info:e,id:s,clientOrderId:c,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:i,price:l,stopPrice:m,average:g,cost:u,amount:d,filled:h,remaining:void 0,status:a,fee:f,trades:y},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),[o,c]=this.handleMarketTypeAndParams("createOrder",n,a),d=this.getSupportedMapping(o,{spot:"createSpotOrder",swap:"createContractOrder",future:"createContractOrder"});if(void 0===d)throw new w(this.id+" createOrder() does not support "+o+" markets yet");return await this[d](e,t,s,i,r,c)}async createSpotOrder(e,t,s,i,r,n={}){await this.loadMarkets(),await this.loadAccounts();const o=this.market(e),c={"account-id":await this.fetchAccountIdByType(o.type),symbol:o.id};let d=t.replace("buy-","");d=d.replace("sell-","");const h=this.safeValue(this.options,o.type,{}),u=this.safeString2(n,"stopPrice","stop-price");if(void 0===u){if(d in this.safeValue(h,"stopOrderTypes",{}))throw new a(this.id+" createOrder() requires a stopPrice or a stop-price parameter for a stop order")}else{const s=this.safeString(n,"operator");if(void 0===s)throw new a(this.id+' createOrder() requires an operator parameter "gte" or "lte" for a stop order');if(n=this.omit(n,["stopPrice","stop-price"]),c["stop-price"]=this.priceToPrecision(e,u),c.operator=s,"limit"===d||"limit-fok"===d)d="stop-"+d;else if("stop-limit"!==d&&"stop-limit-fok"!==d)throw new w(this.id+" createOrder() does not support "+t+" orders")}this.safeValue(n,"postOnly",!1)&&(d="limit-maker"),c.type=s+"-"+d;const f=this.safeString2(n,"clientOrderId","client-order-id");if(void 0===f){const e=this.safeValue(this.options,"broker",{}),t=this.safeString(e,"id");c["client-order-id"]=t+this.uuid()}else c["client-order-id"]=f;if(n=this.omit(n,["clientOrderId","client-order-id","postOnly"]),"market"===d&&"buy"===s)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new l(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");c.amount=this.costToPrecision(e,parseFloat(i)*parseFloat(r))}else c.amount=this.costToPrecision(e,i);else c.amount=this.amountToPrecision(e,i);d in this.safeValue(h,"limitOrderTypes",{})&&(c.price=this.priceToPrecision(e,r));const p=await this.spotPrivatePostV1OrderOrdersPlace(this.extend(c,n));return{info:p,id:this.safeString(p,"data"),timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async createContractOrder(e,t,s,i,r,n={}){const o=this.safeString(n,"offset");if(void 0===o)throw new a(this.id+" createOrder() requires a string offset parameter for contract orders, open or close");if(void 0!==this.safeString(n,"stopPrice"))throw new w(this.id+" createOrder() supports tp_trigger_price + tp_order_price for take profit orders and/or sl_trigger_price + sl_order price for stop loss orders, stop orders are supported only with open long orders and open short orders");const c=this.market(e),d={contract_code:c.id,volume:this.amountToPrecision(e,i),direction:s,offset:o,lever_rate:1},h=this.safeString(n,"sl_order_price"),l=this.safeString(n,"sl_trigger_price"),u=this.safeString(n,"tp_order_price"),f=this.safeString(n,"tp_trigger_price"),p="open"===o;let m=!1;if(void 0!==l&&(d.sl_trigger_price=this.priceToPrecision(e,l),m=!0,void 0!==r&&(d.sl_order_price=this.priceToPrecision(e,r))),void 0!==h&&(d.sl_order_price=this.priceToPrecision(e,h),m=!0),void 0!==f&&(d.tp_trigger_price=this.priceToPrecision(e,f),m=!0,void 0!==r&&(d.tp_order_price=this.priceToPrecision(e,r))),void 0!==u&&(d.tp_order_price=this.priceToPrecision(e,u),m=!0),m&&!p)throw new w(this.id+" createOrder() supports tp_trigger_price + tp_order_price for take profit orders and/or sl_trigger_price + sl_order price for stop loss orders, stop orders are supported only with open long orders and open short orders");n=this.omit(n,["sl_order_price","sl_trigger_price","tp_order_price","tp_trigger_price"]);this.safeValue(n,"postOnly",!1)&&(t="post_only"),"limit"!==t&&"ioc"!==t&&"fok"!==t&&"post_only"!==t||(d.price=this.priceToPrecision(e,r)),d.order_price_type=t;const g=this.safeValue(this.options,"broker",{}),y=this.safeString(g,"id");d.channel_code=y;const b=this.safeString2(n,"client_order_id","clientOrderId");let v;if(void 0!==b&&(d.client_order_id=b,n=this.omit(n,["client_order_id","clientOrderId"])),c.linear){const e=c.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===t?v="contractPrivatePostLinearSwapApiV1SwapOrder":"cross"===t&&(v="contractPrivatePostLinearSwapApiV1SwapCrossOrder")}else c.inverse&&(c.swap?v="contractPrivatePostSwapApiV1SwapOrder":c.future&&(v="contractPrivatePostApiV1ContractOrder"));const S=await this[v](this.extend(d,n)),k=this.safeValue(S,"data",{});return this.parseOrder(k,c)}async cancelOrder(e,t,s={}){let i;await this.loadMarkets(),[i,s]=this.handleMarketTypeAndParams("cancelOrder",void 0,s);const r={};let n,o;if("spot"===i){const t=this.safeString2(s,"client-order-id","clientOrderId");n="spotPrivatePostV1OrderOrdersOrderIdSubmitcancel",void 0===t?r["order-id"]=e:(r["client-order-id"]=t,n="spotPrivatePostV1OrderOrdersSubmitCancelClientOrder",s=this.omit(s,["client-order-id","clientOrderId"]))}else{if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol for "+i+" orders");if(o=this.market(t),r.contract_code=o.id,o.linear){const e=o.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===t?n="contractPrivatePostLinearSwapApiV1SwapCancel":"cross"===t&&(n="contractPrivatePostLinearSwapApiV1SwapCrossCancel")}else{if(!o.inverse)throw new w(this.id+" cancelOrder() does not support "+i+" markets");o.future?(n="contractPrivatePostApiV1ContractCancel",r.symbol=o.settleId):o.swap&&(n="contractPrivatePostSwapApiV1SwapCancel")}const c=this.safeString2(s,"client_order_id","clientOrderId");void 0===c?r.order_id=e:(r.client_order_id=c,s=this.omit(s,["client_order_id","clientOrderId"]))}const c=await this[n](this.extend(r,s));return this.extend(this.parseOrder(c,o),{id:e,status:"canceled"})}async cancelOrders(e,t,s={}){let i;await this.loadMarkets(),[i,s]=this.handleMarketTypeAndParams("cancelOrders",void 0,s);const r={};let n;if("spot"===i){let t=this.safeValue2(s,"client-order-id","clientOrderId");t=this.safeValue2(s,"client-order-ids","clientOrderIds",t),void 0===t?r["order-ids"]="string"==typeof t?e:e.join(","):(r["client-order-ids"]="string"==typeof t?t:t.join(","),s=this.omit(s,["client-order-id","client-order-ids","clientOrderId","clientOrderIds"])),n="spotPrivatePostV1OrderOrdersBatchcancel"}else{if(void 0===t)throw new a(this.id+" cancelOrders() requires a symbol for "+i+" orders");const o=this.market(t);if(r.contract_code=o.id,o.linear){const e=o.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===t?n="contractPrivatePostLinearSwapApiV1SwapCancel":"cross"===t&&(n="contractPrivatePostLinearSwapApiV1SwapCrossCancel")}else if(o.inverse)if(o.future)n="contractPrivatePostApiV1ContractCancel",r.symbol=o.settleId;else{if(!o.swap)throw new w(this.id+" cancelOrders() does not support "+i+" markets");n="contractPrivatePostSwapApiV1SwapCancel"}let c=this.safeString2(s,"client_order_id","clientOrderId");c=this.safeString2(s,"client_order_ids","clientOrderIds",c),void 0===c?r.order_id=e.join(","):(r.client_order_id=c,s=this.omit(s,["client_order_id","client_order_ids","clientOrderId","clientOrderIds"]))}return await this[n](this.extend(r,s))}async cancelAllOrders(e,t={}){let s;await this.loadMarkets(),[s,t]=this.handleMarketTypeAndParams("cancelAllOrders",void 0,t);const i={};let r,n;if("spot"===s)void 0!==e&&(r=this.market(e),i.symbol=r.id),n="spotPrivatePostV1OrderOrdersBatchCancelOpenOrders";else{if(void 0===e)throw new a(this.id+" cancelAllOrders() requires a symbol for "+s+" orders");const t=this.market(e);if(i.contract_code=t.id,t.linear){const e=t.future?"cross":"isolated",s=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===s?n="contractPrivatePostLinearSwapApiV1SwapCancelallall":"cross"===s&&(n="contractPrivatePostLinearSwapApiV1SwapCrossCancelall")}else if(t.inverse)if("future"===s)n="contractPrivatePostApiV1ContractCancelall",i.symbol=t.settleId;else{if("swap"!==s)throw new w(this.id+" cancelAllOrders() does not support "+s+" markets");n="contractPrivatePostSwapApiV1SwapCancelall"}}return await this[n](this.extend(i,t))}safeNetwork(e){const t=e.length-1;"1"===e[t]&&(e=e.slice(0,t));return this.safeString({},e,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeCurrencyCode(r,t),n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),c=this.indexBy(o,"id"),d=this.safeValue(c,n,n),h=this.safeString(d,"network"),l=this.safeString(e,"note");return this.checkAddress(s),{currency:a,address:s,tag:i,network:h,note:l,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.spotPrivateGetV2AccountDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=this.parseDepositAddresses(r,[e],!1);return this.indexBy(a,"network")}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network"),i=this.safeValue(this.options,"networks",{}),r=this.safeStringUpper(i,s,s);t=this.omit(t,"network");const a=await this.fetchDepositAddressesByNetwork(e,t);let n;if(void 0===r){if(n=this.safeValue(a,e),void 0===n){const t=this.safeString(i,e,e);if(n=this.safeValue(a,t),void 0===n){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(n=this.safeValue(a,t),void 0===n){const t=Object.values(a);if(n=this.safeValue(t,0),void 0===n)throw new v(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return n}if(n=this.safeValue(a,r),void 0===n)throw new v(this.id+" fetchDepositAddress() cannot find "+r+" deposit address for "+e);return n}async fetchWithdrawAddressesByNetwork(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.spotPrivateGetV2AccountWithdrawAddress(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=this.parseDepositAddresses(r,[e],!1);return this.indexBy(a,"network")}async fetchWithdrawAddress(e,t={}){const s=this.safeStringUpper(t,"network"),i=this.safeValue(this.options,"networks",{}),r=this.safeStringUpper(i,s,s);t=this.omit(t,"network");const a=await this.fetchWithdrawAddressesByNetwork(e,t);let n;if(void 0===r){if(n=this.safeValue(a,e),void 0===n){const t=this.safeString(i,e,e);if(n=this.safeValue(a,t),void 0===n){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(n=this.safeValue(a,t),void 0===n){const t=Object.values(a);if(n=this.safeValue(t,0),void 0===n)throw new v(this.id+" fetchWithdrawAddress() cannot find withdraw address for "+e)}}}return n}if(n=this.safeValue(a,r),void 0===n)throw new v(this.id+" fetchWithdrawAddress() cannot find "+r+" withdraw address for "+e);return n}async fetchDeposits(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"deposit",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.spotPrivateGetV1QueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"withdraw",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.spotPrivateGetV1QueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}parseTransaction(e,t){const s=this.safeInteger(e,"created-at"),i=this.safeInteger(e,"updated-at"),r=this.safeCurrencyCode(this.safeString(e,"currency"));let a=this.safeString(e,"type");"withdraw"===a&&(a="withdrawal");const n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.safeString(e,"address-tag");let c=this.safeNumber(e,"fee");void 0!==c&&(c=Math.abs(c));const d=this.safeString(e,"address"),h=this.safeStringUpper(e,"chain");return{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:s,datetime:this.iso8601(s),network:h,address:d,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,type:a,amount:this.safeNumber(e,"amount"),currency:r,status:n,updated:i,fee:{currency:r,cost:c,rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={address:s,amount:t,currency:a.id.toLowerCase()};void 0!==i&&(n["addr-tag"]=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.chain="erc20"===c?a.id+c:c+a.id,r=this.omit(r,"network"));const d=await this.spotPrivatePostV1DwWithdrawApiCreate(this.extend(n,r));return this.parseTransaction(d,a)}parseTransfer(e,t){return{info:e,id:this.safeString(e,"data"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);let n=this.safeString(r,"type");if(void 0===n){const e=this.safeValue(this.options,"accountsByType",{});s=s.toLowerCase(),i=i.toLowerCase();n=this.safeString(e,s,s)+"-to-"+this.safeString(e,i,i)}const o={currency:a.id,amount:parseFloat(this.currencyToPrecision(e,t)),type:n},c=await this.spotPrivatePostFuturesTransfer(this.extend(o,r)),d=this.parseTransfer(c,a);return this.extend(d,{amount:t,currency:e,fromAccount:s,toAccount:i})}async fetchBorrowRatesPerSymbol(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1MarginLoanInfo(e),s=this.milliseconds(),i=this.safeValue(t,"data",[]),r={info:t};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeValue(t,"currencies",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"currency"),r=this.safeCurrencyCode(i,"currency");n[r]={currency:r,rate:this.safeNumber(t,"actual-rate"),span:864e5,timestamp:s,datetime:this.iso8601(s)}}r[this.markets_by_id[this.safeString(t,"symbol")].symbol]=n}return r}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1MarginLoanInfo(e),s=this.milliseconds(),i=this.safeValue(t,"data",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeValue(t,"currencies",[]);for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"currency"),n=this.safeCurrencyCode(i,"currency");r[n]={currency:n,rate:this.safeNumber(t,"actual-rate"),span:864e5,timestamp:s,datetime:this.iso8601(s),info:void 0}}}return r}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={contract_code:r.id};let o;if(r.inverse)o="contractPublicGetSwapApiV1SwapHistoricalFundingRate";else{if(!r.linear)throw new w(this.id+" fetchFundingRateHistory() supports inverse and linear swaps only");o="contractPublicGetLinearSwapApiV1SwapHistoricalFundingRate"}const c=await this[o](this.extend(n,i)),d=this.safeValue(c,"data"),h=this.safeValue(d,"data",[]),l=[];for(let e=0;e<h.length;e++){const t=h[e],s=this.safeString(t,"contract_code"),i=this.safeSymbol(s),r=this.safeInteger(t,"funding_time");l.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"funding_rate"),timestamp:r,datetime:this.iso8601(r)})}const u=this.sortBy(l,"timestamp");return this.filterBySymbolSinceLimit(u,r.symbol,t,s)}parseFundingRate(e,t){const s=this.safeNumber(e,"estimated_rate"),i=this.safeInteger(e,"funding_time"),r=this.safeInteger(e,"next_funding_time"),a=this.safeString(e,"contract_code");return{info:e,symbol:this.safeSymbol(a,t),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:i,fundingDatetime:this.iso8601(i),nextFundingRate:s,nextFundingTimestamp:r,nextFundingDatetime:this.iso8601(r),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);let i;if(s.inverse)i="contractPublicGetSwapApiV1SwapFundingRate";else{if(!s.linear)throw new w(this.id+" fetchFundingRate() supports inverse and linear swaps only");i="contractPublicGetLinearSwapApiV1SwapFundingRate"}const r={contract_code:s.id},a=await this[i](this.extend(r,t)),n=this.safeValue(a,"data",{});return this.parseFundingRate(n,s)}async fetchFundingRates(e,t={}){await this.loadMarkets();const s=this.safeValue(this.options,"fetchFundingRates",{}),i=this.safeString(this.options,"defaultSubType","inverse");let r=this.safeString(s,"subType",i);r=this.safeString(t,"subType",r);const a=this.getSupportedMapping(r,{linear:"contractPublicGetLinearSwapApiV1SwapBatchFundingRate",inverse:"contractPublicGetSwapApiV1SwapBatchFundingRate"});t=this.omit(t,"subType");const n=await this[a](this.extend({},t)),o=this.safeValue(n,"data",[]),c=this.parseFundingRates(o);return this.filterByArray(c,"symbol",e)}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a=this.safeString(r,"marginMode","cross"),n=this.safeString2(this.options,"defaultMarginMode","marginMode",a),o={};let c,d;if(void 0!==s&&(o["start-date"]=this.yyyymmdd(s)),void 0!==i&&(o.size=i),"isolated"===n)d="privateGetMarginLoanOrders",void 0!==t&&(c=this.market(t),o.symbol=c.id);else if(d="privateGetCrossMarginLoanOrders",void 0!==e){const t=this.currency(e);o.currency=t.id}const h=await this[d](this.extend(o,r)),l=this.safeValue(h,"data"),u=this.parseBorrowInterests(l,c);return this.filterByCurrencySinceLimit(u,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"symbol"),i=void 0===s?"cross":"isolated";t=this.safeMarket(s);const r=this.safeString(t,"symbol"),a=this.safeNumber(e,"accrued-at");return{account:"isolated"===i?r:"cross",symbol:r,marginMode:i,currency:this.safeCurrencyCode(this.safeString(e,"currency")),interest:this.safeNumber(e,"interest-amount"),interestRate:this.safeNumber(e,"interest-rate"),amountBorrowed:this.safeNumber(e,"loan-amount"),timestamp:a,datetime:this.iso8601(a),info:e}}sign(e,t="public",s="GET",i={},r,a){let n="/";const o=this.omit(i,this.extractParams(e));if("string"==typeof t){if("market"===t?n+=t:"public"===t||"private"===t?n+=this.version:"v2Public"!==t&&"v2Private"!==t||(n+="v2"),n+="/"+this.implodeParams(e,i),"private"===t||"v2Private"===t){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==s&&(t=this.extend(t,o)),t=this.keysort(t);let i=this.urlencode(t);const c=[s,this.hostname,n,i].join("\n"),d=this.hmac(this.encode(c),this.encode(this.secret),"sha256","base64");i+="&"+this.urlencode({Signature:d}),n+="?"+i,"POST"===s?(a=this.json(o),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(o).length&&(n+="?"+this.urlencode(o));n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n}else{const c=this.safeString(t,0),d=this.safeString(t,1),h=this.safeString(t,2),l=this.safeString(t,3);let u,f=this.safeValue(this.urls.hostnames,c);if("string"!=typeof f&&(f=this.safeValue(f,h),"string"!=typeof u&&void 0!==l&&(f=this.safeValue(f,l))),u=f,n+=this.implodeParams(e,i),"public"===d)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===d){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==s&&(t=this.extend(t,o)),t=this.keysort(t);let i=this.urlencode(t);const c=[s,u,n,i].join("\n"),d=this.hmac(this.encode(c),this.encode(this.secret),"sha256","base64");i+="&"+this.urlencode({Signature:d}),n+="?"+i,"POST"===s?(a=this.json(o),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}n=this.implodeParams(this.urls.api[c],{hostname:u})+n}return{url:n,method:s,body:a,headers:r}}calculateRateLimiterCost(e,t,s,i,r={},a={}){return this.safeInteger(r,"cost",1)}handleErrors(e,t,s,i,r,a,n,c,d){if(void 0!==n&&"status"in n){if("error"===this.safeString(n,"status")){const e=this.safeString2(n,"err-code","err_code"),t=this.id+" "+a;this.throwBroadlyMatchedException(this.exceptions.broad,a,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);const s=this.safeString2(n,"err-msg","err_msg");throw this.throwExactlyMatchedException(this.exceptions.exact,s,t),new o(t)}}}async fetchFundingHistory(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchFundingHistory",r,i);let c;const d={type:"30,31"};if(r.linear){c="contractPrivatePostLinearSwapApiV1SwapFinancialRecordExact";const e=r.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);d.margin_account="isolated"===t?r.id:r.quoteId}else{if("swap"!==a)throw new o(this.id+" fetchFundingHistory() only makes sense for swap contracts");c="contractPrivatePostSwapApiV1SwapFinancialRecordExact",d.contract_code=r.id}const h=await this[c](this.extend(d,n)),l=this.safeValue(h,"data",{}),u=this.safeValue(l,"financial_record",[]);return this.parseIncomes(u,r,t,s)}async setLeverage(e,t,s={}){if(void 0===t)throw new a(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();const i=this.market(t),[r,n]=this.handleMarketTypeAndParams("setLeverage",i,s);let o;if(i.linear){const e=i.future?"cross":"isolated",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);o=this.getSupportedMapping(t,{isolated:"contractPrivatePostLinearSwapApiV1SwapSwitchLeverRate",cross:"contractPrivatePostLinearSwapApiV1SwapCrossSwitchLeverRate"})}else o=this.getSupportedMapping(r,{future:"contractPrivatePostApiV1ContractSwitchLeverRate",swap:"contractPrivatePostSwapApiV1SwapSwitchLeverRate"});const c={lever_rate:e};"future"===r&&i.inverse?c.symbol=i.settleId:c.contract_code=i.id;return await this[o](this.extend(c,n))}parseIncome(e,t){const s=this.safeString(e,"contract_code"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"amount"),a=this.safeInteger(e,"ts"),n=this.safeString(e,"id"),o=this.safeString2(e,"symbol","asset");return{info:e,symbol:i,code:this.safeCurrencyCode(o),timestamp:a,datetime:this.iso8601(a),id:n,amount:r}}parseIncomes(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s],a=this.parseIncome(i,t);r.push(a)}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,s,i,"timestamp")}parsePosition(e,t){const s=(t=this.safeMarket(this.safeString(e,"contract_code"))).symbol,i=this.safeString(e,"volume"),r=this.safeValue(t,"contractSize"),a=this.numberToString(r),n=this.safeNumber(e,"cost_open"),o=this.safeString(e,"position_margin"),c="buy"===this.safeString(e,"direction")?"long":"short",d=this.safeNumber(e,"profit_unreal");let h=this.safeString(e,"margin_mode");const l=this.safeString(e,"lever_rate"),u=T.stringMul(this.safeString(e,"profit_rate"),"100"),f=this.safeString(e,"last_price"),p=T.stringMul(i,a);let m;t.linear?m=T.stringMul(p,f):(m=T.stringDiv(p,f),h="cross");const g=T.stringDiv(o,m),y=this.safeString(e,"margin_balance"),b=this.safeNumber(e,"liquidation_price"),v=this.safeString(e,"adjust_factor"),w=T.stringDiv(v,l),S=T.stringMul(w,m),k=T.stringDiv(S,y);return{info:e,symbol:s,contracts:this.parseNumber(i),contractSize:r,entryPrice:n,collateral:this.parseNumber(y),side:c,unrealizedProfit:d,leverage:this.parseNumber(l),percentage:this.parseNumber(u),marginMode:h,notional:this.parseNumber(m),markPrice:void 0,liquidationPrice:b,initialMargin:this.parseNumber(o),initialMarginPercentage:this.parseNumber(g),maintenanceMargin:this.parseNumber(S),maintenanceMarginPercentage:this.parseNumber(w),marginRatio:this.parseNumber(k),timestamp:void 0,datetime:void 0}}async fetchPositions(e,t={}){await this.loadMarkets();const s=this.safeString2(this.options,"defaultMarginMode","marginMode","isolated"),i=this.safeString(this.options,"defaultSubType","inverse");let r,a;[r,t]=this.handleMarketTypeAndParams("fetchPositions",void 0,t),"spot"===r&&(r="future"),a="linear"===i?this.getSupportedMapping(s,{isolated:"contractPrivatePostLinearSwapApiV1SwapPositionInfo",cross:"contractPrivatePostLinearSwapApiV1SwapCrossPositionInfo"}):this.getSupportedMapping(r,{future:"contractPrivatePostApiV1ContractPositionInfo",swap:"contractPrivatePostSwapApiV1SwapPositionInfo"});const n=await this[a](t),o=this.safeValue(n,"data",[]),c=this.safeInteger(n,"ts"),d=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.parsePosition(t);d.push(this.extend(s,{timestamp:c,datetime:this.iso8601(c)}))}return this.filterByArray(d,"symbol",e,!1)}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e);let i=this.safeString2(this.options,"defaultMarginMode","marginMode","isolated");i=this.safeString2(t,"marginMode","defaultMarginMode",i),t=this.omit(t,["defaultMarginMode","marginMode"]);const[r,a]=this.handleMarketTypeAndParams("fetchPosition",s,t);let n;n=s.linear?this.getSupportedMapping(i,{isolated:"contractPrivatePostLinearSwapApiV1SwapAccountPositionInfo",cross:"contractPrivatePostLinearSwapApiV1SwapCrossAccountPositionInfo"}):this.getSupportedMapping(r,{future:"contractPrivatePostApiV1ContractAccountPositionInfo",swap:"contractPrivatePostSwapApiV1SwapAccountPositionInfo"});const o={};s.future&&s.inverse?o.symbol=s.settleId:("cross"===i&&(o.margin_account="USDT"),o.contract_code=s.id);const c=await this[n](this.extend(o,a)),d=this.safeValue(c,"data");let h;h="cross"===i?d:this.safeValue(d,0);const l=this.omit(h,["positions"]),u=this.safeValue(h,"positions");let f;if(s.future&&s.inverse)for(let e=0;e<u.length;e++){const t=u[e];if(t.contract_code===s.id){f=t;break}}else f=this.safeValue(u,0);const p=this.safeInteger(c,"ts"),m=this.parsePosition(this.extend(f,l));return this.extend(m,{timestamp:p,datetime:this.iso8601(p)})}parseLedgerEntryType(e){return this.safeString({trade:"trade",etf:"trade","transact-fee":"fee","fee-deduction":"fee",transfer:"transfer",credit:"credit",liquidation:"trade",interest:"credit",deposit:"deposit",withdraw:"withdrawal","withdraw-fee":"fee",exchange:"exchange","other-types":"transfer",rebate:"rebate"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"transactId"),i=this.safeString(e,"currency"),r=this.safeCurrencyCode(i,t),a=this.safeNumber(e,"transactAmt"),n=this.safeString(e,"transferType"),o=this.parseLedgerEntryType(n),c=this.safeString(e,"direction"),d=this.safeInteger(e,"transactTime"),h=this.iso8601(d),l=this.safeString(e,"accountId");return{id:s,direction:c,account:l,referenceId:s,referenceAccount:l,type:o,currency:r,amount:a,timestamp:d,datetime:h,before:void 0,after:void 0,status:void 0,fee:void 0,info:e}}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={accountId:await this.fetchAccountIdByType("spot",i)};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.startTime=t),void 0!==s&&(r.limit=s);const n=await this.spotPrivateGetV2AccountLedger(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseLedger(o,a,t,s)}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.contractPublicGetLinearSwapApiV1SwapAdjustfactor(t),i=this.safeValue(s,"data");return this.parseLeverageTiers(i,e,"contract_code")}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.market(e);if(!t.contract)throw new m(this.id+" fetchMarketLeverageTiers() symbol supports contract markets only");s.contract_code=t.id}const i=await this.contractPublicGetLinearSwapApiV1SwapAdjustfactor(this.extend(s,t)),r=this.safeValue(i,"data"),a=this.parseLeverageTiers(r,[e],"contract_code");return this.safeValue(a,e)}parseLeverageTiers(e,t,s){const i={};for(let r=0;r<e.length;r++){const a=e[r],n=this.safeValue(a,"list",[]),o=[],c=this.safeString(a,"trade_partition"),d=this.safeString(a,s),h=this.safeSymbol(d);if(this.inArray(t,h)){for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"lever_rate"),i=this.safeValue(t,"ladders",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"adjust_factor");o.push({tier:this.safeInteger(t,"ladder"),currency:this.safeCurrencyCode(c),minNotional:this.safeNumber(t,"min_size"),maxNotional:this.safeNumber(t,"max_size"),maintenanceMarginRate:this.parseNumber(T.stringDiv(r,s)),maxLeverage:this.parseNumber(s),info:t})}}i[h]=o}}return i}async fetchOpenInterestHistory(e,t="1h",s,i,r={}){if("1h"!==t&&"4h"!==t&&"12h"!==t&&"1d"!==t)throw new m(this.id+" fetchOpenInterestHistory cannot only use the 1h, 4h, 12h and 1d timeframe");await this.loadMarkets();const n=this.market(e),o=this.safeNumber2(r,"amount_type","amountType");if(void 0===o)throw new a(this.id+" fetchOpenInterestHistory requires parameter params.amountType to be either 1 (cont), or 2 (cryptocurrenty)");const c={period:{"1h":"60min","4h":"4hour","12h":"12hour","1d":"1day"}[t],amount_type:o};let d;n.future?(c.contract_type=this.safeString(n.info,"contract_type"),c.symbol=n.baseId,d="contractPublicGetApiV1ContractHisOpenInterest"):n.linear?(c.contract_type="swap",c.contract_code=n.id,c.contract_code=n.id,d="contractPublicGetLinearSwapApiV1SwapHisOpenInterest"):(c.contract_code=n.id,d="contractPublicGetSwapApiV1SwapHisOpenInterest"),void 0!==i&&(c.size=i);const h=await this[d](this.extend(c,r)),l=this.safeValue(h,"data"),u=this.safeValue(l,"tick");return this.parseOpenInterests(u,void 0,s,i)}parseOpenInterest(e,t){const s=this.safeNumber(e,"ts");return{symbol:this.safeString(t,"symbol"),baseVolume:this.safeNumber(e,"volume"),quoteVolume:this.safeValue(e,"value"),timestamp:s,datetime:this.iso8601(s),info:e}}async borrowMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e),n={currency:r.id,amount:this.currencyToPrecision(e,t)},o=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),c=this.safeString(i,"marginMode",o);let d;if("isolated"===c){if(void 0===s)throw new a(this.id+" borrowMargin() requires a symbol argument for isolated margin");const e=this.market(s);n.symbol=e.id,d="privatePostMarginOrders"}else"cross"===c&&(d="privatePostCrossMarginOrders");i=this.omit(i,"marginMode");const h=await this[d](this.extend(n,i)),l=this.parseMarginLoan(h,r);return this.extend(l,{amount:t,symbol:s})}async repayMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e),a=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),n=this.safeString(i,"marginMode",a);i=this.omit(i,"marginMode");const o=this.safeValue(this.options,"marginAccounts",{}),c=this.getSupportedMapping(n,o),d=await this.fetchAccountIdByType(c,i),h={currency:r.id,amount:this.currencyToPrecision(e,t),accountId:d},l=await this.v2PrivatePostAccountRepayment(this.extend(h,i)),u=this.safeValue(l,"Data",[]),f=this.safeValue(u,0),p=this.parseMarginLoan(f,r);return this.extend(p,{amount:t,symbol:s})}parseMarginLoan(e,t){const s=this.safeInteger(e,"repayTime");return{id:this.safeInteger2(e,"repayId","data"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:s,datetime:this.iso8601(s),info:e}}async fetchSettlementHistory(e,t,s,i={}){const r=this.safeString(i,"code"),n=this.safeInteger2(i,"until","till");i=this.omit(i,["until","till"]);const o=void 0===e?void 0:this.market(e),[c,d]=this.handleMarketTypeAndParams("fetchSettlementHistory",o,i);if("future"===c){if(void 0===e&&void 0===r)throw new a(this.id+' requires a symbol argument or params["code"] for fetchSettlementHistory future')}else if(void 0===e)throw new a(this.id+" requires a symbol argument for fetchSettlementHistory swap");const h={};o.future?h.symbol=o.baseId:h.contract_code=o.id,void 0!==t&&(h.start_at=t),void 0!==s&&(h.page_size=s),void 0!==n&&(h.end_at=n);let l="contractPublicGetApiV1ContractSettlementRecords";o.swap&&(l=o.linear?"contractPublicGetLinearSwapApiV1SwapSettlementRecords":"contractPublicGetSwapApiV1SwapSettlementRecords");const u=await this[l](this.extend(h,d)),f=this.safeValue(u,"data"),p=this.safeValue(f,"settlement_record"),m=this.parseSettlements(p,o);return this.sortBy(m,"timestamp")}parseSettlements(e,t){const s=[];for(let i=0;i<e.length;i++){const r=e[i],a=this.safeValue(r,"list");if(void 0!==a){const e=this.safeInteger(r,"settlement_time"),i={timestamp:e,datetime:this.iso8601(e)};for(let e=0;e<a.length;e++){const r=a[e],n=this.parseSettlement(r,t);s.push(this.extend(n,i))}}else s.push(this.parseSettlement(e[i],t))}return s}parseSettlement(e,t){const s=this.safeInteger(e,"settlement_time"),i=this.safeString(e,"contract_code");return{info:e,symbol:this.safeSymbol(i,t),price:this.safeNumber(e,"settlement_price"),timestamp:s,datetime:this.iso8601(s)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],212:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeError:a,PermissionDenied:n,ExchangeNotAvailable:o,OnMaintenance:c,InvalidOrder:d,OrderNotFound:h,InsufficientFunds:l,ArgumentsRequired:u,BadSymbol:f,BadRequest:p,RequestTimeout:m,NetworkError:g}=e("./base/errors"),{TRUNCATE:y,TICK_SIZE:b}=e("./base/functions/number"),v=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"huobijp",name:"Huobi Japan",countries:["JP"],rateLimit:100,userAgent:this.userAgents.chrome39,certified:!1,version:"v1",accounts:void 0,accountsById:void 0,hostname:"api-cloud.huobi.co.jp",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingLimits:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg",api:{market:"https://{hostname}",public:"https://{hostname}",private:"https://{hostname}",v2Public:"https://{hostname}",v2Private:"https://{hostname}"},www:"https://www.huobi.co.jp",referral:"https://www.huobi.co.jp/register/?invite_code=znnq3",doc:"https://api-doc.huobi.co.jp",fees:"https://www.huobi.co.jp/support/fee"},api:{v2Public:{get:{"reference/currencies":1,"market-status":1}},v2Private:{get:{"account/ledger":1,"account/withdraw/quota":1,"account/withdraw/address":1,"account/deposit/address":1,"account/repayment":5,"reference/transact-fee-rate":1,"account/asset-valuation":.2,"point/account":5,"sub-user/user-list":1,"sub-user/user-state":1,"sub-user/account-list":1,"sub-user/deposit-address":1,"sub-user/query-deposit":1,"user/api-key":1,"user/uid":1,"algo-orders/opening":1,"algo-orders/history":1,"algo-orders/specific":1,"c2c/offers":1,"c2c/offer":1,"c2c/transactions":1,"c2c/repayment":1,"c2c/account":1,"etp/reference":1,"etp/transactions":5,"etp/transaction":5,"etp/rebalance":1,"etp/limit":1},post:{"account/transfer":1,"account/repayment":5,"point/transfer":5,"sub-user/management":1,"sub-user/creation":1,"sub-user/tradable-market":1,"sub-user/transferability":1,"sub-user/api-key-generation":1,"sub-user/api-key-modification":1,"sub-user/api-key-deletion":1,"sub-user/deduct-mode":1,"algo-orders":1,"algo-orders/cancel-all-after":1,"algo-orders/cancellation":1,"c2c/offer":1,"c2c/cancellation":1,"c2c/cancel-all":1,"c2c/repayment":1,"c2c/transfer":1,"etp/creation":5,"etp/redemption":5,"etp/{transactId}/cancel":10,"etp/batch-cancel":50}},market:{get:{"history/kline":1,"detail/merged":1,depth:1,trade:1,"history/trade":1,detail:1,tickers:1,etp:1}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:b,exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":c,maintain:c},exact:{"bad-request":p,"base-date-limit-error":p,"api-not-support-temp-addr":n,timeout:m,"gateway-internal-error":o,"account-frozen-balance-insufficient-error":l,"invalid-amount":d,"order-limitorder-amount-min-error":d,"order-limitorder-amount-max-error":d,"order-marketorder-amount-min-error":d,"order-limitorder-price-min-error":d,"order-limitorder-price-max-error":d,"order-holding-limit-failed":d,"order-orderprice-precision-error":d,"order-etp-nav-price-max-error":d,"order-orderstate-error":h,"order-queryorder-invalid":h,"order-update-error":o,"api-signature-check-failed":r,"api-signature-not-valid":r,"base-record-invalid":h,"base-symbol-trade-disabled":f,"base-symbol-error":f,"system-maintenance":c,"invalid symbol":f,"symbol trade not open now":f,"invalid-address":p,"base-currency-chain-error":p,"dw-insufficient-balance":l}},options:{defaultNetwork:"ERC20",networks:{ETH:"erc20",TRX:"trc20",HRC20:"hrc20",HECO:"hrc20",HT:"hrc20",ALGO:"algo",OMNI:""},fetchOrdersByStatesMethod:"private_get_order_orders",fetchOpenOrdersMethod:"fetch_open_orders_v1",createMarketBuyOrderRequiresPrice:!0,fetchMarketsMethod:"publicGetCommonSymbols",fetchBalanceMethod:"privateGetAccountAccountsIdBalance",createOrderMethod:"privatePostOrderOrdersPlace",language:"en-US",broker:{id:"AA03022abc"}},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",HOT:"Hydro Protocol",PNT:"Penta",SBTC:"Super Bitcoin",BIFI:"Bitcoin File"}})}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchTradingLimits(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const s={};for(let i=0;i<e.length;i++){const r=e[i];s[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return s}async fetchTradingLimitsById(e,t={}){const s={symbol:e},i=await this.publicGetCommonExchange(this.extend(s,t));return this.parseTradingLimits(this.safeValue(i,"data",{}))}parseTradingLimits(e,t,s={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,y,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){const t=this.options.fetchMarketsMethod,s=await this[t](e),i=this.safeValue(s,"data",[]);if(i.length<1)throw new g(this.id+" fetchMarkets() returned empty response: "+this.json(i));const r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"base-currency"),a=this.safeString(t,"quote-currency"),n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(a),c=this.safeString(t,"state"),d=this.safeString(t,"leverage-ratio","1"),h=this.safeString(t,"super-margin-leverage-ratio","1"),l=v.stringGt(d,"1")||v.stringGt(h,"1"),u="OMG"===n?0:.002;r.push({id:s+a,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:s,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:l,swap:!1,future:!1,option:!1,active:"online"===c,contract:!1,linear:void 0,inverse:void 0,taker:u,maker:u,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"price-precision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount-precision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"value-precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(d),superMax:this.parseNumber(h)},amount:{min:this.safeNumber(t,"min-order-amt"),max:this.safeNumber(t,"max-order-amt")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min-order-value"),max:void 0}},info:t})}return r}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeInteger(e,"ts");let r,a,n,o;"bid"in e&&(Array.isArray(e.bid)?(r=this.safeString(e.bid,0),a=this.safeString(e.bid,1)):(r=this.safeString(e,"bid"),a=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(n=this.safeString(e.ask,0),o=this.safeString(e.ask,1)):(n=this.safeString(e,"ask"),o=this.safeString(e,"askSize")));const c=this.safeString(e,"open"),d=this.safeString(e,"close"),h=this.safeString(e,"amount"),l=this.safeString(e,"vol");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:r,bidVolume:a,ask:n,askVolume:o,vwap:void 0,open:c,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:l,info:e},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id,type:"step0"},r=await this.marketGetDepth(this.extend(i,s));if("tick"in r){if(!r.tick)throw new f(this.id+" fetchOrderBook() returned empty response: "+this.json(r));const t=this.safeValue(r,"tick"),s=this.safeInteger(t,"ts",this.safeInteger(r,"ts")),i=this.parseOrderBook(t,e,s);return i.nonce=this.safeInteger(t,"version"),i}throw new a(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(r))}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.marketGetDetailMerged(this.extend(i,t)),a=this.parseTicker(r.tick,s),n=this.safeInteger(r,"ts");return a.timestamp=n,a.datetime=this.iso8601(n),a}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.marketGetTickers(t),i=this.safeValue(s,"data",[]),r=this.safeInteger(s,"ts"),a={};for(let e=0;e<i.length;e++){const t=this.safeString(i[e],"symbol"),s=this.safeMarket(t),n=s.symbol,o=this.parseTicker(i[e],s);o.timestamp=r,o.datetime=this.iso8601(r),a[n]=o}return this.filterByArray(a,"symbol",e)}parseTrade(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeInteger2(e,"ts","created-at"),a=this.safeString(e,"order-id");let n=this.safeString(e,"direction"),o=this.safeString(e,"type");if(void 0!==o){const e=o.split("-");n=e[0],o=e[1]}const c=this.safeString(e,"role"),d=this.safeString(e,"price"),h=this.safeString2(e,"filled-amount","amount"),l=this.parseNumber(d),u=this.parseNumber(h),f=this.parseNumber(v.stringMul(d,h));let p,m=this.safeNumber(e,"filled-fees"),g=this.safeCurrencyCode(this.safeString(e,"fee-currency"));const y=this.safeNumber(e,"filled-points");void 0!==y&&(void 0!==m&&0!==m||(m=y,g=this.safeCurrencyCode(this.safeString(e,"fee-deduct-currency")))),void 0!==m&&(p={cost:m,currency:g});const b=this.safeString2(e,"trade-id","tradeId");return{id:this.safeString(e,"id",b),info:e,order:a,timestamp:r,datetime:this.iso8601(r),symbol:i,type:o,side:n,takerOrMaker:c,price:l,amount:u,cost:f,fee:p}}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrderOrdersIdMatchresults(this.extend(a,r));return this.parseTrades(n.data,void 0,s,i)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.size=s),void 0!==t&&(a["start-time"]=t);const n=await this.privateGetOrderMatchresults(this.extend(a,i));return this.parseTrades(n.data,r,t,s)}async fetchTrades(e,t,s=1e3,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.size=s);const n=await this.marketGetHistoryTrade(this.extend(a,i)),o=this.safeValue(n,"data",[]);let c=[];for(let e=0;e<o.length;e++){const t=this.safeValue(o[e],"data",[]);for(let e=0;e<t.length;e++){const s=this.parseTrade(t[e],r);c.push(s)}}return c=this.sortBy(c,"timestamp"),this.filterBySymbolSinceLimit(c,r.symbol,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",s,i=1e3,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.timeframes[t]};void 0!==i&&(n.size=i);const o=await this.marketGetHistoryKline(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}async fetchAccounts(e={}){await this.loadMarkets();return(await this.privateGetAccountAccounts(e)).data}async fetchCurrencies(e={}){const t={language:this.options.language},s=await this.publicGetSettingsCurrencys(this.extend(t,e)),i=this.safeValue(s,"data",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeValue(t,"name"),a=this.safeCurrencyCode(s),n=this.safeValue(t,"deposit-enabled"),o=this.safeValue(t,"withdraw-enabled"),c=this.safeValue(t,"country-disabled"),d=this.safeValue(t,"visible",!1),h=this.safeString(t,"state"),l=d&&n&&o&&"online"===h&&!c,u=this.safeString(t,"display-name"),f=this.parseNumber(this.parsePrecision(this.safeString(t,"withdraw-precision")));r[a]={id:s,code:a,type:"crypto",name:u,active:l,deposit:n,withdraw:o,fee:void 0,precision:f,limits:{amount:{min:f,max:void 0},deposit:{min:this.safeNumber(t,"deposit-min-amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw-min-amount"),max:void 0}},info:t}}return r}parseBalance(e){const t=this.safeValue(e.data,"list",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r);let n;n=a in s?s[a]:this.account(),"trade"===i.type&&(n.free=this.safeString(i,"balance")),"frozen"===i.type&&(n.used=this.safeString(i,"balance")),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();const t=this.options.fetchBalanceMethod,s={id:this.accounts[0].id},i=await this[t](this.extend(s,e));return this.parseBalance(i)}async fetchOrdersByStates(e,t,s,i,r={}){await this.loadMarkets();const a={states:e};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=this.safeString(this.options,"fetchOrdersByStatesMethod","private_get_order_orders"),c=await this[o](this.extend(a,r));return this.parseOrders(c.data,n,s,i)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrderOrdersId(this.extend(i,s)),a=this.safeValue(r,"data");return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){const r=this.safeString(this.options,"fetchOpenOrdersMethod","fetch_open_orders_v1");return await this[r](e,t,s,i)}async fetchOpenOrdersV1(e,t,s,i={}){if(void 0===e)throw new u(this.id+" fetchOpenOrdersV1() requires a symbol argument");return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStates("filled,partial-canceled,canceled",e,t,s,i)}async fetchOpenOrdersV2(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);let n=this.safeString(i,"account-id");if(void 0===n){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){const t=this.accounts[e];if("spot"===t.type&&(n=this.safeString(t,"id"),void 0!==n))break}}r["account-id"]=n,void 0!==s&&(r.size=s);const o=this.omit(i,"account-id"),c=await this.privateGetOrderOpenOrders(this.extend(r,o)),d=this.safeValue(c,"data",[]);return this.parseOrders(d,a,t,s)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id");let i,r,a;if("type"in e){const t=e.type.split("-");i=t[0],r=t[1],a=this.parseOrderStatus(this.safeString(e,"state"))}const n=this.safeString(e,"symbol");t=this.safeMarket(n,t);const o=this.safeInteger(e,"created-at"),c=this.safeString(e,"client-order-id"),d=this.safeString(e,"amount"),h=this.safeString2(e,"filled-amount","field-amount"),l=this.safeString(e,"price"),u=this.safeString2(e,"filled-cash-amount","field-cash-amount"),f=this.safeString2(e,"filled-fees","field-fees");let p;if(void 0!==f){p={cost:f,currency:"sell"===i?t.quote:t.base}}return this.safeOrder({info:e,id:s,clientOrderId:c,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:i,price:l,stopPrice:void 0,average:void 0,cost:u,amount:d,filled:h,remaining:void 0,status:a,fee:p,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),await this.loadAccounts();const n=this.market(e),o={"account-id":this.accounts[0].id,symbol:n.id,type:s+"-"+t},c=this.safeString2(a,"clientOrderId","client-order-id");if(void 0===c){const e=this.safeValue(this.options,"broker",{}),t=this.safeString(e,"id");o["client-order-id"]=t+this.uuid()}else o["client-order-id"]=c;if(a=this.omit(a,["clientOrderId","client-order-id"]),"market"===t&&"buy"===s)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new d(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");o.amount=this.costToPrecision(e,parseFloat(i)*parseFloat(r))}else o.amount=this.costToPrecision(e,i);else o.amount=this.amountToPrecision(e,i);"limit"!==t&&"ioc"!==t&&"limit-maker"!==t&&"stop-limit"!==t&&"stop-limit-fok"!==t||(o.price=this.priceToPrecision(e,r));const h=this.options.createOrderMethod,l=await this[h](this.extend(o,a)),u=this.milliseconds();return{info:l,id:this.safeString(l,"data"),timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:s,price:r,amount:i,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async cancelOrder(e,t,s={}){const i=await this.privatePostOrderOrdersIdSubmitcancel({id:e});return this.extend(this.parseOrder(i),{id:e,status:"canceled"})}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"clientOrderIds","client-order-ids");s=this.omit(s,["clientOrderIds","client-order-ids"]);const r={};void 0===i?r["order-ids"]=e:r["client-order-ids"]=i;return await this.privatePostOrderOrdersBatchcancel(this.extend(r,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.symbol=i.id);return await this.privatePostOrderOrdersBatchCancelOpenOrders(this.extend(s,t))}currencyToPrecision(e,t,s){return this.decimalToPrecision(t,0,this.currencies[e].precision,this.precisionMode)}safeNetwork(e){const t=e.length-1;"1"===e[t]&&(e=e.slice(0,t));return this.safeString({},e,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeCurrencyCode(r,t),n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),c=this.indexBy(o,"id"),d=this.safeValue(c,n,n),h=this.safeString(d,"network");return this.checkAddress(s),{currency:a,address:s,tag:i,network:h,info:e}}async fetchDeposits(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"deposit",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;(void 0===s||s>100)&&(s=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"withdraw",from:0};void 0!==r&&(a.currency=r.id),void 0!==s&&(a.size=s);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,i));return this.parseTransactions(n.data,r,t,s)}parseTransaction(e,t){const s=this.safeInteger(e,"created-at"),i=this.safeInteger(e,"updated-at"),r=this.safeCurrencyCode(this.safeString(e,"currency"));let a=this.safeString(e,"type");"withdraw"===a&&(a="withdrawal");const n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.safeString(e,"address-tag");let c=this.safeNumber(e,"fee");void 0!==c&&(c=Math.abs(c));const d=this.safeString(e,"address"),h=this.safeStringUpper(e,"chain");return{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:s,datetime:this.iso8601(s),network:h,address:d,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,type:a,amount:this.safeNumber(e,"amount"),currency:r,status:n,updated:i,fee:{currency:r,cost:c,rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={address:s,amount:t,currency:a.id.toLowerCase()};void 0!==i&&(n["addr-tag"]=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.chain="erc20"===c?a.id+c:c+a.id,r=this.omit(r,"network"));const d=await this.privatePostDwWithdrawApiCreate(this.extend(n,r));return this.parseTransaction(d,a)}sign(e,t="public",s="GET",i={},r,a){let n="/";"market"===t?n+=t:"public"===t||"private"===t?n+=this.version:"v2Public"!==t&&"v2Private"!==t||(n+="v2"),n+="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("private"===t||"v2Private"===t){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==s&&(t=this.extend(t,o)),t=this.keysort(t);let i=this.urlencode(t);const c=[s,this.hostname,n,i].join("\n"),d=this.hmac(this.encode(c),this.encode(this.secret),"sha256","base64");i+="&"+this.urlencode({Signature:d}),n+="?"+i,"POST"===s?(a=this.json(o),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(i).length&&(n+="?"+this.urlencode(i));return n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n,{url:n,method:s,body:a,headers:r}}calculateRateLimiterCost(e,t,s,i,r={},a={}){return this.safeInteger(r,"cost",1)}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0!==o&&"status"in o){if("error"===this.safeString(o,"status")){const e=this.safeString(o,"err-code"),t=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);const s=this.safeString(o,"err-msg");throw this.throwExactlyMatchedException(this.exceptions.exact,s,t),new a(t)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],213:[function(e,t,s){"use strict";const i=e("./huobi.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"huobipro",alias:!0})}}},{"./huobi.js":211}],214:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r,PAD_WITH_ZERO:a,ROUND:n,TRUNCATE:o,DECIMAL_PLACES:c}=e("./base/functions/number"),{InvalidOrder:d,InsufficientFunds:h,ExchangeError:l,ExchangeNotAvailable:u,DDoSProtection:f,BadRequest:p,NotSupported:m,InvalidAddress:g,AuthenticationError:y}=e("./base/errors"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"idex",name:"IDEX",countries:["US"],rateLimit:200,version:"v3",pro:!0,certified:!0,requiresWeb3:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:void 0,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","6h":"6h","1d":"1d"},urls:{test:{MATIC:"https://api-sandbox-matic.idex.io"},logo:"https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg",api:{MATIC:"https://api-matic.idex.io"},www:"https://idex.io",doc:["https://docs.idex.io/"]},api:{public:{get:{ping:1,time:1,exchange:1,assets:1,markets:1,tickers:1,candles:1,trades:1,orderbook:1}},private:{get:{user:1,wallets:1,balances:1,orders:1,fills:1,deposits:1,withdrawals:1,wsToken:1},post:{wallets:1,orders:1,"orders/test":1,withdrawals:1},delete:{orders:1}}},options:{defaultTimeInForce:"gtc",defaultSelfTradePrevention:"cn",network:"MATIC"},exceptions:{INVALID_ORDER_QUANTITY:d,INSUFFICIENT_FUNDS:h,SERVICE_UNAVAILABLE:u,EXCEEDED_RATE_LIMIT:f,INVALID_PARAMETER:p,WALLET_NOT_ASSOCIATED:g,INVALID_WALLET_SIGNATURE:y},requiredCredentials:{walletAddress:!0,privateKey:!0,apiKey:!0,secret:!0},precisionMode:r,paddingMode:a,commonCurrencies:{}})}priceToPrecision(e,t){const s=this.market(e),i=this.safeValue(s,"info",{}),r=this.safeInteger(i,"quoteAssetPrecision");return t=this.decimalToPrecision(t,n,s.precision.price,this.precisionMode),this.decimalToPrecision(t,o,r,c,a)}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=await this.publicGetExchange(),i=this.safeNumber(s,"makerFeeRate"),r=this.safeNumber(s,"takerFeeRate"),a=this.safeString(s,"makerTradeMinimum"),n=this.safeString(s,"takerTradeMinimum"),o=this.parseNumber(b.stringMin(a,n)),c=[];for(let e=0;e<t.length;e++){const s=t[e],a=this.safeString(s,"market"),n=this.safeString(s,"baseAsset"),d=this.safeString(s,"quoteAsset"),h=this.safeCurrencyCode(n),l=this.safeCurrencyCode(d),u=this.parseNumber(this.parsePrecision(this.safeString(s,"baseAssetPrecision"))),f=this.parseNumber(this.parsePrecision(this.safeString(s,"quoteAssetPrecision"))),p=this.safeString(s,"status");let m;"ETH"===l&&(m=o),c.push({id:a,symbol:h+"/"+l,base:h,quote:l,settle:void 0,baseId:n,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"inactive"!==p,contract:!1,linear:void 0,inverse:void 0,taker:r,maker:i,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:u,price:this.safeNumber(s,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:u,max:void 0},price:{min:f,max:void 0},cost:{min:m,max:void 0}},info:s})}return c}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.publicGetTickers(this.extend(i,t)),a=this.safeValue(r,0);return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t);return this.parseTickers(s,e)}parseTicker(e,t){const s=this.safeString(e,"market"),i=(t=this.safeMarket(s,t,"-")).symbol,r=this.safeInteger(e,"time"),a=this.safeString(e,"close");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:t};void 0!==s&&(n.start=s),void 0!==i&&(n.limit=i);const o=await this.publicGetCandles(this.extend(n,r));return Array.isArray(o)?this.parseOHLCVs(o,a,t,s,i):[]}parseOHLCV(e,t){return[this.safeInteger(e,"start"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const n=await this.publicGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"fillId"),i=this.safeString(e,"price"),r=this.safeString(e,"quantity"),a=this.safeString(e,"quoteQuantity"),n=this.safeInteger(e,"time"),o=this.safeString(e,"market"),c=this.safeSymbol(o,t,"-"),d="buy"===this.safeString(e,"makerSide")?"sell":"buy",h=this.safeString(e,"side",d),l=this.safeString(e,"liquidity","taker"),u=this.safeString(e,"fee");let f;if(void 0!==u){const t=this.safeString(e,"feeAsset");f={cost:u,currency:this.safeCurrencyCode(t)}}const p=this.safeString(e,"orderId");return this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:c,id:s,order:p,type:"limit",side:h,takerOrMaker:l,price:i,amount:r,cost:a,fee:f},t)}async fetchTradingFees(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t={nonce:this.uuidv1()};let s;s=await this.privateGetUser(this.extend(t,e));const i=this.safeNumber(s,"makerFeeRate"),r=this.safeNumber(s,"takerFeeRate"),a={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];a[t]={info:s,symbol:t,maker:i,taker:r,percentage:!0,tierBased:!1}}return a}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market:this.market(e).id,level:2};void 0!==t&&(i.limit=t);const r=await this.publicGetOrderbook(this.extend(i,s));return{symbol:e,timestamp:void 0,datetime:void 0,nonce:this.safeInteger(r,"sequence"),bids:this.parseSide(r,"bids"),asks:this.parseSide(r,"asks")}}parseSide(e,t){const s=this.safeValue(e,t,[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeNumber(t,0),a=this.safeNumber(t,1),n=this.safeInteger(t,2);i.push([r,a,n])}const r="bids"===t;return this.sortBy(i,0,r)}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"name"),a=this.safeString(i,"symbol"),n=this.safeCurrencyCode(a),o=this.parseNumber(this.parsePrecision(this.safeString(i,"exchangeDecimals")));s[n]={id:a,code:n,info:i,type:void 0,name:r,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:o,max:void 0}}}}return s}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"quantity"),n.free=this.safeString(i,"availableForTrade"),n.used=this.safeString(i,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t={nonce:this.uuidv1(),wallet:this.walletAddress},s=this.extend(t,e);if(void 0===s.wallet)throw new p(this.id+' fetchBalance() wallet is undefined, set this.walletAddress or "address" in params');let i;try{i=await this.privateGetBalances(s)}catch(e){if(!(e instanceof g))throw e;{const e=s.wallet;await this.associateWallet(e),i=await this.privateGetBalances(s)}}return this.parseBalance(i)}async fetchMyTrades(e,t,s,i={}){let r;this.checkRequiredCredentials(),await this.loadMarkets();const a={nonce:this.uuidv1(),wallet:this.walletAddress};void 0!==e&&(r=this.market(e),a.market=r.id),void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const n=this.extend(a,i);if(void 0===n.wallet)throw new p(this.id+' fetchMyTrades() walletAddress is undefined, set this.walletAddress or "address" in params');let o;try{o=await this.privateGetFills(n)}catch(e){if(!(e instanceof g))throw e;{const e=n.wallet;await this.associateWallet(e),o=await this.privateGetFills(n)}}return this.parseTrades(o,r,t,s)}async fetchOrder(e,t,s={}){const i={orderId:e};return await this.fetchOrdersHelper(t,void 0,void 0,this.extend(i,s))}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersHelper(e,t,s,this.extend({closed:!1},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersHelper(e,t,s,this.extend({closed:!0},i))}async fetchOrdersHelper(e,t,s,i={}){await this.loadMarkets();const r={nonce:this.uuidv1(),wallet:this.walletAddress};let a;void 0!==e&&(a=this.market(e),r.market=a.id),void 0!==t&&(r.start=t),void 0!==s&&(r.limit=s);const n=await this.privateGetOrders(this.extend(r,i));return Array.isArray(n)?this.parseOrders(n,a,t,s):this.parseOrder(n,a)}parseOrderStatus(e){return this.safeString({active:"open",partiallyFilled:"open",rejected:"canceled",filled:"closed"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"time"),i=this.safeValue(e,"fills",[]),r=this.safeString(e,"orderId"),a=this.safeString(e,"clientOrderId"),n=this.safeString(e,"market"),o=this.safeString(e,"side"),c=this.safeSymbol(n,t,"-"),d=this.safeString(e,"type"),h=this.safeString(e,"originalQuantity"),l=this.safeString(e,"executedQuantity"),u=this.safeString(e,"avgExecutionPrice"),f=this.safeString(e,"price"),p=this.safeString(e,"status"),m=this.safeStringUpper(e,"timeInForce"),g=this.parseOrderStatus(p);return this.safeOrder({info:e,id:r,clientOrderId:a,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:c,type:d,timeInForce:m,postOnly:void 0,side:o,price:f,stopPrice:void 0,amount:h,cost:void 0,average:u,filled:l,remaining:void 0,status:g,fee:void 0,trades:i},t)}async associateWallet(e,t={}){const s=this.uuidv1(),i=this.remove0xPrefix(e),r=[this.base16ToBinary(s),this.base16ToBinary(i)],a=this.binaryConcatArray(r),n=this.hash(a,"keccak","hex"),o={parameters:{nonce:s,wallet:e},signature:this.signMessageString(n,this.privateKey)};return await this.privatePostWallets(o)}async createOrder(e,t,s,i,r,a={}){this.checkRequiredCredentials(),await this.loadMarkets();const n=this.market(e),o=this.uuidv1();let c;const d={stopLoss:3,stopLossLimit:4,takeProfit:5,takeProfitLimit:6};let h;if("stopLossLimit"===t||"takeProfitLimit"===t||"stopPrice"in a){if(!("stopPrice"in a))throw new p(this.id+" createOrder() stopPrice is a required parameter for "+t+"orders");h=this.priceToPrecision(e,a.stopPrice)}const l={limit:1,limitMaker:2};let u;const f=t.toLowerCase().indexOf("limit")>=0;if(t in l)c=l[t],u=this.priceToPrecision(e,r);else if(t in d)c=d[t],u=this.priceToPrecision(e,r);else{if("market"!==t)throw new p(this.id+" "+t+" is not a valid order type");c=0}let g=0;if("quoteOrderQuantity"in a){if("market"!==t)throw new m(this.id+" createOrder() quoteOrderQuantity is not supported for "+t+" orders, only supported for market orders");g=1,i=this.safeNumber(a,"quoteOrderQuantity")}const y="buy"===s?0:1,b=this.remove0xPrefix(this.walletAddress),v=this.safeString(this.options,"network","ETH"),w=this.getSupportedMapping(v,{ETH:1,BSC:2,MATIC:4}),S=this.amountToPrecision(e,i),k={gtc:0,ioc:2,fok:3},T=this.safeString(this.options,"defaultTimeInForce","gtc"),O=this.safeString(a,"timeInForce",T);let _;if(!(O in k)){const e=Object.keys(k).join(", ");throw new p(this.id+" "+O+" is not a valid timeInForce, please choose one of "+e)}_=k[O];const x={dc:0,co:1,cn:2,cb:3},M=this.safeString(this.options,"defaultSelfTradePrevention","cn"),I=this.safeString(a,"selfTradePrevention",M);let C;if(!(I in x)){const e=Object.keys(x).join(", ");throw new p(this.id+" "+I+" is not a valid selfTradePrevention, please choose one of "+e)}C=x[I];const P=[this.numberToBE(w,1),this.base16ToBinary(o),this.base16ToBinary(b),this.stringToBinary(this.encode(n.id)),this.numberToBE(c,1),this.numberToBE(y,1),this.stringToBinary(this.encode(S)),this.numberToBE(g,1)];if(f){const e=this.stringToBinary(this.encode(u));P.push(e)}if(t in d){const e=this.stringToBinary(this.encode(h||u));P.push(e)}const A=this.safeString(a,"clientOrderId");void 0!==A&&P.push(this.stringToBinary(this.encode(A)));const N=[this.numberToBE(_,1),this.numberToBE(C,1),this.numberToBE(0,8)],V=this.arrayConcat(P,N),B=this.binaryConcatArray(V),E=this.hash(B,"keccak","hex"),L=this.signMessageString(E,this.privateKey),R={parameters:{nonce:o,market:n.id,side:s,type:t,wallet:this.walletAddress,selfTradePrevention:I},signature:L};"market"!==t&&(R.parameters.timeInForce=O),f&&(R.parameters.price=u),t in d&&(R.parameters.stopPrice=h||u),0===g?R.parameters.quantity=S:R.parameters.quoteOrderQuantity=S,void 0!==A&&(R.parameters.clientOrderId=A);const D=await this.privatePostOrders(R);return this.parseOrder(D,n)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkRequiredCredentials(),await this.loadMarkets();const a=this.uuidv1(),n=this.currencyToPrecision(e,t),o=this.currency(e),c=this.remove0xPrefix(this.walletAddress),d=[this.base16ToBinary(a),this.base16ToBinary(c),this.stringToBinary(this.encode(o.id)),this.stringToBinary(this.encode(n)),this.numberToBE(1,1)],h=this.binaryConcatArray(d),l=this.hash(h,"keccak","hex"),u=this.signMessageString(l,this.privateKey),f={parameters:{nonce:a,wallet:s,asset:o.id,quantity:n},signature:u},p=await this.privatePostWithdrawals(f);return this.parseTransaction(p,o)}async cancelAllOrders(e,t={}){let s;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==e&&(s=this.market(e));const i=this.uuidv1(),r={parameters:{nonce:i,wallet:this.walletAddress}},a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(i),this.base16ToBinary(a)];void 0!==s&&(n.push(this.stringToBinary(this.encode(s.id))),r.parameters.market=s.id);const o=this.binaryConcatArray(n),c=this.hash(o,"keccak","hex"),d=this.signMessageString(c,this.privateKey);r.signature=d;const h=await this.privateDeleteOrders(this.extend(r,t));return this.parseOrders(h,s)}async cancelOrder(e,t,s={}){let i;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==t&&(i=this.market(t));const r=this.uuidv1(),a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(r),this.base16ToBinary(a),this.stringToBinary(this.encode(e))],o=this.binaryConcatArray(n),c=this.hash(o,"keccak","hex"),d=this.signMessageString(c,this.privateKey),h={parameters:{nonce:r,wallet:this.walletAddress,orderId:e},signature:d},l=await this.privateDeleteOrders(this.extend(h,s)),u=this.safeValue(l,0);return this.parseOrder(u,i)}handleErrors(e,t,s,i,r,a,n,o,c){const d=this.safeString(n,"code"),h=this.safeString(n,"message");if(d in this.exceptions){throw new(0,this.exceptions[d])(this.id+" "+h)}if(void 0!==d)throw new l(this.id+" "+h)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={nonce:this.uuidv1(),wallet:this.walletAddress,depositId:e},r=await this.privateGetDeposits(this.extend(i,s));return this.parseTransaction(r,t)}async fetchDeposits(e,t,s,i={}){return i=this.extend({method:"privateGetDeposits"},i),this.fetchTransactionsHelper(e,t,s,i)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeNumber(t,"serverTime")}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={nonce:this.uuidv1(),wallet:this.walletAddress,withdrawalId:e},r=await this.privateGetWithdrawals(this.extend(i,s));return this.parseTransaction(r,t)}async fetchWithdrawals(e,t,s,i={}){return i=this.extend({method:"privateGetWithdrawals"},i),this.fetchTransactionsHelper(e,t,s,i)}async fetchTransactionsHelper(e,t,s,i={}){await this.loadMarkets();const r={nonce:this.uuidv1(),wallet:this.walletAddress};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.start=t),void 0!==s&&(r.limit=s);const n=i.method;i=this.omit(i,"method");const o=await this[n](this.extend(r,i));return this.parseTransactions(o,a,t,s)}parseTransactionStatus(e){return this.safeString({mined:"ok"},e,e)}parseTransaction(e,t){let s;"depositId"in e?s="deposit":("withdrawId"in e||"withdrawalId"in e)&&(s="withdrawal");let i=this.safeString2(e,"depositId","withdrawId");i=this.safeString(e,"withdrawalId",i);const r=this.safeCurrencyCode(this.safeString(e,"asset"),t),a=this.safeNumber(e,"quantity"),n=this.safeString(e,"txId"),o=this.safeInteger2(e,"txTime","time");let c;"fee"in e&&(c={cost:this.safeNumber(e,"fee"),currency:"ETH"});const d=this.safeString(e,"txStatus"),h=this.parseTransactionStatus(d),l=this.safeInteger(e,"confirmationTime");return{info:e,id:i,txid:n,timestamp:o,datetime:this.iso8601(o),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:s,amount:a,currency:r,status:h,updated:l,fee:c}}calculateRateLimiterCost(e,t,s,i,r={},a={}){const n=void 0!==this.apiKey,o=void 0!==this.secret,c=void 0!==this.walletAddress,d=void 0!==this.privateKey,h=this.safeValue(r,"cost",1);return n&&o&&c&&d?h/2:h}sign(e,t="public",s="GET",i={},r,a){const n=this.safeString(this.options,"network","ETH"),o=this.safeString(this.options,"version","v1");let c=this.urls.api[n]+"/"+o+"/"+e;let d;if(Object.keys(i).length>0&&("GET"===s?(d=this.urlencode(i),c=c+"?"+d):a=this.json(i)),r={"Content-Type":"application/json"},void 0!==this.apiKey&&(r["IDEX-API-Key"]=this.apiKey),"private"===t){let e;e="GET"===s?d:a,r["IDEX-HMAC-Signature"]=this.hmac(this.encode(e),this.encode(this.secret),"sha256","hex")}return{url:c,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],215:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),a=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"independentreserve",name:"Independent Reserve",countries:["AU","NZ"],rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg",api:{public:"https://api.independentreserve.com/Public",private:"https://api.independentreserve.com/Private"},www:"https://www.independentreserve.com",doc:"https://www.independentreserve.com/API"},api:{public:{get:["GetValidPrimaryCurrencyCodes","GetValidSecondaryCurrencyCodes","GetValidLimitOrderTypes","GetValidMarketOrderTypes","GetValidOrderTypes","GetValidTransactionTypes","GetMarketSummary","GetOrderBook","GetAllOrders","GetTradeHistorySummary","GetRecentTrades","GetFxRates","GetOrderMinimumVolumes","GetCryptoWithdrawalFees"]},private:{post:["GetOpenOrders","GetClosedOrders","GetClosedFilledOrders","GetOrderDetails","GetAccounts","GetTransactions","GetFiatBankAccounts","GetDigitalCurrencyDepositAddress","GetDigitalCurrencyDepositAddresses","GetTrades","GetBrokerageFees","GetDigitalCurrencyWithdrawal","PlaceLimitOrder","PlaceMarketOrder","CancelOrder","SynchDigitalCurrencyDepositAddressWithBlockchain","RequestFiatWithdrawal","WithdrawFiatCurrency","WithdrawDigitalCurrency"]}},fees:{trading:{taker:.005,maker:.005,percentage:!0,tierBased:!1}},commonCurrencies:{PLA:"PlayChip"},precisionMode:r})}async fetchMarkets(e={}){const t=await this.publicGetGetValidPrimaryCurrencyCodes(e),s=await this.publicGetGetValidSecondaryCurrencyCodes(e),i=await this.publicGetGetOrderMinimumVolumes(e),r=[];for(let e=0;e<t.length;e++){const a=t[e],n=this.safeCurrencyCode(a),o=this.safeNumber(i,a);for(let e=0;e<s.length;e++){const t=s[e],i=this.safeCurrencyCode(t),c=a+"/"+t;r.push({id:c,symbol:n+"/"+i,base:n,quote:i,settle:void 0,baseId:a,quoteId:t,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:o,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:c})}}return r}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"AvailableBalance"),n.total=this.safeString(i,"TotalBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={primaryCurrencyCode:i.baseId,secondaryCurrencyCode:i.quoteId},a=await this.publicGetGetOrderBook(this.extend(r,s)),n=this.parse8601(this.safeString(a,"CreatedTimestampUtc"));return this.parseOrderBook(a,i.symbol,n,"BuyOrders","SellOrders","Price","Volume")}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),i=this.safeString(e,"PrimaryCurrencyCode"),r=this.safeString(e,"SecondaryCurrencyCode");let a;void 0!==i&&void 0!==r&&(a=i+"/"+r);const n=(t=this.safeMarket(a,t,"/")).symbol,o=this.safeString(e,"LastPrice");return this.safeTicker({symbol:n,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"DayHighestPrice"),low:this.safeString(e,"DayLowestPrice"),bid:this.safeString(e,"CurrentHighestBidPrice"),bidVolume:void 0,ask:this.safeString(e,"CurrentLowestOfferPrice"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"DayAvgPrice"),baseVolume:this.safeString(e,"DayVolumeXbtInSecondaryCurrrency"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={primaryCurrencyCode:s.baseId,secondaryCurrencyCode:s.quoteId},r=await this.publicGetGetMarketSummary(this.extend(i,t));return this.parseTicker(r,s)}parseOrder(e,t){let s;const i=this.safeString(e,"PrimaryCurrencyCode"),r=this.safeString(e,"SecondaryCurrencyCode");let a,n;void 0!==i&&void 0!==r?(a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(r),s=a+"/"+n):void 0!==t&&(s=t.symbol,a=t.base,n=t.quote);let o,c=this.safeString2(e,"Type","OrderType");void 0!==c&&(c.indexOf("Bid")>=0?o="buy":c.indexOf("Offer")>=0&&(o="sell"),c.indexOf("Market")>=0?c="market":c.indexOf("Limit")>=0&&(c="limit"));const d=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),h=this.safeString2(e,"VolumeOrdered","Volume"),l=this.safeString(e,"VolumeFilled"),u=this.safeString(e,"Outstanding"),f=this.safeNumber(e,"FeePercent");let p;void 0!==f&&void 0!==l&&(p=f*l);const m={rate:f,cost:p,currency:a},g=this.safeString(e,"OrderGuid"),y=this.parseOrderStatus(this.safeString(e,"Status")),b=this.safeString(e,"Value"),v=this.safeString(e,"AvgPrice"),w=this.safeString(e,"Price");return this.safeOrder({info:e,id:g,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:s,type:c,timeInForce:void 0,postOnly:void 0,side:o,price:w,stopPrice:void 0,cost:b,average:v,amount:h,filled:l,remaining:u,status:y,fee:m,trades:void 0},t)}parseOrderStatus(e){return this.safeString({Open:"open",PartiallyFilled:"open",Filled:"closed",PartiallyFilledAndCancelled:"canceled",Cancelled:"canceled",PartiallyFilledAndExpired:"canceled",Expired:"canceled"},e,e)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=await this.privatePostGetOrderDetails(this.extend({orderGuid:e},s));let r;return void 0!==t&&(r=this.market(t)),this.parseOrder(i,r)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=this.ordered({});let a;void 0!==e&&(a=this.market(e),r.primaryCurrencyCode=a.baseId,r.secondaryCurrencyCode=a.quoteId),void 0===s&&(s=50),r.pageIndex=1,r.pageSize=s;const n=await this.privatePostGetOpenOrders(this.extend(r,i)),o=this.safeValue(n,"Data",[]);return this.parseOrders(o,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r=this.ordered({});let a;void 0!==e&&(a=this.market(e),r.primaryCurrencyCode=a.baseId,r.secondaryCurrencyCode=a.quoteId),void 0===s&&(s=50),r.pageIndex=1,r.pageSize=s;const n=await this.privatePostGetClosedOrders(this.extend(r,i)),o=this.safeValue(n,"Data",[]);return this.parseOrders(o,a,t,s)}async fetchMyTrades(e,t,s=50,i={}){await this.loadMarkets();const r=this.safeInteger(i,"pageIndex",1);void 0===s&&(s=50);const a=this.ordered({pageIndex:r,pageSize:s}),n=await this.privatePostGetTrades(this.extend(a,i));let o;return void 0!==e&&(o=this.market(e)),this.parseTrades(n.Data,o,t,s)}parseTrade(e,t){const s=this.parse8601(e.TradeTimestampUtc),i=this.safeString(e,"TradeGuid"),r=this.safeString(e,"OrderGuid"),n=this.safeString2(e,"Price","SecondaryCurrencyTradePrice"),o=this.safeString2(e,"VolumeTraded","PrimaryCurrencyAmount"),c=this.parseNumber(n),d=this.parseNumber(o),h=this.parseNumber(a.stringMul(n,o)),l=this.safeString(e,"PrimaryCurrencyCode"),u=this.safeString(e,"SecondaryCurrencyCode");let f;void 0!==l&&void 0!==u&&(f=l+"/"+u);const p=this.safeSymbol(f,t,"/");let m=this.safeString(e,"OrderType");return void 0!==m&&(m.indexOf("Bid")>=0?m="buy":m.indexOf("Offer")>=0&&(m="sell")),{id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:p,order:r,type:void 0,side:m,takerOrMaker:void 0,price:c,amount:d,cost:h,fee:void 0}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={primaryCurrencyCode:r.baseId,secondaryCurrencyCode:r.quoteId,numberOfRecentTradesToRetrieve:50},n=await this.publicGetGetRecentTrades(this.extend(a,i));return this.parseTrades(n.Trades,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGetBrokerageFees(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.safeNumber(i,"Fee");s[a]={info:i,fee:n}}const i={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(s,r.base,{});i[t]={info:this.safeValue(a,"info"),symbol:t,maker:this.safeNumber(a,"fee"),taker:this.safeNumber(a,"fee"),percentage:!0,tierBased:!0}}return i}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.capitalize(t),c="privatePostPlace"+o+"Order";let d=o;d+="sell"===s?"Offer":"Bid";const h=this.ordered({primaryCurrencyCode:n.baseId,secondaryCurrencyCode:n.quoteId,orderType:d});"limit"===t&&(h.price=r),h.volume=i;const l=await this[c](this.extend(h,a));return{info:l,id:l.OrderGuid}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={orderGuid:e};return await this.privatePostCancelOrder(this.extend(i,s))}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+e;if("public"===t)Object.keys(i).length&&(n+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.nonce(),t=[n,"apiKey="+this.apiKey,"nonce="+e.toString()],s=Object.keys(i);for(let e=0;e<s.length;e++){const r=s[e],a=i[r].toString();t.push(r+"="+a)}const o=t.join(","),c=this.hmac(this.encode(o),this.encode(this.secret)),d=this.ordered({});d.apiKey=this.apiKey,d.nonce=e,d.signature=c.toUpperCase();for(let e=0;e<s.length;e++){const t=s[e];d[t]=i[t]}a=this.json(d),r={"Content-Type":"application/json"}}return{url:n,method:s,body:a,headers:r}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/functions/number":135}],216:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,InsufficientFunds:n,InvalidOrder:o,OrderNotFound:c,AuthenticationError:d,BadSymbol:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"indodax",name:"INDODAX",countries:["ID"],rateLimit:100,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:void 0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:void 0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},version:"2.0",urls:{logo:"https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg",api:{public:"https://indodax.com/api",private:"https://indodax.com/tapi"},www:"https://www.indodax.com",doc:"https://github.com/btcid/indodax-official-api-docs",referral:"https://indodax.com/ref/testbitcoincoid/1"},api:{public:{get:{server_time:5,pairs:5,price_increments:5,summaries:5,ticker_all:5,"{pair}/ticker":5,"{pair}/trades":5,"{pair}/depth":5}},private:{post:{getInfo:4,transHistory:4,trade:1,tradeHistory:4,openOrders:4,orderHistory:4,getOrder:4,cancelOrder:4,withdrawFee:4,withdrawCoin:4,listDownline:4,checkDownline:4,createVoucher:4}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:.003}},exceptions:{exact:{invalid_pair:h,"Insufficient balance.":n,"invalid order.":c,"Invalid credentials. API not found or session has expired.":d,"Invalid credentials. Bad sign.":d},broad:{"Minimum price":o,"Minimum order":o}},options:{recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1},commonCurrencies:{STR:"XLM",BCHABC:"BCH",BCHSV:"BSV",DRK:"DASH",NEM:"XEM"},precisionMode:l})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetServerTime(e);return this.safeInteger(t,"server_time")}async fetchMarkets(e={}){const t=await this.publicGetPairs(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"ticker_id"),a=this.safeString(i,"traded_currency"),n=this.safeString(i,"base_currency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeInteger(i,"is_maintenance");s.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!d,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(i,"trade_fee_percent"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,percentage:!0,precision:{amount:this.parseNumber(this.parsePrecision("8")),price:this.parseNumber(this.parsePrecision(this.safeString(i,"price_round"))),cost:this.parseNumber(this.parsePrecision(this.safeString(i,"volume_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"trade_min_traded_currency"),max:void 0},price:{min:this.safeNumber(i,"trade_min_base_currency"),max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}parseBalance(e){const t=this.safeValue(e,"return",{}),s=this.safeValue(t,"balance",{}),i=this.safeValue(t,"balance_hold",{}),r=this.safeTimestamp(t,"server_time"),a={info:e,timestamp:r,datetime:this.iso8601(r)},n=Object.keys(s);for(let e=0;e<n.length;e++){const t=n[e],r=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(s,t),o.used=this.safeString(i,t),a[r]=o}return this.safeBalance(a)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetPairDepth(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"buy","sell")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"server_time"),r="vol_"+t.baseId.toLowerCase(),a="vol_"+t.quoteId.toLowerCase(),n=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,r),quoteVolume:this.safeString(e,a),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetPairTicker(this.extend(i,t)),a=this.safeValue(r,"ticker",{});return this.parseTicker(a,s)}parseTrade(e,t){const s=this.safeTimestamp(e,"date");return this.safeTrade({id:this.safeString(e,"tid"),info:e,timestamp:s,datetime:this.iso8601(s),symbol:this.safeSymbol(void 0,t),type:void 0,side:this.safeString(e,"type"),order:void 0,takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetPairTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseOrderStatus(e){return this.safeString({open:"open",filled:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t){let s;"type"in e&&(s=e.type);const i=this.parseOrderStatus(this.safeString(e,"status","open"));let r,a;const n=this.safeString(e,"price");let o,c;if(void 0!==t){r=t.symbol;let s=t.quoteId,i=t.baseId;"idr"===t.quoteId&&"order_rp"in e&&(s="rp"),"idr"===t.baseId&&"remain_rp"in e&&(i="rp"),a=this.safeString(e,"order_"+s),a||(o=this.safeString(e,"order_"+i),c=this.safeString(e,"remain_"+i))}const d=this.safeInteger(e,"submit_time"),h=this.safeString(e,"order_id");return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:r,type:"limit",timeInForce:void 0,postOnly:void 0,side:s,price:n,stopPrice:void 0,cost:a,average:void 0,amount:o,filled:void 0,remaining:c,status:i,fee:undefined,trades:void 0})}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol");await this.loadMarkets();const i=this.market(t),r={pair:i.id,order_id:e},n=await this.privatePostGetOrder(this.extend(r,s)),o=n.return,c=this.parseOrder(this.extend({id:e},o.order),i);return this.extend({info:n},c)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id);const n=(await this.privatePostOpenOrders(this.extend(a,i))).return.orders;if(!n)return[];if(void 0!==e)return this.parseOrders(n,r,t,s);const o=Object.keys(n);let c=[];for(let e=0;e<o.length;e++){const i=o[e],a=n[i];r=this.markets_by_id[i];const d=this.parseOrders(a,r,t,s);c=this.arrayConcat(c,d)}return c}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r={};let n;void 0!==e&&(n=this.market(e),e=n.symbol,r.pair=n.id);const o=await this.privatePostOrderHistory(this.extend(r,i));let c=this.parseOrders(o.return.orders,n);return c=this.filterBy(c,"status","closed"),this.filterBySymbolSinceLimit(c,e,t,s)}async createOrder(e,t,s,i,a,n={}){if("limit"!==t)throw new r(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),c={pair:o.id,type:s,price:a},d=o.baseId;"buy"===s?c[o.quoteId]=i*a:c[o.baseId]=i,c[d]=i;const h=await this.privatePostTrade(this.extend(c,n)),l=this.safeValue(h,"return",{});return{info:h,id:this.safeString(l,"order_id")}}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");const i=this.safeValue(s,"side");if(void 0===i)throw new a(this.id+' cancelOrder() requires an extra "side" param');await this.loadMarkets();const r={order_id:e,pair:this.market(t).id,type:i};return await this.privatePostCancelOrder(this.extend(r,s))}async fetchTransactionFee(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privatePostWithdrawFee(this.extend(i,t)),a=this.safeValue(r,"return",{}),n=this.safeString(a,"currency");return{info:r,rate:this.safeNumber(a,"withdraw_fee"),currency:this.safeCurrencyCode(n,s)}}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==t){const e=this.iso8601(t).slice(0,10);r.start=e,r.end=this.iso8601(this.milliseconds()).slice(0,10)}const a=await this.privatePostTransHistory(this.extend(r,i)),n=this.safeValue(a,"return",{}),o=this.safeValue(n,"withdraw",{}),c=this.safeValue(n,"deposit",{});let d,h=[];if(void 0===e){let e=Object.keys(o);for(let t=0;t<e.length;t++){const s=e[t];h=this.arrayConcat(h,o[s])}e=Object.keys(c);for(let t=0;t<e.length;t++){const s=e[t];h=this.arrayConcat(h,c[s])}}else{d=this.currency(e);const t=this.safeValue(o,d.id,[]),s=this.safeValue(c,d.id,[]);h=this.arrayConcat(t,s)}return this.parseTransactions(h,d,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n=this.milliseconds(),o={currency:a.id,withdraw_amount:t,withdraw_address:s,request_id:n.toString()};i&&(o.withdraw_memo=i);const c=await this.privatePostWithdrawCoin(this.extend(o,r));return this.parseTransaction(c,a)}parseTransaction(e,t){const s=this.safeString(e,"status"),i=this.safeTimestamp2(e,"success_time","submit_time"),r=this.safeString(e,"deposit_id"),a=this.safeNumber(e,"fee");let n;return void 0!==a&&(n={currency:this.safeCurrencyCode(void 0,t),cost:a}),{id:this.safeString2(e,"withdraw_id","deposit_id"),txid:this.safeString2(e,"txid","tx"),timestamp:i,datetime:this.iso8601(i),network:void 0,addressFrom:void 0,address:this.safeString(e,"withdraw_address"),addressTo:void 0,amount:this.safeNumberN(e,["amount","withdraw_amount","deposit_amount"]),type:void 0===r?"withdraw":"deposit",currency:this.safeCurrencyCode(void 0,t),status:this.parseTransactionStatus(s),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"withdraw_memo"),fee:n,info:e}}parseTransactionStatus(e){return this.safeString({success:"ok"},e,e)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t];return"public"===t?n+="/"+this.implodeParams(e,i):(this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,timestamp:this.nonce(),recvWindow:this.options.recvWindow},i)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(Array.isArray(o))return;const h=this.safeValue(o,"error","");if(!("success"in o)&&""===h)return;if(1===this.safeInteger(o,"success",0)){if("return"in o)return;throw new r(this.id+": malformed response: "+this.json(o))}const l=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,l),this.throwBroadlyMatchedException(this.exceptions.broad,h,l),new r(l)}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],217:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,ArgumentsRequired:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number"),c=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"itbit",name:"itBit",countries:["US"],rateLimit:2e3,version:"v1",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg",api:"https://api.itbit.com",www:"https://www.itbit.com",doc:["https://api.itbit.com/docs","https://www.itbit.com/api"]},api:{public:{get:["markets/{symbol}/ticker","markets/{symbol}/order_book","markets/{symbol}/trades"]},private:{get:["wallets","wallets/{walletId}","wallets/{walletId}/balances/{currencyCode}","wallets/{walletId}/funding_history","wallets/{walletId}/trades","wallets/{walletId}/orders","wallets/{walletId}/orders/{id}"],post:["wallet_transfers","wallets","wallets/{walletId}/cryptocurrency_deposits","wallets/{walletId}/cryptocurrency_withdrawals","wallets/{walletId}/orders","wire_withdrawal"],delete:["wallets/{walletId}/orders/{id}"]}},markets:{"BTC/USD":{id:"XBTUSD",symbol:"BTC/USD",base:"BTC",quote:"USD",baseId:"XBT",quoteId:"USD",type:"spot",spot:!0},"BTC/SGD":{id:"XBTSGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD",baseId:"XBT",quoteId:"SGD",type:"spot",spot:!0},"BTC/EUR":{id:"XBTEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"XBT",quoteId:"EUR",type:"spot",spot:!0},"ETH/USD":{id:"ETHUSD",symbol:"ETH/USD",base:"ETH",quote:"USD",baseId:"ETH",quoteId:"USD",type:"spot",spot:!0},"ETH/EUR":{id:"ETHEUR",symbol:"ETH/EUR",base:"ETH",quote:"EUR",baseId:"ETH",quoteId:"EUR",type:"spot",spot:!0},"ETH/SGD":{id:"ETHSGD",symbol:"ETH/SGD",base:"ETH",quote:"SGD",baseId:"ETH",quoteId:"SGD",type:"spot",spot:!0},PAXGUSD:{id:"PAXGUSD",symbol:"PAXG/USD",base:"PAXG",quote:"USD",baseId:"PAXG",quoteId:"USD",type:"spot",spot:!0},BCHUSD:{id:"BCHUSD",symbol:"BCH/USD",base:"BCH",quote:"USD",baseId:"BCH",quoteId:"USD",type:"spot",spot:!0},LTCUSD:{id:"LTCUSD",symbol:"LTC/USD",base:"LTC",quote:"USD",baseId:"LTC",quoteId:"USD",type:"spot",spot:!0}},fees:{trading:{maker:-3e-4,taker:.35/100}},commonCurrencies:{XBT:"BTC"},precisionMode:o})}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a=await this.publicGetMarketsSymbolOrderBook(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeString(e,"serverTimeUTC");if(!i)throw new r(this.id+" fetchTicker() returned a bad response: "+this.json(e));const a=this.parse8601(i),n=this.safeString(e,"vwap24h"),o=this.safeString(e,"volume24h"),d=c.stringMul(o,n),h=this.safeString(e,"lastPrice");return this.safeTicker({symbol:s,timestamp:a,datetime:this.iso8601(a),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:n,open:this.safeString(e,"openToday"),close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetMarketsSymbolTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeString2(e,"executionId","matchNumber"),i=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"direction"),a=this.safeString(e,"orderId");let n=this.safeNumber(e,"commissionPaid");const o=this.safeString(e,"commissionCurrency"),d=this.safeCurrencyCode(o);let h=this.safeNumber(e,"rebatesApplied");void 0!==h&&(h=-h);const l=this.safeString(e,"rebateCurrency"),u=this.safeCurrencyCode(l),f=this.safeString2(e,"price","rate"),p=this.safeString2(e,"currency1Amount","amount"),m=this.parseNumber(f),g=this.parseNumber(p),y=this.parseNumber(c.stringMul(f,p));let b;const v=this.safeString(e,"instrument");if(void 0!==v)if(v in this.markets_by_id)t=this.markets_by_id[v];else{const t=this.safeString(e,"currency1"),s=this.safeString(e,"currency2");b=this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(s)}void 0===b&&void 0!==t&&(b=t.symbol);const w={info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:b,order:a,type:void 0,side:r,takerOrMaker:void 0,price:m,amount:g,cost:y,fee:void 0};return void 0!==n&&(void 0!==h?d===u?(n=this.sum(n,h),w.fee={cost:n,currency:d}):w.fees=[{cost:n,currency:d},{cost:h,currency:u}]:w.fee={cost:n,currency:d}),"fee"in w||"fees"in w||(w.fee=void 0),w}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r=this.safeString(i,"walletId");if(void 0===r)throw new n(this.id+" fetchTransactions() requires a walletId parameter");const a={walletId:r};void 0!==s&&(a.perPage=s);const o=(await this.privateGetWalletsWalletIdFundingHistory(this.extend(a,i))).fundingHistory,c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"time"),i=this.parse8601(s),r=this.safeString(t,"currency"),a=this.safeString(t,"destinationAddress"),n=this.safeString(t,"txnHash"),d=this.safeStringLower(t,"transactionType"),h=this.safeString(t,"status"),l=this.parseTransferStatus(h);c.push({id:this.safeString(t,"withdrawalId"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(r),address:a,tag:void 0,txid:n,type:d,status:l,amount:this.safeNumber(t,"amount"),fee:void 0,info:t})}return c}parseTransferStatus(e){return this.safeString({cancelled:"canceled",completed:"ok"},e,"pending")}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const a=this.safeString(i,"walletId");if(void 0===a)throw new r(this.id+" fetchMyTrades() requires a walletId parameter");const n={walletId:a};void 0!==t&&(n.rangeStart=this.ymdhms(t,"T")),void 0!==s&&(n.perPage=s);const o=await this.privateGetWalletsWalletIdTrades(this.extend(n,i)),c=this.safeValue(o,"tradingHistory",[]);let d;return void 0!==e&&(d=this.market(e)),this.parseTrades(c,d,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetMarketsSymbolTrades(this.extend(a,i)),o=this.safeValue(n,"recentTrades",[]);return this.parseTrades(o,r,t,s)}parseBalance(e){const t=e[0].balances,s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"availableBalance"),n.total=this.safeString(i,"totalBalance"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.fetchWallets(e);return this.parseBalance(t)}async fetchWallets(e={}){if(await this.loadMarkets(),!this.uid)throw new a(this.id+" fetchWallets() requires uid API credential");const t={userId:this.uid};return await this.privateGetWallets(this.extend(t,e))}async fetchWallet(e,t={}){await this.loadMarkets();const s={walletId:e};return await this.privateGetWalletsWalletId(this.extend(s,t))}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"open"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"filled"},i))}async fetchOrders(e,t,s,i={}){let a;await this.loadMarkets(),void 0!==e&&(a=this.market(e));if(!("walletId"in i))throw new r(this.id+" fetchOrders() requires a walletId parameter");const n={walletId:i.walletId},o=await this.privateGetWalletsWalletIdOrders(this.extend(n,i));return this.parseOrders(o,a,t,s)}parseOrderStatus(e){return this.safeString({submitted:"open",open:"open",filled:"closed",cancelled:"canceled",rejected:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"side"),i=this.safeString(e,"type"),r=this.markets_by_id[e.instrument].symbol,a=this.parse8601(e.createdTime),n=this.safeString(e,"amount"),o=this.safeString(e,"amountFilled"),c=this.safeString(e,"price"),d=this.safeString(e,"volumeWeightedAveragePrice"),h=this.safeString(e,"clientOrderIdentifier"),l=this.safeString(e,"id"),u="True"===this.safeString(e,"postOnly");return this.safeOrder({id:l,clientOrderId:h,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString(e,"status")),symbol:r,type:i,timeInForce:void 0,postOnly:u,side:s,price:c,stopPrice:void 0,cost:void 0,average:d,amount:n,filled:o,remaining:void 0,fee:undefined,trades:void 0},t)}nonce(){return this.milliseconds()}async createOrder(e,t,s,i,a,n={}){if(await this.loadMarkets(),"market"===t)throw new r(this.id+" createOrder() allows limit orders only");if(!("walletId"in n))throw new r(this.id+" createOrder() requires a walletId parameter");i=i.toString(),a=a.toString();const o=this.market(e),c={side:s,type:t,currency:o.id.replace(o.quote,""),amount:i,display:i,price:a,instrument:o.id},d=await this.privatePostWalletsWalletIdOrders(this.extend(c,n));return{info:d,id:d.id}}async fetchOrder(e,t,s={}){await this.loadMarkets();if(!("walletId"in s))throw new r(this.id+" fetchOrder() requires a walletId parameter");const i={id:e},a=await this.privateGetWalletsWalletIdOrdersId(this.extend(i,s));return this.parseOrder(a)}async cancelOrder(e,t,s={}){if(!("walletId"in s))throw new r(this.id+" cancelOrder() requires a walletId parameter");const i={id:e};return await this.privateDeleteWalletsWalletIdOrdersId(this.extend(i,s))}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("GET"===s&&Object.keys(o).length&&(n+="?"+this.urlencode(o)),"POST"===s&&Object.keys(o).length&&(a=this.json(o)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=e,i=[s,n,"POST"===s?a:"",e,t],o=e+this.json(i).replace("\\/","/"),c=this.hash(this.encode(o),"sha256","binary"),d=this.stringToBinary(this.encode(n)),h=this.binaryConcat(d,c),l=this.hmac(h,this.encode(this.secret),"sha512","base64");r={Authorization:this.apiKey+":"+l,"Content-Type":"application/json","X-Auth-Timestamp":t,"X-Auth-Nonce":e}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(void 0!==this.safeString(o,"code"))throw new r(this.id+" "+this.json(o))}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],218:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadSymbol:r,BadRequest:a,ExchangeNotAvailable:n,ArgumentsRequired:o,PermissionDenied:c,AuthenticationError:d,ExchangeError:h,OrderNotFound:l,DDoSProtection:u,InvalidNonce:f,InsufficientFunds:p,CancelPending:m,InvalidOrder:g,InvalidAddress:y,RateLimitExceeded:b,OnMaintenance:v}=e("./base/errors"),{TRUNCATE:w,TICK_SIZE:S}=e("./base/functions/number"),k=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"kraken",name:"Kraken",countries:["US"],version:"0",rateLimit:3e3,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLedgerEntry:!0,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:"emulated",fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,withdraw:!0},marketsByAltname:{},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"4h":240,"1d":1440,"1w":10080,"2w":21600},urls:{logo:"https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg",api:{public:"https://api.kraken.com",private:"https://api.kraken.com",zendesk:"https://kraken.zendesk.com/api/v2/help_center/en-us/articles"},www:"https://www.kraken.com",doc:"https://www.kraken.com/features/api",fees:"https://www.kraken.com/en-us/features/fee-schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:.0026,maker:.0016,tiers:{taker:[[0,.0026],[5e4,.0024],[1e5,.0022],[25e4,.002],[5e5,.0018],[1e6,.0016],[25e5,.0014],[5e6,.0012],[1e7,1e-4]],maker:[[0,.0016],[5e4,.0014],[1e5,.0012],[25e4,.001],[5e5,8e-4],[1e6,6e-4],[25e5,4e-4],[5e6,2e-4],[1e7,0]]}}},handleContentTypeApplicationZip:!0,api:{zendesk:{get:["360000292886","201893608"]},public:{get:["Assets","AssetPairs","Depth","OHLC","Spread","Ticker","Time","Trades"]},private:{post:{AddOrder:0,AddExport:1,Balance:1,CancelAll:1,CancelOrder:0,CancelOrderBatch:0,ClosedOrders:2,DepositAddresses:1,DepositMethods:1,DepositStatus:1,ExportStatus:1,GetWebSocketsToken:1,Ledgers:2,OpenOrders:1,OpenPositions:1,QueryLedgers:1,QueryOrders:1,QueryTrades:1,RetrieveExport:1,RemoveExport:1,TradeBalance:1,TradesHistory:2,TradeVolume:1,Withdraw:1,WithdrawCancel:1,WithdrawInfo:1,WithdrawStatus:1,Stake:1,Unstake:1,"Staking/Assets":1,"Staking/Pending":1,"Staking/Transactions":1}}},commonCurrencies:{LUNA:"LUNC",LUNA2:"LUNA",REPV2:"REP",REP:"REPV1",UST:"USTC",XBT:"BTC","XBT.M":"BTC.M",XDG:"DOGE"},options:{delistedMarketsById:{},inactiveCurrencies:["CAD","USD","JPY","GBP"],networks:{ETH:"ERC20",TRX:"TRC20"},depositMethods:{"1INCH":"1inch (1INCH)",AAVE:"Aave",ADA:"ADA",ALGO:"Algorand",ANKR:"ANKR (ANKR)",ANT:"Aragon (ANT)",ATOM:"Cosmos",AXS:"Axie Infinity Shards (AXS)",BADGER:"Bager DAO (BADGER)",BAL:"Balancer (BAL)",BAND:"Band Protocol (BAND)",BAT:"BAT",BCH:"Bitcoin Cash",BNC:"Bifrost (BNC)",BNT:"Bancor (BNT)",BTC:"Bitcoin",CHZ:"Chiliz (CHZ)",COMP:"Compound (COMP)",CQT:"\tCovalent Query Token (CQT)",CRV:"Curve DAO Token (CRV)",CTSI:"Cartesi (CTSI)",DAI:"Dai",DASH:"Dash",DOGE:"Dogecoin",DOT:"Polkadot",DYDX:"dYdX (DYDX)",ENJ:"Enjin Coin (ENJ)",EOS:"EOS",ETC:"Ether Classic (Hex)",ETH:"Ether (Hex)",EWT:"Energy Web Token",FEE:"Kraken Fee Credit",FIL:"Filecoin",FLOW:"Flow",GHST:"Aavegotchi (GHST)",GNO:"GNO",GRT:"GRT",ICX:"Icon",INJ:"Injective Protocol (INJ)",KAR:"Karura (KAR)",KAVA:"Kava",KEEP:"Keep Token (KEEP)",KNC:"Kyber Network (KNC)",KSM:"Kusama",LINK:"Link",LPT:"Livepeer Token (LPT)",LRC:"Loopring (LRC)",LSK:"Lisk",LTC:"Litecoin",MANA:"MANA",MATIC:"Polygon (MATIC)",MINA:"Mina",MIR:"Mirror Protocol (MIR)",MKR:"Maker (MKR)",MLN:"MLN",MOVR:"Moonriver (MOVR)",NANO:"NANO",OCEAN:"OCEAN",OGN:"Origin Protocol (OGN)",OMG:"OMG",OXT:"Orchid (OXT)",OXY:"Oxygen (OXY)",PAXG:"PAX (Gold)",PERP:"Perpetual Protocol (PERP)",PHA:"Phala (PHA)",QTUM:"QTUM",RARI:"Rarible (RARI)",RAY:"Raydium (RAY)",REN:"Ren Protocol (REN)",REP:"REPv2",REPV1:"REP",SAND:"The Sandbox (SAND)",SC:"Siacoin",SDN:"Shiden (SDN)",SOL:"Solana",SNX:"Synthetix  Network (SNX)",SRM:"Serum",STORJ:"Storj (STORJ)",SUSHI:"Sushiswap (SUSHI)",TBTC:"tBTC",TRX:"Tron",UNI:"UNI",USDC:"USDC",USDT:"Tether USD (ERC20)","USDT-TRC20":"Tether USD (TRC20)",WAVES:"Waves",WBTC:"Wrapped Bitcoin (WBTC)",XLM:"Stellar XLM",XMR:"Monero",XRP:"Ripple XRP",XTZ:"XTZ",YFI:"YFI",ZEC:"Zcash (Transparent)",ZRX:"0x (ZRX)"}},precisionMode:S,exceptions:{"EQuery:Invalid asset pair":r,"EAPI:Invalid key":d,"EFunding:Unknown withdraw key":y,"EFunding:Invalid amount":p,"EService:Unavailable":n,"EDatabase:Internal error":n,"EService:Busy":n,"EQuery:Unknown asset":r,"EAPI:Rate limit exceeded":u,"EOrder:Rate limit exceeded":u,"EGeneral:Internal error":n,"EGeneral:Temporary lockout":u,"EGeneral:Permission denied":c,"EOrder:Unknown order":g,"EOrder:Order minimum not met":g,"EGeneral:Invalid arguments":a,"ESession:Invalid session":d,"EAPI:Invalid nonce":f,"EFunding:No funding method":a,"EFunding:Unknown asset":r,"EService:Market in post_only mode":v}})}feeToPrecision(e,t){return this.decimalToPrecision(t,w,this.markets[e].precision.amount,this.precisionMode)}async fetchMarkets(e={}){const t=await this.publicGetAssetPairs(e),s=this.safeValue(t,"result",{}),i=Object.keys(s);let r=[];for(let e=0;e<i.length;e++){const t=i[e],a=s[t],n=this.safeString(a,"base"),o=this.safeString(a,"quote"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=t.indexOf(".d")>=0,l=this.safeString(a,"altname"),u=this.safeValue(a,"fees_maker",[]),f=this.safeValue(u,0,[]),p=this.safeNumber(f,1);let m;void 0!==p&&(m=parseFloat(p)/100);const g=this.safeValue(a,"fees",[]),y=this.safeValue(g,0,[]),b=this.safeNumber(y,1);let v;void 0!==b&&(v=parseFloat(b)/100);const w=this.safeValue(a,"leverage_buy",[]),S=w.length,k=this.parseNumber(this.parsePrecision(this.safeString(a,"pair_decimals")));r.push({id:t,symbol:h?l:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,darkpool:h,altname:a.altname,type:"spot",spot:!0,margin:S>0,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:v,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(a,"lot_decimals"))),price:k},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(w,S-1,1)},amount:{min:this.safeNumber(a,"ordermin"),max:void 0},price:{min:k,max:void 0},cost:{min:void 0,max:void 0}},info:a})}return r=this.appendInactiveMarkets(r),this.marketsByAltname=this.indexBy(r,"altname"),r}safeCurrency(e,t){if(void 0!==e&&e.length>3&&(0===e.indexOf("X")||0===e.indexOf("Z"))){if(e.indexOf(".")>0)return super.safeCurrency(e,t);e=e.slice(1)}return super.safeCurrency(e,t)}appendInactiveMarkets(e){const t={amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00000001")},s={darkpool:!1,info:void 0,maker:void 0,taker:void 0,active:!1,precision:t,limits:{amount:{min:t.amount,max:void 0},price:{min:t.price,max:void 0},cost:{min:void 0,max:void 0}}},i=[];for(let t=0;t<i.length;t++)e.push(this.extend(s,i[t]));return e}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),s=this.safeValue(t,"result",{}),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=s[t],n=this.safeCurrencyCode(this.safeString(a,"altname")),o=this.parseNumber(this.parsePrecision(this.safeString(a,"decimals"))),c=!this.inArray(n,this.options.inactiveCurrencies);r[n]={id:t,code:n,info:a,name:n,active:c,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:void 0,max:void 0}}}}return r}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id,"fee-info":!0},r=await this.privatePostTradeVolume(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseTradingFee(a,s)}parseTradingFee(e,t){const s=this.safeValue(e,"fees_maker",{}),i=this.safeValue(e,"fees",{}),r=this.safeValue(s,t.id,{}),a=this.safeValue(i,t.id,{});return{info:e,symbol:t.symbol,maker:this.safeNumber(r,"fee"),taker:this.safeNumber(a,"fee"),percentage:!0,tierBased:!0}}parseBidAsk(e,t=0,s=1){return[this.safeNumber(e,t),this.safeNumber(e,s),this.safeInteger(e,2)]}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);if(i.darkpool)throw new h(this.id+" fetchOrderBook() does not provide an order book for darkpool symbol "+e);const r={pair:i.id};void 0!==t&&(r.count=t);const a=await this.publicGetDepth(this.extend(r,s)),n=this.safeValue(a,"result",{});let o=this.safeValue(n,i.id);const c=this.safeValue(i,"info",{}),d=this.safeValue(c,"wsname");return void 0!==d&&(o=this.safeValue(n,d,o)),this.parseOrderBook(o,e)}parseTicker(e,t){const s=this.milliseconds(),i=this.safeSymbol(void 0,t),r=this.safeValue(e,"v",[]),a=this.safeString(r,1),n=this.safeValue(e,"p",[]),o=this.safeString(n,1),c=k.stringMul(a,o),d=this.safeValue(e,"c",[]),h=this.safeString(d,0),l=this.safeValue(e,"h",[]),u=this.safeValue(e,"l",[]),f=this.safeValue(e,"b",[]),p=this.safeValue(e,"a",[]);return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(l,1),low:this.safeString(u,1),bid:this.safeString(f,0),bidVolume:void 0,ask:this.safeString(p,0),askVolume:void 0,vwap:o,open:this.safeString(e,"o"),close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:c,info:e},t)}async fetchTickers(e,t={}){if(void 0===e)throw new o(this.id+" fetchTickers() requires a symbols argument, an array of symbols");await this.loadMarkets();const s=[];for(let t=0;t<e.length;t++){const i=e[t],r=this.markets[i];r.active&&!r.darkpool&&s.push(r.id)}const i={pair:s.join(",")},r=(await this.publicGetTicker(this.extend(i,t))).result,a=Object.keys(r),n={};for(let e=0;e<a.length;e++){const t=a[e],s=this.markets_by_id[t],i=s.symbol,o=r[t];n[i]=this.parseTicker(o,s)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();if(e.indexOf(".d")>=0)throw new h(this.id+" fetchTicker() does not provide a ticker for darkpool symbol "+e);const s=this.market(e),i={pair:s.id},r=(await this.publicGetTicker(this.extend(i,t))).result[s.id];return this.parseTicker(r,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,6)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id,interval:this.timeframes[t]};void 0!==s&&(n.since=parseInt((s-1)/1e3));const o=await this.publicGetOHLC(this.extend(n,r)),c=this.safeValue(o,"result",{}),d=this.safeValue(c,a.id,[]);return this.parseOHLCVs(d,a,t,s,i)}parseLedgerEntryType(e){return this.safeString({trade:"trade",withdrawal:"transaction",deposit:"transaction",transfer:"transfer",margin:"margin"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"id");let i;const r=this.safeString(e,"refid"),a=this.parseLedgerEntryType(this.safeString(e,"type")),n=this.safeCurrencyCode(this.safeString(e,"asset"),t);let o=this.safeNumber(e,"amount");o<0?(i="out",o=Math.abs(o)):i="in";const c=this.safeNumber(e,"time");let d;void 0!==c&&(d=parseInt(1e3*c));const h={cost:this.safeNumber(e,"fee"),currency:n};return{info:e,id:s,direction:i,account:undefined,referenceId:r,referenceAccount:undefined,type:a,currency:n,amount:o,before:undefined,after:this.safeNumber(e,"balance"),status:"ok",timestamp:d,datetime:this.iso8601(d),fee:h}}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.start=parseInt(t/1e3));const n=await this.privatePostLedgers(this.extend(r,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"ledger",{}),d=Object.keys(c),h=[];for(let e=0;e<d.length;e++){const t=d[e],s=c[t];s.id=t,h.push(s)}return this.parseLedger(h,a,t,s)}async fetchLedgerEntriesByIds(e,t,s={}){await this.loadMarkets(),e=e.join(",");const i=this.extend({id:e},s),r=(await this.privatePostQueryLedgers(i)).result,a=Object.keys(r),n=[];for(let e=0;e<a.length;e++){const t=a[e],s=r[t];s.id=t,n.push(s)}return this.parseLedger(n)}async fetchLedgerEntry(e,t,s={}){return(await this.fetchLedgerEntriesByIds([e],t,s))[0]}parseTrade(e,t){let s,i,r,a,n,o,c,d,h;if(Array.isArray(e)){s=this.safeTimestamp(e,2),i="s"===e[3]?"sell":"buy",r="l"===e[4]?"limit":"market",a=this.safeString(e,0),n=this.safeString(e,1);e.length>6&&(o=this.safeString(e,6))}else if("string"==typeof e)o=e;else if("ordertxid"in e){const h=this.safeString(e,"pair"),l=this.findMarketByAltnameOrId(h);if(void 0!==l?t=l:void 0!==h&&(t=this.getDelistedMarketById(h)),c=this.safeString(e,"ordertxid"),o=this.safeString2(e,"id","postxid"),s=this.safeTimestamp(e,"time"),i=this.safeString(e,"type"),r=this.safeString(e,"ordertype"),a=this.safeString(e,"price"),n=this.safeString(e,"vol"),"fee"in e){let s;void 0!==t&&(s=t.quote),d={cost:this.safeString(e,"fee"),currency:s}}}void 0!==t&&(h=t.symbol);const l=this.safeString(e,"cost");return this.safeTrade({id:o,order:c,info:e,timestamp:s,datetime:this.iso8601(s),symbol:h,type:r,side:i,takerOrMaker:void 0,price:a,amount:n,cost:l,fee:d},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=r.id,n={pair:a};if(void 0!==t&&(n.since=1e6*t,n.since=t.toString()+"000000"),void 0!==s&&1e3!==s){if(this.safeValue(this.options,"fetchTradesWarning",!0))throw new h(this.id+" fetchTrades() cannot serve "+s.toString()+" trades without breaking the pagination, see https://github.com/ccxt/ccxt/issues/5698 for more details. Set exchange.options['fetchTradesWarning'] to acknowledge this warning and silence it.")}const o=(await this.publicGetTrades(this.extend(n,i))).result,c=o[a],d=c.length;if(d<=0)return[];const l=c[d-1],u=this.safeString(o,"last");return l.push(u),this.parseTrades(c,r,t,s)}parseBalance(e){const t=this.safeValue(e,"result",{}),s={info:e,timestamp:void 0,datetime:void 0},i=Object.keys(t);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,r),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n={pair:this.market(e).id,type:s,ordertype:t,volume:this.amountToPrecision(e,i)},c=this.safeString2(a,"userref","clientOrderId");if(a=this.omit(a,["userref","clientOrderId"]),void 0!==c&&(n.userref=c),"limit"===t)n.price=this.priceToPrecision(e,r);else if("stop-loss"===t||"take-profit"===t){const s=this.safeNumber2(a,"price","stopPrice",r);if(void 0===s)throw new o(this.id+" createOrder() requires a price argument or a price/stopPrice parameter for a "+t+" order");n.price=this.priceToPrecision(e,s)}else if("stop-loss-limit"===t||"take-profit-limit"===t){const s=this.safeNumber2(a,"price","stopPrice"),i=this.safeNumber(a,"price2"),c=void 0!==s,d=void 0!==i;if(c&&d)n.price=this.priceToPrecision(e,s),n.price2=this.priceToPrecision(e,i);else{if(void 0===r||!c&&!d)throw new o(this.id+" createOrder() requires a price argument and/or price/stopPrice/price2 parameters for a "+t+" order");c?(n.price=this.priceToPrecision(e,s),n.price2=this.priceToPrecision(e,r)):d&&(n.price=this.priceToPrecision(e,r),n.price2=this.priceToPrecision(e,i))}}let d=this.safeValue(a,"close");if(void 0!==d){d=this.extend({},d);const t=this.safeValue(d,"price");void 0!==t&&(d.price=this.priceToPrecision(e,t));const s=this.safeValue(d,"price2");void 0!==s&&(d.price2=this.priceToPrecision(e,s)),n.close=d}a=this.omit(a,["price","stopPrice","price2","close"]);const h=await this.privatePostAddOrder(this.extend(n,a)),l=this.safeValue(h,"result");return this.parseOrder(l)}findMarketByAltnameOrId(e){return e in this.marketsByAltname?this.marketsByAltname[e]:e in this.markets_by_id?this.markets_by_id[e]:void 0}getDelistedMarketById(e){if(void 0===e)return e;let t=this.safeValue(this.options.delistedMarketsById,e);if(void 0!==t)return t;let s=3,i=3,r=6;8===e.length?(s=4,i=4,r=8):7===e.length&&(s=4,i=4,r=7);const a=e.slice(0,s),n=e.slice(i,r),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n);return t={symbol:o+"/"+c,base:o,quote:c,baseId:a,quoteId:n},this.options.delistedMarketsById[e]=t,t}parseOrderStatus(e){return this.safeString({pending:"open",open:"open",closed:"closed",canceled:"canceled",expired:"expired"},e,e)}parseOrder(e,t){const s=this.safeValue(e,"descr",{}),i=this.safeString(s,"order");let r,a,n,o,c,d;if(void 0!==i){const e=i.split(" ");r=this.safeString(e,0),c=this.safeString(e,1),n=this.safeString(e,2),a=this.safeString(e,4),"stop"===a?(d=this.safeString(e,6),o=this.safeString(e,9)):"limit"===a&&(o=this.safeString(e,5))}r=this.safeString(s,"type",r),a=this.safeString(s,"ordertype",a),n=this.safeString(s,"pair",n);const h=this.findMarketByAltnameOrId(n);let l;void 0!==h?t=h:void 0!==n&&(t=this.getDelistedMarketById(n));const u=this.safeTimestamp(e,"opentm");c=this.safeString(e,"vol",c);const f=this.safeString(e,"vol_exec");let p;o=this.safeString(s,"price",o),(void 0===o||k.stringEquals(o,"0"))&&(o=this.safeString(s,"price2")),(void 0===o||k.stringEquals(o,"0"))&&(o=this.safeString(e,"price",o));const m=this.safeNumber(e,"price");if(void 0!==t&&(l=t.symbol,"fee"in e)){const s=e.oflags;p={cost:this.safeString(e,"fee"),rate:void 0},s.indexOf("fciq")>=0?p.currency=t.quote:s.indexOf("fcib")>=0&&(p.currency=t.base)}const g=this.parseOrderStatus(this.safeString(e,"status"));let y=this.safeString(e,"id");if(void 0===y){const t=this.safeValue(e,"txid");y=this.safeString(t,0)}const b=this.safeString(e,"userref"),v=this.safeValue(e,"trades");return d=this.safeNumber(e,"stopprice",d),this.safeOrder({id:y,clientOrderId:b,info:e,timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:g,symbol:l,type:a,timeInForce:void 0,postOnly:void 0,side:r,price:o,stopPrice:d,cost:void 0,amount:c,filled:f,average:m,remaining:void 0,fee:p,trades:v},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.safeValue2(s,"userref","clientOrderId"),r={trades:!0};let a=s;void 0!==i?(r.userref=i,a=this.omit(s,["userref","clientOrderId"])):r.txid=e;const n=await this.privatePostQueryOrders(this.extend(r,a)),o=this.safeValue(n,"result",[]);if(!(e in o))throw new l(this.id+" fetchOrder() could not find order id "+e);const c=this.parseOrder(this.extend({id:e},o[e]));return this.extend({info:n},c)}async fetchOrderTrades(e,t,s,i,r={}){const a=this.safeValue(r,"trades"),n=[];if(void 0===a)throw new o(this.id+" fetchOrderTrades() requires a unified order structure in the params argument or a 'trades' param (an array of trade id strings)");for(let e=0;e<a.length;e++){const t=a[e];"string"==typeof t?n.push(t):n.push(t.id)}await this.loadMarkets();const c=this.safeValue(this.options,"fetchOrderTrades",{}),d=this.safeInteger(c,"batchSize",20),h=n.length;let l=parseInt(h/d);l=this.sum(l,1);let u=[];for(let e=0;e<l;e++){const r=[];for(let t=0;t<d;t++){const s=this.sum(e*d,t);s<h&&r.push(n[s])}const a={txid:r.join(",")},o=await this.privatePostQueryTrades(a),c=this.safeValue(o,"result"),l=Object.keys(c);for(let e=0;e<l.length;e++)c[l[e]].id=l[e];const f=this.parseTrades(c,void 0,s,i),p=this.filterBySymbol(f,t);u=this.arrayConcat(u,p)}return u}async fetchOrdersByIds(e,t,s={}){await this.loadMarkets();const i=await this.privatePostQueryOrders(this.extend({trades:!0,txid:e.join(",")},s)),r=this.safeValue(i,"result",{}),a=[],n=Object.keys(r);for(let e=0;e<n.length;e++){const t=n[e],s=r[t],i=this.parseOrder(this.extend({id:t},s));a.push(i)}return a}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=parseInt(t/1e3));const a=(await this.privatePostTradesHistory(this.extend(r,i))).result.trades,n=Object.keys(a);for(let e=0;e<n.length;e++)a[n[e]].id=n[e];let o;return void 0!==e&&(o=this.market(e)),this.parseTrades(a,o,t,s)}async cancelOrder(e,t,s={}){let i;await this.loadMarkets();const r={txid:this.safeValue2(s,"userref","clientOrderId",e)};s=this.omit(s,["userref","clientOrderId"]);try{i=await this.privatePostCancelOrder(this.extend(r,s))}catch(e){if(this.last_http_response&&this.last_http_response.indexOf("EOrder:Unknown order")>=0)throw new l(this.id+" cancelOrder() error "+this.last_http_response);throw e}return i}async cancelOrders(e,t,s={}){const i={orders:e};return await this.privatePostCancelOrderBatch(this.extend(i,s))}async cancelAllOrders(e,t={}){return await this.loadMarkets(),await this.privatePostCancelAll(t)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=parseInt(t/1e3));let a=i;const n=this.safeValue2(i,"userref","clientOrderId");void 0!==n&&(r.userref=n,a=this.omit(i,["userref","clientOrderId"]));const o=await this.privatePostOpenOrders(this.extend(r,a));let c;void 0!==e&&(c=this.market(e));const d=this.safeValue(o,"result",{}),h=this.safeValue(d,"open",[]);return this.parseOrders(h,c,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=parseInt(t/1e3));let a=i;const n=this.safeValue2(i,"userref","clientOrderId");void 0!==n&&(r.userref=n,a=this.omit(i,["userref","clientOrderId"]));const o=await this.privatePostClosedOrders(this.extend(r,a));let c;void 0!==e&&(c=this.market(e));const d=this.safeValue(o,"result",{}),h=this.safeValue(d,"closed",[]);return this.parseOrders(h,c,t,s)}parseTransactionStatus(e){return this.safeString({Initial:"pending",Pending:"pending",Success:"ok",Settled:"pending",Failure:"failed",Partial:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"refid"),i=this.safeString(e,"txid"),r=this.safeTimestamp(e,"time"),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a,t),o=this.safeString(e,"info"),c=this.safeNumber(e,"amount");let d=this.parseTransactionStatus(this.safeString(e,"status"));const h=this.safeString(e,"status-prop");("on-hold"===h||"cancel-pending"===h||"onhold"===h)&&(d="pending");const l=this.safeString(e,"type");let u=this.safeNumber(e,"fee");return void 0===u&&"deposit"===l&&(u=0),{info:e,id:s,currency:n,amount:c,network:void 0,address:o,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:d,type:l,updated:void 0,txid:i,timestamp:r,datetime:this.iso8601(r),fee:{currency:n,cost:u}}}parseTransactionsByType(e,t,s,i,r){const a=[];for(let s=0;s<t.length;s++){const i=this.parseTransaction(this.extend({type:e},t[s]));a.push(i)}return this.filterByCurrencySinceLimit(a,s,i,r)}async fetchDeposits(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r={asset:this.currency(e).id},a=await this.privatePostDepositStatus(this.extend(r,i));return this.parseTransactionsByType("deposit",a.result,e,t,s)}async fetchTime(e={}){const t=await this.publicGetTime(e),s=this.safeValue(t,"result",{});return this.safeTimestamp(s,"unixtime")}async fetchWithdrawals(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r={asset:this.currency(e).id},a=await this.privatePostWithdrawStatus(this.extend(r,i));return this.parseTransactionsByType("withdrawal",a.result,e,t,s)}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({new:"true"},t))}async fetchDepositMethods(e,t={}){await this.loadMarkets();const s={asset:this.currency(e).id},i=await this.privatePostDepositMethods(this.extend(s,t));return this.safeValue(i,"result")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e);let i=this.safeStringUpper(t,"network");const r=this.safeValue(this.options,"networks",{});i=this.safeString(r,i,i),t=this.omit(t,"network"),"USDT"===e&&"TRC20"===i&&(e=e+"-"+i);const a=this.safeValue(this.options,"depositMethods",{}),n=this.safeString(a,e);let o=this.safeString(t,"method",n);if(void 0===o){const t=await this.fetchDepositMethods(e);if(void 0!==i)for(let e=0;e<t.length;e++){const s=this.safeString(t[e],"method");if(s.indexOf(i)>=0){o=s;break}}if(void 0===o){const e=this.safeValue(t,0,{});o=this.safeString(e,"method")}}const c={asset:s.id,method:o},d=await this.privatePostDepositAddresses(this.extend(c,t)),h=this.safeValue(d,"result",[]),l=this.safeValue(h,0,{});if(void 0===l)throw new y(this.id+" privatePostDepositAddresses() returned no addresses for "+e);return this.parseDepositAddress(l,s)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"tag"),r=(t=this.safeCurrency(void 0,t)).code;return this.checkAddress(s),{currency:r,address:s,tag:i,network:void 0,info:e}}async withdraw(e,t,s,i,r={}){if([i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),"key"in r){await this.loadMarkets();const s=this.currency(e),i={asset:s.id,amount:t},a=await this.privatePostWithdraw(this.extend(i,r)),n=this.safeValue(a,"result",{});return this.parseTransaction(n,s)}throw new h(this.id+" withdraw() requires a 'key' parameter (withdrawal key name, as set up on your account)")}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.privatePostOpenPositions(this.extend({},t));return this.safeValue(s,"result")}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/"+t+"/"+e;if("public"===t)Object.keys(i).length&&(n+="?"+this.urlencodeNested(i));else if("private"===t){const t="CancelOrderBatch"===e;this.checkRequiredCredentials();const s=this.nonce().toString();a=t?this.json(this.extend({nonce:s},i)):this.urlencodeNested(this.extend({nonce:s},i));const o=this.encode(s+a),c=this.hash(o,"sha256","binary"),d=this.stringToBinary(this.encode(n)),h=this.binaryConcat(d,c),l=this.base64ToBinary(this.secret),u=this.hmac(h,l,"sha512","base64");(r={"API-Key":this.apiKey,"API-Sign":u})["Content-Type"]=t?"application/json":"application/x-www-form-urlencoded"}else n="/"+e;return n=this.urls.api[t]+n,{url:n,method:s,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,s,i,r,a,o,c,d){if(520===e)throw new n(this.id+" "+e.toString()+" "+t);if(a.indexOf("Invalid order")>=0)throw new g(this.id+" "+a);if(a.indexOf("Invalid nonce")>=0)throw new f(this.id+" "+a);if(a.indexOf("Insufficient funds")>=0)throw new p(this.id+" "+a);if(a.indexOf("Cancel pending")>=0)throw new m(this.id+" "+a);if(a.indexOf("Invalid arguments:volume")>=0)throw new g(this.id+" "+a);if(a.indexOf("Rate limit exceeded")>=0)throw new b(this.id+" "+a);if(void 0!==o&&"{"===a[0]&&"string"!=typeof o&&"error"in o){if(o.error.length){const e=this.id+" "+a;for(let t=0;t<o.error.length;t++){const s=o.error[t];this.throwExactlyMatchedException(this.exceptions,s,e)}throw new h(e)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],219:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,InsufficientFunds:n,OrderNotFound:o,InvalidOrder:c,AccountSuspended:d,InvalidNonce:h,NotSupported:l,BadRequest:u,AuthenticationError:f,BadSymbol:p,RateLimitExceeded:m,PermissionDenied:g,InvalidAddress:y}=e("./base/errors"),{TICK_SIZE:b}=e("./base/functions/number"),v=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"kucoin",name:"KuCoin",countries:["SC"],rateLimit:50,version:"v2",certified:!1,pro:!0,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrdersByStatus:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFee:!0,fetchWithdrawals:!0,transfer:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg",referral:"https://www.kucoin.com/?rcode=E5wkqe",api:{public:"https://api.kucoin.com",private:"https://api.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com"},test:{public:"https://openapi-sandbox.kucoin.com",private:"https://openapi-sandbox.kucoin.com",futuresPrivate:"https://api-sandbox-futures.kucoin.com",futuresPublic:"https://api-sandbox-futures.kucoin.com"},www:"https://www.kucoin.com",doc:["https://docs.kucoin.com"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:{timestamp:1,status:1,symbols:1,markets:1,"market/allTickers":1,"market/orderbook/level{level}_{limit}":1,"market/orderbook/level2_20":1,"market/orderbook/level2_100":1,"market/histories":1,"market/candles":1,"market/stats":1,currencies:1,"currencies/{currency}":1,prices:1,"mark-price/{symbol}/current":1,"margin/config":1},post:{"bullet-public":1}},private:{get:{"market/orderbook/level{level}":1,"market/orderbook/level2":{v3:2},"market/orderbook/level3":1,accounts:1,"accounts/{accountId}":1,"accounts/ledgers":3.333,"accounts/{accountId}/holds":1,"accounts/transferable":1,"base-fee":1,"sub/user":1,"sub-accounts":1,"sub-accounts/{subUserId}":1,"deposit-addresses":1,deposits:10,"hist-deposits":10,"hist-orders":1,"hist-withdrawals":10,withdrawals:10,"withdrawals/quotas":1,orders:2,"order/client-order/{clientOid}":1,"orders/{orderId}":1,"limit/orders":1,fills:6.66667,"limit/fills":1,"margin/account":1,"margin/borrow":1,"margin/borrow/outstanding":1,"margin/borrow/borrow/repaid":1,"margin/lend/active":1,"margin/lend/done":1,"margin/lend/trade/unsettled":1,"margin/lend/trade/settled":1,"margin/lend/assets":1,"margin/market":1,"margin/trade/last":1,"stop-order/{orderId}":1,"stop-order":1,"stop-order/queryOrderByClientOid":1,"trade-fees":1.3333},post:{accounts:1,"accounts/inner-transfer":{v2:1},"accounts/sub-transfer":{v2:25},"deposit-addresses":1,withdrawals:1,orders:4,"orders/multi":20,"margin/borrow":1,"margin/order":1,"margin/repay/all":1,"margin/repay/single":1,"margin/lend":1,"margin/toggle-auto-lend":1,"bullet-private":1,"stop-order":1},delete:{"withdrawals/{withdrawalId}":1,orders:20,"order/client-order/{clientOid}":1,"orders/{orderId}":1,"margin/lend/{orderId}":1,"stop-order/cancelOrderByClientOid":1,"stop-order/{orderId}":1,"stop-order/cancel":1}},futuresPublic:{get:{"contracts/active":1.3953,"contracts/{symbol}":1.3953,ticker:1.3953,"level2/snapshot":2,"level2/depth20":1.3953,"level2/depth100":1.3953,"level2/message/query":1.3953,"level3/message/query":1.3953,"level3/snapshot":1.3953,"trade/history":1.3953,"interest/query":1.3953,"index/query":1.3953,"mark-price/{symbol}/current":1.3953,"premium/query":1.3953,"funding-rate/{symbol}/current":1.3953,timestamp:1.3953,status:1.3953,"kline/query":1.3953},post:{"bullet-public":1.3953}},futuresPrivate:{get:{"account-overview":2,"transaction-history":6.666,"deposit-address":1.3953,"deposit-list":1.3953,"withdrawals/quotas":1.3953,"withdrawal-list":1.3953,"transfer-list":1.3953,orders:1.3953,stopOrders:1.3953,recentDoneOrders:1.3953,"orders/{orderId}":1.3953,"orders/byClientOid":1.3953,fills:6.666,recentFills:6.666,openOrderStatistics:1.3953,position:1.3953,positions:6.666,"funding-history":6.666},post:{withdrawals:1.3953,"transfer-out":1.3953,orders:1.3953,"position/margin/auto-deposit-status":1.3953,"position/margin/deposit-margin":1.3953,"bullet-private":1.3953},delete:{"withdrawals/{withdrawalId}":1.3953,"cancel/transfer-out":1.3953,"orders/{orderId}":1.3953,orders:6.666,stopOrders:1.3953}}},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},precisionMode:b,exceptions:{exact:{"order not exist":o,"order not exist.":o,order_not_exist:o,order_not_exist_or_not_allow_to_cancel:c,"Order size below the minimum requirement.":c,"The withdrawal amount is below the minimum requirement.":r,"Unsuccessful! Exceeded the max. funds out-transfer limit":n,400:u,401:f,403:l,404:l,405:l,429:m,500:a,503:a,101030:g,200004:n,230003:n,260100:n,3e5:c,4e5:p,400001:f,400002:h,400003:f,400004:f,400005:f,400006:f,400007:f,400008:l,400100:u,400200:c,400350:c,400370:c,400500:c,400600:p,400760:c,401e3:u,411100:d,415e3:u,5e5:a,260220:y},broad:{"Exceeded the access frequency":m,"require more permission":g}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.001")],[this.parseNumber("200"),this.parseNumber("0.0009")],[this.parseNumber("500"),this.parseNumber("0.0008")],[this.parseNumber("1000"),this.parseNumber("0.0007")],[this.parseNumber("2000"),this.parseNumber("0.0007")],[this.parseNumber("4000"),this.parseNumber("0.0006")],[this.parseNumber("8000"),this.parseNumber("0.0005")],[this.parseNumber("15000"),this.parseNumber("0.00045")],[this.parseNumber("25000"),this.parseNumber("0.0004")],[this.parseNumber("40000"),this.parseNumber("0.00035")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.00025")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.0009")],[this.parseNumber("200"),this.parseNumber("0.0007")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0003")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.00005")],[this.parseNumber("25000"),this.parseNumber("-0.00005")],[this.parseNumber("40000"),this.parseNumber("-0.00005")],[this.parseNumber("60000"),this.parseNumber("-0.00005")],[this.parseNumber("80000"),this.parseNumber("-0.00005")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{HOT:"HOTNOW",EDGE:"DADI",WAX:"WAXP",TRY:"Trias",VAI:"VAIOT"},options:{version:"v1",symbolSeparator:"-",fetchMyTradesMethod:"private_get_fills",fetchBalance:"trade",fetchMarkets:{fetchTickersFees:!0},versions:{public:{GET:{"currencies/{currency}":"v2",status:"v1","market/orderbook/level2_20":"v1","market/orderbook/level2_100":"v1","market/orderbook/level{level}_{limit}":"v1"}},private:{GET:{"market/orderbook/level2":"v3","market/orderbook/level3":"v3","market/orderbook/level{level}":"v3"},POST:{"accounts/inner-transfer":"v2","accounts/sub-transfer":"v2"}},futuresPrivate:{GET:{"account-overview":"v1",positions:"v1"},POST:{"transfer-out":"v2"}},futuresPublic:{GET:{"level3/snapshot":"v2"}}},accountsByType:{spot:"trade",margin:"margin",main:"main",funding:"main",future:"contract",mining:"pool"},networks:{ETH:"eth",ERC20:"eth",TRX:"trx",TRC20:"trx",KCC:"kcc",TERRA:"luna",LTC:"ltc"}}})}nonce(){return this.milliseconds()}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){const t=await this.publicGetStatus(e),s=this.safeValue(t,"data",{});return{status:"open"===this.safeString(s,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.publicGetSymbols(e),s=this.safeValue(t,"data"),i=this.safeValue(this.options,"fetchMarkets",{});let r={};this.safeValue(i,"fetchTickersFees",!0)&&(r=await this.publicGetMarketAllTickers(e));const a=this.safeValue(r,"data",{}),n=this.safeValue(a,"ticker",[]),o=this.indexBy(n,"symbol"),c=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),[r,a]=i.split("-"),n=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),h=this.safeValue(o,i,{}),l=this.safeString(h,"makerFeeRate"),u=this.safeString(h,"makerFeeRate"),f=this.safeString(h,"makerCoefficient"),p=this.safeString(h,"takerCoefficient");c.push({id:i,symbol:n+"/"+d,base:n,quote:d,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(t,"isMarginEnabled"),swap:!1,future:!1,option:!1,active:this.safeValue(t,"enableTrading"),contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(v.stringMul(u,p)),maker:this.parseNumber(v.stringMul(l,f)),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"baseIncrement"),price:this.safeNumber(t,"priceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"baseMinSize"),max:this.safeNumber(t,"baseMaxSize")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.safeNumber(t,"quoteMaxSize")}},info:t})}return c}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeString(t,"fullName"),n=this.safeCurrencyCode(r),o=this.safeValue(t,"isWithdrawEnabled",!1),c=this.safeValue(t,"isDepositEnabled",!1),d=this.safeNumber(t,"withdrawalMinFee"),h=o&&c;i[n]={id:r,name:a,code:n,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),info:t,active:h,deposit:c,withdraw:o,fee:d,limits:this.limits}}return i}async fetchAccounts(e={}){const t=await this.privateGetAccounts(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeString(t,"currency"),n=this.safeCurrencyCode(a),o=this.safeString(t,"type");i.push({id:r,type:o,currency:n,info:t})}return i}async fetchTransactionFee(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetWithdrawalsQuotas(this.extend(s,t)),r=i.data,a={};return a[e]=this.safeNumber(r,"withdrawMinFee"),{info:i,withdraw:a,deposit:{}}}isFuturesMethod(e,t){const s=this.safeString2(this.options,e,"defaultType","trade"),i=this.safeString(t,"type",s),a=this.safeValue(this.options,"accountsByType"),n=this.safeString(a,i);if(void 0===n){const e=Object.keys(a);throw new r(this.id+" isFuturesMethod() type must be one of "+e.join(", "))}return t=this.omit(t,"type"),"contract"===n||"future"===n||"futures"===n}parseTicker(e,t){let s=this.safeString(e,"changeRate");void 0!==s&&(s=v.stringMul(s,"100"));let i=this.safeString2(e,"last","lastTradedPrice");i=this.safeString(e,"price",i);const r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t,"-")).symbol,n=this.safeString(e,"vol"),o=this.safeString(e,"volValue"),c=this.safeInteger2(e,"time","datetime");return this.safeTicker({symbol:a,timestamp:c,datetime:this.iso8601(c),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString2(e,"buy","bestBid"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString2(e,"sell","bestAsk"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:this.safeString(e,"open"),close:i,last:i,previousClose:void 0,change:this.safeString(e,"changePrice"),percentage:s,average:this.safeString(e,"averagePrice"),baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketAllTickers(t),i=this.safeValue(s,"data",{}),r=this.safeValue(i,"ticker",[]),a=this.safeInteger(i,"time"),n={};for(let e=0;e<r.length;e++){r[e].time=a;const t=this.parseTicker(r[e]),s=this.safeString(t,"symbol");void 0!==s&&(n[s]=t)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetMarketStats(this.extend(i,t));return this.parseTicker(r.data,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="15m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,type:this.timeframes[t]},o=1e3*this.parseTimeframe(t);let c=this.milliseconds();void 0!==s?(n.startAt=parseInt(Math.floor(s/1e3)),void 0===i&&(i=this.safeInteger(this.options,"fetchOHLCVLimit",1500)),c=this.sum(s,i*o)):void 0!==i&&(s=c-i*o,n.startAt=parseInt(Math.floor(s/1e3))),n.endAt=parseInt(Math.floor(c/1e3));const d=await this.publicGetMarketCandles(this.extend(n,r)),h=this.safeValue(d,"data",[]);return this.parseOHLCVs(h,a,t,s,i)}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privatePostDepositAddresses(this.extend(s,t)),r=this.safeValue(i,"data",{});let a=this.safeString(r,"address");void 0!==a&&(a=a.replace("bitcoincash:",""));const n=this.safeString(r,"memo");return"NIM"!==e&&this.checkAddress(a),{info:i,currency:e,network:this.safeString(r,"chain"),address:a,tag:n}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeStringLower(i,r,r),void 0!==r&&(s.chain=r,t=this.omit(t,"network"));const a=await this.privateGetDepositAddresses(this.extend(s,t)),n=this.safeValue(a,"data",{}),o=this.safeString(n,"address"),c=this.safeString(n,"memo");return"NIM"!==e&&this.checkAddress(o),{info:a,currency:e,address:o,tag:c,network:r}}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),a=this.safeInteger(s,"level",2),n={symbol:i.id};let o="publicGetMarketOrderbookLevelLevelLimit";let c;if(this.checkRequiredCredentials(!1)&&void 0===t)o="privateGetMarketOrderbookLevel2";else if(2===a){if(n.level=a,void 0!==t){if(20!==t&&100!==t)throw new r(this.id+" fetchOrderBook() limit argument must be 20 or 100");n.limit=t}n.limit=t||100}c=await this[o](this.extend(n,s));const d=this.safeValue(c,"data",{}),h=this.safeInteger(d,"time"),l=this.parseOrderBook(d,i.symbol,h,"bids","asks",a-2,a-1);return l.nonce=this.safeInteger(d,"sequence"),l}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.marketId(e),c=this.safeString2(n,"clientOid","clientOrderId",this.uuid());n=this.omit(n,["clientOid","clientOrderId"]);const d={clientOid:c,side:s,symbol:o,type:t},h=this.safeNumber2(n,"cost","funds");let l,u;"market"===t?void 0!==h?(n=this.omit(n,["cost","funds"]),u=this.amountToPrecision(e,h),d.funds=u):(l=this.amountToPrecision(e,i),d.size=this.amountToPrecision(e,i)):(l=this.amountToPrecision(e,i),d.size=l,d.price=this.priceToPrecision(e,a));const f=this.safeValue(n,"stopLossPrice"),p=this.safeValue2(n,"takeProfitPrice","stopPrice"),m=void 0!==f,g=void 0!==p;if(m&&g)throw new r(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");const y=this.safeString(n,"tradeType");n=this.omit(n,["stopLossPrice","takeProfitPrice","stopPrice"]);let b="privatePostOrders";if(m||g){d.stop=m?"entry":"loss";const t=m?f:p;d.stopPrice=this.priceToPrecision(e,t),b="privatePostStopOrder"}else"MARGIN_TRADE"===y&&(b="privatePostMarginOrder");const v=await this[b](this.extend(d,n)),w=this.safeValue(v,"data",{}),S=this.milliseconds();return{id:this.safeString(w,"orderId"),clientOrderId:c,info:w,timestamp:S,datetime:this.iso8601(S),lastTradeTimestamp:void 0,symbol:e,type:t,side:s,price:a,amount:this.parseNumber(l),cost:this.parseNumber(u),average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeString2(s,"clientOid","clientOrderId"),a=this.safeValue(s,"stop");let n="privateDeleteOrdersOrderId";return void 0!==r?(i.clientOid=r,n=a?"privateDeleteStopOrderCancelOrderByClientOid":"privateDeleteOrderClientOrderClientOid"):(a&&(n="privateDeleteStopOrderOrderId"),i.orderId=e),s=this.omit(s,["clientOid","clientOrderId","stop"]),await this[n](this.extend(i,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;void 0!==e&&(i=this.market(e),s.symbol=i.id);let r="privateDeleteOrders";return this.safeValue(t,"stop")&&(r="privateDeleteStopOrderCancel"),await this[r](this.extend(s,t))}async fetchOrdersByStatus(e,t,s,i,r={}){await this.loadMarkets();let a=e.toLowerCase();"open"===a?a="active":"closed"===a&&(a="done");const n={status:a};let o;void 0!==t&&(o=this.market(t),n.symbol=o.id),void 0!==s&&(n.startAt=s),void 0!==i&&(n.pageSize=i);const c=this.safeInteger2(r,"until","till");c&&(n.endAt=c);const d=this.safeValue(r,"stop");r=this.omit(r,["stop","till","until"]);let h="privateGetOrders";d&&(h="privateGetStopOrder");const l=await this[h](this.extend(n,r)),u=this.safeValue(l,"data",{}),f=this.safeValue(u,"items",[]);return this.parseOrders(f,o,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("done",e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("active",e,t,s,i)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeString2(s,"clientOid","clientOrderId"),a=this.safeValue(s,"stop");let n;void 0!==t&&(n=this.market(t)),s=this.omit(s,"stop");let o="privateGetOrdersOrderId";if(void 0!==r)i.clientOid=r,a?(o="privateGetStopOrderQueryOrderByClientOid",void 0!==t&&(i.symbol=n.id)):o="privateGetOrderClientOrderClientOid";else{if(void 0===e)throw new c(this.id+" fetchOrder() requires an order id");a&&(o="privateGetStopOrderOrderId"),i.orderId=e}s=this.omit(s,["clientOid","clientOrderId"]);const d=await this[o](this.extend(i,s));let h=this.safeValue(d,"data");return"privateGetStopOrderQueryOrderByClientOid"===o&&(h=this.safeValue(h,0)),this.parseOrder(h,n)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t,"-"),r=this.safeString(e,"id"),a=this.safeString(e,"type"),n=this.safeInteger(e,"createdAt"),o=this.iso8601(n),c=this.safeString(e,"price"),d=this.safeString(e,"side"),h=this.safeString(e,"feeCurrency"),l=this.safeCurrencyCode(h),u=this.safeNumber(e,"fee"),f=this.safeString(e,"size"),p=this.safeString(e,"dealSize"),m=this.safeString(e,"dealFunds"),g=this.safeValue(e,"isActive",!1),y=this.safeValue(e,"cancelExist",!1),b=this.safeString(e,"stop"),v=this.safeValue(e,"stopTriggered",!1);let w=g?"open":"closed";w=y||!g&&b&&!v?"canceled":w;const S={currency:l,cost:u},k=this.safeString(e,"clientOid"),T=this.safeString(e,"timeInForce"),O=this.safeNumber(e,"stopPrice"),_=this.safeValue(e,"postOnly");return this.safeOrder({id:r,clientOrderId:k,symbol:i,type:a,timeInForce:T,postOnly:_,side:d,amount:f,price:c,stopPrice:O,cost:m,filled:p,remaining:void 0,timestamp:n,datetime:o,fee:S,status:w,info:e,lastTradeTimestamp:void 0,average:void 0,trades:void 0},t)}async fetchOrderTrades(e,t,s,i,r={}){const a={orderId:e};return await this.fetchMyTrades(t,s,i,this.extend(a,r))}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const a={};let n;void 0!==e&&(n=this.market(e),a.symbol=n.id),void 0!==s&&(a.pageSize=s);const o=this.options.fetchMyTradesMethod;let c=!1;if("private_get_fills"===o)void 0!==t&&(a.startAt=t);else if("private_get_limit_fills"===o)c=!0;else{if("private_get_hist_orders"!==o)throw new r(this.id+" fetchMyTradesMethod() invalid method");void 0!==t&&(a.startAt=parseInt(t/1e3))}const d=await this[o](this.extend(a,i)),h=this.safeValue(d,"data",{});let l;return l=c?h:this.safeValue(h,"items",[]),this.parseTrades(l,n,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetMarketHistories(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t,"-");const i=this.safeString2(e,"tradeId","id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"liquidity");let n=this.safeInteger(e,"time");void 0!==n?n=parseInt(n/1e6):(n=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==n&&(n*=1e3));const o=this.safeString2(e,"price","dealPrice"),c=this.safeString2(e,"size","amount"),d=this.safeString(e,"side");let h;const l=this.safeString(e,"fee");if(void 0!==l){const s=this.safeString(e,"feeCurrency");let i=this.safeCurrencyCode(s);void 0===i&&(i="sell"===d?t.quote:t.base),h={cost:l,currency:i,rate:this.safeString(e,"feeRate")}}let u=this.safeString(e,"type");"match"===u&&(u=void 0);const f=this.safeString2(e,"funds","dealValue");return this.safeTrade({info:e,id:i,order:r,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:u,takerOrMaker:a,side:d,price:o,amount:c,cost:f,fee:h},t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbols:s.id},r=await this.privateGetTradeFees(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0),o=this.safeString(n,"symbol");return{info:r,symbol:this.safeSymbol(o,s),maker:this.safeNumber(n,"makerFeeRate"),taker:this.safeNumber(n,"takerFeeRate"),percentage:!0,tierBased:!0}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={currency:a.id,address:s,amount:t};void 0!==i&&(n.memo=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeStringLower(o,c,c),void 0!==c&&(n.chain=c,r=this.omit(r,"network"));const d=await this.privatePostWithdrawals(this.extend(n,r)),h=this.safeValue(d,"data",{});return this.parseTransaction(h,a)}parseTransactionStatus(e){return this.safeString({SUCCESS:"ok",PROCESSING:"ok",FAILURE:"failed"},e)}parseTransaction(e,t){const s=this.safeString(e,"currency"),i=this.safeCurrencyCode(s,t);let r=this.safeString(e,"address");const a=this.safeNumber(e,"amount");let n=this.safeString(e,"walletTxId");if(void 0!==n){const e=n.split("@");e.length>1&&void 0===r&&e[1].length>1&&(r=e[1]),n=e[0]}let o=void 0===n?"withdrawal":"deposit";const c=this.safeString(e,"status"),d=this.parseTransactionStatus(c);let h;const l=this.safeNumber(e,"fee");if(void 0!==l){let e;void 0!==a&&(e=l/a),h={cost:l,rate:e,currency:i}}const u=this.safeString(e,"memo");let f=this.safeInteger2(e,"createdAt","createAt");const p=this.safeString2(e,"id","withdrawalId");let m=this.safeInteger(e,"updatedAt");!("createdAt"in e)&&(o="address"in e?"withdrawal":"deposit",void 0!==f&&(f*=1e3),void 0!==m&&(m*=1e3));const g=this.safeString(e,"remark");return{id:p,info:e,timestamp:f,datetime:this.iso8601(f),network:void 0,address:r,addressTo:r,addressFrom:void 0,tag:u,tagTo:u,tagFrom:void 0,currency:i,amount:a,txid:n,type:o,status:d,comment:g,fee:h,updated:m}}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s);let n="privateGetDeposits";void 0!==t&&(t<1550448e6?(r.startAt=parseInt(t/1e3),n="privateGetHistDeposits"):r.startAt=t);const o=(await this[n](this.extend(r,i))).data.items;return this.parseTransactions(o,a,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s);let n="privateGetWithdrawals";void 0!==t&&(t<1550448e6?(r.startAt=parseInt(t/1e3),n="privateGetHistWithdrawals"):r.startAt=t);const o=(await this[n](this.extend(r,i))).data.items;return this.parseTransactions(o,a,t,s,{type:"withdrawal"})}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"fetchBalance","defaultType","spot"),s=this.safeString(e,"type",t),i=this.safeValue(this.options,"accountsByType"),r=this.safeString(i,s,s);e=this.omit(e,"type");const a={type:r},n=await this.privateGetAccounts(this.extend(a,e)),o=this.safeValue(n,"data",[]),c={info:n,timestamp:void 0,datetime:void 0};for(let e=0;e<o.length;e++){const t=o[e];if(this.safeString(t,"type")===r){const e=this.safeString(t,"currency"),s=this.safeCurrencyCode(e),i=this.account();i.total=this.safeString(t,"balance"),i.free=this.safeString(t,"available"),i.used=this.safeString(t,"holds"),c[s]=i}}return this.safeBalance(c)}async transfer(e,t,s,i,a={}){await this.loadMarkets();const n=this.currency(e),o=this.currencyToPrecision(e,t),c=this.safeValue(this.options,"accountsByType",{}),d=this.safeString(c,s,s),h=this.safeString(c,i,i);if("contract"===d){if("main"!==h)throw new r(this.id+" transfer() only supports transferring from futures account to main account");const e={currency:n.id,amount:o};"bizNo"in a||(e.bizNo=this.uuid22());const t=await this.futuresPrivatePostTransferOut(this.extend(e,a)),s=this.safeValue(t,"data");return this.parseTransfer(s,n)}{const e={currency:n.id,from:d,to:h,amount:o};"clientOid"in a||(e.clientOid=this.uuid());const t=await this.privatePostAccountsInnerTransfer(this.extend(e,a)),s=this.safeValue(t,"data");return this.parseTransfer(s,n)}}parseTransfer(e,t){const s=this.safeInteger(e,"createdAt"),i=this.safeString(e,"currency"),r=this.safeString(e,"status"),a=this.safeStringLower(e,"payAccountType"),n=this.safeStringLower(e,"recAccountType"),o=this.safeValue(this.options,"accountsByType"),c=this.safeString(o,a,a),d=this.safeString(o,n,n);return{id:this.safeString2(e,"applyId","orderId"),currency:this.safeCurrencyCode(i,t),timestamp:s,datetime:this.iso8601(s),amount:this.safeNumber(e,"amount"),fromAccount:c,toAccount:d,status:this.parseTransferStatus(r),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}parseLedgerEntryType(e){return this.safeString({"Assets Transferred in After Upgrading":"transfer",Deposit:"transaction",Withdrawal:"transaction",Transfer:"transfer",Trade_Exchange:"trade","KuCoin Bonus":"bonus","Referral Bonus":"referral",Rewards:"bonus","Airdrop/Fork":"airdrop","Other rewards":"bonus","Fee Rebate":"rebate","Buy Crypto":"trade","Sell Crypto":"sell","Public Offering Purchase":"trade","Refunded Fees":"fee","KCS Pay Fees":"fee","Margin Trade":"trade",Loans:"Loans","Instant Exchange":"trade","Sub-account transfer":"transfer","Liquidation Fees":"fee"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"currency"),r=this.safeCurrencyCode(i,t),a=this.safeNumber(e,"amount"),n=this.safeString(e,"bizType"),o=this.parseLedgerEntryType(n),c=this.safeString(e,"direction"),d=this.safeInteger(e,"createdAt"),h=this.iso8601(d),l=this.safeString(e,"accountType"),u=this.safeString(e,"context");let f,p;if(void 0!==u&&""!==u){const e=JSON.parse(u),t=this.safeString(e,"orderId"),s=this.safeString(e,"tradeId");f=void 0!==s?s:t}const m=this.safeNumber(e,"fee");let g;return 0!==m&&(g=r,p={cost:m,currency:g}),{id:s,direction:c,account:l,referenceId:f,referenceAccount:l,type:o,currency:r,amount:a,timestamp:d,datetime:h,before:void 0,after:undefined,status:void 0,fee:p,info:e}}async fetchLedger(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r={};let a;void 0!==t&&(r.startAt=t),void 0!==e&&(a=this.currency(e),r.currency=a.id);const n=await this.privateGetAccountsLedgers(this.extend(r,i)),o=this.safeValue(n,"data"),c=this.safeValue(o,"items");return this.parseLedger(c,a,t,s)}calculateRateLimiterCost(e,t,s,i,r={},a={}){const n=this.safeValue(this.options,"versions",{}),o=this.safeValue(n,e,{}),c=this.safeValue(o,t,{}),d=this.safeString(c,s,this.options.version),h=this.safeString(i,"version",d);return"v3"===h&&"v3"in r?r.v3:"v2"===h&&"v2"in r?r.v2:"v1"===h&&"v1"in r?r.v1:this.safeInteger(r,"cost",1)}sign(e,t="public",s="GET",i={},r,a){const n=this.safeValue(this.options,"versions",{}),o=this.safeValue(n,t,{}),c=this.safeValue(o,s,{}),d=this.safeString(c,e,this.options.version),h=this.safeString(i,"version",d);i=this.omit(i,"version");let l="/api/"+h+"/"+this.implodeParams(e,i);const u=this.omit(i,this.extractParams(e));let f="";r=void 0!==r?r:{},Object.keys(u).length&&("GET"===s||"DELETE"===s?l+="?"+this.rawencode(u):(f=a=this.json(u),r["Content-Type"]="application/json"));const p=this.urls.api[t]+l;if("private"===t||"futuresPrivate"===t){this.checkRequiredCredentials();const e=this.nonce().toString();r=this.extend({"KC-API-KEY-VERSION":"2","KC-API-KEY":this.apiKey,"KC-API-TIMESTAMP":e},r);if("2"===this.safeString(r,"KC-API-KEY-VERSION")){const e=this.hmac(this.encode(this.password),this.encode(this.secret),"sha256","base64");r["KC-API-PASSPHRASE"]=e}else r["KC-API-PASSPHRASE"]=this.password;const t=e+s+l+f,i=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64");r["KC-API-SIGN"]=i;const a=this.safeValue(this.options,"partner",{}),n=this.safeString(a,"id"),o=this.safeString(a,"secret");if(void 0!==n&&void 0!==o){const t=e+n+this.apiKey,s=this.hmac(this.encode(t),this.encode(o),"sha256","base64");r["KC-API-PARTNER-SIGN"]=s,r["KC-API-PARTNER"]=n}}return{url:p,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(!n)return void this.throwBroadlyMatchedException(this.exceptions.broad,a,a);const d=this.safeString(n,"code"),h=this.safeString(n,"msg",""),l=this.id+" "+h;this.throwExactlyMatchedException(this.exceptions.exact,h,l),this.throwExactlyMatchedException(this.exceptions.exact,d,l),this.throwBroadlyMatchedException(this.exceptions.broad,a,l)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],220:[function(e,t,s){"use strict";const{ArgumentsRequired:i,ExchangeNotAvailable:r,InvalidOrder:a,InsufficientFunds:n,AccountSuspended:o,InvalidNonce:c,NotSupported:d,OrderNotFound:h,BadRequest:l,AuthenticationError:u,RateLimitExceeded:f,PermissionDenied:p}=e("./base/errors"),m=e("./base/Precise"),g=e("./kucoin.js"),{TICK_SIZE:y}=e("./base/functions/number");t.exports=class extends g{describe(){return this.deepExtend(super.describe(),{id:"kucoinfutures",name:"KuCoin Futures",countries:["SC"],rateLimit:75,version:"v1",certified:!1,pro:!1,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!1,fetchTime:!0,fetchTrades:!0,fetchTransactionFee:!0,fetchWithdrawals:!0,setMarginMode:!1,transfer:!0,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/147508995-9e35030a-d046-43a1-a006-6fabd981b554.jpg",doc:["https://docs.kucoin.com/futures","https://docs.kucoin.com"],www:"https://futures.kucoin.com/",referral:"https://futures.kucoin.com/?rcode=E5wkqe",api:{public:"https://openapi-v2.kucoin.com",private:"https://openapi-v2.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com"},test:{public:"https://openapi-sandbox.kucoin.com",private:"https://openapi-sandbox.kucoin.com",futuresPrivate:"https://api-sandbox-futures.kucoin.com",futuresPublic:"https://api-sandbox-futures.kucoin.com"}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{futuresPublic:{get:{"contracts/active":1,"contracts/{symbol}":1,"contracts/risk-limit/{symbol}":1,ticker:1,"level2/snapshot":1.33,"level2/depth{limit}":1,"level2/message/query":1,"level3/message/query":1,"level3/snapshot":1,"trade/history":1,"interest/query":1,"index/query":1,"mark-price/{symbol}/current":1,"premium/query":1,"funding-rate/{symbol}/current":1,timestamp:1,status:1,"kline/query":1},post:{"bullet-public":1}},futuresPrivate:{get:{"account-overview":1.33,"transaction-history":4.44,"deposit-address":1,"deposit-list":1,"withdrawals/quotas":1,"withdrawal-list":1,"transfer-list":1,orders:1.33,stopOrders:1,recentDoneOrders:1,"orders/{orderId}":1,"orders/byClientOid":1,fills:4.44,recentFills:4.44,openOrderStatistics:1,position:1,positions:4.44,"funding-history":4.44},post:{withdrawals:1,"transfer-out":1,orders:1.33,"position/margin/auto-deposit-status":1,"position/margin/deposit-margin":1,"bullet-private":1},delete:{"withdrawals/{withdrawalId}":1,"cancel/transfer-out":1,"orders/{orderId}":1,orders:4.44,stopOrders:1}}},precisionMode:y,exceptions:{exact:{400:l,401:u,403:d,404:d,405:d,415:l,429:f,500:r,503:r,100001:a,100004:l,101030:p,200004:n,230003:n,260100:n,300003:n,300012:a,400001:u,400002:c,400003:u,400004:u,400005:u,400006:u,400007:u,404e3:d,400100:l,411100:o,5e5:r},broad:{"Position does not exist":h}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0006")],[this.parseNumber("50"),this.parseNumber("0.0006")],[this.parseNumber("200"),this.parseNumber("0.0006")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0004")],[this.parseNumber("2000"),this.parseNumber("0.0004")],[this.parseNumber("4000"),this.parseNumber("0.00038")],[this.parseNumber("8000"),this.parseNumber("0.00035")],[this.parseNumber("15000"),this.parseNumber("0.00032")],[this.parseNumber("25000"),this.parseNumber("0.0003")],[this.parseNumber("40000"),this.parseNumber("0.0003")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.0003")]],maker:[[this.parseNumber("0"),this.parseNumber("0.02")],[this.parseNumber("50"),this.parseNumber("0.015")],[this.parseNumber("200"),this.parseNumber("0.01")],[this.parseNumber("500"),this.parseNumber("0.01")],[this.parseNumber("1000"),this.parseNumber("0.01")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.003")],[this.parseNumber("25000"),this.parseNumber("-0.006")],[this.parseNumber("40000"),this.parseNumber("-0.009")],[this.parseNumber("60000"),this.parseNumber("-0.012")],[this.parseNumber("80000"),this.parseNumber("-0.015")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{HOT:"HOTNOW",EDGE:"DADI",WAX:"WAXP",TRY:"Trias",VAI:"VAIOT",XBT:"BTC"},timeframes:{"1m":1,"3m":void 0,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":240,"6h":void 0,"8h":480,"12h":720,"1d":1440,"1w":10080},options:{version:"v1",symbolSeparator:"-",defaultType:"swap",code:"USDT",marginModes:{},marginTypes:{},versions:{futuresPrivate:{POST:{"transfer-out":"v2"}},futuresPublic:{GET:{"level3/snapshot":"v2"}}},networks:{OMNI:"omni",ERC20:"eth",TRC20:"trx"}}})}async fetchAccounts(e={}){throw new l(this.id+" fetchAccounts() is not supported yet")}async fetchStatus(e={}){const t=await this.futuresPublicGetStatus(e),s=this.safeValue(t,"data",{});return{status:"open"===this.safeString(s,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.futuresPublicGetContractsActive(e),s=[],i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeInteger(t,"expireDate"),n=!!a,o=!n,c=this.safeString(t,"baseCurrency"),d=this.safeString(t,"quoteCurrency"),h=this.safeString(t,"settleCurrency"),l=this.safeCurrencyCode(c),u=this.safeCurrencyCode(d),f=this.safeCurrencyCode(h);let p=l+"/"+u+":"+f,g="swap";n&&(p=p+"-"+this.yymmdd(a,""),g="future");const y=this.safeString(t,"baseMinSize"),b=this.safeString(t,"quoteMaxSize"),v=this.safeValue(t,"isInverse"),w=this.safeString(t,"status"),S=this.safeString(t,"multiplier");s.push({id:r,symbol:p,base:l,quote:u,settle:f,baseId:c,quoteId:d,settleId:h,type:g,spot:!1,margin:!1,swap:o,future:n,option:!1,active:"Open"===w,contract:!0,linear:!v,inverse:v,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.parseNumber(m.stringAbs(S)),expiry:a,expiryDatetime:this.iso8601(a),strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"lotSize"),price:this.safeNumber(t,"tickSize")},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"maxLeverage")},amount:{min:this.parseNumber(y),max:this.safeNumber(t,"baseMaxSize")},price:{min:void 0,max:this.parseNumber(m.stringDiv(b,y))},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.parseNumber(b)}},info:t})}return s}async fetchTime(e={}){const t=await this.futuresPublicGetTimestamp(e);return this.safeNumber(t,"data")}async fetchOHLCV(e,t="15m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,granularity:this.timeframes[t]},o=1e3*this.parseTimeframe(t);let c=this.milliseconds();void 0!==s?(n.from=s,void 0===i&&(i=this.safeInteger(this.options,"fetchOHLCVLimit",200)),c=this.sum(s,i*o)):void 0!==i&&(s=c-i*o,n.from=s),n.to=c;const d=await this.futuresPublicGetKlineQuery(this.extend(n,r)),h=this.safeValue(d,"data",[]);return this.parseOHLCVs(h,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async createDepositAddress(e,t={}){throw new l(this.id+" createDepositAddress() is not supported yet")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e).id,i={currency:s},r=await this.futuresPrivateGetDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeString(a,"address");return"NIM"!==s&&this.checkAddress(n),{info:r,currency:s,address:n,tag:this.safeString(a,"memo"),network:this.safeString(a,"chain")}}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.safeNumber(s,"level");if(2!==i&&void 0!==i)throw new l(this.id+" fetchOrderBook() can only return level 2");const r=this.market(e),a={symbol:r.id};if(void 0!==t){if(20!==t&&100!==t)throw new l(this.id+" fetchOrderBook() limit argument must be 20 or 100");a.limit=t}else a.limit=20;const n=await this.futuresPublicGetLevel2DepthLimit(this.extend(a,s)),o=this.safeValue(n,"data",{}),c=parseInt(this.safeInteger(o,"ts")/1e6),d=this.parseOrderBook(o,r.symbol,c,"bids","asks",0,1);return d.nonce=this.safeInteger(o,"sequence"),d}async fetchL3OrderBook(e,t,s={}){throw new l(this.id+" fetchL3OrderBook() is not supported yet")}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.futuresPublicGetTicker(this.extend(i,t));return this.parseTicker(r.data,s)}parseTicker(e,t){const s=this.safeString(e,"price"),i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"-");const r=this.safeIntegerProduct(e,"ts",1e-6);return this.safeTicker({symbol:t.symbol,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchFundingHistory(e,t,s,r={}){if(void 0===e)throw new i(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();const a={symbol:this.market(e).id};void 0!==t&&(a.startAt=t),void 0!==s&&(a.maxCount=s);const n=await this.futuresPrivateGetFundingHistory(this.extend(a,r)),o=this.safeValue(n,"data"),c=this.safeValue(o,"dataList",[]),d=[];for(let t=0;t<c.length;t++){const s=c[t],i=this.safeInteger(s,"timePoint");d.push({info:s,symbol:e,code:this.safeCurrencyCode(this.safeString(s,"settleCurrency")),timestamp:i,datetime:this.iso8601(i),id:this.safeNumber(s,"id"),amount:this.safeNumber(s,"funding"),fundingRate:this.safeNumber(s,"fundingRate"),markPrice:this.safeNumber(s,"markPrice"),positionQty:this.safeNumber(s,"positionQty"),positionCost:this.safeNumber(s,"positionCost")})}return d}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.futuresPrivateGetPositions(t),i=this.safeValue(s,"data");return this.parsePositions(i,e)}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const i=this.safeNumber(e,"currentTimestamp"),r=this.safeString(e,"currentQty");let a;m.stringGt(r,"0")?a="long":m.stringLt(r,"0")&&(a="short");const n=m.stringAbs(this.safeString(e,"posCost")),o=this.safeString(e,"posInit"),c=m.stringDiv(o,n),d=this.safeString(e,"unrealisedPnl"),h=this.safeValue(e,"crossMode")?"cross":"isolated";return{info:e,symbol:this.safeString(t,"symbol"),timestamp:i,datetime:this.iso8601(i),initialMargin:this.parseNumber(o),initialMarginPercentage:this.parseNumber(c),maintenanceMargin:this.safeNumber(e,"posMaint"),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),entryPrice:this.safeNumber(e,"avgEntryPrice"),notional:this.parseNumber(n),leverage:this.safeNumber(e,"realLeverage"),unrealizedPnl:this.parseNumber(d),contracts:this.parseNumber(m.stringAbs(r)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liquidationPrice"),markPrice:this.safeNumber(e,"markPrice"),collateral:this.safeNumber(e,"maintMargin"),marginMode:h,side:a,percentage:this.parseNumber(m.stringDiv(d,o))}}async createOrder(e,t,s,r,n,o={}){await this.loadMarkets();const c=this.market(e),d=this.safeString2(o,"clientOid","clientOrderId",this.uuid());if(o=this.omit(o,["clientOid","clientOrderId"]),r<1)throw new a(this.id+" createOrder() minimum contract order amount is 1");const h=parseInt(this.amountToPrecision(e,r)),u={clientOid:d,side:s,symbol:c.id,type:t,size:h,leverage:1};if(this.safeNumber(o,"stopPrice")){u.stop="buy"===s?"up":"down";const e=this.safeString(o,"stopPriceType","TP");u.stopPriceType=e}const f=t.toUpperCase();let p=this.safeString(o,"timeInForce");if("LIMIT"===f){if(void 0===n)throw new i(this.id+" createOrder() requires a price argument for limit orders");u.price=this.priceToPrecision(e,n),void 0!==p&&(p=p.toUpperCase(),u.timeInForce=p)}const m=this.safeValue(o,"postOnly",!1),g=this.safeValue(o,"hidden");if(m&&void 0!==g)throw new l(this.id+" createOrder() does not support the postOnly parameter together with a hidden parameter");if(this.safeValue(o,"iceberg")){if(void 0===this.safeValue(o,"visibleSize"))throw new i(this.id+" createOrder() requires a visibleSize parameter for iceberg orders")}o=this.omit(o,"timeInForce");const y=await this.futuresPrivatePostOrders(this.extend(u,o)),b=this.safeValue(y,"data",{});return{id:this.safeString(b,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,stopPrice:void 0,info:y}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.futuresPrivateDeleteOrdersOrderId(this.extend(i,s));return this.safeValue(r,"data")}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};void 0!==e&&(s.symbol=this.marketId(e));const i=this.safeValue(t,"stop")?"futuresPrivateDeleteStopOrders":"futuresPrivateDeleteOrders",r=await this[i](this.extend(s,t));return this.safeValue(r,"data")}async addMargin(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.uuid(),a={symbol:i.id,margin:this.amountToPrecision(e,t),bizNo:r},n=await this.futuresPrivatePostPositionMarginDepositMargin(this.extend(a,s)),o=this.safeValue(n,"data");return this.extend(this.parseMarginModification(o,i),{amount:this.amountToPrecision(e,t),direction:"in"})}parseMarginModification(e,t){const s=this.safeString(e,"id");t=this.safeMarket(s,t);const i=this.safeString(e,"settleCurrency"),r=this.safeValue(e,"crossMode")?"cross":"isolated",a=this.safeString(t,"symbol");return{info:e,direction:void 0,mode:r,amount:void 0,code:this.safeCurrencyCode(i),symbol:this.safeSymbol(a,t),status:void 0}}async fetchOrdersByStatus(e,t,s,i,r={}){await this.loadMarkets();const a=this.safeValue(r,"stop"),n=this.safeInteger2(r,"until","till");r=this.omit(r,["stop","until","till"]),"closed"===e?e="done":"open"===e&&(e="active");const o={};if(a){if("active"!==e)throw new l(this.id+" fetchOrdersByStatus() can only fetch untriggered stop orders")}else o.status=e;let c;void 0!==t&&(c=this.market(t),o.symbol=c.id),void 0!==s&&(o.startAt=s),void 0!==n&&(o.endAt=n);const d=a?"futuresPrivateGetStopOrders":"futuresPrivateGetOrders",h=await this[d](this.extend(o,r)),u=this.safeValue(h,"data",{}),f=this.safeValue(u,"items",[]);return this.parseOrders(f,c,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByStatus("done",e,t,s,i)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={};let r="futuresPrivateGetOrdersOrderId";if(void 0===e){const e=this.safeString2(s,"clientOid","clientOrderId");if(void 0===e)throw new a(this.id+" fetchOrder() requires parameter id or params.clientOid");i.clientOid=e,r="futuresPrivateGetOrdersByClientOid",s=this.omit(s,["clientOid","clientOrderId"])}else i.orderId=e;const n=await this[r](this.extend(i,s)),o=void 0!==t?this.market(t):void 0,c=this.safeValue(n,"data");return this.parseOrder(c,o)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString(e,"id"),a=this.safeString(e,"type"),n=this.safeInteger(e,"createdAt"),o=this.iso8601(n),c=this.safeString(e,"price"),d=this.safeString(e,"side"),h=this.safeString(e,"feeCurrency"),l=this.safeCurrencyCode(h),u=this.safeNumber(e,"fee"),f=this.safeString(e,"size"),p=this.safeString(e,"dealSize"),g=this.safeString2(e,"dealFunds","filledValue"),y=this.safeString(e,"leverage"),b=m.stringDiv(g,y);let v;if(m.stringGt(p,"0")){const e=this.safeString(t,"contractSize");v=t.linear?m.stringDiv(g,m.stringMul(e,p)):m.stringDiv(m.stringMul(e,p),g)}let w=this.safeValue(e,"isActive",!1)?"open":"closed";w=this.safeValue(e,"cancelExist",!1)?"canceled":w;const S={currency:l,cost:u},k=this.safeString(e,"clientOid"),T=this.safeString(e,"timeInForce"),O=this.safeNumber(e,"stopPrice"),_=this.safeValue(e,"postOnly");return this.safeOrder({id:r,clientOrderId:k,symbol:i,type:a,timeInForce:T,postOnly:_,side:d,amount:f,price:c,stopPrice:O,cost:b,filled:p,remaining:void 0,timestamp:n,datetime:o,fee:S,status:w,info:e,lastTradeTimestamp:void 0,average:v,trades:void 0},t)}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.futuresPublicGetFundingRateSymbolCurrent(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeNumber(a,"timePoint");return{info:a,symbol:s.symbol,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(a,"value"),fundingTimestamp:n,fundingDatetime:this.iso8601(n),nextFundingRate:this.safeNumber(a,"predictedValue"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"data"),i=this.safeString(s,"currency"),r=this.safeCurrencyCode(i),a=this.account();return a.free=this.safeString(s,"availableBalance"),a.total=this.safeString(s,"accountEquity"),t[r]=a,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(this.options,"code");const s=this.safeValue(this.options,"fetchBalance",{});t=this.safeString(s,"code",t);const i=this.safeString(e,"code",t),r={currency:this.currency(i).id},a=await this.futuresPrivateGetAccountOverview(this.extend(r,e));return this.parseBalance(a)}async transfer(e,t,s,i,r={}){if("main"!==i&&"funding"!==i||"futures"!==s&&"future"!==s&&"contract"!==s)throw new l(this.id+" transfer() only supports transfers from contract(future) account to main(funding) account");await this.loadMarkets();const a=this.currency(e),n=this.currencyToPrecision(e,t),o={currency:this.safeString(a,"id"),amount:n},c=await this.futuresPrivatePostTransferOut(this.extend(o,r)),d=this.safeValue(c,"data");return this.extend(this.parseTransfer(d,a),{amount:this.parseNumber(n),fromAccount:"future",toAccount:"spot"})}parseTransfer(e,t){const s=this.safeInteger(e,"updatedAt");return{id:this.safeString(e,"applyId"),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.safeString(e,"status"),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.startAt=t);const n=await this.futuresPrivateGetFills(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"items",{});return this.parseTrades(c,a,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.futuresPublicGetTradeHistory(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t,"-");const i=this.safeString2(e,"tradeId","id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"liquidity");let n=this.safeInteger(e,"ts");void 0!==n?n=parseInt(n/1e6):(n=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==n&&(n*=1e3));const o=this.safeString2(e,"price","dealPrice"),c=this.safeString2(e,"size","amount"),d=this.safeString(e,"side");let h;const l=this.safeString(e,"fee");if(void 0!==l){const s=this.safeString(e,"feeCurrency");let i=this.safeCurrencyCode(s);void 0===i&&(i="sell"===d?t.quote:t.base),h={cost:l,currency:i,rate:this.safeString(e,"feeRate")}}let u=this.safeString2(e,"type","orderType");"match"===u&&(u=void 0);let f=this.safeString2(e,"funds","value");if(void 0===f){const e=this.safeString(t,"contractSize"),s=m.stringMul(o,c);f=m.stringMul(s,e)}return this.safeTrade({info:e,id:i,order:r,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:u,takerOrMaker:a,side:d,price:o,amount:c,cost:f,fee:h},t)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s),void 0!==t&&(r.startAt=t);const n=(await this.futuresPrivateGetDepositList(this.extend(r,i))).data.items;return this.parseTransactions(n,a,t,s,{type:"deposit"})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s),void 0!==t&&(r.startAt=t);const n=(await this.futuresPrivateGetWithdrawalList(this.extend(r,i))).data.items;return this.parseTransactions(n,a,t,s,{type:"withdrawal"})}async fetchTransactionFee(e,t={}){throw new l(this.id+" fetchTransactionFee() is not supported yet")}async fetchLedger(e,t,s,i={}){throw new l(this.id+" fetchLedger() is not supported yet")}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.contract)throw new l(this.id+" fetchMarketLeverageTiers() supports contract markets only");const i={symbol:s.id},r=await this.futuresPublicGetContractsRiskLimitSymbol(this.extend(i,t)),a=this.safeValue(r,"data");return this.parseMarketLeverageTiers(a,s)}parseMarketLeverageTiers(e,t){const s=[];for(let i=0;i<e.length;i++){const r=e[i];s.push({tier:this.safeNumber(r,"level"),currency:t.base,minNotional:this.safeNumber(r,"minRiskLimit"),maxNotional:this.safeNumber(r,"maxRiskLimit"),maintenanceMarginRate:this.safeNumber(r,"maintainMargin"),maxLeverage:this.safeNumber(r,"maxLeverage"),info:r})}return s}}},{"./base/Precise":127,"./base/errors":129,"./base/functions/number":135,"./kucoin.js":219}],221:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,InsufficientFunds:a,OrderNotFound:n,NotSupported:o}=e("./base/errors"),{TICK_SIZE:c}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"kuna",name:"Kuna",countries:["UA"],rateLimit:1e3,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setPositionMode:!1,withdraw:void 0},timeframes:void 0,urls:{extension:".json",referral:"https://kuna.io?r=kunaid-gvfihe8az7o4",logo:"https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg",api:{xreserve:"https://api.xreserve.fund",v3:"https://api.kuna.io",public:"https://kuna.io",private:"https://kuna.io"},www:"https://kuna.io",doc:"https://kuna.io/documents/api",fees:"https://kuna.io/documents/api"},api:{xreserve:{get:{nonce:1,fee:1,"delegated-transactions":1},post:{"delegate-transfer":1}},v3:{public:{get:{timestamp:1,currencies:1,markets:1,tickers:1,k:1,trades_history:1,fees:1,"exchange-rates":1,"exchange-rates/currency":1,"book/market":1,"kuna_codes/code/check":1,landing_page_statistic:1,"translations/locale":1,"trades/market/hist":1},post:{http_test:1,deposit_channels:1,withdraw_channels:1,subscription_plans:1,send_to:1,confirm_token:1,kunaid:1,"withdraw/prerequest":1,"deposit/prerequest":1,"deposit/exchange-rates":1}},sign:{get:{"reset_password/token":1},post:{"signup/google":1,"signup/resend_confirmation":1,signup:1,signin:1,"signin/two_factor":1,"signin/resend_confirm_device":1,"signin/confirm_device":1,reset_password:1,"cool-signin":1},put:{"reset_password/token":1,"signup/code/confirm":1}},private:{post:{"auth/w/order/submit":1,"auth/r/orders":1,"auth/r/orders/market":1,"auth/r/orders/markets":1,"auth/api_tokens/delete":1,"auth/api_tokens/create":1,"auth/api_tokens":1,"auth/signin_history/uniq":1,"auth/signin_history":1,"auth/disable_withdraw_confirmation":1,"auth/change_password":1,"auth/deposit_address":1,"auth/announcements/accept":1,"auth/announcements/unaccepted":1,"auth/otp/deactivate":1,"auth/otp/activate":1,"auth/otp/secret":1,"auth/r/order/market/:order_id/trades":1,"auth/r/orders/market/hist":1,"auth/r/orders/hist":1,"auth/r/orders/hist/markets":1,"auth/r/orders/details":1,"auth/assets-history":1,"auth/assets-history/withdraws":1,"auth/assets-history/deposits":1,"auth/r/wallets":1,"auth/markets/favorites":1,"auth/markets/favorites/list":1,"auth/me/update":1,"auth/me":1,"auth/fund_sources":1,"auth/fund_sources/list":1,"auth/withdraw/resend_confirmation":1,"auth/withdraw":1,"auth/withdraw/details":1,"auth/withdraw/info":1,"auth/payment_addresses":1,"auth/deposit/prerequest":1,"auth/deposit/exchange-rates":1,"auth/deposit":1,"auth/deposit/details":1,"auth/deposit/info":1,"auth/kuna_codes/count":1,"auth/kuna_codes/details":1,"auth/kuna_codes/edit":1,"auth/kuna_codes/send-pdf":1,"auth/kuna_codes":1,"auth/kuna_codes/redeemed-by-me":1,"auth/kuna_codes/issued-by-me":1,"auth/payment_requests/invoice":1,"auth/payment_requests/type":1,"auth/referral_program/weekly_earnings":1,"auth/referral_program/stats":1,"auth/merchant/payout_services":1,"auth/merchant/withdraw":1,"auth/merchant/payment_services":1,"auth/merchant/deposit":1,"auth/verification/auth_token":1,"auth/kunaid_purchase/create":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/subscriptions/reactivate":1,"auth/subscriptions/cancel":1,"auth/subscriptions/prolong":1,"auth/subscriptions/create":1,"auth/subscriptions/list":1,"auth/kuna_ids/list":1,"order/cancel/multi":1,"order/cancel":1},put:{"auth/fund_sources/id":1,"auth/kuna_codes/redeem":1},delete:{"auth/markets/favorites":1,"auth/fund_sources":1,"auth/devices":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/sessions":1}}},public:{get:["depth","k_with_pending_trades","k","markets","order_book","order_book/{market}","tickers","tickers/{market}","timestamp","trades","trades/{market}"]},private:{get:["members/me","deposits","deposit","deposit_address","orders","order","trades/my","withdraws","withdraw"],post:["orders","orders/multi","orders/clear","order/delete","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")},funding:{withdraw:{UAH:"1%",BTC:.001,BCH:.001,ETH:.01,WAVES:.01,GOL:0,GBG:0},deposit:{}}},commonCurrencies:{PLA:"Plair"},precisionMode:c,exceptions:{2002:a,2003:n}})}async fetchTime(e={}){return 1e3*await this.publicGetTimestamp(e)}async fetchMarkets(e={}){const t=["btc","rub","uah","usd","usdt","usdc"],s=[],i=await this.publicGetTickers(e),r=Object.keys(i);for(let e=0;e<r.length;e++){const i=r[e];for(let e=0;e<t.length;e++){const r=t[e],a=i.slice(1),n=a.indexOf(r),o=a.slice(n);if(n>0&&o===r){const e=i[0]+a.replace(r,""),t=this.safeCurrencyCode(e),n=this.safeCurrencyCode(r);s.push({id:i,symbol:t+"/"+n,base:t,quote:n,settle:void 0,baseId:e,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0})}}}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetDepth(this.extend(r,s)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,i.symbol,n)}parseTicker(e,t){const s=this.safeTimestamp(e,"at");e=e.ticker;const i=this.safeSymbol(void 0,t),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e];let a,n=t;if(t in this.markets_by_id)a=this.markets_by_id[t],n=a.symbol;else{let e=t.slice(0,3),s=t.slice(3,6);e=e.toUpperCase(),s=s.toUpperCase(),e=this.safeCurrencyCode(e),s=this.safeCurrencyCode(s),n=e+"/"+s}r[n]=this.parseTicker(s[t],a)}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.publicGetTickersMarket(this.extend(i,t));return this.parseTicker(r,s)}async fetchL3OrderBook(e,t,s={}){return await this.fetchOrderBook(e,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id},n=await this.publicGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"created_at"));let i;t&&(i=t.symbol);let r=this.safeString2(e,"side","trend");if(void 0!==r){const e={ask:"sell",bid:"buy"};r=this.safeString(e,r,r)}const a=this.safeString(e,"price"),n=this.safeString(e,"volume"),o=this.safeNumber(e,"funds"),c=this.safeString(e,"order_id"),d=this.safeString(e,"id");return this.safeTrade({id:d,info:e,timestamp:s,datetime:this.iso8601(s),symbol:i,type:void 0,side:r,order:c,takerOrMaker:void 0,price:a,amount:n,cost:o,fee:void 0},t)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=await this.fetchTrades(e,s,i,r),n=this.buildOHLCVC(a,t,s,i),o=[];for(let e=0;e<n.length;e++){const t=n[e];o.push([t[0],t[1],t[2],t[3],t[4],t[5]])}return o}parseBalance(e){const t=this.safeValue(e,"accounts",[]),s={info:t};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"balance"),n.used=this.safeString(i,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,side:s,volume:i.toString(),ord_type:t};"limit"===t&&(o.price=r.toString());const c=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(c,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostOrderDelete(this.extend(i,s)),a=this.parseOrder(r),o=a.status;if("closed"===o||"canceled"===o)throw new n(this.id+" "+this.json(a));return a}parseOrderStatus(e){return this.safeString({done:"closed",wait:"open",cancel:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t),r=this.parse8601(this.safeString(e,"created_at")),a=this.parseOrderStatus(this.safeString(e,"state")),n=this.safeString(e,"type"),o=this.safeString(e,"side"),c=this.safeString(e,"id");return this.safeOrder({id:c,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:a,symbol:i,type:n,timeInForce:void 0,postOnly:void 0,side:o,price:this.safeString(e,"price"),stopPrice:void 0,amount:this.safeString(e,"volume"),filled:this.safeString(e,"executed_volume"),remaining:this.safeString(e,"remaining_volume"),trades:void 0,fee:void 0,info:e,cost:void 0,average:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:parseInt(e)},r=await this.privateGetOrder(this.extend(i,s));return this.parseOrder(r)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id},o=await this.privateGetOrders(this.extend(n,i));return this.parseOrders(o,a,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id},o=await this.privateGetTradesMy(this.extend(n,i));return this.parseTrades(o,a,t,s)}nonce(){return this.milliseconds()}encodeParams(e){if("orders"in e){const t=e.orders;let s=this.urlencode(this.keysort(this.omit(e,"orders")));for(let e=0;e<t.length;e++){const i=t[e],r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e];s+="&orders%5B%5D%5B"+t+"%5D="+i[t].toString()}}return s}return this.urlencode(this.keysort(e))}sign(e,t="public",s="GET",i={},r,a){let n;if(Array.isArray(t)){const[c,d]=t;if(n=this.urls.api[c]+"/"+c+"/"+this.implodeParams(e,i),"public"===d)"GET"===s?Object.keys(i).length&&(n+="?"+this.urlencode(i)):"POST"!==s&&"PUT"!==s||(r={"Content-Type":"application/json"},a=this.json(i));else if("private"===d)throw new o(this.id+" private v3 API is not supported yet")}else{let o="/api/"+this.version+"/"+this.implodeParams(e,i);"extension"in this.urls&&(o+=this.urls.extension);const c=this.omit(i,this.extractParams(e));if(n=this.urls.api[t]+o,"public"===t)Object.keys(c).length&&(n+="?"+this.urlencode(c));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.encodeParams(this.extend({access_key:this.apiKey,tonce:e},i)),c=s+"|"+o+"|"+t,d=t+"&signature="+this.hmac(this.encode(c),this.encode(this.secret));"GET"===s?n+="?"+d:(a=d,r={"Content-Type":"application/x-www-form-urlencoded"})}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(void 0!==n&&400===e){const e=this.safeValue(n,"error"),t=this.safeString(e,"code"),s=this.id+" "+this.json(n);this.throwExactlyMatchedException(this.exceptions,t,s)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],222:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,ArgumentsRequired:n,InvalidNonce:o,BadRequest:c,ExchangeNotAvailable:d,PermissionDenied:h,AccountSuspended:l,RateLimitExceeded:u,InsufficientFunds:f,BadSymbol:p,InvalidOrder:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"latoken",name:"Latoken",countries:["KY"],version:"v2",rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!0,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg",api:"https://api.latoken.com",www:"https://latoken.com",doc:["https://api.latoken.com"],fees:"https://latoken.com/fees",referral:"https://latoken.com/invite?r=mvgp2djk"},api:{public:{get:{"book/{currency}/{quote}":1,"chart/week":1,"chart/week/{currency}/{quote}":1,currency:1,"currency/available":1,"currency/quotes":1,"currency/{currency}":1,pair:1,"pair/available":1,ticker:1,"ticker/{base}/{quote}":1,time:1,"trade/history/{currency}/{quote}":1,"trade/fee/{currency}/{quote}":1,"trade/feeLevels":1,"transaction/bindings":1}},private:{get:{"auth/account":1,"auth/account/currency/{currency}/{type}":1,"auth/order":1,"auth/order/getOrder/{id}":1,"auth/order/pair/{currency}/{quote}":1,"auth/order/pair/{currency}/{quote}/active":1,"auth/stopOrder":1,"auth/stopOrder/getOrder/{id}":1,"auth/stopOrder/pair/{currency}/{quote}":1,"auth/stopOrder/pair/{currency}/{quote}/active":1,"auth/trade":1,"auth/trade/pair/{currency}/{quote}":1,"auth/trade/fee/{currency}/{quote}":1,"auth/transaction":1,"auth/transaction/bindings":1,"auth/transaction/bindings/{currency}":1,"auth/transaction/{id}":1,"auth/transfer":1},post:{"auth/order/cancel":1,"auth/order/cancelAll":1,"auth/order/cancelAll/{currency}/{quote}":1,"auth/order/place":1,"auth/spot/deposit":1,"auth/spot/withdraw":1,"auth/stopOrder/cancel":1,"auth/stopOrder/cancelAll":1,"auth/stopOrder/cancelAll/{currency}/{quote}":1,"auth/stopOrder/place":1,"auth/transaction/depositAddress":1,"auth/transaction/withdraw":1,"auth/transaction/withdraw/cancel":1,"auth/transaction/withdraw/confirm":1,"auth/transaction/withdraw/resendCode":1,"auth/transfer/email":1,"auth/transfer/id":1,"auth/transfer/phone":1}}},precisionMode:g,fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.0049"),taker:this.parseNumber("0.0049")}},commonCurrencies:{BUX:"Buxcoin",CBT:"Community Business Token",CTC:"CyberTronchain",DMD:"Diamond Coin",FREN:"Frenchie",GDX:"GoldenX",GEC:"Geco One",GEM:"NFTmall",GMT:"GMT Token",IMC:"IMCoin",MT:"Monarch",TPAY:"Tetra Pay",TRADE:"Smart Trade Coin",TSL:"Treasure SL",UNO:"Unobtanium",WAR:"Warrior Token"},exceptions:{exact:{INTERNAL_ERROR:r,SERVICE_UNAVAILABLE:d,NOT_AUTHORIZED:a,FORBIDDEN:h,BAD_REQUEST:c,NOT_FOUND:r,ACCESS_DENIED:h,REQUEST_REJECTED:r,HTTP_MEDIA_TYPE_NOT_SUPPORTED:c,MEDIA_TYPE_NOT_ACCEPTABLE:c,METHOD_ARGUMENT_NOT_VALID:c,VALIDATION_ERROR:c,ACCOUNT_EXPIRED:l,BAD_CREDENTIALS:a,COOKIE_THEFT:a,CREDENTIALS_EXPIRED:l,INSUFFICIENT_AUTHENTICATION:a,UNKNOWN_LOCATION:a,TOO_MANY_REQUESTS:u,INSUFFICIENT_FUNDS:f,ORDER_VALIDATION:m,BAD_TICKS:m},broad:{"invalid API key, signature or digest":a,"request expired or bad":o,"For input string":c,"Unable to resolve currency by tag":p,"Unable to place order because pair is in inactive state":p,"API keys are not available for FROZEN user":l}},options:{defaultType:"spot",types:{wallet:"ACCOUNT_TYPE_WALLET",spot:"ACCOUNT_TYPE_SPOT"},accounts:{ACCOUNT_TYPE_WALLET:"wallet",ACCOUNT_TYPE_SPOT:"spot"},fetchTradingFee:{method:"fetchPrivateTradingFee"}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){const t=await this.fetchCurrenciesFromCache(e),s=await this.publicGetPair(e);this.safeValue(this.options,"adjustForTimeDifference",!0)&&await this.loadTimeDifference();const i=this.indexBy(t,"id"),r=[];for(let e=0;e<s.length;e++){const t=s[e],a=this.safeString(t,"id"),n=this.safeString(t,"baseCurrency"),o=this.safeString(t,"quoteCurrency"),c=this.safeValue(i,n),d=this.safeValue(i,o);if(void 0!==c&&void 0!==d){const e=this.safeCurrencyCode(this.safeString(c,"tag")),s=this.safeCurrencyCode(this.safeString(d,"tag")),i=s.toLowerCase(),h=this.capitalize(i),l=this.safeString(t,"status");r.push({id:a,symbol:e+"/"+s,base:e,quote:s,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"PAIR_STATUS_ACTIVE"===l,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"quantityTick"),price:this.safeNumber(t,"priceTick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderQuantity"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOrderCost"+h),max:this.safeNumber(t,"maxOrderCost"+h)}},info:t})}}return r}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),s=this.safeInteger(t,"timestamp"),i=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===s||r-s>i){const s=await this.publicGetCurrency(e);this.options.fetchCurrencies=this.extend(t,{response:s,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"tag"),n=this.safeCurrencyCode(a),o=this.safeNumber(i,"fee"),c=this.safeString(i,"type").split("_"),d=c.length,h=this.safeValue(c,d-1).toLowerCase(),l="CURRENCY_STATUS_ACTIVE"===this.safeString(i,"status"),u=this.safeString(i,"name");s[n]={id:r,code:n,info:i,name:u,type:h,active:l,deposit:void 0,withdraw:void 0,fee:o,precision:this.parseNumber(this.parsePrecision(this.safeString(i,"decimals"))),limits:{amount:{min:this.safeNumber(i,"minTransferAmount"),max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAuthAccount(e),s={info:t,timestamp:void 0,datetime:void 0};let i;const r=this.safeString2(this.options,"fetchBalance","defaultType","spot"),a=this.safeString(e,"type",r),n=this.safeValue(this.options,"types",{}),o=this.safeString(n,a,a),c=this.groupBy(t,"type"),d=this.safeValue(c,o,[]);for(let e=0;e<d.length;e++){const t=d[e],r=this.safeString(t,"currency"),a=this.safeInteger(t,"timestamp");void 0!==a&&(i=void 0===i?a:Math.max(i,a));const n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(t,"available"),o.used=this.safeString(t,"blocked"),s[n]=o}return s.timestamp=i,s.datetime=this.iso8601(i),this.safeBalance(s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currency:i.baseId,quote:i.quoteId};void 0!==t&&(r.limit=t);const a=await this.publicGetBookCurrencyQuote(this.extend(r,s));return this.parseOrderBook(a,e,void 0,"bid","ask","price","quantity")}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeString(e,"lastPrice"),a=this.safeString(e,"change24h"),n=this.nonce();return this.safeTicker({symbol:i,timestamp:n,datetime:this.iso8601(n),low:this.safeString(e,"low"),high:this.safeString(e,"high"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:a,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={base:s.baseId,quote:s.quoteId},r=await this.publicGetTickerBaseQuote(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t);return this.parseTickers(s,e)}parseTrade(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"price"),r=this.safeString(e,"quantity"),a=this.safeString(e,"cost"),n=this.safeValue(e,"makerBuyer");let o=this.safeString(e,"direction");void 0===o?o=n?"sell":"buy":"TRADE_DIRECTION_BUY"===o?o="buy":"TRADE_DIRECTION_SELL"===o&&(o="sell");const c=n&&"buy"===o?"maker":"taker",d=this.safeString(e,"baseCurrency"),h=this.safeString(e,"quoteCurrency"),l=this.safeCurrencyCode(d),u=this.safeCurrencyCode(h),f=l+"/"+u;f in this.markets&&(t=this.market(f));const p=this.safeString(e,"id"),m=this.safeString(e,"order"),g=this.safeString(e,"fee");let y;return void 0!==g&&(y={cost:g,currency:u}),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:f,id:p,order:m,type:undefined,takerOrMaker:c,side:o,price:i,amount:r,cost:a,fee:y},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currency:r.baseId,quote:r.quoteId};void 0!==s&&(a.limit=s);const n=await this.publicGetTradeHistoryCurrencyQuote(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFee(e,t={}){let s=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===s){const e=this.safeValue(this.options,"fetchTradingFee",{});s=this.safeString(e,"method","fetchPrivateTradingFee")}return await this[s](e,t)}async fetchPublicTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency:s.baseId,quote:s.quoteId},r=await this.publicGetTradeFeeCurrencyQuote(this.extend(i,t));return{info:r,symbol:s.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee")}}async fetchPrivateTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency:s.baseId,quote:s.quoteId},r=await this.privateGetAuthTradeFeeCurrencyQuote(this.extend(i,t));return{info:r,symbol:s.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee")}}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="privateGetAuthTrade";void 0!==e&&(a=this.market(e),r.currency=a.baseId,r.quote=a.quoteId,n="privateGetAuthTradePairCurrencyQuote"),void 0!==s&&(r.limit=s);const o=await this[n](this.extend(r,i));return this.parseTrades(o,a,t,s)}parseOrderStatus(e){return this.safeString({ORDER_STATUS_PLACED:"open",ORDER_STATUS_CLOSED:"closed",ORDER_STATUS_CANCELLED:"canceled"},e,e)}parseOrderType(e){return this.safeString({ORDER_TYPE_MARKET:"market",ORDER_TYPE_LIMIT:"limit"},e,e)}parseTimeInForce(e){return this.safeString({ORDER_CONDITION_GOOD_TILL_CANCELLED:"GTC",ORDER_CONDITION_IMMEDIATE_OR_CANCEL:"IOC",ORDER_CONDITION_FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeInteger(e,"timestamp"),r=this.safeString(e,"baseCurrency"),a=this.safeString(e,"quoteCurrency"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);let c;void 0!==n&&void 0!==o&&(c=n+"/"+o,c in this.markets&&(t=this.market(c)));const d=this.safeString(e,"side");let h;if(void 0!==d){const e=d.split("_"),t=e.length;h=this.safeStringLower(e,t-1)}const l=this.parseOrderType(this.safeString(e,"type")),u=this.safeString(e,"price"),f=this.safeString(e,"quantity"),p=this.safeString(e,"filled"),m=this.safeString(e,"cost");let g=this.parseOrderStatus(this.safeString(e,"status"));const y=this.safeString(e,"message");void 0!==y&&(y.indexOf("cancel")>=0?g="canceled":y.indexOf("accept")>=0&&(g="open"));const b=this.safeString(e,"clientOrderId"),v=this.parseTimeInForce(this.safeString(e,"condition"));return this.safeOrder({id:s,clientOrderId:b,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:g,symbol:c,type:l,timeInForce:v,postOnly:void 0,side:h,price:u,stopPrice:void 0,cost:m,amount:f,filled:p,average:void 0,remaining:void 0,fee:void 0,trades:void 0},t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={currency:r.baseId,quote:r.quoteId},o=await this.privateGetAuthOrderPairCurrencyQuoteActive(this.extend(a,i));return this.parseOrders(o,r,t,s)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="privateGetAuthOrder";void 0!==e&&(a=this.market(e),r.currency=a.baseId,r.quote=a.quoteId,n="privateGetAuthOrderPairCurrencyQuote"),void 0!==s&&(r.limit=s);const o=await this[n](this.extend(r,i));return this.parseOrders(o,a,t,s)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetAuthOrderGetOrderId(this.extend(i,s));return this.parseOrder(r)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),c={baseCurrency:n.baseId,quoteCurrency:n.quoteId,side:s.toUpperCase(),condition:"GTC",type:o,clientOrderId:this.uuid()};"LIMIT"===o&&(c.price=this.priceToPrecision(e,r)),c.quantity=this.amountToPrecision(e,i),c.timestamp=this.seconds();const d=await this.privatePostAuthOrderPlace(this.extend(c,a));return this.parseOrder(d,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostAuthOrderCancel(this.extend(i,s));return this.parseOrder(r)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i,r="privatePostAuthOrderCancelAll";void 0!==e&&(i=this.market(e),s.currency=i.baseId,s.quote=i.quoteId,r="privatePostAuthOrderCancelAllCurrencyQuote");return await this[r](this.extend(s,t))}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r=await this.privateGetAuthTransaction(this.extend({},i));let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"content",[]);return this.parseTransactions(n,a,t,s)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeInteger(e,"timestamp"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeNumber(e,"amount"),c=this.safeString(e,"senderAddress"),d=this.safeString(e,"recipientAddress"),h=this.safeString(e,"transactionHash"),l=this.safeString(e,"memo");let u;const f=this.safeNumber(e,"transactionFee");void 0!==f&&(u={cost:f,currency:a});const p=this.parseTransactionType(this.safeString(e,"type"));return{info:e,id:s,txid:h,timestamp:i,datetime:this.iso8601(i),network:void 0,addressFrom:c,addressTo:d,address:d,tagFrom:void 0,tagTo:l,tag:l,type:p,amount:o,currency:a,status:n,updated:void 0,fee:u}}parseTransactionStatus(e){return this.safeString({TRANSACTION_STATUS_CONFIRMED:"ok",TRANSACTION_STATUS_EXECUTED:"ok"},e,e)}parseTransactionType(e){return this.safeString({TRANSACTION_TYPE_DEPOSIT:"deposit",TRANSACTION_TYPE_WITHDRAWAL:"withdrawal"},e,e)}async fetchTransfers(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e),a=await this.privateGetAuthTransfer(i),n=this.safeValue(a,"content",[]);return this.parseTransfers(n,r,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);let n;n=i.includes("@")?"privatePostAuthTransferEmail":36===i.length?"privatePostAuthTransferId":"privatePostAuthTransferPhone";const o={currency:a.id,recipient:i,value:this.currencyToPrecision(e,t)},c=await this[n](this.extend(o,r));return this.parseTransfer(c)}parseTransfer(e,t){const s=this.safeTimestamp(e,"timestamp"),i=this.safeString(e,"currency"),r=this.safeString(e,"status");return{info:e,id:this.safeString(e,"id"),timestamp:this.safeInteger(e,"timestamp"),datetime:this.iso8601(s),currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"transferringFunds"),fromAccount:this.safeString(e,"fromAccount"),toAccount:this.safeString(e,"toAccount"),status:this.parseTransferStatus(r)}}parseTransferStatus(e){return this.safeString({TRANSFER_STATUS_COMPLETED:"ok",TRANSFER_STATUS_PENDING:"pending",TRANSFER_STATUS_REJECTED:"failed",TRANSFER_STATUS_UNVERIFIED:"pending",TRANSFER_STATUS_CANCELLED:"canceled"},e,e)}sign(e,t="public",s="GET",i,r,a){const n="/"+this.version+"/"+this.implodeParams(e,i);let o=n;const c=this.omit(i,this.extractParams(e)),d=this.urlencode(c);if("GET"===s&&Object.keys(c).length&&(o+="?"+d),"private"===t){this.checkRequiredCredentials();const e=s+n+d,t=this.hmac(this.encode(e),this.encode(this.secret),"sha512");r={"X-LA-APIKEY":this.apiKey,"X-LA-SIGNATURE":t,"X-LA-DIGEST":"HMAC-SHA512"},"POST"===s&&(r["Content-Type"]="application/json",a=this.json(c))}return{url:this.urls.api+o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(!o)return;const h=this.safeString(o,"message"),l=this.id+" "+n;void 0!==h&&(this.throwExactlyMatchedException(this.exceptions.exact,h,l),this.throwBroadlyMatchedException(this.exceptions.broad,h,l));const u=this.safeString(o,"error"),f=this.safeString(u,"message");if(void 0!==u||void 0!==f)throw this.throwExactlyMatchedException(this.exceptions.exact,u,l),this.throwBroadlyMatchedException(this.exceptions.broad,n,l),new r(l)}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],223:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,DDoSProtection:a,AuthenticationError:n,InvalidOrder:o,ArgumentsRequired:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number"),h=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"lbank",name:"LBank",countries:["CN"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:void 0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:"https://api.lbank.info",www:"https://www.lbank.info",doc:"https://github.com/LBank-exchange/lbank-official-api-docs",fees:"https://www.lbank.info/fees.html",referral:"https://www.lbank.info/invitevip?icode=7QCY"},api:{public:{get:["currencyPairs","ticker","depth","trades","kline","accuracy"]},private:{post:["user_info","create_order","cancel_order","orders_info","orders_info_history","withdraw","withdrawCancel","withdraws","withdrawConfigs"]}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},commonCurrencies:{GMT:"GMT Token",PNT:"Penta",VET_ERC20:"VEN"},options:{cacheSecretAsPem:!0},precisionMode:d})}async fetchMarkets(e={}){const t=await this.publicGetAccuracy(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=i.symbol,a=r.split("_");let n,o;a.length>2?(n=a[0]+"_"+a[1],o=a[2]):(n=a[0],o=a[1]);const c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);s.push({id:r,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"quantityAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(i,"priceAccuracy")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeFloat(i,"minTranQua"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:r})}return s}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t,"_")).symbol,r=this.safeInteger(e,"timestamp"),a=e;e=a.ticker;const n=this.safeString(e,"latest"),o=this.safeString(e,"change");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"turnover"),info:a},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(this.extend({symbol:"all"},t)),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchOrderBook(e,t=60,s={}){await this.loadMarkets();let i=60;void 0!==t&&(i=Math.min(t,i));const r=this.market(e),a={symbol:r.id,size:i},n=await this.publicGetDepth(this.extend(a,s));return this.parseOrderBook(n,r.symbol)}parseTrade(e,t){t=this.safeMarket(void 0,t);const s=this.safeInteger(e,"date_ms"),i=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.parseNumber(i),n=this.parseNumber(r),o=this.parseNumber(h.stringMul(i,r)),c=this.safeString(e,"tid");let d=this.safeString(e,"type");return d=d.replace("_market",""),{id:c,info:this.safeValue(e,"info",e),timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:undefined,side:d,takerOrMaker:void 0,price:a,amount:n,cost:o,fee:void 0}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id,size:100};void 0!==t&&(a.time=parseInt(t)),void 0!==s&&(a.size=s);const n=await this.publicGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="5m",s,i=1e3,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===s)throw new c(this.id+" fetchOHLCV() requires a `since` argument");if(void 0===i)throw new c(this.id+" fetchOHLCV() requires a `limit` argument");const n={symbol:a.id,type:this.timeframes[t],size:i,time:parseInt(s/1e3)},o=await this.publicGetKline(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"info",{}),i=this.safeValue(s,"free",{}),r=this.safeValue(s,"freeze",{}),a=this.safeValue(s,"asset",{}),n=Object.keys(i);for(let e=0;e<n.length;e++){const s=n[e],o=this.safeCurrencyCode(s),c=this.account();c.free=this.safeString(i,s),c.used=this.safeString(r,s),c.total=this.safeString(a,s),t[o]=c}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostUserInfo(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({"-1":"cancelled",0:"open",1:"open",2:"closed",4:"closed"},e)}parseOrder(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t,"_"),r=this.safeInteger(e,"create_time"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"deal_amount"),c=this.safeString(e,"avg_price"),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString(e,"order_id"),l=this.safeString(e,"order_type"),u=this.safeString(e,"type");return this.safeOrder({id:h,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:d,symbol:i,type:l,timeInForce:void 0,postOnly:void 0,side:u,price:a,stopPrice:void 0,cost:void 0,amount:n,filled:o,remaining:void 0,trades:void 0,fee:void 0,info:this.safeValue(e,"info",e),average:c},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o={symbol:n.id,type:s,amount:i};"market"===t?o.type+="_market":o.price=r;const c=await this.privatePostCreateOrder(this.extend(o,a));return o=this.omit(o,"type"),o.order_id=c.order_id,o.type=s,o.order_type=t,o.create_time=this.milliseconds(),o.info=c,this.parseOrder(o,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(t).id,order_id:e};return await this.privatePostCancelOrder(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=this.market(t),r={symbol:i.id,order_id:e},a=await this.privatePostOrdersInfo(this.extend(r,s)),n=this.safeValue(a,"orders",[]),o=this.parseOrders(n,i);return 1===o.length?o[0]:o}async fetchOrders(e,t,s,i={}){await this.loadMarkets(),void 0===s&&(s=100);const r={symbol:this.market(e).id,current_page:1,page_length:s},a=await this.privatePostOrdersInfoHistory(this.extend(r,i)),n=this.safeValue(a,"orders",[]);return this.parseOrders(n,void 0,t,s)}async fetchClosedOrders(e,t,s,i={}){if(await this.loadMarkets(),void 0!==e){e=this.market(e).symbol}const r=await this.fetchOrders(e,t,s,i),a=this.filterBy(r,"status","closed"),n=this.filterBy(r,"status","cancelled"),o=this.arrayConcat(a,n);return this.filterBySymbolSinceLimit(o,e,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={assetCode:a.id,amount:t,account:s};void 0!==i&&(n.memo=i);const o=this.privatePostWithdraw(this.extend(n,r));return this.parseTransaction(o,a)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString2(e,"id","withdrawId"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}convertSecretToPem(e){const t=e.length-0;let s=parseInt(t/64);s=this.sum(s,1);let i="-----BEGIN PRIVATE KEY-----\n";for(let e=0;e<s;e++){const t=64*e,s=this.sum(t,64);i+=this.secret.slice(t,s)+"\n"}return i+"-----END PRIVATE KEY-----"}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e));let o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,i);if(o+=".do","public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(n));else{this.checkRequiredCredentials();const e=this.keysort(this.extend({api_key:this.apiKey},i)),t=this.rawencode(e),s=this.hash(this.encode(t)).toUpperCase();let n;this.safeValue(this.options,"cacheSecretAsPem",!0)?(n=this.safeValue(this.options,"pem"),void 0===n&&(n=this.convertSecretToPem(this.secret),this.options.pem=n)):n=this.convertSecretToPem(this.secret);const o=this.binaryToBase64(this.rsa(s,this.encode(n),"RS256"));e.sign=o,a=this.urlencode(e),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,c,d,h,l,u){if(void 0===h)return;if("false"===this.safeString(h,"result")){const e=this.safeString(h,"error_code"),t=this.safeString({1e4:"Internal error",10001:"The required parameters can not be empty",10002:"verification failed",10003:"Illegal parameters",10004:"User requests are too frequent",10005:"Key does not exist",10006:"user does not exist",10007:"Invalid signature",10008:"This currency pair is not supported",10009:"Limit orders can not be missing orders and the number of orders",10010:"Order price or order quantity must be greater than 0",10011:"Market orders can not be missing the amount of the order",10012:"market sell orders can not be missing orders",10013:"is less than the minimum trading position 0.001",10014:"Account number is not enough",10015:"The order type is wrong",10016:"Account balance is not enough",10017:"Abnormal server",10018:"order inquiry can not be more than 50 less than one",10019:"withdrawal orders can not be more than 3 less than one",10020:"less than the minimum amount of the transaction limit of 0.001",10022:"Insufficient key authority"},e,this.json(h));throw new(this.safeValue({10002:n,10004:a,10005:n,10006:n,10007:n,10009:o,10010:o,10011:o,10012:o,10013:o,10014:o,10015:o,10016:o,10022:n},e,r))(t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],224:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InvalidAddress:a,DuplicateOrderId:n,ArgumentsRequired:o,InsufficientFunds:c,InvalidOrder:d,InvalidNonce:h,AuthenticationError:l,RateLimitExceeded:u,PermissionDenied:f,BadRequest:p,BadSymbol:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"lbank2",name:"LBank",countries:["CN"],version:"v2",rateLimit:20,has:{CORS:!1,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFees:!0,fetchTransactionFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!1},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:"https://api.lbank.info",api2:"https://api.lbkex.com",www:"https://www.lbank.info",doc:"https://www.lbank.info/en-US/docs/index.html",fees:"https://lbankinfo.zendesk.com/hc/en-gb/articles/360012072873-Trading-Fees",referral:"https://www.lbank.info/invitevip?icode=7QCY"},api:{public:{get:{currencyPairs:2.5,accuracy:2.5,usdToCny:2.5,withdrawConfigs:2.5,timestamp:2.5,"ticker/24hr":2.5,ticker:2.5,depth:2.5,incrDepth:2.5,trades:2.5,kline:2.5,"supplement/system_ping":2.5,"supplement/incrDepth":2.5,"supplement/trades":2.5,"supplement/ticker/price":2.5,"supplement/ticker/bookTicker":2.5},post:{"supplement/system_status":2.5}},private:{post:{user_info:2.5,"subscribe/get_key":2.5,"subscribe/refresh_key":2.5,"subscribe/destroy_key":2.5,get_deposit_address:2.5,deposit_history:2.5,create_order:1,batch_create_order:1,cancel_order:1,cancel_clientOrders:1,orders_info:2.5,orders_info_history:2.5,order_transaction_detail:2.5,transaction_history:2.5,orders_info_no_deal:2.5,withdraw:2.5,withdrawCancel:2.5,withdraws:2.5,"supplement/user_info":2.5,"supplement/withdraw":2.5,"supplement/deposit_history":2.5,"supplement/withdraws":2.5,"supplement/get_deposit_address":2.5,"supplement/asset_detail":2.5,"supplement/customer_trade_fee":2.5,"supplement/api_Restrictions":2.5,"supplement/system_ping":2.5,"supplement/create_order_test":1,"supplement/create_order":1,"supplement/cancel_order":1,"supplement/cancel_order_by_symbol":1,"supplement/orders_info":2.5,"supplement/orders_info_no_deal":2.5,"supplement/orders_info_history":2.5,"supplement/user_info_account":2.5,"supplement/transaction_history":2.5}}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},commonCurrencies:{VET_ERC20:"VEN",PNT:"Penta"},precisionMode:g,options:{cacheSecretAsPem:!0,createMarketBuyOrderRequiresPrice:!0,fetchTrades:{method:"publicGetTrades"},fetchTransactionFees:{method:"fetchPrivateFundingFees"},fetchDepositAddress:{method:"fetchDepositAddressDefault"},createOrder:{method:"privatePostSupplementCreateOrder"},fetchOrder:{method:"fetchOrderSupplement"},fetchBalance:{method:"privatePostSupplementUserInfo"},networks:{ERC20:"erc20",ETH:"erc20",TRC20:"trc20",TRX:"trc20",OMNI:"omni",ASA:"asa",BEP20:"bep20(bsc)",BSC:"bep20(bsc)",HT:"heco",BNB:"bep2",BTC:"btc",DOGE:"dogecoin",MATIC:"matic",POLYGON:"matic",OEC:"oec",BTCTRON:"btctron",XRP:"xrp"},"inverse-networks":{erc20:"ERC20",trc20:"TRC20",omni:"OMNI",asa:"ASA","bep20(bsc)":"BSC",bep20:"BSC",heco:"HT",bep2:"BNB",btc:"BTC",dogecoin:"DOGE",matic:"MATIC",oec:"OEC",btctron:"BTCTRON",xrp:"XRP"}}})}async fetchMarkets(e={}){const t=await this.publicGetAccuracy(),s=this.safeValue(t,"data"),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=r.split("_"),n=a[0],o=a[1],c=n.toUpperCase(),d=o.toUpperCase();let h=c+"/"+d;const l={"3l":!0,"5l":!0,"3s":!0,"5s":!0},u=n.slice(-2),f=this.safeValue(l,u,!1);let p;f&&(h+=":"+d),!0===f&&(p=!0),i.push({id:r,symbol:h,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:f,future:!1,option:!1,active:!0,contract:f,linear:p,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantityAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minTranQua"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeInteger(e,"timestamp"),a=this.safeValue(e,"ticker");return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(a,"high"),low:this.safeString(a,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:this.safeString(a,"latest"),previousClose:void 0,change:void 0,percentage:this.safeString(a,"change"),average:void 0,baseVolume:this.safeString(a,"vol"),quoteVolume:this.safeString(a,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTicker24hr(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker24hr(this.extend({symbol:"all"},t)),i=this.safeValue(s,"data",[]);return this.parseTickers(i,e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);void 0===t&&(t=60);const r={symbol:i.id,size:t},a=(await this.publicGetDepth(this.extend(r,s))).data,n=this.milliseconds();return this.parseOrderBook(a,i.symbol,n)}parseTrade(e,t){let s=this.safeInteger2(e,"date_ms","time");void 0===s&&(s=this.safeInteger(e,"dealTime"));let i=this.safeString2(e,"amount","qty");void 0===i&&(i=this.safeString(e,"dealQuantity"));let r=this.safeString(e,"price");void 0===r&&(r=this.safeString(e,"dealPrice"));let a=this.safeString(e,"quoteQty");void 0===a&&(a=this.safeString(e,"dealVolumePrice"));let n,o,c=this.safeString2(e,"tradeType","type");if(void 0!==c){const e=c.split("_");c=this.safeString(e,0);const t=this.safeString(e,1);n="limit",o="taker",void 0!==t&&("market"===t?n="market":"maker"===t&&(o="maker"))}let d=this.safeString2(e,"tid","id");void 0===d&&(d=this.safeString(e,"txUuid"));const h=this.safeString(e,"orderUuid"),l=this.safeSymbol(void 0,t);let u;const f=this.safeString(e,"tradeFee");return void 0!==f&&(u={cost:f,currency:void 0,rate:this.safeString(e,"tradeFeeRate")}),this.safeTrade({timestamp:s,datetime:this.iso8601(s),symbol:l,id:d,order:h,type:n,takerOrMaker:o,side:c,price:r,amount:i,cost:a,fee:u,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.time=t),a.size=void 0!==s?s:600;let n=this.safeString(i,"method");if(i=this.omit(i,"method"),void 0===n){const e=this.safeValue(this.options,"fetchTrades",{});n=this.safeString(e,"method","publicGetTrades")}const o=await this[n](this.extend(a,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===s)throw new o(this.id+" fetchOHLCV () requires a since argument");void 0===i&&(i=100);const n={symbol:a.id,type:this.timeframes[t],time:parseInt(s/1e3),size:i},c=await this.publicGetKline(this.extend(n,r)),d=this.safeValue(c,"data",[]);return this.parseOHLCVs(d,a,t,s,i)}parseBalance(e){const t=this.safeInteger(e,"ts"),s={info:e,timestamp:t,datetime:this.iso8601(t)},i=this.safeValue(e,"data");if(void 0!==this.safeValue(i,"toBtc")){const e=this.safeValue(i,"freeze",{}),t=this.safeValue(i,"free",{}),r=Object.keys(t);for(let i=0;i<r.length;i++){const a=r[i],n=this.safeCurrencyCode(a),o=this.account();o.used=this.safeString(e,a),o.free=this.safeString(t,a),s[n]=o}return this.safeBalance(s)}const r=this.safeValue(i,"balances");if(void 0!==r){for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"asset"),a=this.safeCurrencyCode(i),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),s[a]=n}return this.safeBalance(s)}if(!0===Array.isArray(i)){for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"usableAmt"),n.used=this.safeString(t,"freezeAmt"),s[a]=n}return this.safeBalance(s)}}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"method");if(void 0===t){const e=this.safeValue(this.options,"fetchBalance",{});t=this.safeString(e,"method","privatePostSupplementUserInfo")}const s=await this[t]();return this.parseBalance(s)}parseTradingFee(e,t){const s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s),maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission")}}async fetchTradingFee(e,t={}){const s=this.market(e);return await this.fetchTradingFees(this.extend(t,{category:s.id}))}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostSupplementCustomerTradeFee(this.extend({},e)),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=this.parseTradingFee(s[e]);i[t.symbol]=t}return i}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeString2(a,"custom_id","clientOrderId"),c=this.safeValue(a,"postOnly",!1),h=this.safeStringUpper(a,"timeInForce");a=this.omit(a,["custom_id","clientOrderId","timeInForce","postOnly"]);const l={symbol:n.id},u="IOC"===h,f="FOK"===h,p=c||"PO"===h;if("market"===t&&(u||f||p))throw new d(this.id+" createOrder () does not allow market FOK, IOC, or postOnly orders. Only limit IOC, FOK, and postOnly orders are allowed");if("limit"===t)l.type=s,l.price=this.priceToPrecision(e,r),l.amount=this.amountToPrecision(e,i),u?l.type=s+"_ioc":f?l.type=s+"_fok":p&&(l.type=s+"_maker");else if("market"===t)if("sell"===s)l.type=s+"_market",l.amount=this.amountToPrecision(e,i);else if("buy"===s)if(l.type=s+"_market",this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new d(this.id+" createOrder () requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply the price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const t=parseFloat(i)*parseFloat(r);l.price=this.priceToPrecision(e,t)}}else l.price=i;let m;if(void 0!==o&&(l.custom_id=o),m=this.safeString(a,"method"),a=this.omit(a,"method"),void 0===m){const e=this.safeValue(this.options,"createOrder",{});m=this.safeString(e,"method","privatePostSupplementCreateOrder")}const g=await this[m](this.extend(l,a)),y=this.safeValue(g,"data",{});return{id:this.safeString(y,"order_id"),info:y}}parseOrderStatus(e){return this.safeString({"-1":"canceled",0:"open",1:"open",2:"closed",3:"canceled",4:"closed"},e,e)}parseOrder(e,t){const s=this.safeString2(e,"orderId","order_id"),i=this.safeString2(e,"clientOrderId","custom_id"),r=this.safeInteger2(e,"time","create_time"),a=this.safeString(e,"status"),n=this.safeString(e,"symbol");let o;t=this.safeMarket(n,t);let c=!1,d="limit";const h=this.safeString(e,"type"),l=h.split("_"),u=this.safeString(l,0),f=this.safeString(l,1);"market"===f&&(d="market"),"maker"===f&&(c=!0,o="PO"),"ioc"===f&&(o="IOC"),"fok"===f&&(o="FOK");const p=this.safeString(e,"price"),m=this.safeString(e,"cummulativeQuoteQty");let g;"buy_market"!==h&&(g=this.safeString2(e,"origQty","amount"));const y=this.safeString2(e,"executedQty","deal_amount");return this.safeOrder({id:s,clientOrderId:i,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:this.parseOrderStatus(a),symbol:t.symbol,type:d,timeInForce:o,postOnly:c,side:u,price:p,stopPrice:void 0,cost:m,amount:g,filled:y,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();let i=this.safeString(s,"method");if(void 0===i){const e=this.safeValue(this.options,"fetchOrder",{});i=this.safeString(e,"method","fetchOrderSupplement")}return await this[i](e,t,s)}async fetchOrderSupplement(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new o(this.id+" fetchOrder () requires a symbol argument");const i={symbol:this.market(t).id,orderId:e},r=await this.privatePostSupplementOrdersInfo(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrderDefault(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new o(this.id+" fetchOrder () requires a symbol argument");const i={symbol:this.market(t).id,order_id:e},r=await this.privatePostOrdersInfo(this.extend(i,s)),a=this.safeValue(r,"data",[]),n=a.length;if(1===n)return this.parseOrder(a[0]);{const e=[];for(let t=0;t<n;t++){const s=this.parseOrder(a[t]);e.push(s)}return e}}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades () requires a symbol argument");await this.loadMarkets();const r=this.market(e);t=this.safeValue(i,"start_date",t),i=this.omit(i,"start_date");const a={symbol:r.id};void 0!==s&&(a.size=s),void 0!==t&&(a.start_date=this.ymd(t,"-"));const n=await this.privatePostTransactionHistory(this.extend(a,i)),c=this.safeValue(n,"data",[]);return this.parseTrades(c,r,t,s)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);void 0===s&&(s=100);const a={symbol:r.id,current_page:1,page_length:s},n=await this.privatePostSupplementOrdersInfoHistory(this.extend(a,i)),c=this.safeValue(n,"data",{}),d=this.safeValue(c,"orders",[]);return this.parseOrders(d,r,t,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);void 0===s&&(s=100);const a={symbol:r.id,current_page:1,page_length:s},n=await this.privatePostSupplementOrdersInfoNoDeal(this.extend(a,i)),c=this.safeValue(n,"data",{}),d=this.safeValue(c,"orders",[]);return this.parseOrders(d,r,t,s)}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.safeString2(s,"origClientOrderId","clientOrderId");s=this.omit(s,["origClientOrderId","clientOrderId"]);const r={symbol:this.market(t).id};void 0!==i&&(r.origClientOrderId=i),r.orderId=e;const a=await this.privatePostSupplementCancelOrder(this.extend(r,s));return this.safeValue(a,"data",{})}async cancelAllOrders(e,t={}){if(void 0===e)throw new o(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s={symbol:this.market(e).id},i=await this.privatePostSupplementCancelOrderBySymbol(this.extend(s,t));return this.safeValue(i,"data",[])}async fetchDepositAddress(e,t={}){await this.loadMarkets();let s=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===s){const e=this.safeValue(this.options,"fetchDepositAddress",{});s=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[s](e,t)}async fetchDepositAddressDefault(e,t={}){await this.loadMarkets();const s={assetCode:this.currency(e).id},i=this.safeValue(this.options,"networks");let r=this.safeStringUpper(t,"network");r=this.safeString(i,r,r),void 0!==r&&(s.netWork=r,t=this.omit(t,"network"));const a=await this.privatePostGetDepositAddress(this.extend(s,t)),n=this.safeValue(a,"data"),o=this.safeString(n,"address"),c=this.safeString(n,"memo"),d=this.safeString(n,"netWork"),h=this.safeValue(this.options,"inverse-networks",{});return{currency:e,address:o,tag:c,network:this.safeStringUpper(h,d,d),info:a}}async fetchDepositAddressSupplement(e,t={}){await this.loadMarkets();const s={coin:this.currency(e).id},i=this.safeValue(this.options,"networks");let r=this.safeStringUpper(t,"network");r=this.safeString(i,r,r),void 0!==r&&(s.networkName=r,t=this.omit(t,"network"));const a=await this.privatePostSupplementGetDepositAddress(this.extend(s,t)),n=this.safeValue(a,"data"),o=this.safeString(n,"address"),c=this.safeString(n,"memo"),d=this.safeValue(this.options,"inverse-networks",{});return{currency:e,address:o,tag:c,network:this.safeStringUpper(d,r,r),info:a}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.safeString(r,"fee");if(r=this.omit(r,"fee"),void 0===a)throw new o(this.id+" withdraw () requires a fee argument to be supplied in params, the relevant coin network fee can be found by calling fetchTransactionFees (), note: if no network param is supplied then the default network will be used, this can also be found in fetchTransactionFees ()");const n={address:s,coin:this.currency(e).id,amount:t,fee:a};void 0!==i&&(n.memo=i);const c=this.safeStringUpper2(r,"network","networkName");r=this.omit(r,["network","networkName"]);const d=this.safeValue(this.options,"networks"),h=this.safeString(d,c,c);void 0!==h&&(n.networkName=h);const l=await this.privatePostSupplementWithdraw(this.extend(n,r)),u=this.safeValue(l,"data",{});return{info:u,id:this.safeString(u,"withdrawId")}}parseTransactionStatus(e,t){return this.safeString(this.safeValue({deposit:{1:"pending",2:"ok",3:"failed",4:"canceled",5:"transfer"},withdrawal:{1:"pending",2:"canceled",3:"failed",4:"ok"}},t,{}),e,e)}parseTransaction(e,t){const s=this.safeString(e,"id");let i;i=void 0===s?"deposit":"withdrawal";const r=this.safeString(e,"txId"),a=this.safeInteger2(e,"insertTime","applyTime"),n=this.safeValue(this.options,"inverse-networks",{}),o=this.safeString(e,"networkName"),c=this.safeString(n,o,o),d=this.safeString(e,"address");let h,l;"deposit"===i?h=d:l=d;const u=this.safeNumber(e,"amount"),f=this.safeString2(e,"coin","coid"),p=this.safeCurrencyCode(f,t),m=this.parseTransactionStatus(this.safeString(e,"status"),i);let g;const y=this.safeNumber(e,"fee");return void 0!==y&&(g={cost:y,currency:p}),{info:e,id:s,txid:r,timestamp:a,datetime:this.iso8601(a),network:c,address:d,addressTo:l,addressFrom:h,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:u,currency:p,status:m,updated:void 0,comment:void 0,internal:"transfer"===m,fee:g}}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.currency(e);r.coin=t.id}void 0!==t&&(r.startTime=t);const a=await this.privatePostSupplementDepositHistory(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"depositOrders",[]);return this.parseTransactions(o,e,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.currency(e);r.coin=t.id}void 0!==t&&(r.startTime=t);const a=await this.privatePostSupplementWithdraws(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"withdraws",[]);return this.parseTransactions(o,e,t,s)}async fetchTransactionFees(e,t={}){await this.loadMarkets();let s;if(!0===this.checkRequiredCredentials(!1)){let e=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===e){const t=this.safeValue(this.options,"fetchTransactionFees",{});e=this.safeString(t,"method","fetchPrivateFundingFees")}s=await this[e](t)}else s=await this.fetchPublicFundingFees(t);return s}async fetchPrivateFundingFees(e={}){await this.loadMarkets();const t=await this.privatePostSupplementUserInfo(),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"networkList",[]);i[a]={};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"name"),r=this.safeString(this.options["inverse-networks"],s,s),o=this.safeNumber(t,"withdrawFee");void 0!==o&&(i[a][r]=o)}}return{withdraw:i,deposit:{},info:t}}async fetchPublicFundingFees(e={}){await this.loadMarkets();const t=this.safeString2(e,"coin","assetCode");e=this.omit(e,["coin","assetCode"]);const s={};if(void 0!==t){const e=this.currency(t);s.assetCode=e.id}const i=await this.publicGetWithdrawConfigs(this.extend(s,e)),r=this.safeValue(i,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e];if("true"===this.safeString(t,"canWithDraw")){const e=this.safeString(t,"assetCode"),s=this.safeCurrencyCode(e),i=this.safeString(t,"chain");let r=this.safeString(this.options["inverse-networks"],i,i);void 0===r&&(r=s);const n=this.safeString(t,"fee");void 0===a[s]&&(a[s]={}),a[s][r]=n}}return{withdraw:a,deposit:{},info:i}}sign(e,t="public",s="GET",i={},r,a){let n=this.omit(i,this.extractParams(e)),o=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,i);if(o+=".do","public"===t)Object.keys(n).length&&(o+="?"+this.urlencode(this.keysort(n)));else{this.checkRequiredCredentials();const e=this.milliseconds().toString(),t=this.uuid22()+this.uuid16();let s;n=this.extend({api_key:this.apiKey},n),s=this.secret.length>32?"RSA":"HmacSHA256";const i=this.rawencode(this.keysort(this.extend({echostr:t,signature_method:s,timestamp:e},n))),o=this.encode(i),c=this.hash(o).toUpperCase();let d;if("RSA"===s){let e;this.safeValue(this.options,"cacheSecretAsPem",!0)?(e=this.safeValue(this.options,"pem"),void 0===e&&(e=this.convertSecretToPem(this.encode(this.secret)),this.options.pem=e)):e=this.convertSecretToPem(this.encode(this.secret));const t=this.encode(e);d=this.binaryToBase64(this.rsa(c,t,"RS256"))}else"HmacSHA256"===s&&(d=this.hmac(this.encode(c),this.encode(this.secret)));n.sign=d,a=this.urlencode(this.keysort(n)),r={"Content-Type":"application/x-www-form-urlencoded",timestamp:e,signature_method:s,echostr:t}}return{url:o,method:s,body:a,headers:r}}convertSecretToPem(e){const t=e.length-0;let s=parseInt(t/64);s=this.sum(s,1);let i="-----BEGIN PRIVATE KEY-----\n";for(let e=0;e<s;e++){const t=64*e,s=this.sum(t,64);i+=this.secret.slice(t,s)+"\n"}return i+"-----END PRIVATE KEY-----"}handleErrors(e,t,s,i,o,g,y,b,v){if(void 0===y)return;if("false"===this.safeString(y,"result")){const e=this.safeString(y,"error_code"),t=this.safeString({1e4:"Internal error",10001:"The required parameters can not be empty",10002:"Validation failed",10003:"Invalid parameter",10004:"Request too frequent",10005:"Secret key does not exist",10006:"User does not exist",10007:"Invalid signature",10008:"Invalid Trading Pair",10009:"Price and/or Amount are required for limit order",10010:"Price and/or Amount must be less than minimum requirement",10013:"The amount is too small",10014:"Insufficient amount of money in the account",10015:"Invalid order type",10016:"Insufficient account balance",10017:"Server Error",10018:"Page size should be between 1 and 50",10019:"Cancel NO more than 3 orders in one request",10020:"Volume < 0.001",10021:"Price < 0.01",10022:"Invalid authorization",10023:"Market Order is not supported yet",10024:"User cannot trade on this pair",10025:"Order has been filled",10026:"Order has been cancelld",10027:"Order is cancelling",10028:"Wrong query time",10029:"from is not in the query time",10030:"from do not match the transaction type of inqury",10031:"echostr length must be valid and length must be from 30 to 40",10033:"Failed to create order",10036:"customID duplicated",10100:"Has no privilege to withdraw",10101:"Invalid fee rate to withdraw",10102:"Too little to withdraw",10103:"Exceed daily limitation of withdraw",10104:"Cancel was rejected",10105:"Request has been cancelled",10106:"None trade time",10107:"Start price exception",10108:"can not create order",10109:"wallet address is not mapping",10110:"transfer fee is not mapping",10111:"mount > 0",10112:"fee is too lower",10113:"transfer fee is 0",10600:"intercepted by replay attacks filter, check timestamp",10601:"Interface closed unavailable",10701:"invalid asset code",10702:"not allowed deposit"},e,this.json(y));throw new(this.safeValue({10001:p,10002:l,10003:p,10004:u,10005:l,10006:l,10007:l,10008:m,10009:d,10010:d,10013:d,10014:c,10015:d,10016:c,10017:r,10018:p,10019:p,10020:p,10021:d,10022:f,10023:d,10024:f,10025:d,10026:d,10027:d,10028:p,10029:p,10030:p,10031:h,10033:r,10036:n,10100:f,10101:p,10102:c,10103:r,10104:r,10105:r,10106:p,10107:p,10108:r,10109:a,10110:r,10111:p,10112:p,10113:p,10600:p,10601:r,10701:m,10702:f},e,r))(t)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],225:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{TICK_SIZE:r}=e("./base/functions/number"),{ExchangeError:a,ArgumentsRequired:n,InvalidNonce:o,OrderNotFound:c,InvalidOrder:d,InsufficientFunds:h,AuthenticationError:l,DDoSProtection:u,NotSupported:f,BadSymbol:p}=e("./base/errors"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"liquid",name:"Liquid",countries:["JP","CN","TW"],version:"2",rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:!1,option:!1,cancelOrder:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg",api:"https://api.liquid.com",www:"https://www.liquid.com",doc:["https://developers.liquid.com"],fees:"https://help.liquid.com/getting-started-with-liquid/the-platform/fee-structure",referral:"https://www.liquid.com/sign-up/?affiliate=SbzC62lt30976"},api:{public:{get:["currencies","products","products/{id}","products/{id}/price_levels","executions","ir_ladders/{currency}","fees"]},private:{get:["accounts","accounts/balance","accounts/main_asset","accounts/{id}","accounts/{currency}/reserved_balance_details","crypto_accounts","crypto_withdrawal","crypto_withdrawals","crypto_withdrawals/crypto_networks","executions/me","fiat_accounts","fund_infos","loan_bids","loans","orders","orders/{id}","orders/{id}/trades","trades","trades/{id}/loans","trading_accounts","trading_accounts/{id}","transactions","withdrawals","user/fee_tier","user/fees","trading_accounts/{id}","bank_accounts","accounts/{currency}/reserved_balance_details"],post:["crypto_withdrawals","fund_infos","fiat_accounts","loan_bids","orders","withdrawals","fees/estimate"],put:["crypto_withdrawal/{id}/cancel","loan_bids/{id}/close","loans/{id}","orders/{id}","orders/{id}/cancel","trades/{id}","trades/{id}/adjust_margin","trades/{id}/close","trades/close_all","trading_accounts/{id}","withdrawals/{id}/cancel"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:.003,maker:0,tiers:{perpetual:{maker:[[0,0],[25e3,0],[5e4,-25e-5],[1e5,-25e-5],[1e6,-25e-5],[1e7,-25e-5],[25e6,-25e-5],[5e7,-25e-5],[75e6,-25e-5],[1e8,-25e-5],[2e8,-25e-5],[3e8,-25e-5]],taker:[[0,.0012],[25e3,.00115],[5e4,.0011],[1e5,.00105],[1e6,.001],[1e7,95e-5],[25e6,9e-4],[5e7,85e-5],[75e6,8e-4],[1e8,75e-5],[2e8,7e-4],[3e8,65e-5]]},spot:{taker:[[0,.003],[1e4,.0029],[2e4,.0028],[5e4,.0026],[1e5,.002],[1e6,.0016],[5e6,.0012],[1e7,.001],[25e6,9e-4],[5e7,8e-4],[1e8,7e-4],[2e8,6e-4],[5e8,4e-4],[1e9,3e-4]],maker:[[0,0],[1e4,.002],[2e4,.0019],[5e4,.0018],[1e5,.0016],[1e6,8e-4],[5e6,7e-4],[1e7,5e-4],[25e6,0],[5e7,0],[1e8,0],[2e8,0],[5e8,0],[1e9,0]]}}}},precisionMode:r,exceptions:{exact:{"API rate limit exceeded. Please retry after 300s":u,"API Authentication failed":l,"Nonce is too small":o,"Order not found":c,"Can not update partially filled order":d,"Can not update non-live order":c,not_enough_free_balance:h,must_be_positive:d,less_than_order_size:d,price_too_high:d,price_too_small:d,product_disabled:p},broad:{"is not in your IP whitelist":l}},commonCurrencies:{BIFI:"BIFIF",HOT:"HOT Token",MIOTA:"IOTA","P-BTC":"BTC",TON:"Tokamak Network"},options:{cancelOrderException:!0,networks:{ETH:"ERC20",TRX:"TRC20",XLM:"Stellar",ALGO:"Algorand"},swap:{fetchMarkets:{settlementCurrencies:["BTC","ETH","XRP","QASH","USD","JPY","EUR","SGD","AUD"]}}}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(i,"name"),o=this.safeValue(i,"depositable"),c=this.safeValue(i,"withdrawable"),d=o&&c,h=this.parseNumber(this.parsePrecision(this.safeString(i,"assets_precision")));s[a]={id:r,code:a,info:i,name:n,active:d,deposit:o,withdraw:c,fee:this.safeNumber(i,"withdrawal_fee"),precision:h,limits:{amount:{min:h,max:void 0},withdraw:{min:this.safeNumber(i,"minimum_withdrawal"),max:void 0}}}}return s}async fetchMarkets(e={}){const t=await this.publicGetProducts(e),s=await this.publicGetProducts({perpetual:"1"}),i=await this.fetchCurrencies(),r=this.indexBy(i,"code"),a=[],n=this.arrayConcat(t,s);for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"id"),i=this.safeString(t,"base_currency"),o=this.safeString(t,"quoted_currency"),c="Perpetual"===this.safeString(t,"product_type"),d=c?"swap":"spot",h=!c,l=this.safeCurrencyCode(i),u=this.safeCurrencyCode(o),f=this.safeValue(t,"disabled",!1),p=this.safeValue(r,l);let m;void 0!==p&&(m=this.safeNumber(p.info,"minimum_order_quantity"));const g=this.safeNumber(t,"last_traded_price");let y,b;if(g){const e=this.safeNumber(t,"multiplier_down"),s=this.safeNumber(t,"multiplier_up");void 0!==e&&(y=g*e),void 0!==s&&(b=g*s)}const v=this.safeValue(t,"margin_enabled"),w=l+"/"+u,S=this.fees.trading.maker,k=this.fees.trading.taker,T={id:s,symbol:w,base:l,quote:u,settle:void 0,baseId:i,quoteId:o,settleId:void 0,type:d,spot:h,margin:h&&v,swap:c,future:!1,option:!1,active:!f,contract:c,linear:void 0,inverse:void 0,taker:k,maker:S,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.safeNumber(t,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:m,max:void 0},price:{min:y,max:b},cost:{min:void 0,max:void 0}},info:t};if(c){const e=this.options.fetchMarkets.settlementCurrencies;for(let s=0;s<e.length;s++){const i=e[s];T.settle=i,T.symbol=w+":"+i,T.linear=u===i,T.inverse=l===i,T.taker=this.safeNumber(t,"taker_fee",k),T.maker=this.safeNumber(t,"maker_fee",S),T.contractSize=this.parseNumber("1"),a.push(T)}}else a.push(T)}return a}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"crypto_accounts",[]),i=this.safeValue(e,"fiat_accounts",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),n.used=this.safeString(i,"reserved_balance"),t[a]=n}for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"reserved_balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={id:i.id},a=await this.publicGetProductsIdPriceLevels(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"buy_price_levels","sell_price_levels")}parseTicker(e,t){const s=this.milliseconds();let i;if("last_traded_price"in e&&e.last_traded_price){e.last_traded_price.length>0&&(i=this.safeString(e,"last_traded_price"))}const r=this.safeString(e,"id");let a=(t=this.safeMarket(r,t)).symbol;const n=this.safeString(e,"base_currency"),o=this.safeString(e,"quoted_currency");void 0!==n&&void 0!==o&&(a=this.safeCurrencyCode(n)+"/"+this.safeCurrencyCode(o));const c=this.safeString(e,"last_price_24h");return this.safeTicker({symbol:a,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high_market_ask"),low:this.safeString(e,"low_market_bid"),bid:this.safeString(e,"market_bid"),bidVolume:void 0,ask:this.safeString(e,"market_ask"),askVolume:void 0,vwap:void 0,open:c,close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_24h"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetProducts(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={id:s.id},r=await this.publicGetProductsId(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeTimestamp(e,"created_at"),i=this.safeString(e,"order_id"),r=this.safeString(e,"taker_side"),a=this.safeString(e,"my_side"),n=void 0!==a?a:r;let o;void 0!==a&&(o=r===a?"taker":"maker");const c=this.safeString(e,"price"),d=this.safeString(e,"quantity"),h=this.safeString(e,"id");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:h,order:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:n,takerOrMaker:o,price:c,amount:d,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={product_id:r.id};void 0!==s&&(a.limit=s),void 0!==t&&(a.timestamp=parseInt(t/1e3));const n=await this.publicGetExecutions(this.extend(a,i)),o=void 0!==t?n:n.models;return this.parseTrades(o,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={id:s.id},r=await this.publicGetProductsId(this.extend(i,t));return this.parseTradingFee(r,s)}parseTradingFee(e,t){const s=this.safeString(e,"id");return{info:e,symbol:this.safeSymbol(s,t),maker:this.safeNumber(e,"maker_fee"),taker:this.safeNumber(e,"taker_fee"),percentage:!0,tierBased:!0}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetProducts(e),s=await this.publicGetProducts({perpetual:"1"}),i=this.arrayConcat(t,s),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"id");r[this.safeSymbol(s,t)]=this.parseTradingFee(t)}return r}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={product_id:r.id,with_details:!0};void 0!==s&&(a.limit=s);const n=await this.privateGetExecutionsMe(this.extend(a,i));return this.parseTrades(n.models,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.safeString2(a,"clientOrderId","client_order_id");a=this.omit(a,["clientOrderId","client_order_id"]);const o=this.market(e),c={order_type:t,product_id:o.id,side:s,quantity:this.amountToPrecision(o.symbol,i)};void 0!==n&&(c.client_order_id=n),"limit"!==t&&"limit_post_only"!==t&&"market_with_range"!==t&&"stop"!==t||(c.price=this.priceToPrecision(o.symbol,r));const d=await this.privatePostOrders(this.extend(c,a));return this.parseOrder(d)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePutOrdersIdCancel(this.extend(i,s)),a=this.parseOrder(r);if("closed"===a.status&&this.options.cancelOrderException)throw new c(this.id+" order closed already: "+this.json(r));return a}async editOrder(e,t,s,i,r,a,o={}){if(await this.loadMarkets(),void 0===a)throw new n(this.id+" editOrder() requires the price argument");const c={order:{quantity:this.amountToPrecision(t,r),price:this.priceToPrecision(t,a)},id:e},d=await this.privatePutOrdersId(this.extend(c,o));return this.parseOrder(d)}parseOrderStatus(e){return this.safeString({live:"open",filled:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeTimestamp(e,"created_at"),r=this.safeString(e,"product_id");t=this.safeValue(this.markets_by_id,r);const a=this.parseOrderStatus(this.safeString(e,"status")),n=this.safeString(e,"quantity"),o=this.safeString(e,"filled_quantity"),c=this.safeString(e,"price"),d=this.safeString(e,"order_type"),h=this.safeString(e,"average_price"),l=this.safeValue(e,"executions",[]),u=this.safeString(e,"side"),f=this.safeString(e,"client_order_id");return this.safeOrder({id:s,clientOrderId:f,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,type:d,timeInForce:void 0,postOnly:void 0,status:a,symbol:t.symbol,side:u,price:c,stopPrice:void 0,amount:n,filled:o,cost:void 0,remaining:void 0,average:h,trades:l,fee:{currency:t.quote,cost:this.safeString(e,"order_fee")},info:e})}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrdersId(this.extend(i,s));return this.parseOrder(r)}async fetchOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={with_details:1};void 0!==e&&(r=this.market(e),a.product_id=r.id),void 0!==s&&(a.limit=s);const n=await this.privateGetOrders(this.extend(a,i)),o=this.safeValue(n,"models",[]);return this.parseOrders(o,r,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"live"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"filled"},i))}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={crypto_withdrawal:{currency:a.id,address:s,amount:t}};if(void 0!==i)if("XRP"===e)n.crypto_withdrawal.payment_id=i;else{if("XLM"!==e)throw new f(this.id+" withdraw() only supports a tag along the address for XRP or XLM");n.crypto_withdrawal.memo_type="text",n.crypto_withdrawal.memo_value=i}const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");if(void 0===c){const e=this.safeValue(r,"crypto_withdrawal",{});c=this.safeStringUpper(e,"network")}c=this.safeString(o,c,c),void 0!==c&&(n.crypto_withdrawal.network=c,(r=this.omit(r,"network")).crypto_withdrawal=this.omit(r.crypto_withdrawal,"network"));const d=await this.privatePostCryptoWithdrawals(this.deepExtend(n,r));return this.parseTransaction(d,a)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();let r;void 0!==e&&(r=this.currency(e));const a=await this.privateGetCryptoWithdrawals(this.extend({},i)),n=this.safeValue(a,"models",[]);return this.parseTransactions(n,r,t,s)}parseTransactionStatus(e){return this.safeString({pending:"pending",cancelled:"canceled",approved:"ok",processing:"pending",processed:"ok",reverted:"failed",to_be_reviewed:"pending",declined:"failed",broadcasted:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"address"),r=this.safeString2(e,"payment_id","memo_value"),a=this.safeString(e,"transaction_hash"),n=this.safeString2(e,"currency","asset"),o=this.safeCurrencyCode(n,t),c=this.safeTimestamp(e,"created_at"),d=this.safeTimestamp(e,"updated_at"),h=this.parseTransactionStatus(this.safeString(e,"state")),l=this.safeString(e,"amount"),u=this.safeString(e,"withdrawal_fee"),f=this.parseNumber(m.stringSub(l,u)),p=this.safeString(e,"chain_name");return{info:e,id:s,txid:a,timestamp:c,datetime:this.iso8601(c),network:p,address:i,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:void 0,tagFrom:void 0,type:"withdrawal",amount:f,currency:o,status:h,updated:d,fee:{currency:o,cost:this.parseNumber(u)}}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if(r={"X-Quoine-API-Version":this.version,"Content-Type":"application/json"},"private"===t){this.checkRequiredCredentials(),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o));const e=this.nonce(),t={path:n,token_id:this.apiKey,iat:Math.floor(e/1e3)};"client_order_id"in o||(t.nonce=e),r["X-Quoine-Auth"]=this.jwt(t,this.encode(this.secret))}else Object.keys(o).length&&(n+="?"+this.urlencode(o));return n=this.urls.api+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(e>=200&&e<300)return;if(401===e)return void this.throwExactlyMatchedException(this.exceptions.exact,n,n);if(429===e)throw new u(this.id+" "+n);if(void 0===o)return;const h=this.id+" "+n,l=this.safeString(o,"message"),f=this.safeValue(o,"errors");if(void 0!==l)this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,l,h);else{if(void 0===f)throw new a(h);{const e=Object.keys(f);for(let t=0;t<e.length;t++){const s=f[e[t]];for(let e=0;e<s.length;e++){const t=s[e];this.throwExactlyMatchedException(this.exceptions.exact,t,h)}}}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],226:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a}=e("./base/errors"),{TICK_SIZE:n}=e("./base/functions/number"),o=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"luno",name:"luno",countries:["GB","SG","ZA"],rateLimit:200,version:"1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{referral:"https://www.luno.com/invite/44893A",logo:"https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg",api:{public:"https://api.luno.com/api",private:"https://api.luno.com/api",exchange:"https://api.luno.com/api/exchange"},www:"https://www.luno.com",doc:["https://www.luno.com/en/api","https://npmjs.org/package/bitx","https://github.com/bausmeier/node-bitx"]},api:{exchange:{get:{markets:1}},public:{get:{orderbook:1,orderbook_top:1,ticker:1,tickers:1,trades:1}},private:{get:{"accounts/{id}/pending":1,"accounts/{id}/transactions":1,balance:1,beneficiaries:1,fee_info:1,funding_address:1,listorders:1,listtrades:1,"orders/{id}":1,"quotes/{id}":1,withdrawals:1,"withdrawals/{id}":1,transfers:1},post:{accounts:1,"accounts/{id}/name":1,postorder:1,marketorder:1,stoporder:1,funding_address:1,withdrawals:1,send:1,quotes:1,"oauth2/grant":1},put:{"accounts/{id}/name":1,"quotes/{id}":1},delete:{"quotes/{id}":1,"withdrawals/{id}":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},precisionMode:n})}async fetchMarkets(e={}){const t=await this.exchangeGetMarkets(e),s=[],i=this.safeValue(t,"markets",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"market_id"),a=this.safeString(t,"base_currency"),n=this.safeString(t,"counter_currency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(t,"trading_status");s.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volume_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_volume"),max:this.safeNumber(t,"max_volume")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchAccounts(e={}){const t=await this.privateGetBalance(e),s=this.safeValue(t,"balance",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"account_id"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);i.push({id:r,type:void 0,currency:n,info:t})}return i}parseBalance(e){const t=this.safeValue(e,"balance",[]),s={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.safeString(i,"reserved"),c=this.safeString(i,"unconfirmed"),d=this.safeString(i,"balance"),h=o.stringAdd(n,c),l=o.stringAdd(d,c);if(a in s)s[a].used=o.stringAdd(s[a].used,h),s[a].total=o.stringAdd(s[a].total,l);else{const e=this.account();e.used=h,e.total=l,s[a]=e}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();let i="publicGetOrderbook";void 0!==t&&t<=100&&(i+="Top");const r=this.market(e),a={pair:r.id},n=await this[i](this.extend(a,s)),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,r.symbol,o,"bids","asks","price","volume")}parseOrderStatus(e){return this.safeString({PENDING:"open"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"creation_timestamp");let i,r=this.parseOrderStatus(this.safeString(e,"state"));const a=this.safeString(e,"type");"ASK"===a||"SELL"===a?i="sell":"BID"!==a&&"BUY"!==a||(i="buy");const n=this.safeString(e,"pair");t=this.safeMarket(n,t);const o=this.safeString(e,"limit_price"),c=this.safeString(e,"limit_volume"),d=this.safeNumber(e,"fee_counter"),h=this.safeNumber(e,"fee_base"),l=this.safeString(e,"base"),u=this.safeString(e,"counter");let f;void 0!==d?f={cost:d,currency:t.quote}:void 0!==h&&(f={cost:h,currency:t.base});const p=this.safeString(e,"order_id");return this.safeOrder({id:p,clientOrderId:void 0,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:r,symbol:t.symbol,type:void 0,timeInForce:void 0,postOnly:void 0,side:i,price:o,stopPrice:void 0,amount:c,filled:l,cost:u,remaining:void 0,trades:void 0,fee:f,info:e,average:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrdersId(this.extend(i,s));return this.parseOrder(r)}async fetchOrdersByState(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==e&&(a.state=e),void 0!==t&&(n=this.market(t),a.pair=n.id);const o=await this.privateGetListorders(this.extend(a,r)),c=this.safeValue(o,"orders",[]);return this.parseOrders(c,n,s,i)}async fetchOrders(e,t,s,i={}){return await this.fetchOrdersByState(void 0,e,t,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByState("PENDING",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByState("COMPLETE",e,t,s,i)}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"pair"),r=this.safeSymbol(i,t),a=this.safeString(e,"last_trade");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"rolling_24_hour_volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=this.indexBy(s.tickers,"pair"),r=Object.keys(i),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeMarket(t),n=s.symbol,o=i[t];a[n]=this.parseTicker(o,s)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeString(e,"order_id"),i=this.safeString(e,"sequence");let r,a;if(void 0!==s){const t=this.safeString(e,"type");"ASK"===t||"SELL"===t?a="sell":"BID"!==t&&"BUY"!==t||(a="buy"),r="sell"===a&&e.is_buy?"maker":"buy"!==a||e.is_buy?"taker":"maker"}else a=e.is_buy?"buy":"sell";const n=this.safeString(e,"fee_base"),c=this.safeString(e,"fee_counter");let d,h;void 0!==n?o.stringEquals(n,"0.0")||(d=t.base,h=n):void 0!==c&&(o.stringEquals(c,"0.0")||(d=t.quote,h=c));const l=this.safeInteger(e,"timestamp");return this.safeTrade({info:e,id:i,timestamp:l,datetime:this.iso8601(l),symbol:t.symbol,order:s,type:void 0,side:a,takerOrMaker:r,price:this.safeString(e,"price"),amount:this.safeString(e,"volume"),cost:this.safeString(e,"counter"),fee:{cost:h,currency:d}},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=t);const n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={pair:r.id};void 0!==t&&(n.since=t),void 0!==s&&(n.limit=s);const o=await this.privateGetListtrades(this.extend(n,i)),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFeeInfo(e);return{info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();let n="privatePost";const o=this.market(e),c={pair:o.id};"market"===t?(n+="Marketorder",c.type=s.toUpperCase(),"buy"===s?c.counter_volume=parseFloat(this.amountToPrecision(o.symbol,i)):c.base_volume=parseFloat(this.amountToPrecision(o.symbol,i))):(n+="Postorder",c.volume=parseFloat(this.amountToPrecision(o.symbol,i)),c.price=parseFloat(this.priceToPrecision(o.symbol,r)),c.type="buy"===s?"BID":"ASK");const d=await this[n](this.extend(c,a));return{info:d,id:d.order_id}}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e};return await this.privatePostStoporder(this.extend(i,s))}async fetchLedgerByEntries(e,t=-1,s=1,i={}){const r={min_row:t,max_row:this.sum(t,s)};return await this.fetchLedger(e,undefined,s,this.extend(r,i))}async fetchLedger(e,t,s,i={}){let n;await this.loadMarkets(),await this.loadAccounts();let o=this.safeString(i,"id"),c=this.safeValue(i,"min_row"),d=this.safeValue(i,"max_row");if(void 0===o){if(void 0===e)throw new a(this.id+" fetchLedger() requires a currency code argument if no account id specified in params");n=this.currency(e);const t=this.indexBy(this.accounts,"currency"),s=this.safeValue(t,e);if(void 0===s)throw new r(this.id+" fetchLedger() could not find account id for "+e);o=s.id}if(void 0===c&&void 0===d)d=0,c=-1e3;else if(void 0===c||void 0===d)throw new r(this.id+" fetchLedger() require both params 'max_row' and 'min_row' or neither to be defined");if(void 0!==s&&d-c>s&&(d<=0?c=d-s:c>0&&(d=c+s)),d-c>1e3)throw new r(this.id+" fetchLedger() requires the params 'max_row' - 'min_row' <= 1000");const h={id:o,min_row:c,max_row:d},l=await this.privateGetAccountsIdTransactions(this.extend(i,h)),u=this.safeValue(l,"transactions",[]);return this.parseLedger(u,n,t,s)}parseLedgerComment(e){const t=e.split(" ");let s;const i=this.safeString(t,0),r=this.safeString(t,2),a=this.safeString(t,3);let n=this.safeString({Withdrawal:"fee",Trading:"fee",Payment:"transaction",Sent:"transaction",Deposit:"transaction",Received:"transaction",Released:"released",Reserved:"reserved",Sold:"trade",Bought:"trade",Failure:"failed"},i,void 0);return void 0===n&&"fee"===r&&(n="fee"),"reserved"===n&&"order"===a&&(s=this.safeString(t,4)),{type:n,referenceId:s}}parseLedgerEntry(e,t){const s=this.safeString(e,"row_index"),i=this.safeString(e,"account_id"),r=this.safeValue(e,"timestamp"),a=this.safeString(e,"currency"),n=this.safeCurrencyCode(a,t),o=this.safeNumber(e,"available_delta"),c=this.safeNumber(e,"balance_delta"),d=this.safeNumber(e,"balance"),h=this.safeString(e,"description");let l=d,u=0;const f=this.parseLedgerComment(h),p=f.type,m=f.referenceId;let g,y;return 0!==c?(l=d-c,y="ok",u=Math.abs(c)):o<0?(y="pending",u=Math.abs(o)):o>0&&(y="canceled",u=Math.abs(o)),c>0||o>0?g="in":(c<0||o<0)&&(g="out"),{id:s,direction:g,account:i,referenceId:m,referenceAccount:void 0,type:p,currency:n,amount:u,timestamp:r,datetime:this.iso8601(r),before:l,after:d,status:y,fee:void 0,info:e}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if(Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t){this.checkRequiredCredentials();const e=this.stringToBase64(this.apiKey+":"+this.secret);r={Authorization:"Basic "+this.decode(e)}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(void 0!==this.safeValue(o,"error"))throw new r(this.id+" "+this.json(o))}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],227:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{NotSupported:r,ExchangeError:a,BadRequest:n,InsufficientFunds:o,InvalidOrder:c,DuplicateOrderId:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"lykke",name:"Lykke",countries:["UK"],version:"2",rateLimit:200,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,withdraw:!0},requiredCredentials:{apiKey:!0,secret:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/155840500-1ea4fdf0-47c0-4daa-9597-c6c1cd51b9ec.jpg",api:{public:"https://hft-apiv2.lykke.com/api",private:"https://hft-apiv2.lykke.com/api"},www:"https://www.lykke.com",doc:["https://hft-apiv2.lykke.com/swagger/ui/index.html","https://lykkecity.github.io/Trading-API"],fees:"https://support.lykke.com/hc/en-us/articles/115002141125-What-are-the-fees-and-charges-"},api:{public:{get:{assetpairs:2.5,"assetpairs/{id}":2.5,assets:2.5,"assets/{id}":2.5,isalive:2.5,orderbooks:2.5,tickers:2.5,prices:2.5,"trades/public/{assetPairId}":2.5}},private:{get:{balance:2.5,trades:2.5,"trades/order/{orderId}":2.5,"orders/active":1,"orders/closed":1,"orders/{orderId}":1,operations:2.5,"operations/deposits/addresses":2.5,"operations/deposits/addresses/{assetId}":2.5},post:{"orders/limit":1,"orders/market":1,"orders/bulk":1,"operations/withdrawals":2.5,"operations/deposits/addresses":2.5},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:0}},precisionMode:h,exceptions:{exact:{1001:a,1100:a,1101:a,2e3:n,2001:o,2202:d,2003:a,2004:r,2005:a,2006:o,2007:o,2008:o,2009:a,2010:o,2011:c,2012:c,2013:c,2014:c,2015:c,2016:c,2017:c,2018:c,2019:c,2020:c,2021:c,2022:c,2023:a},broad:{}},commonCurrencies:{}})}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),s=this.safeValue(t,"payload",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"assetId"),a=this.safeString(t,"symbol"),n=this.safeString(t,"name"),o=this.safeString(t,"type"),c=this.safeValue(t,"blockchainDepositEnabled"),d=this.safeValue(t,"blockchainWithdrawal"),h=!this.safeValue(t,"isDisabled");i[a]={id:r,code:a,info:t,type:o,name:n,active:h,deposit:c,withdraw:d,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"accuracy"))),limits:{withdraw:{min:this.safeValue(t,"cashoutMinimalAmount"),max:void 0},amount:{min:this.safeValue(t,"lowVolumeAmount"),max:void 0}}}}return i}async fetchMarkets(e={}){const t=await this.publicGetAssetpairs(e),s=this.safeValue(t,"payload",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"assetPairId"),a=this.safeString(t,"name"),n=this.safeString(t,"baseAssetId"),o=this.safeString(t,"quoteAssetId"),[c,d]=a.split("/"),h=this.safeCurrencyCode(c),l=this.safeCurrencyCode(d),u=h+"/"+l;i.push({id:r,symbol:u,base:h,quote:l,baseId:n,quoteId:o,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,active:!0,info:t,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{amount:{min:this.safeNumber(t,"minVolume"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOppositeVolume"),max:void 0},leverage:{min:void 0,max:void 0}}})}return i}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"assetPairId");t=this.safeMarket(i,t);const r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:this.safeString(t,"symbol"),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volumeBase"),quoteVolume:this.safeString(e,"volumeQuote"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={assetPairIds:s.id},r=this.safeString(this.options,"fetchTickerMethod","publicGetTickers"),a=await this[r](this.extend(i,t)),n=this.safeValue(a,"payload",[]);return this.parseTicker(this.safeValue(n,0,{}),s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=this.safeValue(s,"payload",[]);return this.parseTickers(i,e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={assetPairId:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderbooks(this.extend(r,s)),n=this.safeValue(a,"payload",[]),o=this.safeValue(n,0,{}),c=this.safeInteger(o,"timestamp");return this.parseOrderBook(o,i.symbol,c,"bids","asks","p","v")}parseTrade(e,t){const s=this.safeString(e,"assetPairId"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString2(e,"id","id"),a=this.safeString(e,"orderId"),n=this.safeInteger(e,"timestamp"),o=this.safeString2(e,"price","price");let c=this.safeString2(e,"volume","amount");void 0===c&&(c=this.safeString2(e,"baseVolume","amount"));const d=this.safeStringLower(e,"side"),h={cost:this.parseNumber("0"),currency:t.quote};return this.safeTrade({id:r,info:e,timestamp:n,datetime:this.iso8601(n),symbol:i,type:void 0,order:a,side:d,takerOrMaker:void 0,price:o,amount:c,cost:void 0,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={assetPairId:r.id};void 0!==s&&(a.take=s);const n=await this.publicGetTradesPublicAssetPairId(this.extend(a,i)),o=this.safeValue(n,"payload",[]);return this.parseTrades(o,r,t,s)}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"assetId"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(i,"available"),c=this.safeString(i,"reserved");n.free=o,n.used=c,t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e),s=this.safeValue(t,"payload",[]);return this.parseBalance(s)}parseOrderStatus(e){return this.safeString({Open:"open",Pending:"open",InOrderBook:"open",Processing:"open",Matched:"closed",Cancelled:"canceled",Rejected:"rejected",Replaced:"canceled",Placed:"open"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeString(e,"assetPairId"),a=this.safeSymbol(r,t),n=this.safeStringLower(e,"type"),o=this.safeInteger(e,"lastTradeTimestamp"),c=this.safeInteger(e,"timestamp"),d=this.safeString(e,"price"),h=this.safeStringLower(e,"side"),l=this.safeString(e,"volume"),u=this.safeString(e,"remainingVolume"),f=this.safeString(e,"filledVolume"),p=this.safeString(e,"cost");return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:o,symbol:a,type:n,timeInForce:void 0,postOnly:void 0,side:h,price:d,stopPrice:void 0,amount:l,cost:p,average:void 0,filled:f,remaining:u,status:i,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={assetPairId:n.id,side:this.capitalize(s),volume:parseFloat(this.amountToPrecision(n.symbol,i))};"limit"===t&&(o.price=parseFloat(this.priceToPrecision(n.symbol,r)));const c="privatePostOrders"+this.capitalize(t),d=await this[c](this.extend(o,a)),h=this.safeValue(d,"payload"),l=this.safeString(h,"orderId");return"market"===t&&(r=this.safeNumber(h,"price")),{id:l,info:d,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:n.symbol,type:t,side:s,price:r,amount:i,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0}}async cancelOrder(e,t,s={}){const i={orderId:e};return await this.privateDeleteOrdersOrderId(this.extend(i,s))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i;return void 0!==e&&(i=this.market(e),s.assetPairId=i.id),await this.privateDeleteOrders(this.extend(s,t))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.privateGetOrdersOrderId(this.extend(i,s)),a=this.safeValue(r,"payload");return this.parseOrder(a)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==s&&(a.take=s);const n=await this.privateGetOrdersActive(this.extend(a,i)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==s&&(a.take=s);const n=await this.privateGetOrdersClosed(this.extend(a,i)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==s&&(r.take=s),void 0!==e&&(a=this.market(e),r.assetPairId=a.id),void 0!==t&&(r.from=t);const n=await this.privateGetTrades(this.extend(r,i)),o=this.safeValue(n,"payload");return this.parseTrades(o,a,t,s)}parseBidAsk(e,t=0,s=1){const i=this.safeString(e,t),r=l.stringAbs(this.safeString(e,s));return[this.parseNumber(i),this.parseNumber(r)]}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={assetId:this.safeString(s,"id")},r=await this.privateGetOperationsDepositsAddressesAssetId(this.extend(i,t)),a=this.safeString(r,"baseAddress"),n=this.safeString(r,"addressExtension");return this.checkAddress(a),{currency:e,address:a,tag:n,network:void 0,info:r}}parseTransaction(e,t){let s,i,r,a,n,o,c;if("string"==typeof e)s=e;else{s=this.safeString(e,"operationId"),i=this.safeString(e,"assetId"),r=this.safeCurrencyCode(i,t),a=this.safeNumber(e,"totalVolume"),o=this.safeString(e,"type"),c=this.safeInteger(e,"timestamp");n={currency:r,cost:this.safeNumber(e,"fee")}}return{info:e,id:s,txid:void 0,timestamp:c,datetime:this.iso8601(c),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:o,amount:a,currency:r,status:void 0,updated:void 0,fee:n}}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==s&&(r.take=s);const a=await this.privateGetOperations(this.extend(r,i)),n=this.safeValue(a,"payload",[]);let o;return void 0!==e&&(o=this.currency(e)),this.parseTransactions(n,o,t,s)}async withdraw(e,t,s,i,r={}){await this.loadMarkets(),this.checkAddress(s);const a=this.currency(e),n={assetId:a.id,volume:parseFloat(this.currencyToPrecision(e,t)),destinationAddress:s};void 0!==i&&(n.destinationAddressExtension=i);const o=await this.privatePostOperationsWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));return r={Accept:"application/json","Content-Type":"application/json"},"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&("GET"!==s&&"DELETE"!==s||Object.keys(o).length&&(n+="?"+this.urlencode(o)),this.checkRequiredCredentials(),r.Authorization="Bearer "+this.apiKey,"POST"===s&&Object.keys(i).length&&(a=this.json(i)),"operations/withdrawals"===e&&(r["X-Request-ID"]=this.uuid())),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"error",{}),l=this.safeString(h,"code");if(void 0!==l&&"0"!==l){const e=this.id+" "+n,t=this.safeString(h,"message");throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new a(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],228:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,InvalidOrder:n}=e("./base/errors"),{TICK_SIZE:o}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"mercado",name:"Mercado Bitcoin",countries:["BR"],rateLimit:1e3,version:"v3",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:"emulated",fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:void 0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","2w":"2w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg",api:{public:"https://www.mercadobitcoin.net/api",private:"https://www.mercadobitcoin.net/tapi",v4Public:"https://www.mercadobitcoin.com.br/v4"},www:"https://www.mercadobitcoin.com.br",doc:["https://www.mercadobitcoin.com.br/api-doc","https://www.mercadobitcoin.com.br/trade-api"]},api:{public:{get:["coins","{coin}/orderbook/","{coin}/ticker/","{coin}/trades/","{coin}/trades/{from}/","{coin}/trades/{from}/{to}","{coin}/day-summary/{year}/{month}/{day}/"]},private:{post:["cancel_order","get_account_info","get_order","get_withdrawal","list_system_messages","list_orders","list_orderbook","place_buy_order","place_sell_order","place_market_buy_order","place_market_sell_order","withdraw_coin"]},v4Public:{get:["{coin}/candle/"]}},fees:{trading:{maker:.003,taker:.007}},options:{limits:{BTC:.001,BCH:.001,ETH:.01,LTC:.01,XRP:.1}},precisionMode:o})}async fetchMarkets(e={}){const t=await this.publicGetCoins(e),s=[],i=this.safeValue(this.options,"limits",{});for(let e=0;e<t.length;e++){const r=t[e],a=r,n="BRL",o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=c+o,h="1e-5";s.push({id:d,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00001")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,a),max:void 0},price:{min:this.parseNumber(h),max:void 0},cost:{min:void 0,max:void 0}},info:r})}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={coin:i.base},a=await this.publicGetCoinOrderbook(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"date"),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={coin:s.base},r=await this.publicGetCoinTicker(this.extend(i,t)),a=this.safeValue(r,"ticker",{});return this.parseTicker(a,s)}parseTrade(e,t){const s=this.safeTimestamp2(e,"date","executed_timestamp");t=this.safeMarket(void 0,t);const i=this.safeString2(e,"tid","operation_id"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString2(e,"amount","quantity"),o=this.safeString(e,"fee_rate");let c;return void 0!==o&&(c={cost:o,currency:void 0}),this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:void 0,type:undefined,side:r,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:c},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);let a="publicGetCoinTrades";const n={coin:r.base};void 0!==t&&(a+="From",n.from=parseInt(t/1e3));void 0!==this.safeInteger(i,"to")&&(a+="To");const o=await this[a](this.extend(n,i));return this.parseTrades(o,r,t,s)}parseBalance(e){const t=this.safeValue(e,"response_data",{}),s=this.safeValue(t,"balance",{}),i={info:e},r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t);if(t in s){const e=this.safeValue(s,t,{}),r=this.account();r.free=this.safeString(e,"available"),r.total=this.safeString(e,"total"),i[a]=r}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetAccountInfo(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=this.market(e),c={coin_pair:o.id};let d=this.capitalize(s)+"Order";if("limit"===t)d="privatePostPlace"+d,c.limit_price=this.priceToPrecision(o.symbol,r),c.quantity=this.amountToPrecision(o.symbol,i);else if(d="privatePostPlaceMarket"+d,"buy"===s){if(void 0===r)throw new n(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount");c.cost=this.priceToPrecision(o.symbol,i*r)}else c.quantity=this.amountToPrecision(o.symbol,i);const h=await this[d](this.extend(c,a));return{info:h,id:h.response_data.order.order_id.toString()}}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={coin_pair:i.id,order_id:e},n=await this.privatePostCancelOrder(this.extend(r,s)),o=this.safeValue(n,"response_data",{}),c=this.safeValue(o,"order",{});return this.parseOrder(c,i)}parseOrderStatus(e){return this.safeString({2:"open",3:"canceled",4:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"order_id"),i=this.safeString(e,"order_type");let r;"order_type"in e&&(r="1"===i?"buy":"sell");const a=this.parseOrderStatus(this.safeString(e,"status")),n=this.safeString(e,"coin_pair");t=this.safeMarket(n,t);const o=this.safeTimestamp(e,"created_timestamp"),c={cost:this.safeString(e,"fee"),currency:t.quote},d=this.safeString(e,"limit_price"),h=this.safeString(e,"executed_price_avg"),l=this.safeString(e,"quantity"),u=this.safeString(e,"executed_quantity"),f=this.safeTimestamp(e,"updated_timestamp"),p=this.safeValue(e,"operations",[]);return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:f,symbol:t.symbol,type:"limit",timeInForce:void 0,postOnly:void 0,side:r,price:d,stopPrice:void 0,cost:void 0,average:h,amount:l,filled:u,remaining:void 0,status:a,fee:c,trades:p},t)}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={coin_pair:i.id,order_id:parseInt(e)},n=await this.privatePostGetOrder(this.extend(r,s)),o=this.safeValue(n,"response_data",{}),c=this.safeValue(o,"order");return this.parseOrder(c,i)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e),o={coin:n.id,quantity:t.toFixed(10),address:s};if("BRL"===e){if(!("account_ref"in r))throw new a(this.id+" withdraw() requires account_ref parameter to withdraw "+e)}else if("LTC"!==e){if(!("tx_fee"in r))throw new a(this.id+" withdraw() requires tx_fee parameter to withdraw "+e);if("XRP"===e)if(void 0===i){if(!("destination_tag"in r))throw new a(this.id+" withdraw() requires a tag argument or destination_tag parameter to withdraw "+e)}else o.destination_tag=i}const c=await this.privatePostWithdrawCoin(this.extend(o,r)),d=this.safeValue(c,"response_data",{}),h=this.safeValue(d,"withdrawal");return this.parseTransaction(h,n)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}parseOHLCV(e,t){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={precision:this.timeframes[t],coin:a.id.toLowerCase()};void 0!==i&&void 0!==s?(n.from=parseInt(s/1e3),n.to=this.sum(n.from,i*this.parseTimeframe(t))):void 0!==s?(n.from=parseInt(s/1e3),n.to=this.sum(this.seconds(),1)):void 0!==i&&(n.to=this.seconds(),n.from=n.to-i*this.parseTimeframe(t));const o=await this.v4PublicGetCoinCandle(this.extend(n,r)),c=this.safeValue(o,"candles",[]);return this.parseOHLCVs(c,a,t,s,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={coin_pair:r.id},o=await this.privatePostListOrders(this.extend(n,i)),c=this.safeValue(o,"response_data",{}),d=this.safeValue(c,"orders",[]);return this.parseOrders(d,r,t,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={coin_pair:r.id,status_list:"[2]"},o=await this.privatePostListOrders(this.extend(n,i)),c=this.safeValue(o,"response_data",{}),d=this.safeValue(c,"orders",[]);return this.parseOrders(d,r,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={coin_pair:r.id,has_fills:!0},o=await this.privatePostListOrders(this.extend(n,i)),c=this.safeValue(o,"response_data",{}),d=this.safeValue(c,"orders",[]),h=this.parseOrders(d,r,t,s),l=this.ordersToTrades(h);return this.filterBySymbolSinceLimit(l,r.symbol,t,s)}ordersToTrades(e){const t=[];for(let s=0;s<e.length;s++){const i=this.safeValue(e[s],"trades",[]);for(let e=0;e<i.length;e++)t.push(i[e])}return t}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/";const o=this.omit(i,this.extractParams(e));if("public"===t||"v4Public"===t)n+=this.implodeParams(e,i),Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),n+=this.version+"/";const t=this.nonce();a=this.urlencode(this.extend({tapi_method:e,tapi_nonce:t},i));const s="/tapi/"+this.version+"/?"+a;r={"Content-Type":"application/x-www-form-urlencoded","TAPI-ID":this.apiKey,"TAPI-MAC":this.hmac(this.encode(s),this.encode(this.secret),"sha512")}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(void 0!==this.safeValue(o,"error_message"))throw new r(this.id+" "+this.json(o))}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],229:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AccountNotEnabled:r,InvalidAddress:a,ExchangeError:n,BadRequest:o,AuthenticationError:c,RateLimitExceeded:d,BadSymbol:h,InvalidOrder:l,InsufficientFunds:u,ArgumentsRequired:f,OrderNotFound:p,PermissionDenied:m,NotSupported:g}=e("./base/errors"),{TICK_SIZE:y}=e("./base/functions/number"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"mexc",name:"MEXC Global",countries:["SC"],rateLimit:50,version:"v2",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!0,future:!1,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchLeverage:void 0,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!0,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg",api:{spot:{public:"https://www.mexc.com/open/api/v2",private:"https://www.mexc.com/open/api/v2"},contract:{public:"https://contract.mexc.com/api/v1/contract",private:"https://contract.mexc.com/api/v1/private"}},www:"https://www.mexc.com/",doc:["https://mxcdevelop.github.io/APIDoc/"],fees:["https://www.mexc.com/fee"],referral:"https://m.mexc.com/auth/signup?inviteCode=1FQ1G"},api:{contract:{public:{get:{ping:2,detail:2,support_currencies:2,"depth/{symbol}":2,"depth_commits/{symbol}/{limit}":2,"index_price/{symbol}":2,"fair_price/{symbol}":2,"funding_rate/{symbol}":2,"kline/{symbol}":2,"kline/index_price/{symbol}":2,"kline/fair_price/{symbol}":2,"deals/{symbol}":2,ticker:2,risk_reverse:2,"risk_reverse/history":2,"funding_rate/history":2}},private:{get:{"account/assets":2,"account/asset/{currency}":2,"account/transfer_record":2,"position/list/history_positions":2,"position/open_positions":2,"position/funding_records":2,"position/position_mode":2,"order/list/open_orders/{symbol}":2,"order/list/history_orders":2,"order/external/{symbol}/{external_oid}":2,"order/get/{order_id}":2,"order/batch_query":8,"order/deal_details/{order_id}":2,"order/list/order_deals":2,"planorder/list/orders":2,"stoporder/list/orders":2,"stoporder/order_details/{stop_order_id}":2,"account/risk_limit":2,"account/tiered_fee_rate":2},post:{"position/change_margin":2,"position/change_leverage":2,"position/change_position_mode":2,"order/submit":2,"order/submit_batch":40,"order/cancel":2,"order/cancel_with_external":2,"order/cancel_all":2,"account/change_risk_level":2,"planorder/place":2,"planorder/cancel":2,"planorder/cancel_all":2,"stoporder/cancel":2,"stoporder/cancel_all":2,"stoporder/change_price":2,"stoporder/change_plan_price":2}}},spot:{public:{get:{"market/symbols":1,"market/coin/list":2,"common/timestamp":1,"common/ping":1,"market/ticker":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/api_default_symbols":2}},private:{get:{"account/info":1,"order/open_orders":1,"order/list":1,"order/query":1,"order/deals":1,"order/deal_detail":1,"asset/deposit/address/list":2,"asset/deposit/list":2,"asset/address/list":2,"asset/withdraw/list":2,"asset/internal/transfer/record":10,"account/balance":10,"asset/internal/transfer/info":10,"market/api_symbols":2},post:{"order/place":1,"order/place_batch":1,"asset/withdraw":2,"asset/internal/transfer":10},delete:{"order/cancel":1,"order/cancel_by_symbol":1,"asset/withdraw":2}}}},precisionMode:y,fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}},options:{timeframes:{spot:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d","1M":"1M"},contract:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},defaultType:"spot",networks:{TRX:"TRC-20",TRC20:"TRC-20",ETH:"ERC-20",ERC20:"ERC-20",BEP20:"BEP20(BSC)"},accountsByType:{spot:"MAIN",swap:"CONTRACT"},transfer:{accountsById:{MAIN:"spot",CONTRACT:"swap"},status:{SUCCESS:"ok",FAILED:"failed",WAIT:"pending"}},fetchOrdersByState:{method:"spotPrivateGetOrderList"},cancelOrder:{method:"spotPrivateDeleteOrderCancel"}},commonCurrencies:{BEYONDPROTOCOL:"BEYOND",BIFI:"BIFIF",BYN:"BeyondFi",COFI:"COFIX",DFI:"DfiStarter",DFT:"dFuture",DRK:"DRK",EGC:"Egoras Credit",FLUX1:"FLUX",FLUX:"FLUX1",FREE:"FreeRossDAO",GMT:"GMT Token",HERO:"Step Hero",MIMO:"Mimosa",PROS:"Pros.Finance",SIN:"Sin City Token",STEPN:"GMT"},exceptions:{exact:{400:o,401:c,402:c,403:m,429:d,703:m,1e3:r,1002:l,10072:c,10073:c,10075:m,10101:u,10216:a,10232:h,3e4:h,30001:l,30002:l,30003:l,30004:u,30005:l,30010:l,30016:h,30019:l,30020:h,30021:h,33333:h},broad:{"price and quantity must be positive":l}}})}async fetchTime(e={}){const[t,s]=this.handleMarketTypeAndParams("fetchTime",void 0,e),i=this.getSupportedMapping(t,{spot:"spotPublicGetCommonTimestamp",swap:"contractPublicGetPing"}),r=await this[i](this.extend(s));return this.safeInteger(r,"data")}async fetchStatus(e={}){const t=await this.spotPublicGetCommonPing(e);return{status:200===this.safeInteger(t,"code")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){const t=await this.spotPublicGetMarketCoinList(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"full_name");let o,c,d,h,l=!1;const u={},f=this.safeValue(t,"coins",[]);let p=!1,m=!1;for(let e=0;e<f.length;e++){const t=f[e],s=this.safeString(t,"chain"),i=this.safeNetwork(s),r=this.safeValue(t,"is_deposit_enabled",!1),a=this.safeValue(t,"is_withdraw_enabled",!1),n=r&&a;l=n||l;const o=this.safeString(t,"withdraw_limit_min"),c=this.safeString(t,"withdraw_limit_max");d=void 0===d?o:d,h=void 0===h?c:h,b.stringGt(d,o)&&(d=o),b.stringLt(h,c)&&(h=c),r&&(p=!0),a&&(m=!0),u[i]={info:t,id:s,network:i,active:n,deposit:r,withdraw:a,fee:this.safeNumber(t,"fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{withdraw:{min:o,max:c}}}}const g=Object.keys(u).length;if(1===g||"NONE"in u){const e=this.safeValue2(u,"NONE",g-1);void 0!==e&&(c=e.fee,o=e.precision)}i[a]={id:r,code:a,info:t,name:n,active:l,deposit:p,withdraw:m,fee:c,precision:o,limits:{amount:{min:void 0,max:void 0},withdraw:{min:d,max:h}},networks:u}}return i}async fetchMarkets(e={}){const t=this.safeString2(this.options,"fetchMarkets","defaultType","spot"),s=this.safeString(e,"type",t),i=this.omit(e,"type"),r="spot"===s,a="swap"===s;if(!r&&!a)throw new n(this.id+" does not support '"+s+"' type, set exchange.options['defaultType'] to 'spot' or 'swap''");return r?await this.fetchSpotMarkets(i):a?await this.fetchContractMarkets(i):void 0}async fetchContractMarkets(e={}){const t=await this.contractPublicGetDetail(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseCoin"),n=this.safeString(t,"quoteCoin"),o=this.safeString(t,"settleCoin"),c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),l=this.safeString(t,"state");i.push({id:r,symbol:c+"/"+d+":"+h,base:c,quote:d,settle:h,baseId:a,quoteId:n,settleId:o,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"0"===l,contract:!0,linear:!0,inverse:!1,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.safeNumber(t,"contractSize"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"volUnit"),price:this.safeNumber(t,"priceUnit")},limits:{leverage:{min:this.safeNumber(t,"minLeverage"),max:this.safeNumber(t,"maxLeverage")},amount:{min:this.safeNumber(t,"minVol"),max:this.safeNumber(t,"maxVol")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchSpotMarkets(e={}){const t=await this.spotPublicGetMarketSymbols(e),s=this.safeValue(t,"data",[]),i=await this.spotPublicGetMarketApiDefaultSymbols(e),r=this.safeValue(i,"data",{}),a=this.safeValue(r,"symbol",[]),n=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),[r,o]=i.split("_"),c=this.safeCurrencyCode(r),d=this.safeCurrencyCode(o),h=this.safeString(t,"state");let l=!1;for(let e=0;e<a.length;e++)if(a[e]===i){"ENABLED"===h&&(l=!0);break}n.push({id:i,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:r,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:l,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate"),maker:this.safeNumber(t,"maker_fee_rate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_amount"),max:this.safeNumber(t,"max_amount")}},info:t})}return n}async fetchTickers(e,t={}){await this.loadMarkets();const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t),r=this.getSupportedMapping(s,{spot:"spotPublicGetMarketTicker",swap:"contractPublicGetTicker"}),a=await this[r](this.extend(i)),n=this.safeValue(a,"data",[]);return this.parseTickers(n,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id};let r;s.spot?r="spotPublicGetMarketTicker":s.swap&&(r="contractPublicGetTicker");const a=await this[r](this.extend(i,t));if(s.spot){const e=this.safeValue(a,"data",[]),t=this.safeValue(e,0);return this.parseTicker(t,s)}if(s.swap){const e=this.safeValue(a,"data",{});return this.parseTicker(e,s)}}parseTicker(e,t){const s=this.safeInteger2(e,"time","timestamp"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t,"_"),a=this.safeString2(e,"volume","volume24"),n=this.safeString(e,"amount24"),o=this.safeString(e,"open"),c=this.safeString2(e,"last","lastPrice"),d=this.safeString(e,"riseFallValue"),h=this.safeString(e,"riseFallRate"),l=b.stringAdd(h,"1");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString2(e,"high","high24Price"),low:this.safeString2(e,"low","lower24Price"),bid:this.safeString2(e,"bid","bid1"),bidVolume:void 0,ask:this.safeString2(e,"ask","ask1"),askVolume:void 0,vwap:void 0,open:o,close:c,last:c,previousClose:void 0,change:d,percentage:l,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};let a;i.spot?(a="spotPublicGetMarketDepth",void 0===t&&(t=100),r.depth=t):i.swap&&(a="contractPublicGetDepthSymbol",void 0!==t&&(r.limit=t));const n=await this[a](this.extend(r,s)),o=this.safeValue(n,"data",{}),c=i.spot?"price":0,d=i.spot?"quantity":1,h=this.safeInteger(o,"timestamp"),l=this.parseOrderBook(o,e,h,"bids","asks",c,d);return l.nonce=this.safeInteger(o,"version"),l}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n;void 0!==s&&(a.limit=s),r.spot?n="spotPublicGetMarketDeals":r.swap&&(n="contractPublicGetDealsSymbol");const o=await this[n](this.extend(a,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}parseTrade(e,t){let s=this.safeInteger2(e,"create_time","trade_time");s=this.safeInteger(e,"t",s);const i=this.safeString(e,"symbol"),r=(t=this.safeMarket(i,t,"_")).symbol;let a=this.safeString2(e,"price","trade_price");a=this.safeString(e,"p",a);let n=this.safeString2(e,"quantity","trade_quantity");n=this.safeString(e,"v",n);const o=this.safeString(e,"amount");let c=this.safeString2(e,"trade_type","T");"BID"===c||"1"===c?c="buy":"ASK"!==c&&"2"!==c||(c="sell");let d=this.safeString2(e,"id","trade_time");void 0===d&&(d=this.safeString(e,"t",d),void 0!==d&&(d+="-"+t.id+"-"+n));const h=this.safeString(e,"fee");let l;if(void 0!==h){const t=this.safeString(e,"fee_currency");l={cost:h,currency:this.safeCurrencyCode(t)}}const u=this.safeString(e,"order_id"),f=this.safeValue(e,"is_taker",!0)?"taker":"maker";return this.safeTrade({info:e,id:d,order:u,timestamp:s,datetime:this.iso8601(s),symbol:r,type:void 0,side:c,takerOrMaker:f,price:a,amount:n,cost:o,fee:l},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.spotPublicGetMarketSymbols(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r,void 0,"_").symbol;i[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_rate"),taker:this.safeNumber(t,"taker_fee_rate"),percentage:!0,tierBased:!1}}return i}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeValue(this.options,"timeframes",{}),o=this.safeValue(n,a.type,{}),c=this.safeString(o,t);if(void 0===c)throw new g(this.id+" fetchOHLCV() does not support "+t+" timeframe for "+a.type+" markets");const d={symbol:a.id,interval:c};let h;a.spot?(h="spotPublicGetMarketKline",void 0!==s&&(d.start_time=parseInt(s/1e3)),void 0!==i&&(d.limit=i)):a.swap&&(h="contractPublicGetKlineSymbol",void 0!==s&&(d.start=parseInt(s/1e3)));const l=await this[h](this.extend(d,r));if(a.spot){const e=this.safeValue(l,"data",[]);return this.parseOHLCVs(e,a,t,s,i)}if(a.swap){const e=this.safeValue(l,"data",{}),r=this.convertTradingViewToOHLCV(e,"time","open","high","low","close","vol");return this.parseOHLCVs(r,a,t,s,i)}}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,t.spot?3:2),this.safeNumber(e,t.spot?4:3),this.safeNumber(e,t.spot?2:4),this.safeNumber(e,5)]}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i=this.getSupportedMapping(t,{spot:"spotPrivateGetAccountInfo",margin:"spotPrivateGetAccountInfo",swap:"contractPrivateGetAccountAssets"}),r="spot"===t,a=await this[i](s),n=this.safeValue(a,"data",{}),o=this.milliseconds(),c={info:a,timestamp:o,datetime:this.iso8601(o)};if(r){const e=Object.keys(n);for(let t=0;t<e.length;t++){const s=e[t],i=this.safeCurrencyCode(s),r=this.safeValue(n,s,{}),a=this.account();a.free=this.safeString(r,"available"),a.used=this.safeString(r,"frozen"),c[i]=a}}else for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"currency"),i=this.safeCurrencyCode(s),r=this.account();r.free=this.safeString(t,"availableBalance"),r.used=this.safeString(t,"frozenBalance"),c[i]=r}return this.safeBalance(c)}safeNetwork(e){if(e.indexOf("BSC")>=0)return"BEP20";const t=e.split(" ");e=(e=t.join("")).replace("-20","20");return this.safeString({ETH:"ETH",ERC20:"ERC20","BEP20(BSC)":"BEP20",TRX:"TRC20"},e,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeCurrencyCode(void 0,t),r=this.safeString(e,"chain"),a=this.safeNetwork(r);return this.checkAddress(s),{currency:i,address:s,tag:void 0,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.spotPrivateGetAssetDepositAddressList(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"chains",[]),o=[];for(let e=0;e<n.length;e++){const t=this.parseDepositAddress(n[e],s);o.push(t)}return this.indexBy(o,"network")}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network");t=this.omit(t,"network");const i=await this.fetchDepositAddressesByNetwork(e,t),r=this.safeValue(this.options,"networks",{}),n=this.safeString(r,s,s);let o;if(void 0===n){if(o=this.safeValue(i,e),void 0===o){const t=this.safeString(r,e,e);if(o=this.safeValue(i,t),void 0===o){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(o=this.safeValue(i,t),void 0===o){const t=Object.values(i);if(o=this.safeValue(t,0),void 0===o)throw new a(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return o}if(o=this.safeValue(i,s),void 0===o)throw new a(this.id+" fetchDepositAddress() cannot find "+n+" deposit address for "+e);return o}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==s&&(r.limit=s);const n=await this.spotPrivateGetAssetDepositList(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"result_list",[]);return this.parseTransactions(c,e,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==s&&(r.limit=s);const n=await this.spotPrivateGetAssetWithdrawList(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"result_list",[]);return this.parseTransactions(c,e,t,s)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=void 0===s?"deposit":"withdrawal",r=this.parse8601(this.safeString(e,"create_time")),a=this.parse8601(this.safeString(e,"update_time"));let n,o=this.safeString(e,"currency");if(void 0!==o&&o.indexOf("-")>=0){const e=o.split("-");o=this.safeString(e,0);const t=this.safeString(e,1);n=this.safeNetwork(t)}const c=this.safeCurrencyCode(o,t),d=this.parseTransactionStatus(this.safeString(e,"state"));let h=this.safeString(e,"amount");const l=this.safeString(e,"address"),u=this.safeString(e,"tx_id");let f;const p=this.safeString(e,"fee");return void 0!==p&&(f={cost:this.parseNumber(p),currency:c}),"withdrawal"===i&&(h=b.stringSub(h,p)),{info:e,id:s,txid:u,timestamp:r,datetime:this.iso8601(r),network:n,address:l,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:this.parseNumber(h),currency:c,status:d,updated:a,fee:f}}parseTransactionStatus(e){return this.safeString({WAIT:"pending",WAIT_PACKAGING:"pending",SUCCESS:"ok"},e,e)}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.fetchPositions(this.extend(i,t)),a=this.safeValue(r,0);return this.parsePosition(a,s)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.contractPrivateGetPositionOpenPositions(t),i=this.safeValue(s,"data",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,i=this.safeString(e,"holdVol"),r=this.safeNumber(e,"openAvgPrice"),a=this.safeString(e,"im"),n="1"===this.safeString(e,"positionType")?"long":"short",o="1"===this.safeString(e,"margin_mode")?"isolated":"cross",c=this.safeString(e,"leverage"),d=this.safeNumber(e,"liquidatePrice"),h=this.safeNumber(e,"updateTime");return{info:e,symbol:s,contracts:this.parseNumber(i),contractSize:void 0,entryPrice:r,collateral:void 0,side:n,unrealizedProfit:void 0,leverage:this.parseNumber(c),percentage:void 0,marginMode:o,notional:void 0,markPrice:void 0,liquidationPrice:d,initialMargin:this.parseNumber(a),initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,marginRatio:void 0,timestamp:h,datetime:this.iso8601(h)}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),[o,c]=this.handleMarketTypeAndParams("createOrder",n,a);return"spot"===o?await this.createSpotOrder(e,t,s,i,r,c):"swap"===o?await this.createSwapOrder(e,t,s,i,r,c):void 0}async createSpotOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o;"buy"===s?o="BID":"sell"===s&&(o="ASK");let c=t.toUpperCase();const d="MARKET"===c;if(d)throw new l(this.id+" createOrder () does not support market orders, only limit orders are allowed");"LIMIT"===c&&(c="LIMIT_ORDER");const h=this.isPostOnly(d,"POST_ONLY"===c,a),u=this.safeStringUpper(a,"timeInForce");if(h?c="POST_ONLY":"IOC"===u&&(c="IMMEDIATE_OR_CANCEL"),"FOK"===u)throw new l(this.id+" createOrder () does not support timeInForce FOK, only IOC, PO, and GTC are allowed");if("POST_ONLY"!==c&&"IMMEDIATE_OR_CANCEL"!==c&&"LIMIT_ORDER"!==c)throw new l(this.id+" createOrder () does not support "+t+" order type, only LIMIT, LIMIT_ORDER, POST_ONLY or IMMEDIATE_OR_CANCEL are allowed");const f={symbol:n.id,price:this.priceToPrecision(e,r),quantity:this.amountToPrecision(e,i),trade_type:o,order_type:c},p=this.safeString2(a,"clientOrderId","client_order_id");void 0!==p&&(f.client_order_id=p),a=this.omit(a,["type","clientOrderId","client_order_id","postOnly","timeInForce"]);const m=await this.spotPrivatePostOrderPlace(this.extend(f,a));return this.parseOrder(m,n)}async createSwapOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeInteger(a,"openType");if(void 0===o)throw new f(this.id+" createSwapOrder () requires an integer openType parameter, 1 for isolated margin, 2 for cross margin");if("limit"!==t&&"market"!==t&&1!==t&&2!==t&&3!==t&&4!==t&&5!==t&&6!==t)throw new l(this.id+" createSwapOrder () order type must either limit, market, or 1 for limit orders, 2 for post-only orders, 3 for IOC orders, 4 for FOK orders, 5 for market orders or 6 to convert market price to current price");const c="market"===t||5===t;this.isPostOnly(c,2===t,a)?t=2:"limit"===t?t=1:"market"===t&&(t=5);const d=this.safeStringUpper(a,"timeInForce");if("IOC"===d?t=3:"FOK"===d&&(t=4),1!==s&&2!==s&&3!==s&&4!==s)throw new l(this.id+" createSwapOrder () order side must be 1 open long, 2 close short, 3 open short or 4 close long");const h={symbol:n.id,vol:parseFloat(this.amountToPrecision(e,i)),side:s,type:t,openType:o};let u="contractPrivatePostOrderSubmit";const p=this.safeNumber2(a,"triggerPrice","stopPrice");if(a=this.omit(a,["stopPrice","triggerPrice","timeInForce","postOnly"]),void 0!==p&&(u="contractPrivatePostPlanorderPlace",h.triggerPrice=this.priceToPrecision(e,p),h.triggerType=this.safeInteger(a,"triggerType",1),h.executeCycle=this.safeInteger(a,"executeCycle",1),h.trend=this.safeInteger(a,"trend",1),h.orderType=this.safeInteger(a,"orderType",t)),5!==t&&6!==t&&"market"!==t&&(h.price=parseFloat(this.priceToPrecision(e,r))),1===o){if(void 0===this.safeInteger(a,"leverage"))throw new f(this.id+" createSwapOrder () requires a leverage parameter for isolated margin orders")}const m=this.safeString2(a,"clientOrderId","externalOid");void 0!==m&&(h.externalOid=m),a=this.omit(a,["clientOrderId","externalOid"]);const g=await this[u](this.extend(h,a));return this.parseOrder(g,n)}async cancelOrder(e,t,s={}){if(void 0===t)throw new f(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeValue(this.options,"cancelOrder",{}),a=this.safeString(r,"method","spotPrivateDeleteOrderCancel");let n=this.safeString(s,"method",a);const o=this.safeValue(s,"stop");let c={};if("spot"===i.type){n="spotPrivateDeleteOrderCancel";const t=this.safeString2(s,"clientOrderId","client_order_ids");void 0!==t?(s=this.omit(s,["clientOrderId","client_order_ids"]),c.client_order_ids=t):c.order_ids=e}else if(o)if(n="contractPrivatePostPlanorderCancel",c=[],Array.isArray(e))for(let t=0;t<e.length;t++)c.push({symbol:i.id,orderId:e[t]});else"string"==typeof e&&c.push({symbol:i.id,orderId:e});else"swap"===i.type&&(n="contractPrivatePostOrderCancel",c=[e]);const d=await this[n](c);let h=this.safeValue(d,"data",[]);return o&&(h=d),this.parseOrder(h,i)}parseOrderStatus(e,t){let s={};return s="spot"===t.type?{NEW:"open",FILLED:"closed",PARTIALLY_FILLED:"open",CANCELED:"canceled",PARTIALLY_CANCELED:"canceled"}:"swap"===t.type?{2:"open",3:"closed",4:"canceled"}:{1:"open",2:"canceled",3:"closed"},this.safeString(s,e,e)}parseOrder(e,t){let s,i=this.safeString2(e,"data","id");if(void 0===i){const t=Object.keys(e);i=this.safeString(t,0);"success"===this.safeString(e,i)&&(s="canceled")}const r=this.safeString(e,"state"),a=this.safeInteger2(e,"create_time","createTime"),n=this.safeString(e,"price"),o=this.safeString2(e,"quantity","vol"),c=this.safeString(e,"remain_quantity"),d=this.safeString2(e,"deal_quantity","dealVol"),h=this.safeString(e,"deal_amount"),l=this.safeString(e,"symbol"),u=this.safeSymbol(l,t,"_"),f=this.safeInteger(e,"side");let p;const m=this.safeString(e,"type");"BID"===m?p="buy":"ASK"===m&&(p="sell"),1===f?p="open long":2===p?p="close short":3===p?p="open short":4===p&&(p="close long"),s=this.parseOrderStatus(r,t);const g=this.safeString2(e,"client_order_id","orderId"),y=this.safeString2(e,"orderType","order_type");let b,v,w;return void 0!==y&&(w=!1,"1"===y?(b="limit",v="GTC"):"2"===y?(b="limit",v="PO",w=!0):"3"===y?(b="limit",v="IOC"):"4"===y?(b="limit",v="FOK"):"5"===y||"6"===y?(b="market",v="GTC"):"LIMIT_ORDER"===y?(b="limit",v="GTC"):"POST_ONLY"===y?(b="limit",v="PO",w=!0):"IMMEDIATE_OR_CANCEL"===y&&(b="limit",v="IOC")),this.safeOrder({id:i,clientOrderId:g,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:s,symbol:u,type:b,timeInForce:v,postOnly:w,side:p,price:n,stopPrice:this.safeString(e,"triggerPrice"),average:this.safeString(e,"dealAvgPrice"),amount:o,cost:h,filled:d,remaining:c,fee:void 0,trades:void 0,info:e},t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new f(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id},[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",r,i),c=this.getSupportedMapping(n,{spot:"spotPrivateGetOrderOpenOrders",swap:"contractPrivateGetOrderListOpenOrdersSymbol"});if(this.safeValue(i,"stop"))return await this.fetchOrdersByState("1",e,t,s,i);const d=await this[c](this.extend(a,o)),h=this.safeValue(d,"data",[]);return this.parseOrders(h,r,t,s)}async fetchOrder(e,t,s={}){if(void 0===t)throw new f(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),[r,a]=this.handleMarketTypeAndParams("fetchOrder",i,s),n={order_ids:e},o=this.getSupportedMapping(r,{spot:"spotPrivateGetOrderQuery",swap:"contractPrivateGetOrderBatchQuery"}),c=await this[o](this.extend(n,a)),d=this.safeValue(c,"data",[]),h=this.safeValue(d,0);if(void 0===h)throw new p(this.id+" fetchOrder() could not find the order id "+e);return this.parseOrder(h,i)}async fetchOrdersByState(e,t,s,i,r={}){if(void 0===t)throw new f(this.id+" fetchOrdersByState() requires a symbol argument");await this.loadMarkets();const a=this.market(t),n={symbol:a.id,states:e},o=this.safeValue(r,"stop");void 0!==i&&(n[o?"page_size":"limit"]=i),void 0!==s&&(n.start_time=s);const c=this.safeValue(this.options,"fetchOrdersByState",{}),d=this.safeString(c,"method","spotPrivateGetOrderList");let h=this.safeString(r,"method",d);h=this.getSupportedMapping(a.type,{spot:"spotPrivateGetOrderList",swap:"contractPrivateGetOrderListHistoryOrders"}),o&&(h="contractPrivateGetPlanorderListOrders");const l=this.omit(r,["method","stop"]),u=await this[h](this.extend(n,l)),p=this.safeValue(u,"data",[]);return this.parseOrders(p,a,s,i)}async fetchCanceledOrders(e,t,s,i={}){if(void 0===e)throw new f(this.id+" fetchCanceledOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=this.safeValue(i,"stop");let n="CANCELED";return"swap"===r.type?n="4":a&&(n="2"),await this.fetchOrdersByState(n,e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new f(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e);let a="FILLED";return(this.safeValue(i,"stop")||"swap"===r.type)&&(a="3"),await this.fetchOrdersByState(a,e,t,s,i)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id};let r=this.getSupportedMapping(s.type,{spot:"spotPrivateDeleteOrderCancelBySymbol",swap:"contractPrivatePostOrderCancelAll"});this.safeValue(t,"stop")&&(r="contractPrivatePostPlanorderCancelAll");const a=this.omit(t,["method","stop"]);return await this[r](this.extend(i,a))}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new f(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.start_time=t),void 0!==s&&(a.limit=s);const n=await this.spotPrivateGetOrderDeals(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e},o=await this.spotPrivateGetOrderDealDetail(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,a,s,i)}async modifyMarginHelper(e,t,s,i={}){const r=this.safeInteger(i,"positionId");if(void 0===r)throw new f(this.id+" modifyMarginHelper() requires a positionId parameter");await this.loadMarkets();const a=this.market(e),n={positionId:r,amount:t=this.amountToPrecision(e,t),type:s},o=await this.contractPrivatePostPositionChangeMargin(this.extend(n,i)),c="ADD"===s?"add":"reduce";return this.extend(this.parseMarginModification(o,a),{amount:this.parseNumber(t),type:c})}parseMarginModification(e,t){const s=!0===this.safeValue(e,"success")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:void 0,symbol:this.safeSymbol(void 0,t),status:s}}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"SUB",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"ADD",s)}async setLeverage(e,t,s={}){await this.loadMarkets();const i={leverage:e},r=this.safeInteger(s,"positionId");if(void 0===r){const e=this.safeNumber(s,"openType"),r=this.safeNumber(s,"positionType"),a=void 0!==t?this.market(t):void 0;if(void 0===e||void 0===r||void 0===a)throw new f(this.id+" setLeverage() requires a positionId parameter or a symbol argument with openType and positionType parameters, use openType 1 or 2 for isolated or cross margin respectively, use positionType 1 or 2 for long or short positions");i.openType=e,i.symbol=a.id,i.positionType=r}else i.positionId=r;return await this.contractPrivatePostPositionChangeLeverage(this.extend(i,s))}async fetchTransfer(e,t,s={}){const i={transact_id:e},r=await this.spotPrivateGetAssetInternalTransferInfo(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseTransfer(a)}async fetchTransfers(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==s){if(s>50)throw new n("This exchange supports a maximum limit of 50");r["page-size"]=s}const o=await this.spotPrivateGetAssetInternalTransferRecord(this.extend(r,i)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"result_list",[]);return this.parseTransfers(d,a,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d={currency:a.id,amount:t,from:o,to:c},h=await this.spotPrivatePostAssetInternalTransfer(this.extend(d,r)),l=this.safeValue(h,"data",{});return this.parseTransfer(l,a)}parseTransfer(e,t){const s=this.safeValue(this.options,"transfer",{}),i=this.safeValue(s,"status",{}),r=this.safeString(e,"currency"),a=this.safeString(e,"transact_id"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),c=this.safeValue(s,"accountsById",{}),d=this.safeString(c,n),h=this.safeString(c,o),l=this.safeString(e,"transact_state");return{info:e,id:a,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"amount"),fromAccount:d,toAccount:h,status:this.safeString(i,l)}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r);const a=this.safeValue(this.options,"networks",{});let n=this.safeString2(r,"network","chain");n=this.safeString(a,n,n),this.checkAddress(s),await this.loadMarkets();void 0!==i&&(s+=":"+i);const o={currency:this.currency(e).id,address:s,amount:t};void 0!==n&&(o.chain=n,r=this.omit(r,["network","chain"]));const c=await this.spotPrivatePostAssetWithdraw(this.extend(o,r)),d=this.safeValue(c,"data",{});return{info:d,id:this.safeString(d,"withdrawId")}}sign(e,t="public",s="GET",i={},r,a){const[n,o]=t;let c=this.urls.api[n][o]+"/"+this.implodeParams(e,i);if(i=this.omit(i,this.extractParams(e)),"public"===o)Object.keys(i).length&&(c+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.milliseconds().toString();let t="";r={ApiKey:this.apiKey,"Request-Time":e,"Content-Type":"application/json"},"POST"===s?(t=this.json(i),a=t):(i=this.keysort(i),Object.keys(i).length&&(t+=this.urlencode(i),c+="?"+t)),t=this.apiKey+e+t;const n=this.hmac(this.encode(t),this.encode(this.secret),"sha256");r.Signature=n}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0===o)return;if(!0===this.safeValue(o,"success",!1))return;const h=this.safeString(o,"code");if("200"!==h&&"0"!==h){const e=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new n(e)}}async fetchFundingHistory(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.page_size=s);const n=await this.contractPrivateGetPositionFundingRecords(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"resultList",[]),d=[];for(let t=0;t<c.length;t++){const s=c[t],i=this.safeInteger(s,"settleTime");d.push({info:s,symbol:e,code:void 0,timestamp:i,datetime:this.iso8601(i),id:this.safeNumber(s,"id"),amount:this.safeNumber(s,"funding")})}return d}parseFundingRate(e,t){const s=this.safeNumber(e,"fundingRate"),i=this.safeInteger(e,"nextSettleTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeInteger(e,"timestamp");return{info:e,symbol:a,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:n,datetime:this.iso8601(n),fundingRate:void 0,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:s,nextFundingTimestamp:i,nextFundingDatetime:this.iso8601(i),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.contractPublicGetFundingRateSymbol(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseFundingRate(a,s)}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new f(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.page_size=s);const n=await this.contractPublicGetFundingRateHistory(this.extend(a,i)),o=this.safeValue(n,"data"),c=this.safeValue(o,"resultList",[]),d=[];for(let e=0;e<c.length;e++){const t=c[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeInteger(t,"settleTime");d.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const h=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,s)}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.contractPublicGetDetail(t),i=this.safeValue(s,"data");return this.parseLeverageTiers(i,e,"symbol")}parseMarketLeverageTiers(e,t){let s=this.safeString(e,"maintenanceMarginRate"),i=this.safeString(e,"initialMarginRate");const r=this.safeString(e,"maxVol"),a=this.safeString(e,"riskIncrVol"),n=this.safeString(e,"riskIncrMmr"),o=this.safeString(e,"riskIncrImr");let c="0";const d=[],h=this.safeString(e,"quoteCoin");for(;b.stringLt(c,r);){const t=b.stringAdd(c,a);d.push({tier:this.parseNumber(b.stringDiv(t,a)),currency:this.safeCurrencyCode(h),minNotional:this.parseNumber(c),maxNotional:this.parseNumber(t),maintenanceMarginRate:this.parseNumber(s),maxLeverage:this.parseNumber(b.stringDiv("1",i)),info:e}),i=b.stringAdd(i,o),s=b.stringAdd(s,n),c=t}return d}async setPositionMode(e,t,s={}){const i={positionMode:e?1:2};return await this.contractPrivatePostPositionChangePositionMode(this.extend(i,s))}async fetchPositionMode(e,t={}){const s=await this.contractPrivateGetPositionPositionMode(t);return{info:s,hedged:1===this.safeInteger(s,"data")}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],230:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadRequest:r,BadSymbol:a,InvalidOrder:n,InvalidAddress:o,ExchangeError:c,ArgumentsRequired:d,NotSupported:h,InsufficientFunds:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number"),f=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"mexc3",name:"MEXC Global",countries:["SC"],rateLimit:50,version:"v3",has:{CORS:void 0,spot:void 0,margin:void 0,swap:void 0,future:void 0,option:void 0,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:void 0,createMarketOrder:void 0,createOrder:!0,deposit:void 0,editOrder:void 0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:void 0,fetchIndexOHLCV:!0,fetchL2OrderBook:!0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!0,fetchPositions:!0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:void 0,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchTransfer:!0,fetchTransfers:!0,fetchWithdrawal:void 0,fetchWithdrawals:!0,privateAPI:!0,publicAPI:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:void 0,setPositionMode:!0,signIn:void 0,transfer:void 0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg",api:{spot:{public:"https://api.mexc.com",private:"https://api.mexc.com"},spot2:{public:"https://www.mexc.com/open/api/v2",private:"https://www.mexc.com/open/api/v2"},contract:{public:"https://contract.mexc.com/api/v1/contract",private:"https://contract.mexc.com/api/v1/private"}},www:"https://www.mexc.com/",doc:["https://mxcdevelop.github.io/apidocs/spot_v3_en/","https://mxcdevelop.github.io/APIDoc/"],fees:["https://www.mexc.com/fee"],referral:"https://m.mexc.com/auth/signup?inviteCode=1FQ1G"},api:{spot:{public:{get:{ping:1,time:1,exchangeInfo:1,depth:1,trades:1,historicalTrades:1,aggTrades:1,klines:1,avgPrice:1,"ticker/24hr":1,"ticker/price":1,"ticker/bookTicker":1,"etf/info":1}},private:{get:{order:1,openOrders:1,allOrders:1,account:1,myTrades:1,"sub-account/list":1,"sub-account/apiKey":1},post:{order:1,"order/test":1,"sub-account/virtualSubAccount":1,"sub-account/apiKey":1},delete:{order:1,openOrders:1,"sub-account/apiKey":1}}},contract:{public:{get:{ping:2,detail:2,support_currencies:2,"depth/{symbol}":2,"depth_commits/{symbol}/{limit}":2,"index_price/{symbol}":2,"fair_price/{symbol}":2,"funding_rate/{symbol}":2,"kline/{symbol}":2,"kline/index_price/{symbol}":2,"kline/fair_price/{symbol}":2,"deals/{symbol}":2,ticker:2,risk_reverse:2,"risk_reverse/history":2,"funding_rate/history":2}},private:{get:{"account/assets":2,"account/asset/{currency}":2,"account/transfer_record":2,"position/list/history_positions":2,"position/open_positions":2,"position/funding_records":2,"position/position_mode":2,"order/list/open_orders/{symbol}":2,"order/list/history_orders":2,"order/external/{symbol}/{external_oid}":2,"order/get/{order_id}":2,"order/batch_query":8,"order/deal_details/{order_id}":2,"order/list/order_deals":2,"planorder/list/orders":2,"stoporder/list/orders":2,"stoporder/order_details/{stop_order_id}":2,"account/risk_limit":2,"account/tiered_fee_rate":2},post:{"position/change_margin":2,"position/change_leverage":2,"position/change_position_mode":2,"order/submit":2,"order/submit_batch":40,"order/cancel":2,"order/cancel_with_external":2,"order/cancel_all":2,"account/change_risk_level":2,"planorder/place":2,"planorder/cancel":2,"planorder/cancel_all":2,"stoporder/cancel":2,"stoporder/cancel_all":2,"stoporder/change_price":2,"stoporder/change_plan_price":2}}},spot2:{public:{get:{"market/symbols":1,"market/coin/list":2,"common/timestamp":1,"common/ping":1,"market/ticker":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/api_default_symbols":2}},private:{get:{"account/info":1,"order/open_orders":1,"order/list":1,"order/query":1,"order/deals":1,"order/deal_detail":1,"asset/deposit/address/list":2,"asset/deposit/list":2,"asset/address/list":2,"asset/withdraw/list":2,"asset/internal/transfer/record":10,"account/balance":10,"asset/internal/transfer/info":10,"market/api_symbols":2},post:{"order/place":1,"order/place_batch":1,"asset/withdraw":2,"asset/internal/transfer":10},delete:{"order/cancel":1,"order/cancel_by_symbol":1,"asset/withdraw":2}}}},precisionMode:u,timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.002}},options:{createMarketBuyOrderRequiresPrice:!0,unavailableContracts:{"BTC/USDT:USDT":!0,"LTC/USDT:USDT":!0,"ETH/USDT:USDT":!0},fetchMarkets:{types:{spot:!0,future:{linear:!1,inverse:!1},swap:{linear:!0,inverse:!1}}},timeframes:{spot:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},swap:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},defaultType:"spot",networks:{TRX:"TRC-20",TRC20:"TRC-20",ETH:"ERC-20",ERC20:"ERC-20",BEP20:"BEP20(BSC)",BSC:"BEP20(BSC)"},networkAliases:{"BSC(BEP20)":"BSC"},recvWindow:5e3,maxTimeTillEnd:7775999999},commonCurrencies:{BEYONDPROTOCOL:"BEYOND",BIFI:"BIFIF",BYN:"BeyondFi",COFI:"COFIX",DFI:"DfiStarter",DFT:"dFuture",DRK:"DRK",EGC:"Egoras Credit",FLUX1:"FLUX",FLUX:"FLUX1",FREE:"FreeRossDAO",HERO:"Step Hero",MIMO:"Mimosa",PROS:"Pros.Finance",SIN:"Sin City Token"},exceptions:{exact:{"-1128":r,"-2011":r,"-1121":a,2009:n,2011:r,30004:l,1002:n,30019:r,30005:n,2003:n,2005:l,600:r},broad:{"Order quantity error, please try to modify.":r,"Combination of optional parameters invalid":r,"api market order is disabled":r,"Contract not allow place order!":n,Oversold:n,"Insufficient position":l,"Insufficient balance!":l,"Bid price is great than max allow price":n,"Invalid symbol.":a,"Param error!":r}}})}async fetchStatus(e={}){const[t,s]=this.handleMarketTypeAndParams("fetchStatus",void 0,e);let i,r,a;return"spot"===t?(i=await this.spotPublicGetPing(s),r=Object.keys(i).length?this.json(i):"ok"):"swap"===t&&(i=await this.contractPublicGetPing(s),r=this.safeValue(i,"success")?"ok":this.json(i),a=this.safeInteger(i,"data")),{status:r,updated:a,url:void 0,eta:void 0,info:i}}async fetchTime(e={}){const[t,s]=this.handleMarketTypeAndParams("fetchTime",void 0,e);let i;return"spot"===t?(i=await this.spotPublicGetTime(s),this.safeInteger(i,"serverTime")):"swap"===t?(i=await this.contractPublicGetPing(s),this.safeInteger(i,"data")):void 0}async fetchCurrencies(e={}){const t=await this.spot2PublicGetMarketCoinList(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"full_name");let o,c,d,h,l=!1;const u={},p=this.safeValue(t,"coins",[]);let m=!1,g=!1;for(let e=0;e<p.length;e++){const t=p[e],s=this.safeString(t,"chain"),i=this.safeNetwork(s),r=this.safeValue(t,"is_deposit_enabled",!1),a=this.safeValue(t,"is_withdraw_enabled",!1),n=r&&a;l=n||l;const o=this.safeString(t,"withdraw_limit_min"),c=this.safeString(t,"withdraw_limit_max");d=void 0===d?o:d,h=void 0===h?c:h,f.stringGt(d,o)&&(d=o),f.stringLt(h,c)&&(h=c),r&&(m=!0),a&&(g=!0),u[i]={info:t,id:s,network:i,active:n,deposit:r,withdraw:a,fee:this.safeNumber(t,"fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{withdraw:{min:o,max:c}}}}const y=Object.keys(u).length;if(1===y||"NONE"in u){const e=this.safeValue2(u,"NONE",y-1);void 0!==e&&(c=e.fee,o=e.precision)}i[a]={id:r,code:a,info:t,name:n,active:l,deposit:m,withdraw:g,fee:c,precision:o,limits:{amount:{min:void 0,max:void 0},withdraw:{min:d,max:h}},networks:u}}return i}safeNetwork(e){if(e.indexOf("BSC")>=0)return"BEP20";const t=e.split(" ");e=(e=t.join("")).replace("-20","20");return this.safeString({ETH:"ETH",ERC20:"ERC20","BEP20(BSC)":"BEP20",TRX:"TRC20"},e,e)}async fetchMarkets(e={}){const t=await this.fetchSpotMarkets(e),s=await this.fetchSwapMarkets(e);return this.arrayConcat(t,s)}async fetchSpotMarkets(e={}){const t=await this.spotPublicGetExchangeInfo(e),s=this.safeValue(t,"symbols",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(t,"status"),h=this.safeNumber(t,"makerCommission"),l=this.safeNumber(t,"takerCommission"),u=this.safeNumber(t,"maxQuoteAmount");i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ENABLED"===d,contract:!1,linear:void 0,inverse:void 0,taker:l,maker:h,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quoteAssetPrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:u}},info:t})}return i}async fetchSwapMarkets(e={}){const t=await this.contractPublicGetDetail(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseCoin"),n=this.safeString(t,"quoteCoin"),o=this.safeString(t,"settleCoin"),c=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),l=this.safeString(t,"state");i.push({id:r,symbol:c+"/"+d+":"+h,base:c,quote:d,settle:h,baseId:a,quoteId:n,settleId:o,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"0"===l,contract:!0,linear:!0,inverse:!1,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.safeNumber(t,"contractSize"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"volUnit"),price:this.safeNumber(t,"priceUnit")},limits:{leverage:{min:this.safeNumber(t,"minLeverage"),max:this.safeNumber(t,"maxLeverage")},amount:{min:this.safeNumber(t,"minVol"),max:this.safeNumber(t,"maxVol")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};let a;if(void 0!==t&&(r.limit=t),i.spot){const t=await this.spotPublicGetDepth(this.extend(r,s));a=this.parseOrderBook(t,e),a.nonce=this.safeInteger(t,"lastUpdateId")}else if(i.swap){const t=await this.contractPublicGetDepthSymbol(this.extend(r,s)),i=this.safeValue(t,"data"),n=this.safeInteger(i,"timestamp");a=this.parseOrderBook(i,e,n),a.nonce=this.safeInteger(i,"version")}return a}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n;if(void 0!==s&&(a.limit=s),r.spot){let e=this.safeString(this.options,"fetchTradesMethod","spotPublicGetAggTrades");e=this.safeString(i,"method",e),n=await this[e](this.extend(a,i))}else if(r.swap){const e=await this.contractPublicGetDealsSymbol(this.extend(a,i));n=this.safeValue(e,"data")}return this.parseTrades(n,r,t,s)}parseTrade(e,t){let s,i,r,a,n;const o=void 0;let c,d,h,l,u;if("v"in e)i=this.safeInteger(e,"t"),a=(t=this.safeMarket(void 0,t)).symbol,h=this.safeString(e,"p"),l=this.safeString(e,"v"),c=this.parseOrderSide(this.safeString(e,"T")),d="taker";else{const o=this.safeString(e,"symbol");if(a=(t=this.safeMarket(o,t)).symbol,s=this.safeString2(e,"id","a"),h=this.safeString2(e,"price","p"),r=this.safeString(e,"orderId"),"positionMode"in e)i=this.safeInteger(e,"timestamp"),l=this.safeString(e,"vol"),c=this.parseOrderSide(this.safeString(e,"side")),n={cost:this.safeNumber(e,"fee"),currency:this.safeCurrencyCode(this.safeString(e,"feeCurrency"))},d=this.safeValue(e,"taker")?"taker":"maker";else{i=this.safeInteger2(e,"time","T"),l=this.safeString2(e,"qty","q"),u=this.safeString(e,"quoteQty");const t=this.safeValue(e,"isBuyer"),s=this.safeValue(e,"isMaker"),r=this.safeString2(e,"isBuyerMaker","m");void 0!==s&&(d=s?"maker":"taker"),void 0!==t&&(c=t?"buy":"sell"),void 0!==r&&(c=r?"sell":"buy",d="taker");const a=this.safeString(e,"commissionAsset");void 0!==a&&(n={cost:this.safeNumber(e,"commission"),currency:this.safeCurrencyCode(a)})}}return void 0===s&&(s=this.syntheticTradeId(t,i,c,l,h,o,d)),this.safeTrade({id:s,order:r,timestamp:i,datetime:this.iso8601(i),symbol:a,type:o,side:c,takerOrMaker:d,price:h,amount:l,cost:u,fee:n,info:e},t)}syntheticTradeId(e,t,s,i,r,a,n){let o="";return void 0!==t&&(o=this.numberToString(t)+"-"+this.safeString(e,"id","_"),void 0!==s&&(o+="-"+s),void 0!==i&&(o+="-"+this.numberToString(i)),void 0!==r&&(o+="-"+this.numberToString(r)),void 0!==n&&(o+="-"+n),void 0!==a&&(o+="-"+a)),o}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeValue(this.options,"timeframes",{}),o=this.safeValue(n,a.type,{}),c=this.safeString(o,t),d={symbol:a.id,interval:c};let h;if(a.spot){void 0!==s&&(d.startTime=s),void 0!==i&&(d.limit=i);h=await this.spotPublicGetKlines(this.extend(d,r))}else if(a.swap){void 0!==s&&(d.start=parseInt(s/1e3));const e=this.safeString(r,"price","default");r=this.omit(r,"price");const t=this.getSupportedMapping(e,{default:"contractPublicGetKlineSymbol",index:"contractPublicGetKlineIndexPriceSymbol",mark:"contractPublicGetKlineFairPriceSymbol"}),i=await this[t](this.extend(d,r)),a=this.safeValue(i,"data");h=this.convertTradingViewToOHLCV(a,"time","open","high","low","close","vol")}return this.parseOHLCVs(h,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTickers(e,t={}){await this.loadMarkets();const s={};let i,r=!1;if(void 0!==e){r=1===e.length;const t=this.safeString(e,0);i=this.market(t)}const[a,n]=this.handleMarketTypeAndParams("fetchTickers",i,t);let o;if(r&&(s.symbol=i.id),"spot"===a)o=await this.spotPublicGetTicker24hr(this.extend(s,n));else if("swap"===a){const e=await this.contractPublicGetTicker(this.extend(s,n));o=this.safeValue(e,"data",[])}return r&&(o=[o]),this.parseTickers(o,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),[i,r]=this.handleMarketTypeAndParams("fetchTicker",s,t);let a;const n={symbol:s.id};if("spot"===i)a=await this.spotPublicGetTicker24hr(this.extend(n,r));else if("swap"===i){const e=await this.contractPublicGetTicker(this.extend(n,r));a=this.safeValue(e,"data",{})}return this.parseTicker(a,e)}parseTicker(e,t){const s=this.safeString(e,"symbol");let i,r,a,n,o,c,d,h,l,u,p,m,g;t=this.safeMarket(s,t);return this.safeValue(t,"swap")||"timestamp"in e?(i=this.safeInteger(e,"timestamp"),r=this.safeNumber(e,"bid1"),a=this.safeNumber(e,"ask1"),c=this.safeString(e,"volume24"),d=this.safeString(e,"amount24"),l=this.safeNumber(e,"high24Price"),u=this.safeNumber(e,"lower24Price"),m=this.safeString(e,"riseFallValue"),p=this.safeString(e,"riseFallRate"),p=this.parseNumber(f.stringMul(p,"100"))):(i=this.safeInteger(e,"closeTime"),r=this.safeNumber(e,"bidPrice"),a=this.safeNumber(e,"askPrice"),n=this.safeNumber(e,"bidQty"),o=this.safeNumber(e,"askQty"),0===n&&(n=void 0),0===o&&(o=void 0),c=this.safeString(e,"volume"),d=this.safeString(e,"quoteVolume"),h=this.safeString(e,"openPrice"),l=this.safeNumber(e,"highPrice"),u=this.safeNumber(e,"lowPrice"),g=this.safeString(e,"prevClosePrice"),m=this.safeString(e,"priceChange"),p=this.safeString(e,"priceChangePercent"),p=this.parseNumber(f.stringMul(p,"100"))),this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),open:h,high:l,low:u,close:this.safeString(e,"lastPrice"),bid:r,bidVolume:n,ask:a,askVolume:o,vwap:void 0,previousClose:g,change:m,percentage:p,average:void 0,baseVolume:c,quoteVolume:d,info:e},t)}async fetchBidsAsks(e,t={}){let s;await this.loadMarkets();let i=!1;if(void 0!==e){i=1===e.length,s=this.market(e[0])}const[r,a]=this.handleMarketTypeAndParams("fetchBidsAsks",s,t);let n;if("spot"===r)n=await this.spotPublicGetTickerBookTicker(a);else if("swap"===r)throw new h(this.id+" fetchBidsAsks() is not available for "+r+" markets");return i&&(n=[n]),this.parseTickers(n,e)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);return n.spot?await this.createSpotOrder(n,t,s,i,r,a):n.swap?await this.createSwapOrder(n,t,s,i,r,a):void 0}async createSpotOrder(e,t,s,i,r,a={}){const o=e.symbol,c="buy"===s?"BUY":"SELL",d={symbol:e.id,side:c,type:t.toUpperCase()};if("BUY"===c&&"market"===t){const e=this.safeNumber(a,"quoteOrderQty");if(void 0!==e)i=e;else if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new n(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");i*=r}d.quoteOrderQty=i}else d.quantity=this.amountToPrecision(o,i);void 0!==r&&(d.price=this.priceToPrecision(o,r));const h=this.safeString(a,"clientOrderId");void 0!==h&&(d.newClientOrderId=h,a=this.omit(a,["type","clientOrderId"]));const l=await this.spotPrivatePostOrder(this.extend(d,a));return this.extend(this.parseOrder(l,e),{side:s,type:t,price:r,amount:i})}async createSwapOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=e.symbol,c=this.safeValue(this.options,"unavailableContracts",{});if(this.safeValue(c,o,!1))throw new h(this.id+" createSwapOrder() does not support yet this symbol:"+o);let l;const u=this.safeStringLower(a,"margin");if(void 0!==u)if("cross"===u)l=2;else{if("isolated"!==u)throw new d(this.id+' createSwapOrder() margin parameter should be either "cross" or "isolated"');l=1}else l=this.safeInteger(a,"openType",2);if("limit"!==t&&"market"!==t&&1!==t&&2!==t&&3!==t&&4!==t&&5!==t&&6!==t)throw new n(this.id+" createSwapOrder() order type must either limit, market, or 1 for limit orders, 2 for post-only orders, 3 for IOC orders, 4 for FOK orders, 5 for market orders or 6 to convert market price to current price");if(this.safeValue(a,"postOnly",!1)?t=2:"limit"===t?t=1:"market"===t&&(t=6),1!==s&&2!==s&&3!==s&&4!==s)throw new n(this.id+" createSwapOrder() order side must be 1 open long, 2 close short, 3 open short or 4 close long");const f={symbol:e.id,vol:parseFloat(this.amountToPrecision(o,i)),side:s,type:t,openType:l};let p="contractPrivatePostOrderSubmit";const m=this.safeNumber2(a,"triggerPrice","stopPrice");if(a=this.omit(a,["stopPrice","triggerPrice"]),m&&(p="contractPrivatePostPlanorderPlace",f.triggerPrice=this.priceToPrecision(o,m),f.triggerType=this.safeInteger(a,"triggerType",1),f.executeCycle=this.safeInteger(a,"executeCycle",1),f.trend=this.safeInteger(a,"trend",1),f.orderType=this.safeInteger(a,"orderType",1)),5!==t&&6!==t&&"market"!==t&&(f.price=parseFloat(this.priceToPrecision(o,r))),1===l){if(void 0===this.safeInteger(a,"leverage"))throw new d(this.id+" createSwapOrder() requires a leverage parameter for isolated margin orders")}const g=this.safeString2(a,"clientOrderId","externalOid");void 0!==g&&(f.externalOid=g),a=this.omit(a,["clientOrderId","externalOid","postOnly"]);const y=await this[p](this.extend(f,a)),b=this.safeString(y,"data");return this.parseOrder(b,e)}async fetchOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={symbol:i.id};let a;if(i.spot){const t=this.safeString(s,"clientOrderId");void 0!==t?(s=this.omit(s,"clientOrderId"),r.origClientOrderId=t):r.orderId=e,a=await this.spotPrivateGetOrder(this.extend(r,s))}else if(i.swap){r.order_id=e;const t=await this.contractPrivateGetOrderGetOrderId(this.extend(r,s));a=this.safeValue(t,"data")}return this.parseOrder(a,i)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOrders",a,i);if("spot"===n){if(void 0===e)throw new d(this.id+" fetchOrders() requires a symbol argument for spot market");void 0!==t&&(r.startTime=t),void 0!==s&&(r.limit=s);const i=await this.spotPrivateGetAllOrders(this.extend(r,o));return this.parseOrders(i,a,t,s)}{if(void 0!==t){r.start_time=t;void 0===this.safeInteger(i,"end_time")&&(r.end_time=this.sum(t,this.options.maxTimeTillEnd))}void 0!==s&&(r.page_size=s);let e=this.safeString(this.options,"fetchOrders","contractPrivateGetOrderListHistoryOrders");e=this.safeString(o,"method",e);let n=[],c=[];if("contractPrivateGetOrderListHistoryOrders"===e){const e=await this.contractPrivateGetOrderListHistoryOrders(this.extend(r,o));n=this.safeValue(e,"data")}else{const e=await this.contractPrivateGetPlanorderListOrders(this.extend(r,o));c=this.safeValue(e,"data")}const d=this.arrayConcat(c,n);return this.parseOrders(d,a,t,s,i)}}async fetchOrdersByIds(e,t,s={}){await this.loadMarkets();const i={};let a;void 0!==t&&(a=this.market(t),i.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOrdersByIds",a,s);if("spot"===n)throw new r(this.id+" fetchOrdersByIds() is not supported for "+n);{i.order_ids=e.join(",");const t=await this.contractPrivateGetOrderBatchQuery(this.extend(i,o)),s=this.safeValue(t,"data");return this.parseOrders(s,a)}}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",a,i);if("spot"===n){if(void 0===e)throw new d(this.id+" fetchOpenOrders() requires a symbol argument for spot market");const i=await this.spotPrivateGetOpenOrders(this.extend(r,o));return this.parseOrders(i,a,t,s)}return await this.fetchOrdersByState(2,e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByState(3,e,t,s,i)}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrdersByState(4,e,t,s,i)}async fetchOrdersByState(e,t,s,i,a={}){await this.loadMarkets();const n={};let o;void 0!==t&&(o=this.market(t),n.symbol=o.id);const[c]=this.handleMarketTypeAndParams("fetchOrdersByState",o,a);if("spot"===c)throw new r(this.id+" fetchOrdersByState() is not supported for "+c);return a.states=e,this.fetchOrders(t,s,i,a)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={};let r;void 0!==t&&(r=this.market(t),i.symbol=r.id);const[a,o]=this.handleMarketTypeAndParams("cancelOrder",r,s);let c;if("spot"===a){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");const i={symbol:r.id},a=this.safeString(s,"clientOrderId");void 0!==a?(s=this.omit(o,"clientOrderId"),i.origClientOrderId=a):i.orderId=e,c=await this.spotPrivateDeleteOrder(this.extend(i,s))}else{let t=this.safeString(this.options,"cancelOrder","contractPrivatePostOrderCancel");t=this.safeString(o,"method",t);const s=await this[t]([e]);c=this.safeValue(s,"data");const i=this.safeValue(c,0),r=this.safeValue(i,"errorMsg","");if("success"!==r)throw new n(this.id+" cancelOrder() the order with id "+e+" cannot be cancelled: "+r)}return this.parseOrder(c,r)}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=void 0!==t?this.market(t):void 0,[a]=this.handleMarketTypeAndParams("cancelOrders",i,s);if("spot"===a)throw new r(this.id+" cancelOrders() is not supported for "+a);{const t=await this.contractPrivatePostOrderCancel(e),s=this.safeValue(t,"data");return this.parseOrders(s,i)}}async cancelAllOrders(e,t={}){await this.loadMarkets();const s=void 0!==e?this.market(e):void 0,i={},[r,a]=this.handleMarketTypeAndParams("cancelAllOrders",s,t);if("spot"===r){if(void 0===e)throw new d(this.id+" cancelAllOrders() requires a symbol argument on spot");i.symbol=s.id;const t=await this.spotPrivateDeleteOpenOrders(this.extend(i,a));return this.parseOrders(t,s)}{void 0!==e&&(i.symbol=s.id);let t=this.safeString(this.options,"cancelAllOrders","contractPrivatePostOrderCancelAll");t=this.safeString(a,"method",t);const r=await this[t](this.extend(i,a)),n=this.safeValue(r,"data",[]);return this.parseOrders(n,s)}}parseOrder(e,t){let s;s="string"==typeof e?e:this.safeString2(e,"orderId","id");const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const r=this.safeInteger2(e,"time","createTime");let a;const n=this.safeString(e,"feeCurrency");if(void 0!==n){const t=this.safeString(e,"takerFee"),s=this.safeString(e,"makerFee"),i=f.stringAdd(t,s);a={currency:n,cost:this.parseNumber(i)}}return this.safeOrder({id:s,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString2(e,"status","state")),symbol:t.symbol,type:this.parseOrderType(this.safeString(e,"type")),timeInForce:this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),side:this.parseOrderSide(this.safeString(e,"side")),price:this.safeNumber(e,"price"),stopPrice:this.safeNumber2(e,"stopPrice","triggerPrice"),average:this.safeNumber(e,"dealAvgPrice"),amount:this.safeNumber2(e,"origQty","vol"),cost:this.safeNumber(e,"cummulativeQuoteQty"),filled:this.safeNumber2(e,"executedQty","dealVol"),remaining:void 0,fee:a,trades:void 0,info:e},t)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit"},e,e)}parseOrderStatus(e){return this.safeString({NEW:"open",FILLED:"closed",CANCELED:"canceled",PARTIALLY_FILLED:"open",PARTIALLY_CANCELED:"canceled",2:"open",3:"closed",4:"canceled"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}async fetchAccountHelper(e,t){if("spot"===e)return await this.spotPrivateGetAccount(t);if("swap"===e){const e=this.contractPrivateGetAccountAssets(t);return this.safeValue(e,"data")}}async fetchAccounts(e={}){const[t,s]=this.handleMarketTypeAndParams("fetchAccounts",void 0,e);await this.loadMarkets();const i=await this.fetchAccountHelper(t,s),r=this.safeValue(i,"balances",[]),a=[];for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString2(t,"asset","currency"),i=this.safeCurrencyCode(s);a.push({id:this.safeString(t,"id"),type:this.safeString(t,"type"),code:i,info:t})}return a}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.fetchAccountHelper("spot",e);let s=this.safeString(t,"makerCommission"),i=this.safeString(t,"takerCommission");s=f.stringDiv(s,"1000"),i=f.stringDiv(i,"1000");const r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={symbol:a,maker:this.parseNumber(s),taker:this.parseNumber(i),percentage:!0,tierBased:!1,info:t}}return r}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i={};let r;if("spot"===t){r=await this.fetchAccountHelper("spot",s);const e=this.safeValue(r,"balances",[]);for(let t=0;t<e.length;t++){const s=e[t],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),i[a]=n}}else if("swap"===t){r=await this.contractPrivateGetAccountAssets(s);const e=this.safeValue(r,"data",[]);for(let t=0;t<e.length;t++){const s=e[t],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"availableBalance"),n.used=this.safeString(s,"frozenBalance"),i[a]=n}}return i.info=r,this.safeBalance(i)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchMyTrades",r,i),o={symbol:r.id};let c;if("spot"===a)void 0!==t&&(o.start_time=t),void 0!==s&&(o.limit=s),c=await this.spotPrivateGetMyTrades(this.extend(o,n));else{if(void 0!==t){o.start_time=t;void 0===this.safeInteger(i,"end_time")&&(o.end_time=this.sum(t,this.options.maxTimeTillEnd))}void 0!==s&&(o.page_size=s);const e=await this.contractPrivateGetOrderListOrderDeals(this.extend(o,n));c=this.safeValue(e,"data")}return this.parseTrades(c,r,t,s)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t));const[o,c]=this.handleMarketTypeAndParams("fetchOrderTrades",n,r);let h;if("spot"===o){if(void 0===t)throw new d(this.id+" fetchOrderTrades() requires a symbol argument");a.symbol=n.id,a.orderId=e,h=await this.spotPrivateGetMyTrades(this.extend(a,c))}else{a.order_id=e;const t=await this.contractPrivateGetOrderDealDetailsOrderId(this.extend(a,c));h=this.safeValue(t,"data")}return this.parseTrades(h,n,s,i,c)}async modifyMarginHelper(e,t,s,i={}){const r=this.safeInteger(i,"positionId");if(void 0===r)throw new d(this.id+" modifyMarginHelper() requires a positionId parameter");await this.loadMarkets();const a={positionId:r,amount:t,type:s};return await this.contractPrivatePostPositionChangeMargin(this.extend(a,i))}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"SUB",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"ADD",s)}async setLeverage(e,t,s={}){await this.loadMarkets();const i={leverage:e},r=this.safeInteger(s,"positionId");if(void 0===r){const e=this.safeNumber(s,"openType"),r=this.safeNumber(s,"positionType"),a=void 0!==t?this.market(t):void 0;if(void 0===e||void 0===r||void 0===a)throw new d(this.id+" setLeverage() requires a positionId parameter or a symbol argument with openType and positionType parameters, use openType 1 or 2 for isolated or cross margin respectively, use positionType 1 or 2 for long or short positions");i.openType=e,i.symbol=a.symbol,i.positionType=r}else i.positionId=r;return await this.contractPrivatePostPositionChangeLeverage(this.extend(i,s))}async fetchFundingHistory(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==s&&(a.page_size=s);const n=await this.contractPrivateGetPositionFundingRecords(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"resultList",[]),d=[];for(let t=0;t<c.length;t++){const s=c[t],i=this.safeInteger(s,"settleTime");d.push({info:s,symbol:e,code:void 0,timestamp:i,datetime:this.iso8601(i),id:this.safeNumber(s,"id"),amount:this.safeNumber(s,"funding")})}return d}parseFundingRate(e,t){const s=this.safeNumber(e,"fundingRate"),i=this.safeInteger(e,"nextSettleTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeInteger(e,"timestamp");return{info:e,symbol:a,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:n,datetime:this.iso8601(n),fundingRate:void 0,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:s,nextFundingTimestamp:i,nextFundingDatetime:this.iso8601(i),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.contractPublicGetFundingRateSymbol(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseFundingRate(a,s)}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.page_size=s);const n=await this.contractPublicGetFundingRateHistory(this.extend(a,i)),o=this.safeValue(n,"data"),c=this.safeValue(o,"resultList",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeInteger(t,"settleTime");h.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const l=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(l,r.symbol,t,s)}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.contractPublicGetDetail(t),i=this.safeValue(s,"data");return this.parseLeverageTiers(i,e,"symbol")}parseMarketLeverageTiers(e,t){let s=this.safeString(e,"maintenanceMarginRate"),i=this.safeString(e,"initialMarginRate");const r=this.safeString(e,"maxVol"),a=this.safeString(e,"riskIncrVol"),n=this.safeString(e,"riskIncrMmr"),o=this.safeString(e,"riskIncrImr");let c="0";const d=[],h=this.safeString(e,"quoteCoin");for(;f.stringLt(c,r);){const t=f.stringAdd(c,a);d.push({tier:this.parseNumber(f.stringDiv(t,a)),currency:this.safeCurrencyCode(h),notionalFloor:this.parseNumber(c),notionalCap:this.parseNumber(t),maintenanceMarginRate:this.parseNumber(s),maxLeverage:this.parseNumber(f.stringDiv("1",i)),info:e}),i=f.stringAdd(i,o),s=f.stringAdd(s,n),c=t}return d}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeCurrencyCode(void 0,t),r=this.safeString(e,"chain"),a=this.safeNetwork(r);return this.checkAddress(s),{currency:i,address:s,tag:void 0,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.spot2PrivateGetAssetDepositAddressList(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"chains",[]),o=[];for(let e=0;e<n.length;e++){const t=this.parseDepositAddress(n[e],s);o.push(t)}return this.indexBy(o,"network")}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network");t=this.omit(t,"network");const i=await this.fetchDepositAddressesByNetwork(e,t),r=this.safeValue(this.options,"networks",{}),a=this.safeString(r,s,s);let n;if(void 0===a){if(n=this.safeValue(i,e),void 0===n){const t=this.safeString(r,e,e);if(n=this.safeValue(i,t),void 0===n){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(n=this.safeValue(i,t),void 0===n){const t=Object.values(i);if(n=this.safeValue(t,0),void 0===n)throw new o(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return n}if(n=this.safeValue(i,s),void 0===n)throw new o(this.id+" fetchDepositAddress() cannot find "+a+" deposit address for "+e);return n}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;if(void 0!==e){const t=this.safeString(i,"network");if(i=this.omit(i,"network"),void 0===t)throw new d(this.id+" fetchDeposits() requires a network parameter when the currency is specified");a=this.currency(e),r.currency=a.id+"-"+t}void 0!==t&&(r.start_time=t),void 0!==s&&(r.limit=s);const n=await this.spot2PrivateGetAssetDepositList(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"result_list",[]);return this.parseTransactions(c,e,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==s&&(r.limit=s);const n=await this.spot2PrivateGetAssetWithdrawList(this.extend(r,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"result_list",[]);return this.parseTransactions(c,e,t,s)}parseTransaction(e,t){const s=this.safeString2(e,"id","withdrawId"),i=void 0===s?"deposit":"withdrawal",r=this.parse8601(this.safeString(e,"create_time")),a=this.parse8601(this.safeString(e,"update_time"));let n,o=this.safeString(e,"currency");if(void 0!==o&&o.indexOf("-")>=0){const e=o.split("-");o=this.safeString(e,0);const t=this.safeString(e,1);n=this.safeNetwork(t)}const c=this.safeCurrencyCode(o,t),d=this.parseTransactionStatus(this.safeString(e,"state"));let h=this.safeString(e,"amount");const l=this.safeString(e,"address"),u=this.safeString(e,"tx_id");let p;const m=this.safeString(e,"fee");return void 0!==m&&(p={cost:this.parseNumber(m),currency:c}),"withdrawal"===i&&(h=f.stringSub(h,m)),{info:e,id:s,txid:u,timestamp:r,datetime:this.iso8601(r),network:n,address:l,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:this.parseNumber(h),currency:c,status:d,updated:a,fee:p}}parseTransactionStatus(e){return this.safeString({WAIT:"pending",WAIT_PACKAGING:"pending",SUCCESS:"ok"},e,e)}async fetchPosition(e,t={}){await this.loadMarkets();const s={symbol:this.market(e).id},i=await this.fetchPositions(void 0,this.extend(s,t));return this.safeValue(i,0)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.contractPrivateGetPositionOpenPositions(t),i=this.safeValue(s,"data",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,i=this.safeString(e,"holdVol"),r=this.safeNumber(e,"openAvgPrice"),a=this.safeString(e,"im"),n="1"===this.safeString(e,"positionType")?"long":"short",o="1"===this.safeString(e,"margin_mode")?"isolated":"cross",c=this.safeNumber(e,"leverage"),d=this.safeNumber(e,"liquidatePrice"),h=this.safeNumber(e,"updateTime");return{info:e,symbol:s,contracts:this.parseNumber(i),contractSize:void 0,entryPrice:r,collateral:void 0,side:n,unrealizedProfit:void 0,leverage:this.parseNumber(c),percentage:void 0,marginType:o,notional:void 0,markPrice:void 0,liquidationPrice:d,initialMargin:this.parseNumber(a),initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,marginRatio:void 0,timestamp:h,datetime:this.iso8601(h)}}async fetchTransfer(e,t,s,i={}){const[a,n]=this.handleMarketTypeAndParams("fetchTransfer",void 0,i);if(await this.loadMarkets(),"spot"===a){const t={transact_id:e},s=await this.spot2PrivateGetAssetInternalTransferInfo(this.extend(t,n)),i=this.safeValue(s,"data",{});return this.parseTransfer(i)}if("swap"===a)throw new r(this.id+" fetchTransfer() is not supported for "+a)}async fetchTransfers(e,t,s,i={}){const[r,a]=this.handleMarketTypeAndParams("fetchTransfers",void 0,i);await this.loadMarkets();const n={};let o,d;if(void 0!==e&&(o=this.currency(e),n.currency=o.id),"spot"===r){if(void 0!==t&&(n.start_time=t),void 0!==s){if(s>50)throw new c("This exchange supports a maximum limit of 50");n["page-size"]=s}const e=await this.spot2PrivateGetAssetInternalTransferRecord(this.extend(n,a)),i=this.safeValue(e,"data",{});d=this.safeValue(i,"result_list",[])}else if("swap"===r){void 0!==s&&(n.page_size=s);const e=await this.contractPrivateGetAccountTransferRecord(this.extend(n,a)),t=this.safeValue(e,"data");d=this.safeValue(t,"resultList")}return this.parseTransfers(d,o,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={spot:"MAIN",swap:"CONTRACT"},o=this.safeString(n,s),d=this.safeString(n,i);if(void 0===o){const e=Object.keys(n);throw new c(this.id+" fromAccount must be one of "+e.join(", "))}if(void 0===d){const e=Object.keys(n);throw new c(this.id+" toAccount must be one of "+e.join(", "))}const h={currency:a.id,amount:t,from:o,to:d},l=await this.spot2PrivatePostAssetInternalTransfer(this.extend(h,r)),u=this.safeValue(l,"data",{});return this.parseTransfer(u,a)}parseTransfer(e,t){const s=this.safeString(e,"currency"),i=this.safeString2(e,"transact_id","txid"),r=this.safeInteger(e,"createTime"),a=void 0!==r?this.iso8601(r):void 0,n=this.safeString(e,"type");let o,c;return void 0!==n?(o="IN"===n?"MAIN":"CONTRACT",c="IN"===n?"CONTRACT":"MAIN"):(o=this.safeString(e,"from"),c=this.safeString(e,"to")),{info:e,id:i,timestamp:r,datetime:a,currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amount"),fromAccount:this.parseAccountId(o),toAccount:this.parseAccountId(c),status:this.parseTransferStatus(this.safeString2(e,"transact_state","state"))}}parseAccountId(e){return this.safeString({MAIN:"spot",CONTRACT:"swap"},e,e)}parseTransferStatus(e){return this.safeString({SUCCESS:"ok",FAILED:"failed",WAIT:"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r);const a=this.safeValue(this.options,"networks",{});let n=this.safeString2(r,"network","chain");n=this.safeString(a,n,n),this.checkAddress(s),await this.loadMarkets();const o=this.currency(e);void 0!==i&&(s+=":"+i);const c={currency:o.id,address:s,amount:t};void 0!==n&&(c.chain=n,r=this.omit(r,["network","chain"]));const d=await this.spot2PrivatePostAssetWithdraw(this.extend(c,r)),h=this.safeValue(d,"data",{});return this.parseTransaction(h,o)}async setPositionMode(e,t,s={}){const i={positionMode:e?1:2};return await this.contractPrivatePostPositionChangePositionMode(this.extend(i,s))}async fetchPositionMode(e,t={}){const s=await this.contractPrivateGetPositionPositionMode(t);return{info:s,hedged:1===this.safeInteger(s,"data")}}sign(e,t="public",s="GET",i={},r,a){const[n,o]=t;let c;if([e,i]=this.resolvePath(e,i),"spot"===n){c=this.urls.api[n][o]+"/api/"+this.version+"/"+e;let t="";if("private"===o&&(i.timestamp=this.milliseconds(),i.recvWindow=this.safeInteger(this.options,"recvWindow",5e3)),Object.keys(i).length&&(t=this.urlencode(i),c+="?"+t),"private"===o){this.checkRequiredCredentials();c+="&signature="+this.hmac(this.encode(t),this.encode(this.secret),"sha256"),r={"X-MEXC-APIKEY":this.apiKey}}"POST"===s&&(r["Content-Type"]="application/json")}else if("contract"===n||"spot2"===n)if(c=this.urls.api[n][o]+"/"+this.implodeParams(e,i),i=this.omit(i,this.extractParams(e)),"public"===o)Object.keys(i).length&&(c+="?"+this.urlencode(i));else{this.checkRequiredCredentials();const e=this.milliseconds().toString();let t="";r={ApiKey:this.apiKey,"Request-Time":e,"Content-Type":"application/json"},"POST"===s?(t=this.json(i),a=t):(i=this.keysort(i),Object.keys(i).length&&(t+=this.urlencode(i),c+="?"+t)),t=this.apiKey+e+t;const n=this.hmac(this.encode(t),this.encode(this.secret),"sha256");r.Signature=n}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,d){if(void 0===n)return;if(!0===this.safeValue(n,"success",!1))return;const h=this.safeString(n,"code",void 0);if(void 0!==h&&"200"!==h&&"0"!==h){const e=this.id+" "+a;throw this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new c(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],231:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,InsufficientFunds:n,BadSymbol:o,OrderNotFound:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ndax",name:"NDAX",countries:["CA"],rateLimit:1e3,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2419200","4M":"9676800"},urls:{logo:"https://user-images.githubusercontent.com/1294454/108623144-67a3ef00-744e-11eb-8140-75c6b851e945.jpg",test:{public:"https://ndaxmarginstaging.cdnhop.net:8443/AP",private:"https://ndaxmarginstaging.cdnhop.net:8443/AP"},api:{public:"https://api.ndax.io:8443/AP",private:"https://api.ndax.io:8443/AP"},www:"https://ndax.io",doc:["https://apidoc.ndax.io/"],fees:"https://ndax.io/fees",referral:"https://one.ndax.io/bfQiSL"},api:{public:{get:{Activate2FA:1,Authenticate2FA:1,AuthenticateUser:1,GetL2Snapshot:1,GetLevel1:1,GetValidate2FARequiredEndpoints:1,LogOut:1,GetTickerHistory:1,GetProduct:1,GetProducts:1,GetInstrument:1,GetInstruments:1,Ping:1,trades:1,GetLastTrades:1,SubscribeLevel1:1,SubscribeLevel2:1,SubscribeTicker:1,SubscribeTrades:1,SubscribeBlockTrades:1,UnsubscribeBlockTrades:1,UnsubscribeLevel1:1,UnsubscribeLevel2:1,UnsubscribeTicker:1,UnsubscribeTrades:1,Authenticate:1}},private:{get:{GetUserAccountInfos:1,GetUserAccounts:1,GetUserAffiliateCount:1,GetUserAffiliateTag:1,GetUserConfig:1,GetAllUnredactedUserConfigsForUser:1,GetUnredactedUserConfigByKey:1,GetUserDevices:1,GetUserReportTickets:1,GetUserReportWriterResultRecords:1,GetAccountInfo:1,GetAccountPositions:1,GetAllAccountConfigs:1,GetTreasuryProductsForAccount:1,GetAccountTrades:1,GetAccountTransactions:1,GetOpenTradeReports:1,GetAllOpenTradeReports:1,GetTradesHistory:1,GetOpenOrders:1,GetOpenQuotes:1,GetOrderFee:1,GetOrderHistory:1,GetOrdersHistory:1,GetOrderStatus:1,GetOmsFeeTiers:1,GetAccountDepositTransactions:1,GetAccountWithdrawTransactions:1,GetAllDepositRequestInfoTemplates:1,GetDepositInfo:1,GetDepositRequestInfoTemplate:1,GetDeposits:1,GetDepositTicket:1,GetDepositTickets:1,GetOMSWithdrawFees:1,GetWithdrawFee:1,GetWithdraws:1,GetWithdrawTemplate:1,GetWithdrawTemplateTypes:1,GetWithdrawTicket:1,GetWithdrawTickets:1},post:{AddUserAffiliateTag:1,CancelUserReport:1,RegisterNewDevice:1,SubscribeAccountEvents:1,UpdateUserAffiliateTag:1,GenerateTradeActivityReport:1,GenerateTransactionActivityReport:1,GenerateTreasuryActivityReport:1,ScheduleTradeActivityReport:1,ScheduleTransactionActivityReport:1,ScheduleTreasuryActivityReport:1,CancelAllOrders:1,CancelOrder:1,CancelQuote:1,CancelReplaceOrder:1,CreateQuote:1,ModifyOrder:1,SendOrder:1,SubmitBlockTrade:1,UpdateQuote:1,CancelWithdraw:1,CreateDepositTicket:1,CreateWithdrawTicket:1,SubmitDepositTicketComment:1,SubmitWithdrawTicketComment:1,GetOrderHistoryByOrderId:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:.002,taker:.0025}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0,login:!0,password:!0},precisionMode:d,exceptions:{exact:{Not_Enough_Funds:n,"Server Error":r,"Resource Not Found":c},broad:{"Invalid InstrumentId":o,"This endpoint requires 2FACode along with the payload":a}},options:{omsId:1,orderTypes:{Market:1,Limit:2,StopMarket:3,StopLimit:4,TrailingStopMarket:5,TrailingStopLimit:6,BlockTrade:7}}})}async signIn(e={}){if(this.checkRequiredCredentials(),void 0===this.login||void 0===this.password)throw new a(this.id+" signIn() requires exchange.login, exchange.password");let t={grant_type:"client_credentials"};const s=await this.publicGetAuthenticate(this.extend(t,e));let i=this.safeString(s,"SessionToken");if(void 0!==i)return this.options.sessionToken=i,s;const r=this.safeString(s,"Pending2FaToken");if(void 0!==r){if(void 0===this.twofa)throw new a(this.id+" signIn() requires exchange.twofa credentials");this.options.pending2faToken=r,t={Code:this.oath()};const s=await this.publicGetAuthenticate2FA(this.extend(t,e));return i=this.safeString(s,"SessionToken"),this.options.sessionToken=i,s}return s}async fetchCurrencies(e={}){const t={omsId:this.safeInteger(this.options,"omsId",1)},s=await this.publicGetGetProducts(this.extend(t,e)),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"ProductId"),a=this.safeString(t,"ProductFullName"),n=this.safeString(t,"ProductType"),o=this.safeCurrencyCode(this.safeString(t,"Product")),c=!this.safeValue(t,"IsDisabled");i[o]={id:r,name:a,code:o,type:n,precision:this.safeNumber(t,"TickSize"),info:t,active:c,deposit:void 0,withdraw:void 0,fee:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}async fetchMarkets(e={}){const t={omsId:this.safeInteger(this.options,"omsId",1)},s=await this.publicGetGetInstruments(this.extend(t,e)),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"InstrumentId"),a=this.safeString(t,"Product1"),n=this.safeString(t,"Product2"),o=this.safeCurrencyCode(this.safeString(t,"Product1Symbol")),c=this.safeCurrencyCode(this.safeString(t,"Product2Symbol")),d=this.safeString(t,"SessionStatus"),h=this.safeValue(t,"IsDisable"),l="Running"===d;i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:l&&!h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"QuantityIncrement"),price:this.safeNumber(t,"PriceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"MinimumQuantity"),max:void 0},price:{min:this.safeNumber(t,"MinimumPrice"),max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseOrderBook(e,t,s,i="bids",r="asks",a=6,n=8){let o;const c={symbol:t,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let t=0;t<e.length;t++){const d=e[t];if(void 0===s)s=this.safeInteger(d,2);else{const e=this.safeInteger(d,2);s=Math.max(s,e)}if(void 0===o)o=this.safeInteger(d,0);else{const e=this.safeInteger(d,0);o=Math.max(o,e)}const h=this.parseBidAsk(d,a,n);c[this.safeInteger(d,9)?r:i].push(h)}return c.bids=this.sortBy(c.bids,0,!0),c.asks=this.sortBy(c.asks,0),c.timestamp=s,c.datetime=this.iso8601(s),c.nonce=o,c}async fetchOrderBook(e,t,s={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();t=void 0===t?100:t;const r={omsId:i,InstrumentId:this.market(e).id,Depth:t},a=await this.publicGetGetL2Snapshot(this.extend(r,s));return this.parseOrderBook(a,e)}parseTicker(e,t){const s=this.safeInteger(e,"TimeStamp"),i=this.safeString(e,"InstrumentId");t=this.safeMarket(i,t);const r=this.safeSymbol(i,t),a=this.safeString(e,"LastTradedPx"),n=this.safeString(e,"Rolling24HrPxChangePercent"),o=this.safeString(e,"Rolling24HrPxChange"),c=this.safeString(e,"SessionOpen"),d=this.safeString(e,"Rolling24HrVolume"),h=this.safeString(e,"Rolling24HrNotional");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"SessionHigh"),low:this.safeString(e,"SessionLow"),bid:this.safeString(e,"BestBid"),bidVolume:void 0,ask:this.safeString(e,"BestOffer"),askVolume:void 0,vwap:void 0,open:c,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:d,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const i=this.market(e),r={omsId:s,InstrumentId:i.id},a=await this.publicGetGetLevel1(this.extend(r,t));return this.parseTicker(a,i)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,3),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){const a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const n=this.market(e),o={omsId:a,InstrumentId:n.id,Interval:this.timeframes[t]},c=this.parseTimeframe(t),d=this.milliseconds();void 0===s?void 0!==i&&(o.FromDate=this.ymdhms(d-c*i*1e3),o.ToDate=this.ymdhms(d)):(o.FromDate=this.ymdhms(s),o.ToDate=void 0===i?this.ymdhms(d):this.ymdhms(this.sum(s,c*i*1e3)));const h=await this.publicGetGetTickerHistory(this.extend(o,r));return this.parseOHLCVs(h,n,t,s,i)}parseTrade(e,t){let s,i,r,a,n,o,c,d,h,l,u;if(Array.isArray(e)){s=this.safeString(e,3),i=this.safeString(e,2),a=this.safeInteger(e,6),n=this.safeString(e,0),o=this.safeString(e,1);c=this.safeValue(e,8)?"sell":"buy",d=this.safeString(e,4)}else{a=this.safeInteger2(e,"TradeTimeMS","ReceiveTime"),n=this.safeString(e,"TradeId"),d=this.safeString2(e,"OrderId","OrigOrderId"),o=this.safeString2(e,"InstrumentId","Instrument"),s=this.safeString(e,"Price"),i=this.safeString(e,"Quantity"),r=this.safeString2(e,"Value","GrossValueExecuted"),h=this.safeStringLower(e,"MakerTaker"),c=this.safeStringLower(e,"Side"),u=this.safeStringLower(e,"OrderType");const t=this.safeString(e,"Fee");if(void 0!==t){const s=this.safeString(e,"FeeProductId");l={cost:t,currency:this.safeCurrencyCode(s)}}}const f=this.safeSymbol(o,t);return this.safeTrade({info:e,id:n,symbol:f,timestamp:a,datetime:this.iso8601(a),order:d,type:u,side:c,takerOrMaker:h,price:s,amount:i,cost:r,fee:l},t)}async fetchTrades(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const a=this.market(e),n={omsId:r,InstrumentId:a.id};void 0!==s&&(n.Count=s);const o=await this.publicGetGetLastTrades(this.extend(n,i));return this.parseTrades(o,a,t,s)}async fetchAccounts(e={}){if(!this.login)throw new a(this.id+" fetchAccounts() requires exchange.login email credential");const t=this.safeInteger(this.options,"omsId",1);this.checkRequiredCredentials();const s={omsId:t,UserId:this.uid,UserName:this.login},i=await this.privateGetGetUserAccounts(this.extend(s,e)),r=[];for(let e=0;e<i.length;e++){const t=this.safeString(i,e);r.push({id:t,type:void 0,currency:void 0,info:t})}return r}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"ProductId");if(r in this.currencies_by_id){const e=this.safeCurrencyCode(r),s=this.account();s.total=this.safeString(i,"Amount"),s.used=this.safeString(i,"Hold"),t[e]=s}}return this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const s=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),i=this.safeInteger2(e,"accountId","AccountId",s);e=this.omit(e,["accountId","AccountId"]);const r={omsId:t,AccountId:i},a=await this.privateGetGetAccountPositions(this.extend(r,e));return this.parseBalance(a)}parseLedgerEntryType(e){return this.safeString({Trade:"trade",Deposit:"transaction",Withdraw:"transaction",Transfer:"transfer",OrderHold:"trade",WithdrawHold:"transaction",DepositHold:"transaction",MarginHold:"trade",ManualHold:"trade",ManualEntry:"trade",MarginAcquisition:"trade",MarginRelinquish:"trade",MarginQuoteHold:"trade"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"TransactionId"),i=this.safeString(e,"AccountId"),r=this.safeString(e,"ReferenceId"),a=this.safeString(e,"Counterparty"),n=this.parseLedgerEntryType(this.safeString(e,"ReferenceType")),o=this.safeString(e,"ProductId"),c=this.safeCurrencyCode(o,t),d=this.safeNumber(e,"CR"),h=this.safeNumber(e,"DR");let l,u;d>0?(l=d,u="in"):h>0&&(l=h,u="out");const f=this.safeInteger(e,"TimeStamp");let p;const m=this.safeNumber(e,"Balance");"out"===u?p=this.sum(m,l):"in"===u&&(p=Math.max(0,m-l));return{info:e,id:s,direction:u,account:i,referenceId:r,referenceAccount:a,type:n,currency:c,amount:l,before:p,after:m,status:"ok",timestamp:f,datetime:this.iso8601(f),fee:void 0}}async fetchLedger(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);i=this.omit(i,["accountId","AccountId"]);const o={omsId:r,AccountId:n};void 0!==s&&(o.Depth=s);const c=await this.privateGetGetAccountTransactions(this.extend(o,i));let d;return void 0!==e&&(d=this.currency(e)),this.parseLedger(c,d,t,s)}parseOrderStatus(e){return this.safeString({Accepted:"open",Rejected:"rejected",Working:"open",Canceled:"canceled",Expired:"expired",FullyExecuted:"closed"},e,e)}parseOrder(e,t){const s=this.safeInteger(e,"ReceiveTime"),i=this.safeString(e,"Instrument");return this.safeOrder({id:this.safeString2(e,"ReplacementOrderId","OrderId"),clientOrderId:this.safeString2(e,"ReplacementClOrdId","ClientOrderId"),info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:this.safeInteger(e,"LastUpdatedTime"),status:this.parseOrderStatus(this.safeString(e,"OrderState")),symbol:this.safeSymbol(i,t),type:this.safeStringLower(e,"OrderType"),timeInForce:void 0,postOnly:void 0,side:this.safeStringLower(e,"Side"),price:this.safeString(e,"Price"),stopPrice:this.parseNumber(this.omitZero(this.safeString(e,"StopPrice"))),cost:this.safeString(e,"GrossValueExecuted"),amount:this.safeString(e,"OrigQuantity"),filled:this.safeString(e,"QuantityExecuted"),average:this.safeString(e,"AvgPrice"),remaining:void 0,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){const n=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const o=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),c=this.safeInteger2(a,"accountId","AccountId",o),d=this.safeInteger2(a,"ClientOrderId","clientOrderId");a=this.omit(a,["accountId","AccountId","clientOrderId","ClientOrderId"]);const h=this.market(e),l="buy"===s?0:1,u={InstrumentId:parseInt(h.id),omsId:n,AccountId:c,TimeInForce:1,Side:l,Quantity:parseFloat(this.amountToPrecision(e,i)),OrderType:this.safeInteger(this.options.orderTypes,this.capitalize(t))};void 0!==r&&(u.LimitPrice=parseFloat(this.priceToPrecision(e,r))),void 0!==d&&(u.ClientOrderId=d);const f=await this.privatePostSendOrder(this.extend(u,a));return this.parseOrder(f,h)}async editOrder(e,t,s,i,r,a,n={}){const o=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const c=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),d=this.safeInteger2(n,"accountId","AccountId",c),h=this.safeInteger2(n,"ClientOrderId","clientOrderId");n=this.omit(n,["accountId","AccountId","clientOrderId","ClientOrderId"]);const l=this.market(t),u="buy"===i?0:1,f={OrderIdToReplace:parseInt(e),InstrumentId:parseInt(l.id),omsId:o,AccountId:d,TimeInForce:1,Side:u,Quantity:parseFloat(this.amountToPrecision(t,r)),OrderType:this.safeInteger(this.options.orderTypes,this.capitalize(s))};void 0!==a&&(f.LimitPrice=parseFloat(this.priceToPrecision(t,a))),void 0!==h&&(f.ClientOrderId=h);const p=await this.privatePostCancelReplaceOrder(this.extend(f,n));return this.parseOrder(p,l)}async fetchMyTrades(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);i=this.omit(i,["accountId","AccountId"]);const o={omsId:r,AccountId:n};let c;void 0!==e&&(c=this.market(e),o.InstrumentId=c.id),void 0!==t&&(o.StartTimeStamp=parseInt(t/1e3)),void 0!==s&&(o.Depth=s);const d=await this.privateGetGetTradesHistory(this.extend(o,i));return this.parseTrades(d,c,t,s)}async cancelAllOrders(e,t={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const i=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",i);t=this.omit(t,["accountId","AccountId"]);const a={omsId:s,AccountId:r};if(void 0!==e){const t=this.market(e);a.IntrumentId=t.id}return await this.privatePostCancelAllOrders(this.extend(a,t))}async cancelOrder(e,t,s={}){const i=this.safeInteger(this.options,"omsId",1);let r;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(r=this.market(t));const a={omsId:i},n=this.safeInteger2(s,"clientOrderId","ClOrderId");void 0!==n?a.ClOrderId=n:a.OrderId=parseInt(e),s=this.omit(s,["clientOrderId","ClOrderId"]);const o=await this.privatePostCancelOrder(this.extend(a,s)),c=this.parseOrder(o,r);return this.extend(c,{id:e,clientOrderId:n})}async fetchOpenOrders(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);let o;i=this.omit(i,["accountId","AccountId"]),void 0!==e&&(o=this.market(e));const c={omsId:r,AccountId:n},d=await this.privateGetGetOpenOrders(this.extend(c,i));return this.parseOrders(d,o,t,s)}async fetchOrders(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);i=this.omit(i,["accountId","AccountId"]);const o={omsId:r,AccountId:n};let c;void 0!==e&&(c=this.market(e),o.InstrumentId=c.id),void 0!==t&&(o.StartTimeStamp=parseInt(t/1e3)),void 0!==s&&(o.Depth=s);const d=await this.privateGetGetOrdersHistory(this.extend(o,i));return this.parseOrders(d,c,t,s)}async fetchOrder(e,t,s={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const r=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),a=this.safeInteger2(s,"accountId","AccountId",r);let n;s=this.omit(s,["accountId","AccountId"]),void 0!==t&&(n=this.market(t));const o={omsId:i,AccountId:a,OrderId:parseInt(e)},c=await this.privateGetGetOrderStatus(this.extend(o,s));return this.parseOrder(c,n)}async fetchOrderTrades(e,t,s,i,r={}){const a=this.safeInteger(this.options,"omsId",1);let n;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(n=this.market(t));const o={OMSId:parseInt(a),OrderId:parseInt(e)},c=await this.privatePostGetOrderHistoryByOrderId(this.extend(o,r)),d=this.groupBy(c,"ChangeReason"),h=this.safeValue(d,"Trade",[]);return this.parseTrades(h,n,s,i)}async fetchDepositAddress(e,t={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const i=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",i);t=this.omit(t,["accountId","AccountId"]);const a=this.currency(e),n={omsId:s,AccountId:r,ProductId:a.id,GenerateNewKey:!1},o=await this.privateGetGetDepositInfo(this.extend(n,t));return this.parseDepositAddress(o,a)}parseDepositAddress(e,t){const s=this.safeString(e,"DepositInfo"),i=JSON.parse(s),r=i.length,a=this.safeString(i,r-1).split("?memo="),n=this.safeString(a,0),o=this.safeString(a,1);let c;return void 0!==t&&(c=t.code),this.checkAddress(n),{currency:c,address:n,tag:o,network:void 0,info:e}}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({GenerateNewKey:!0},t))}async fetchDeposits(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);let o;i=this.omit(i,["accountId","AccountId"]),void 0!==e&&(o=this.currency(e));const c={omsId:r,AccountId:n},d=await this.privateGetGetDeposits(this.extend(c,i));return this.parseTransactions(d,o,t,s)}async fetchWithdrawals(e,t,s,i={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(i,"accountId","AccountId",a);let o;i=this.omit(i,["accountId","AccountId"]),void 0!==e&&(o=this.currency(e));const c={omsId:r,AccountId:n},d=await this.privateGetGetWithdraws(this.extend(c,i));return this.parseTransactions(d,o,t,s)}parseTransactionStatusByType(e,t){const s=this.safeValue({deposit:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Confirmed:"pending",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected"},withdrawal:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Pending2Fa:"pending",AutoAccepted:"pending",Delayed:"pending",UserCanceled:"canceled",AdminCanceled:"canceled",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected",Submitted:"pending",Confirmed:"pending",ManuallyConfirmed:"pending",Confirmed2Fa:"pending"}},t,{});return this.safeString(s,e,e)}parseTransaction(e,t){let s,i;const r=this.safeString(e,"ProductId"),a=this.safeCurrencyCode(r,t);let n,o;"DepositId"in e?(s=this.safeString(e,"DepositId"),o="deposit"):"WithdrawId"in e&&(s=this.safeString(e,"WithdrawId"),o="withdrawal");const c=this.safeString(e,"TemplateForm");let d,h=this.safeInteger(e,"LastUpdateTimeStamp");if(void 0!==c){const e=JSON.parse(c);d=this.safeString(e,"ExternalAddress"),i=this.safeString(e,"TxId"),n=this.safeInteger(e,"TimeSubmitted"),h=this.safeInteger(e,"LastUpdated",h)}const l=d,u=this.parseTransactionStatusByType(this.safeString(e,"TicketStatus"),o),f=this.safeNumber(e,"Amount"),p=this.safeNumber(e,"FeeAmount");let m;return void 0!==p&&(m={currency:a,cost:p}),{info:e,id:s,txid:i,timestamp:n,datetime:this.iso8601(n),address:d,addressTo:l,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:f,currency:a,status:u,updated:h,fee:m}}async withdraw(e,t,s,i,n={}){[i,n]=this.handleWithdrawTagAndParams(i,n);if(void 0===this.safeString(this.options,"sessionToken"))throw new a(this.id+" call signIn() method to obtain a session token");if(void 0===this.twofa)throw new a(this.id+" withdraw() requires exchange.twofa credentials");this.checkAddress(s);const o=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const c=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),d=this.safeInteger2(n,"accountId","AccountId",c);n=this.omit(n,["accountId","AccountId"]);const h=this.currency(e),l={omsId:o,AccountId:d,ProductId:h.id},u=await this.privateGetGetWithdrawTemplateTypes(l),f=this.safeValue(u,"TemplateTypes",[]),p=this.safeValue(f,0);if(void 0===p)throw new r(this.id+" withdraw() could not find a withdraw template type for "+h.code);const m=this.safeString(p,"TemplateName"),g={omsId:o,AccountId:d,ProductId:h.id,TemplateType:m,AccountProviderId:p.AccountProviderId},y=await this.privateGetGetWithdrawTemplate(g),b=this.safeString(y,"Template");if(void 0===b)throw new r(this.id+" withdraw() could not find a withdraw template for "+h.code);const v=JSON.parse(b);v.ExternalAddress=s,void 0!==i&&"Memo"in v&&(v.Memo=i);const w={omsId:o,AccountId:d,ProductId:h.id,TemplateForm:this.json(v),TemplateType:m},S={TfaType:"Google",TFaCode:this.oath(),Payload:this.json(w)},k=await this.privatePostCreateWithdrawTicket(this.deepExtend(S,n));return this.parseTransaction(k,h)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,i),o=this.omit(i,this.extractParams(e));if("public"===t){if("Authenticate"===e){const e=this.login+":"+this.password,t=this.stringToBase64(e);r={Authorization:"Basic "+this.decode(t)}}else if("Authenticate2FA"===e){const e=this.safeString(this.options,"pending2faToken");void 0!==e&&(r={Pending2FaToken:e},o=this.omit(o,"pending2faToken"))}Object.keys(o).length&&(n+="?"+this.urlencode(o))}else if("private"===t){this.checkRequiredCredentials();const e=this.safeString(this.options,"sessionToken");if(void 0===e){const e=this.nonce().toString(),t=e+this.uid+this.apiKey,s=this.hmac(this.encode(t),this.encode(this.secret));r={Nonce:e,APIKey:this.apiKey,Signature:s,UserId:this.uid}}else r={APToken:e};"POST"===s?(r["Content-Type"]="application/json",a=this.json(o)):Object.keys(o).length&&(n+="?"+this.urlencode(o))}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,n,o,c,d,h){if(404===e)throw new a(this.id+" "+o);if(void 0===c)return;const l=this.safeString(c,"errormsg");if(void 0!==l&&""!==l){const e=this.id+" "+o;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,o,e),new r(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],232:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeError:a,PermissionDenied:n,BadRequest:o,CancelPending:c,OrderNotFound:d,InsufficientFunds:h,RateLimitExceeded:l,InvalidOrder:u,AccountSuspended:f,BadSymbol:p,OnMaintenance:m,ArgumentsRequired:g,AccountNotEnabled:y}=e("./base/errors"),{TICK_SIZE:b}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"novadax",name:"NovaDAX",countries:["BR"],rateLimit:16.6667,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"ONE_MIN","5m":"FIVE_MIN","15m":"FIFTEEN_MIN","30m":"HALF_HOU","1h":"ONE_HOU","1d":"ONE_DAY","1w":"ONE_WEE","1M":"ONE_MON"},urls:{logo:"https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg",api:{public:"https://api.novadax.com",private:"https://api.novadax.com"},www:"https://www.novadax.com.br",doc:["https://doc.novadax.com/pt-BR/"],fees:"https://www.novadax.com.br/fees-and-limits",referral:"https://www.novadax.com.br/?s=ccxt"},api:{public:{get:{"common/symbol":1.2,"common/symbols":1.2,"common/timestamp":1.2,"market/tickers":1.2,"market/ticker":1.2,"market/depth":1.2,"market/trades":1.2,"market/kline/history":1.2}},private:{get:{"orders/get":3,"orders/list":3,"orders/fill":3,"orders/fills":3,"account/getBalance":3,"account/subs":3,"account/subs/balance":3,"account/subs/transfer/record":3,"wallet/query/deposit-withdraw":3},post:{"orders/create":3,"orders/cancel":3,"account/withdraw/coin":3,"account/subs/transfer":3}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.0025")}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:b,exceptions:{exact:{A99999:a,A10001:o,A10002:a,A10003:r,A10004:l,A10005:n,A10006:f,A10007:y,A10011:p,A10012:p,A10013:m,A30001:d,A30002:u,A30003:u,A30004:u,A30005:u,A30006:u,A30007:h,A30008:u,A30009:u,A30010:c,A30011:u,A30012:u,A40004:h},broad:{}},options:{fetchOHLCV:{volume:"amount"},transfer:{fillResponseFromRequest:!0}}})}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchMarkets(e={}){const t=await this.publicGetCommonSymbols(e),s=[],i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"baseCurrency"),a=this.safeString(t,"quoteCurrency"),n=this.safeString(t,"symbol"),o=this.safeCurrencyCode(r),c=this.safeCurrencyCode(a),d=this.safeString(t,"status");s.push({id:n,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ONLINE"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amountPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"valuePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOrderValue"),max:void 0}},info:t})}return s}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t,"_"),a=this.safeString(e,"open24h"),n=this.safeString(e,"lastPrice"),o=this.safeString(e,"baseVolume24h"),c=this.safeString(e,"quoteVolume24h");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetMarketTicker(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketTickers(t),i=this.safeValue(s,"data",[]),r={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.limit=t);const a=await this.publicGetMarketDepth(this.extend(r,s)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,i.symbol,o,"bids","asks")}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"orderId"),r=this.safeInteger(e,"timestamp"),a=this.safeStringLower(e,"side"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),c=this.safeString(e,"symbol"),d=this.safeSymbol(c,t,"_"),h=this.safeStringLower(e,"role");let l;if(void 0!==this.safeString(e,"fee")){const t=this.safeString(e,"feeCurrency"),s=this.safeCurrencyCode(t);l={cost:this.safeString(e,"feeAmount"),currency:s}}return this.safeTrade({id:s,order:i,timestamp:r,datetime:this.iso8601(r),symbol:d,type:void 0,side:a,price:n,amount:o,cost:void 0,takerOrMaker:h,fee:l,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetMarketTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,unit:this.timeframes[t]},o=this.parseTimeframe(t),c=this.seconds();if(void 0===i&&(i=3e3),void 0===s)n.from=c-i*o,n.to=c;else{const e=parseInt(s/1e3);n.from=e,n.to=this.sum(e,i*o)}const d=await this.publicGetMarketKlineHistory(this.extend(n,r)),h=this.safeValue(d,"data",[]);return this.parseOHLCVs(h,a,t,s,i)}parseOHLCV(e,t){const s=this.safeValue(this.options,"fetchOHLCV",{}),i=this.safeString(s,"volume","amount");return[this.safeTimestamp(e,"score"),this.safeNumber(e,"openPrice"),this.safeNumber(e,"highPrice"),this.safeNumber(e,"lowPrice"),this.safeNumber(e,"closePrice"),this.safeNumber(e,i)]}parseBalance(e){const t=this.safeValue(e,"data",[]),s={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),n.free=this.safeString(i,"available"),n.used=this.safeString(i,"hold"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountGetBalance(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o=t.toUpperCase();const c=s.toUpperCase(),d={symbol:n.id,side:c},h=this.safeNumber(a,"stopPrice");if(void 0===h){if("STOP_LIMIT"===o||"STOP_MARKET"===o)throw new g(this.id+" createOrder() requires a stopPrice parameter for "+o+" orders")}else{"LIMIT"===o?o="STOP_LIMIT":"MARKET"===o&&(o="STOP_MARKET");const t="BUY"===c?"LTE":"GTE";d.operator=this.safeString(a,"operator",t),d.stopPrice=this.priceToPrecision(e,h),a=this.omit(a,"stopPrice")}if("LIMIT"===o||"STOP_LIMIT"===o)d.price=this.priceToPrecision(e,r),d.amount=this.amountToPrecision(e,i);else if("MARKET"===o||"STOP_MARKET"===o)if("SELL"===c)d.amount=this.amountToPrecision(e,i);else if("BUY"===c){let t=this.safeNumber(a,"value");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==r)void 0===t&&(t=i*r);else if(void 0===t)throw new u(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'value' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?i:t;d.value=this.costToPrecision(e,t)}d.type=o;const l=await this.privatePostOrdersCreate(this.extend(d,a)),f=this.safeValue(l,"data",{});return this.parseOrder(f,n)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostOrdersCancel(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privateGetOrdersGet(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.fromTimestamp=t);const n=await this.privateGetOrdersList(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseOrders(o,a,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"SUBMITTED,PROCESSING,PARTIAL_FILLED,CANCELING"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"FILLED,CANCELED,REJECTED"},i))}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrdersFill(this.extend(a,r));let o;void 0!==t&&(o=this.market(t));const c=this.safeValue(n,"data",[]);return this.parseTrades(c,o,s,i)}parseOrderStatus(e){return this.safeString({SUBMITTED:"open",PROCESSING:"open",PARTIAL_FILLED:"open",CANCELING:"open",FILLED:"closed",CANCELED:"canceled",REJECTED:"rejected"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"amount"),r=this.safeString(e,"price"),a=this.safeString2(e,"filledValue","value"),n=this.safeStringLower(e,"type"),o=this.safeStringLower(e,"side"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeInteger(e,"timestamp"),h=this.safeString(e,"averagePrice"),l=this.safeString(e,"filledAmount");let u;const f=this.safeNumber(e,"filledFee");void 0!==f&&(u={cost:f,currency:void 0});const p=this.safeString(e,"symbol"),m=this.safeSymbol(p,t,"_"),g=this.safeNumber(e,"stopPrice");return this.safeOrder({id:s,clientOrderId:void 0,info:e,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:m,type:n,timeInForce:void 0,postOnly:void 0,side:o,price:r,stopPrice:g,amount:i,cost:a,average:h,filled:l,remaining:void 0,status:c,fee:u,trades:void 0},t)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const n=this.currency(e);if("main"!==s&&"main"!==i)throw new a(this.id+" transfer() supports transfers between main account and subaccounts only");const o="main"===s?"master-transfer-in":"master-transfer-out",c={transferAmount:this.currencyToPrecision(e,t),currency:n.id,subId:"master-transfer-in"===o?i:s,transferType:o},d=await this.privatePostAccountSubsTransfer(this.extend(c,r)),h=this.parseTransfer(d,n),l=this.safeValue(this.options,"transfer",{});return this.safeValue(l,"fillResponseFromRequest",!0)&&(h.fromAccount=s,h.toAccount=i,h.amount=t),h}parseTransfer(e,t){const s=this.safeString(e,"data"),i=this.safeString(e,"message");return{info:e,id:s,amount:void 0,code:this.safeCurrencyCode(void 0,t),fromAccount:void 0,toAccount:void 0,timestamp:void 0,datetime:void 0,status:i}}parseTransferStatus(e){return this.safeString({SUCCESS:"pending"},e,"failed")}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e),n={code:a.id,amount:this.currencyToPrecision(e,t),wallet:s};void 0!==i&&(n.tag=i);const o=await this.privatePostAccountWithdrawCoin(this.extend(n,r));return this.parseTransaction(o,a)}async fetchAccounts(e={}){const t=await this.privateGetAccountSubs(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"subId"),a=this.safeString(t,"subAccount");i.push({id:r,type:a,currency:void 0,info:t})}return i}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"coin_in"},i))}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"coin_out"},i))}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.size=s);const n=await this.privateGetWalletQueryDepositWithdraw(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,s)}parseTransactionStatus(e){const t=e.split(" ");e=this.safeString(t,1,e);return this.safeString({Pending:"pending",confirming:"pending",SUCCESS:"ok",FAIL:"failed"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"id","data");let i=this.safeString(e,"type");"COIN_IN"===i?i="deposit":"COIN_OUT"===i&&(i="withdraw");const r=this.safeNumber(e,"amount"),a=this.safeString(e,"address"),n=this.safeString(e,"addressTag"),o=this.safeString(e,"txHash"),c=this.safeInteger(e,"createdAt"),d=this.safeInteger(e,"updatedAt"),h=this.safeString(e,"currency"),l=this.safeCurrencyCode(h,t),u=this.parseTransactionStatus(this.safeString(e,"state"));return{info:e,id:s,currency:l,amount:r,network:this.safeString(e,"chain"),address:a,addressTo:a,addressFrom:void 0,tag:n,tagTo:n,tagFrom:void 0,status:u,type:i,updated:d,txid:o,timestamp:c,datetime:this.iso8601(c),fee:void 0}}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==s&&(r.limit=s),void 0!==t&&(r.fromTimestamp=t);const n=await this.privateGetOrdersFills(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,a,t,s)}sign(e,t="public",s="GET",i={},r,a){const n="/"+this.version+"/"+this.implodeParams(e,i);let o=this.urls.api[t]+n;const c=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(c).length&&(o+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e=this.milliseconds().toString();let t;r={"X-Nova-Access-Key":this.apiKey,"X-Nova-Timestamp":e},"POST"===s?(a=this.json(c),t=this.hash(a,"md5"),r["Content-Type"]="application/json"):(Object.keys(c).length&&(o+="?"+this.urlencode(c)),t=this.urlencode(this.keysort(c)));const i=s+"\n"+n+"\n"+t+"\n"+e;r["X-Nova-Signature"]=this.hmac(this.encode(i),this.encode(this.secret))}return{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code");if("A10000"!==h){const e=this.safeString(o,"message"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new a(t)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],233:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,AuthenticationError:a,ArgumentsRequired:n,BadRequest:o,InvalidOrder:c,InsufficientFunds:d,OrderNotFound:h,PermissionDenied:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"oceanex",name:"OceanEx",countries:["BS"],version:"v1",rateLimit:3e3,urls:{logo:"https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg",api:"https://api.oceanex.pro",www:"https://www.oceanex.pro.com",doc:"https://api.oceanex.pro/doc/v1",referral:"https://oceanex.pro/signup?referral=VE24QX"},has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createMarketOrder:!0,createOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchMarkets:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFees:void 0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"1440","3d":"4320","1w":"10080"},api:{public:{get:["markets","tickers/{pair}","tickers_multi","order_book","order_book/multi","fees/trading","trades","timestamp"],post:["k"]},private:{get:["key","members/me","orders","orders/filter"],post:["orders","orders/multi","order/delete","order/delete/multi","orders/clear"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")}},commonCurrencies:{PLA:"Plair"},precisionMode:u,exceptions:{codes:{"-1":o,"-2":o,1001:o,1004:n,1006:a,1008:a,1010:a,1011:l,2001:a,2002:c,2004:h,9003:l},exact:{"market does not have a valid value":o,"side does not have a valid value":o,"Account::AccountError: Cannot lock funds":d,"The account does not exist":a}}})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(this.extend({show_details:!0},e)),s=[],i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeValue(t,"id"),a=this.safeValue(t,"name");let[n,o]=a.split("/");const c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o);n=n.toLowerCase(),o=o.toLowerCase();const h=c+"/"+d;s.push({id:r,symbol:h,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minimum_trading_amount"),max:void 0}},info:t})}return s}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTickersPair(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const s={markets:this.marketIds(e)},i=await this.publicGetTickersMulti(this.extend(s,t)),r=this.safeValue(i,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"market"),i=this.safeMarket(s);a[i.symbol]=this.parseTicker(t,i)}return this.filterByArray(a,"symbol",e)}parseTicker(e,t){const s=this.safeValue(e,"ticker",{}),i=this.safeTimestamp(e,"at"),r=this.safeSymbol(void 0,t);return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(s,"high"),low:this.safeString(s,"low"),bid:this.safeString(s,"buy"),bidVolume:void 0,ask:this.safeString(s,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(s,"last"),last:this.safeString(s,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(s,"volume"),quoteVolume:void 0,info:s},t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market:this.market(e).id};void 0!==t&&(i.limit=t);const r=await this.publicGetOrderBook(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,e,n)}async fetchOrderBooks(e,t,s={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const i={markets:this.marketIds(e)};void 0!==t&&(i.limit=t);const r=await this.publicGetOrderBookMulti(this.extend(i,s)),a=this.safeValue(r,"data",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"market"),i=this.safeSymbol(s),r=this.safeTimestamp(t,"timestamp");n[i]=this.parseOrderBook(t,i,r)}return n}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetTrades(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,s)}parseTrade(e,t){let s=this.safeValue(e,"side");"bid"===s?s="buy":"ask"===s&&(s="sell");const i=this.safeValue(e,"market"),r=this.safeSymbol(i,t);let a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));const n=this.safeString(e,"price"),o=this.safeString(e,"volume");return this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,id:this.safeString(e,"id"),order:void 0,type:"limit",takerOrMaker:void 0,side:s,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeTimestamp(t,"data")}async fetchTradingFees(e={}){const t=await this.publicGetFeesTrading(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeValue(t,"ask_fee",{}),a=this.safeValue(t,"bid_fee",{}),n=this.safeString(t,"market"),o=this.safeSymbol(n);i[o]={info:t,symbol:o,maker:this.safeNumber(r,"value"),taker:this.safeNumber(a,"value"),percentage:!0}}return i}async fetchKey(e={}){const t=await this.privateGetKey(e);return this.safeValue(t,"data")}parseBalance(e){const t=this.safeValue(e,"data"),s=this.safeValue(t,"accounts",[]),i={info:e};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeValue(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"balance"),n.used=this.safeString(t,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,side:s,ord_type:t,volume:this.amountToPrecision(e,i)};"limit"===t&&(o.price=this.priceToPrecision(e,r));const c=await this.privatePostOrders(this.extend(o,a)),d=this.safeValue(c,"data");return this.parseOrder(d,n)}async fetchOrder(e,t,s={}){let i,r=e;Array.isArray(e)||(r=[e]),await this.loadMarkets(),void 0!==t&&(i=this.market(t));const a={ids:r},n=await this.privateGetOrders(this.extend(a,s)),o=this.safeValue(n,"data"),c=o.length;if(void 0===o)throw new h(this.id+" could not found matching order");if(Array.isArray(e))return this.parseOrders(o,i);if(0===c)throw new h(this.id+" could not found matching order");return this.parseOrder(o[0],i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({states:["wait"]},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({states:["done","cancel"]},i))}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new n(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),a=this.safeValue(i,"states",["wait","done","cancel"]),o=this.omit(i,"states"),c={market:r.id,states:a,need_price:"True"};void 0!==s&&(c.limit=s);const d=await this.privateGetOrdersFilter(this.extend(c,o)),h=this.safeValue(d,"data",[]);let l=[];for(let e=0;e<h.length;e++){const i=this.safeValue(h[e],"orders",[]),a=this.parseOrderStatus(this.safeValue(h[e],"state")),n=this.parseOrders(i,r,t,s,{status:a});l=this.arrayConcat(l,n)}return l}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,period:this.timeframes[t]};void 0!==s&&(n.timestamp=s),void 0!==i&&(n.limit=i);const o=await this.publicPostK(this.extend(n,r)),c=this.safeValue(o,"data",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeValue(e,"state")),i=this.safeString2(e,"market","market_id"),r=this.safeSymbol(i,t);let a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));const n=this.safeString(e,"price"),o=this.safeString(e,"avg_price"),c=this.safeString(e,"volume"),d=this.safeString(e,"remaining_volume"),h=this.safeString(e,"executed_volume");return this.safeOrder({info:e,id:this.safeString(e,"id"),clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:this.safeValue(e,"ord_type"),timeInForce:void 0,postOnly:void 0,side:this.safeValue(e,"side"),price:n,stopPrice:void 0,average:o,amount:c,remaining:d,filled:h,status:s,cost:void 0,trades:void 0,fee:void 0},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}async createOrders(e,t,s={}){await this.loadMarkets();const i={market:this.market(e).id,orders:t},r=(await this.privatePostOrdersMulti(this.extend(i,s))).data;return this.parseOrders(r)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i=await this.privatePostOrderDelete(this.extend({id:e},s)),r=this.safeValue(i,"data");return this.parseOrder(r)}async cancelOrders(e,t,s={}){await this.loadMarkets();const i=await this.privatePostOrderDeleteMulti(this.extend({ids:e},s)),r=this.safeValue(i,"data");return this.parseOrders(r)}async cancelAllOrders(e,t={}){await this.loadMarkets();const s=await this.privatePostOrdersClear(t),i=this.safeValue(s,"data");return this.parseOrders(i)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)if("tickers_multi"===e||"order_book/multi"===e){let e="?";const t=this.safeValue(i,"markets");for(let s=0;s<t.length;s++)e+="markets[]="+t[s]+"&";const s=this.safeValue(i,"limit");void 0!==s&&(e+="limit="+s),n+=e}else Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){this.checkRequiredCredentials();const e={uid:this.apiKey,data:o};n+="?user_jwt="+this.jwt(e,this.encode(this.secret),"RS256")}return{url:n,method:s,body:a,headers:{"Content-Type":"application/json"}}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code"),l=this.safeString(o,"message");if(void 0!==h&&"0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.codes,h,e),this.throwExactlyMatchedException(this.exceptions.exact,l,e),new r(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],234:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,OnMaintenance:n,ArgumentsRequired:o,BadRequest:c,AccountSuspended:d,InvalidAddress:h,PermissionDenied:l,DDoSProtection:u,InsufficientFunds:f,InvalidNonce:p,CancelPending:m,InvalidOrder:g,OrderNotFound:y,AuthenticationError:b,RequestTimeout:v,NotSupported:w,BadSymbol:S,RateLimitExceeded:k}=e("./base/errors"),{TICK_SIZE:T}=e("./base/functions/number"),O=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"okcoin",name:"OKCoin",countries:["CN","US"],version:"v3",rateLimit:20,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:!0,option:void 0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchLedger:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:void 0,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2678400","3M":"8035200","6M":"16070400","1y":"31536000"},hostname:"okcoin.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg",api:{rest:"https://www.{hostname}"},www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513",test:{rest:"https://testnet.okex.com"}},api:{general:{get:{time:8.3334}},account:{get:{wallet:8.3334,"sub-account":1e3,"asset-valuation":1e3,"wallet/{currency}":8.3334,"withdrawal/history":8.3334,"withdrawal/history/{currency}":8.3334,ledger:5,"deposit/address":8.3334,"deposit/history":8.3334,"deposit/history/{currency}":8.3334,currencies:8.3334,"withdrawal/fee":8.3334,"deposit-lightning":50,"withdrawal-lightning":50,"fiat/deposit/detail":5,"fiat/deposit/details":8.3334,"fiat/withdraw/detail":5,"fiat/withdraw/details":8.3334,"fiat/channel":8.3334},post:{transfer:100,withdrawal:8.3334,"fiat/cancel_deposit":1,"fiat/deposit":8.3334,"fiat/withdraw":8.3334,"fiat/cancel_withdrawal":1}},otc:{get:{"rfq/instruments":50,"rfq/trade":50,"rfq/history":50},post:{"rfq/quote":50,"rfq/trade":50}},users:{get:{"subaccount-info":20,"account-info":20,"subaccount/apikey":20},post:{"create-subaccount":5,"delete-subaccount":5,"subaccount/apikey":50,"subacount/delete-apikey":20,"subacount/modify-apikey":20}},earning:{get:{offers:5,orders:5,positions:8.3334},post:{purchase:5,redeem:5,cancel:5}},spot:{get:{accounts:5,"accounts/{currency}":5,"accounts/{currency}/ledger":5,orders:10,orders_pending:5,"orders/{order_id}":5,"orders/{client_oid}":5,trade_fee:5,fills:10,algo:5,instruments:5,"instruments/{instrument_id}/book":5,"instruments/ticker":5,"instruments/{instrument_id}/ticker":5,"instruments/{instrument_id}/trades":5,"instruments/{instrument_id}/candles":5},post:{order_algo:2.5,orders:1,batch_orders:2,"cancel_orders/{order_id}":1,"cancel_orders/{client_oid}":1,cancel_batch_algos:5,cancel_batch_orders:5,"amend_order/{instrument_id}":2.5,amend_batch_orders:5}},margin:{get:{accounts:5,"accounts/{instrument_id}":5,"accounts/{instrument_id}/ledger":5,"accounts/availability":5,"accounts/{instrument_id}/availability":5,"accounts/borrowed":5,"accounts/{instrument_id}/borrowed":5,orders:10,"accounts/{instrument_id}/leverage":1,"orders/{order_id}":5,"orders/{client_oid}":5,orders_pending:5,fills:10,"instruments/{instrument_id}/mark_price":5},post:{"accounts/borrow":1,"accounts/repayment":1,orders:1,batch_orders:2,cancel_orders:1,"cancel_orders/{order_id}":1,"cancel_orders/{client_oid}":1,cancel_batch_orders:2,"amend_order/{instrument_id}":2.5,amend_batch_orders:5,"accounts/{instrument_id}/leverage":1}},system:{get:{status:250}},market:{get:{oracle:250}},futures:{get:["position","{instrument_id}/position","accounts","accounts/{underlying}","accounts/{underlying}/leverage","accounts/{underlying}/ledger","order_algo/{instrument_id}","orders/{instrument_id}","orders/{instrument_id}/{order_id}","orders/{instrument_id}/{client_oid}","fills","trade_fee","accounts/{instrument_id}/holds","order_algo/{instrument_id}","instruments","instruments/{instrument_id}/book","instruments/ticker","instruments/{instrument_id}/ticker","instruments/{instrument_id}/trades","instruments/{instrument_id}/candles","instruments/{instrument_id}/history/candles","instruments/{instrument_id}/index","rate","instruments/{instrument_id}/estimated_price","instruments/{instrument_id}/open_interest","instruments/{instrument_id}/price_limit","instruments/{instrument_id}/mark_price","instruments/{instrument_id}/liquidation"],post:["accounts/{underlying}/leverage","order","amend_order/{instrument_id}","orders","cancel_order/{instrument_id}/{order_id}","cancel_order/{instrument_id}/{client_oid}","cancel_batch_orders/{instrument_id}","accounts/margin_mode","close_position","cancel_all","order_algo","cancel_algos"]},swap:{get:["position","{instrument_id}/position","accounts","{instrument_id}/accounts","accounts/{instrument_id}/settings","accounts/{instrument_id}/ledger","orders/{instrument_id}","orders/{instrument_id}/{order_id}","orders/{instrument_id}/{client_oid}","fills","accounts/{instrument_id}/holds","trade_fee","order_algo/{instrument_id}","instruments","instruments/{instrument_id}/depth","instruments/ticker","instruments/{instrument_id}/ticker","instruments/{instrument_id}/trades","instruments/{instrument_id}/candles","instruments/{instrument_id}/history/candles","instruments/{instrument_id}/index","rate","instruments/{instrument_id}/open_interest","instruments/{instrument_id}/price_limit","instruments/{instrument_id}/liquidation","instruments/{instrument_id}/funding_time","instruments/{instrument_id}/mark_price","instruments/{instrument_id}/historical_funding_rate"],post:["accounts/{instrument_id}/leverage","order","amend_order/{instrument_id}","orders","cancel_order/{instrument_id}/{order_id}","cancel_order/{instrument_id}/{client_oid}","cancel_batch_orders/{instrument_id}","order_algo","cancel_algos","close_position","cancel_all","order_algo","cancel_algos"]},option:{get:["accounts","position","{underlying}/position","accounts/{underlying}","orders/{underlying}","fills/{underlying}","accounts/{underlying}/ledger","trade_fee","orders/{underlying}/{order_id}","orders/{underlying}/{client_oid}","underlying","instruments/{underlying}","instruments/{underlying}/summary","instruments/{underlying}/summary/{instrument_id}","instruments/{instrument_id}/book","instruments/{instrument_id}/trades","instruments/{instrument_id}/ticker","instruments/{instrument_id}/candles"],post:["order","orders","cancel_order/{underlying}/{order_id}","cancel_order/{underlying}/{client_oid}","cancel_batch_orders/{underlying}","amend_order/{underlying}","amend_batch_orders/{underlying}"]},information:{get:["{currency}/long_short_ratio","{currency}/volume","{currency}/taker","{currency}/sentiment","{currency}/margin"]},index:{get:["{instrument_id}/constituents"]}},fees:{trading:{taker:.002,maker:.001},spot:{taker:.0015,maker:.001}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r,"failure to get a peer from the ring-balancer":a,"Server is busy, please try again.":a,"An unexpected error occurred":r,"System error":r,4010:l,4001:r,4002:r,30001:b,30002:b,30003:b,30004:b,30005:p,30006:b,30007:c,30008:v,30009:r,30010:b,30011:l,30012:b,30013:b,30014:u,30015:b,30016:r,30017:r,30018:r,30019:a,30020:c,30021:c,30022:l,30023:c,30024:S,30025:c,30026:u,30027:b,30028:l,30029:d,30030:a,30031:c,30032:S,30033:c,30034:r,30035:r,30036:r,30037:a,30038:n,30044:v,32001:d,32002:l,32003:m,32004:r,32005:g,32006:g,32007:g,32008:g,32009:g,32010:r,32011:r,32012:r,32013:r,32014:r,32015:r,32016:r,32017:r,32018:r,32019:r,32020:r,32021:r,32022:r,32023:r,32024:r,32025:r,32026:r,32027:r,32028:r,32029:r,32030:g,32031:o,32038:b,32040:r,32044:r,32045:r,32046:r,32047:r,32048:g,32049:r,32050:g,32051:g,32052:r,32053:r,32057:r,32054:r,32055:g,32056:r,32058:r,32059:g,32060:g,32061:g,32062:g,32063:g,32064:r,32065:r,32066:r,32067:r,32068:r,32069:r,32070:r,32071:r,32072:r,32073:r,32074:r,32075:r,32076:r,32077:r,32078:r,32079:r,32080:r,32083:r,33001:l,33002:d,33003:f,33004:r,33005:r,33006:r,33007:r,33008:f,33009:r,33010:r,33011:r,33012:r,33013:g,33014:y,33015:g,33016:r,33017:f,33018:r,33020:r,33021:c,33022:g,33023:r,33024:g,33025:g,33026:r,33027:g,33028:g,33029:g,33034:r,33035:r,33036:r,33037:r,33038:r,33039:r,33040:r,33041:r,33042:r,33043:r,33044:r,33045:r,33046:r,33047:r,33048:r,33049:r,33050:r,33051:r,33059:c,33060:c,33061:r,33062:r,33063:r,33064:r,33065:r,33085:g,21009:r,34001:l,34002:h,34003:r,34004:r,34005:r,34006:r,34007:r,34008:f,34009:r,34010:r,34011:r,34012:r,34013:r,34014:r,34015:r,34016:l,34017:d,34018:b,34019:l,34020:l,34021:h,34022:r,34023:l,34026:k,34036:r,34037:r,34038:r,34039:r,35001:r,35002:r,35003:r,35004:r,35005:b,35008:g,35010:g,35012:g,35014:g,35015:g,35017:r,35019:g,35020:g,35021:g,35022:c,35024:c,35025:f,35026:c,35029:y,35030:g,35031:g,35032:r,35037:r,35039:f,35040:g,35044:r,35046:f,35047:f,35048:r,35049:g,35050:g,35052:f,35053:r,35055:f,35057:r,35058:r,35059:c,35060:c,35061:c,35062:g,35063:g,35064:g,35066:g,35067:g,35068:g,35069:g,35070:g,35071:g,35072:g,35073:g,35074:g,35075:g,35076:g,35077:g,35078:g,35079:g,35080:g,35081:g,35082:g,35083:g,35084:g,35085:g,35086:g,35087:g,35088:g,35089:g,35090:r,35091:r,35092:r,35093:r,35094:r,35095:c,35096:r,35097:r,35098:r,35099:r,35102:k,36001:c,36002:c,36005:r,36101:b,36102:l,36103:l,36104:l,36105:l,36106:l,36107:l,36108:f,36109:l,36201:l,36202:l,36203:g,36204:r,36205:c,36206:c,36207:g,36208:g,36209:g,36210:g,36211:g,36212:g,36213:g,36214:r,36216:y,36217:g,36218:g,36219:g,36220:g,36221:g,36222:g,36223:g,36224:g,36225:g,36226:g,36227:g,36228:g,36229:g,36230:g},broad:{}},precisionMode:T,options:{fetchOHLCV:{type:"Candles"},createMarketBuyOrderRequiresPrice:!0,fetchMarkets:["spot"],defaultType:"spot",accountsByType:{spot:"1",margin:"5",funding:"6"},accountsById:{1:"spot",5:"margin",6:"funding"},auth:{time:"public",currencies:"private",instruments:"public",rate:"public","{instrument_id}/constituents":"public"},warnOnFetchCurrenciesWithoutAuthorization:!1},commonCurrencies:{AE:"AET",BOX:"DefiBox",HOT:"Hydro Protocol",HSR:"HC",MAG:"Maggie",SBTC:"Super Bitcoin",TRADE:"Unitrade",YOYO:"YOYOW",WIN:"WinToken"}})}async fetchTime(e={}){const t=await this.generalGetTime(e);return this.parse8601(this.safeString(t,"iso"))}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets");let s=[];for(let i=0;i<t.length;i++){const r=await this.fetchMarketsByType(t[i],e);s=this.arrayConcat(s,r)}return s}parseMarkets(e){const t=[];for(let s=0;s<e.length;s++)t.push(this.parseMarket(e[s]));return t}parseMarket(e){const t=this.safeString(e,"instrument_id");let s=this.safeValue(e,"option_type");const i=this.safeNumber(e,"contract_val"),r=void 0!==i,a=this.safeString(e,"alias");let n="spot";const o=!r,c=void 0!==s,d=!c&&void 0!==a,h=r&&!d&&!c;let l=this.safeString(e,"base_currency"),u=this.safeString(e,"quote_currency");const f=this.safeString(e,"settlement_currency");if(c){const t=this.safeString(e,"underlying").split("-");l=this.safeString(t,0),u=this.safeString(t,1),n="option"}else d?(l=this.safeString(e,"underlying_index"),n="futures"):h&&(n="swap");const p=this.safeCurrencyCode(l),m=this.safeCurrencyCode(u),g=this.safeCurrencyCode(f);let y,b=p+"/"+m,v=this.safeString(e,"delivery");const w=this.safeValue(e,"strike");r&&(b=b+":"+g,(d||c)&&(d&&(v+="T00:00:00Z"),y=this.parse8601(v),b=b+"-"+this.yymmdd(y),c&&(b=b+":"+w+":"+s,s="C"===s?"call":"put")));const S=this.safeNumber2(e,"lot_size","trade_increment"),k=this.safeString(e,"tick_size"),T=this.safeString2(e,"min_size","base_min_size"),_=this.parseNumber(T);let x;void 0!==_&&void 0!==k&&(x=this.parseNumber(O.stringMul(k,T)));const M=this.safeValue2(this.fees,n,"trading",{}),I=this.safeString(e,"max_leverage","1"),C=this.parseNumber(O.stringMax(I,"1")),P=this.parseNumber(k);return this.extend(M,{id:t,symbol:b,base:p,quote:m,settle:g,baseId:l,quoteId:u,settleId:f,type:n,spot:o,margin:o&&O.stringGt(I,"1"),swap:h,future:d,futures:d,option:c,active:!0,contract:r,linear:r?m===g:void 0,inverse:r?p===g:void 0,contractSize:i,expiry:y,expiryDatetime:this.iso8601(y),strike:w,optionType:s,precision:{amount:this.safeNumber(e,"size_increment",S),price:P},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(C)},amount:{min:_,max:void 0},price:{min:P,max:void 0},cost:{min:x,max:void 0}},info:e})}async fetchMarketsByType(e,t={}){if("option"===e){const e=await this.optionGetUnderlying(t);let s=[];for(let t=0;t<e.length;t++){const i=await this.optionGetInstrumentsUnderlying({underlying:e[t]});s=this.arrayConcat(s,i)}return this.parseMarkets(s)}if("spot"===e||"futures"===e||"swap"===e){const s=e+"GetInstruments",i=await this[s](t);return this.parseMarkets(i)}throw new w(this.id+" fetchMarketsByType() does not support market type "+e)}async fetchCurrencies(e={}){if(this.checkRequiredCredentials(!1)){const t=await this.accountGetCurrencies(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(i,"name"),o=this.safeInteger(i,"can_deposit"),c=this.safeInteger(i,"can_withdraw"),d=1===o,h=1===c,l=!(!o||!c);s[a]={id:r,code:a,info:i,type:void 0,name:n,active:l,deposit:d,withdraw:h,fee:void 0,precision:this.parseNumber("0.00000001"),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(i,"min_withdrawal"),max:void 0}}}}return s}if(this.options.warnOnFetchCurrenciesWithoutAuthorization)throw new r(this.id+' fetchCurrencies() is a private API endpoint that requires authentication with API keys. Set the API keys on the exchange instance or exchange.options["warnOnFetchCurrenciesWithoutAuthorization"] = false to suppress this warning message.')}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e);let r=i.type+"GetInstrumentsInstrumentId";r+="swap"===i.type?"Depth":"Book";const a={instrument_id:i.id};void 0!==t&&(a.size=t);const n=await this[r](this.extend(a,s)),o=this.parse8601(this.safeString2(n,"timestamp","time"));return this.parseOrderBook(n,e,o)}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"timestamp")),i=this.safeString(e,"instrument_id"),r=(t=this.safeMarket(i,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open_24h");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high_24h"),low:this.safeString(e,"low_24h"),bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"base_volume_24h"),quoteVolume:this.safeString(e,"quote_volume_24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=s.type+"GetInstrumentsInstrumentIdTicker",r={instrument_id:s.id},a=await this[i](this.extend(r,t));return this.parseTicker(a)}async fetchTickersByType(e,t,s={}){await this.loadMarkets();const i=e+"GetInstrumentsTicker",r=await this[i](s),a={};for(let e=0;e<r.length;e++){const t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArray(a,"symbol",t)}async fetchTickers(e,t={}){const s=this.safeString2(this.options,"fetchTickers","defaultType"),i=this.safeString(t,"type",s);return await this.fetchTickersByType(i,e,this.omit(t,"type"))}parseTrade(e,t){let s;const i=this.safeString(e,"instrument_id");let r,a;if(i in this.markets_by_id)s=(t=this.markets_by_id[i]).symbol,r=t.base,a=t.quote;else if(void 0!==i){const e=i.split("-");if(2===e.length){const[t,i]=e;r=this.safeCurrencyCode(t),a=this.safeCurrencyCode(i),s=r+"/"+a}else s=i}void 0===s&&void 0!==t&&(s=t.symbol,r=t.base,a=t.quote);const n=this.parse8601(this.safeString2(e,"timestamp","created_at")),o=this.safeString(e,"price");let c=this.safeString2(e,"size","qty");c=this.safeString(e,"order_qty",c);let d=this.safeString2(e,"exec_type","liquidity");"M"===d?d="maker":"T"===d&&(d="taker");const h=this.safeString(e,"side"),l=this.safeString(e,"fee");let u;if(void 0!==l){const e="buy"===h?r:a;u={cost:O.stringNeg(l),currency:e}}const f=this.safeString(e,"order_id");return this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:s,id:this.safeString2(e,"trade_id","ledger_id"),order:f,type:void 0,takerOrMaker:d,side:h,price:o,amount:c,cost:void 0,fee:u},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=r.type+"GetInstrumentsInstrumentIdTrades";(void 0===s||s>100)&&(s=100);const n={instrument_id:r.id,limit:s},o=await this[a](this.extend(n,i));return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){if(Array.isArray(e)){const t=e.length>6?6:5;let s=this.safeValue(e,0);return"string"==typeof s&&(s=this.parse8601(s)),[s,this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,t)]}return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.parseTimeframe(t),o={instrument_id:a.id,granularity:this.timeframes[t]},c=this.safeValue(this.options,"fetchOHLCV",{}),d=this.safeString(c,"type","Candles"),h=this.safeString(r,"type",d);r=this.omit(r,"type");const l=a.type+"GetInstrumentsInstrumentId"+h;if("Candles"===h){if(void 0!==s)void 0!==i&&(o.end=this.iso8601(this.sum(s,i*n*1e3))),o.start=this.iso8601(s);else if(void 0!==i){const e=this.milliseconds();o.start=this.iso8601(e-i*n*1e3),o.end=this.iso8601(e)}}else if("HistoryCandles"===h){if(a.option)throw new w(this.id+" fetchOHLCV() does not have "+h+" for "+a.type+" markets");if(void 0!==s)void 0===i&&(i=300),o.start=this.iso8601(this.sum(s,i*n*1e3)),o.end=this.iso8601(s);else if(void 0!==i){const e=this.milliseconds();o.end=this.iso8601(e-i*n*1e3),o.start=this.iso8601(e)}}const u=await this[l](this.extend(o,r));return this.parseOHLCVs(u,a,t,s,i)}parseAccountBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"balance"),n.used=this.safeString(i,"hold"),n.free=this.safeString(i,"available"),t[a]=n}return this.safeBalance(t)}parseMarginBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"instrument_id"),a=this.safeValue(this.markets_by_id,r);let n;if(void 0===a){const[e,t]=r.split("-");n=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t)}else n=a.symbol;const o=this.omit(i,["instrument_id","liquidation_price","product_id","risk_rate","margin_ratio","maint_margin_ratio","tiers"]),c=Object.keys(o),d={};for(let e=0;e<c.length;e++){const t=c[e],s=i[t];if(!(t.indexOf(":")>=0))throw new w(this.id+" margin balance response format has changed!");{const e=t.split(":")[1],i=this.safeCurrencyCode(e),r=this.account();r.total=this.safeString(s,"balance"),r.used=this.safeString(s,"hold"),r.free=this.safeString(s,"available"),d[i]=r}}t[n]=this.safeBalance(d)}return t}parseFuturesBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"info",{}),i=Object.keys(s);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=this.safeValue(s,r,{}),o=this.account(),c=this.safeString(n,"total_avail_balance");if("fixed"===this.safeString(n,"margin_mode")){const e=this.safeValue(n,"contracts",[]);let t=c;for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"fixed_balance"),a=this.safeString(i,"realized_pnl"),n=this.safeString(i,"margin_frozen"),o=this.safeString(i,"margin_for_unfilled"),c=O.stringSub(O.stringSub(O.stringAdd(r,a),n),o);t=O.stringAdd(t,c)}o.free=t}else{const e=this.safeString(n,"realized_pnl"),t=this.safeString(n,"unrealized_pnl"),s=this.safeString(n,"margin_frozen"),i=this.safeString(n,"margin_for_unfilled"),r=O.stringAdd(O.stringAdd(c,e),t);o.free=O.stringSub(O.stringSub(r,s),i)}o.total=this.safeString(n,"equity"),t[a]=o}return this.safeBalance(t)}parseSwapBalance(e){const t={info:e};let s;const i=this.safeValue(e,"info",[]);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"instrument_id");let n=a;a in this.markets_by_id&&(n=this.markets_by_id[a].symbol);const o=this.parse8601(this.safeString(r,"timestamp"));s=void 0===s?o:Math.max(s,o);const c=this.account();c.total=this.safeString(r,"equity"),c.free=this.safeString(r,"total_avail_balance"),t[n]=c}return t.timestamp=s,t.datetime=this.iso8601(s),this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeString2(this.options,"fetchBalance","defaultType"),s=this.safeString(e,"type",t);if(void 0===s)throw new o(this.id+" fetchBalance() requires a type parameter (one of 'account', 'spot', 'margin', 'futures', 'swap')");await this.loadMarkets();const i=s+"Get"+("account"===s?"Wallet":"Accounts"),r=this.omit(e,"type"),a=await this[i](r);return this.parseBalanceByType(s,a)}parseBalanceByType(e,t){if("account"===e||"spot"===e)return this.parseAccountBalance(t);if("margin"===e)return this.parseMarginBalance(t);if("futures"===e)return this.parseFuturesBalance(t);if("swap"===e)return this.parseSwapBalance(t);throw new w(this.id+" fetchBalance does not support the '"+e+"' type (the type must be one of 'account', 'spot', 'margin', 'futures', 'swap')")}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);let o={instrument_id:n.id};const c=this.safeString2(a,"client_oid","clientOrderId");let d;if(void 0!==c&&(o.client_oid=c,a=this.omit(a,["client_oid","clientOrderId"])),n.futures||n.swap){const s=n.futures?this.numberToString(i):this.amountToPrecision(e,i);o=this.extend(o,{type:t,size:s});const c=this.safeString(a,"order_type");"market"===t||"4"===c?o.order_type="4":o.price=this.priceToPrecision(e,r),n.futures&&(o.leverage="10"),d=n.type+"PostOrder"}else{const n=this.safeString(a,"margin_trading","1");if(o=this.extend(o,{side:s,type:t,margin_trading:n}),"limit"===t)o.price=this.priceToPrecision(e,r),o.size=this.amountToPrecision(e,i);else if("market"===t)if("buy"===s){let t=this.safeNumber(a,"notional");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==r)void 0===t&&(t=i*r);else if(void 0===t)throw new g(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'notional' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?i:t;o.notional=this.costToPrecision(e,t)}else o.size=this.amountToPrecision(e,i);d="2"===n?"marginPostOrders":"spotPostOrders"}const h=await this[d](this.extend(o,a)),l=this.parseOrder(h,n);return this.extend(l,{type:t,side:s})}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t);let r;if(i.futures||i.swap)r=i.type;else{const e=this.safeString2(this.options,"cancelOrder","defaultType",i.type);r=this.safeString(s,"type",e)}if(void 0===r)throw new o(this.id+" cancelOrder() requires a type parameter (one of 'spot', 'margin', 'futures', 'swap').");let a=r+"PostCancelOrder";const n={instrument_id:i.id};i.futures||i.swap?a+="InstrumentId":a+="s";const c=this.safeString2(s,"client_oid","clientOrderId");void 0!==c?(a+="ClientOid",n.client_oid=c):(a+="OrderId",n.order_id=e);const d=this.omit(s,["type","client_oid","clientOrderId"]),h=await this[a](this.extend(n,d)),l="result"in h?h:this.safeValue(h,i.id,{});return this.parseOrder(l,i)}parseOrderStatus(e){return this.safeString({"-2":"failed","-1":"canceled",0:"open",1:"open",2:"closed",3:"open",4:"canceled"},e,e)}parseOrderSide(e){return this.safeString({1:"buy",2:"sell",3:"sell",4:"buy"},e,e)}parseOrder(e,t){const s=this.safeString(e,"order_id"),i=this.parse8601(this.safeString(e,"timestamp"));let r=this.safeString(e,"side");const a=this.safeString(e,"type");"buy"!==r&&"sell"!==r&&(r=this.parseOrderSide(a));const n=this.safeString(e,"instrument_id");t=this.safeMarket(n,t);let o=this.safeString(e,"size");const c=this.safeString2(e,"filled_size","filled_qty");let d;void 0!==o&&void 0!==c&&(o=O.stringMax(o,c),d=O.stringMax("0",O.stringSub(o,c))),"market"===a&&(d="0");let h=this.safeString2(e,"filled_notional","funds");const l=this.safeString(e,"price");let u=this.safeString(e,"price_avg");void 0===h?void 0!==c&&void 0!==u&&(h=O.stringMul(u,c)):void 0===u&&void 0!==c&&O.stringGt(c,"0")&&(u=O.stringDiv(h,c));const f=this.parseOrderStatus(this.safeString(e,"state")),p=this.safeNumber(e,"fee");let m;if(void 0!==p){m={cost:p,currency:void 0}}let g=this.safeString(e,"client_oid");void 0!==g&&g.length<1&&(g=void 0);const y=this.safeNumber(e,"trigger_price");return this.safeOrder({info:e,id:s,clientOrderId:g,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:t.symbol,type:a,timeInForce:void 0,postOnly:void 0,side:r,price:l,stopPrice:y,average:u,cost:h,amount:o,filled:c,remaining:d,status:f,fee:m,trades:void 0},t)}async fetchOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=this.safeString2(this.options,"fetchOrder","defaultType",i.type),a=this.safeString(s,"type",r);if(void 0===a)throw new o(this.id+" fetchOrder() requires a type parameter (one of 'spot', 'margin', 'futures', 'swap').");let n=a+"GetOrders"+(i.futures||i.swap?"InstrumentId":"");const c={instrument_id:i.id},d=this.safeString(s,"client_oid");void 0!==d?(n+="ClientOid",c.client_oid=d):(n+="OrderId",c.order_id=e);const h=this.omit(s,"type"),l=await this[n](this.extend(c,h));return this.parseOrder(l)}async fetchOrdersByState(e,t,s,i,r={}){if(void 0===t)throw new o(this.id+" fetchOrdersByState() requires a symbol argument");await this.loadMarkets();const a=this.market(t);let n;if(a.futures||a.swap)n=a.type;else{const e=this.safeString2(this.options,"fetchOrder","defaultType",a.type);n=this.safeString(r,"type",e)}if(void 0===n)throw new o(this.id+" fetchOrdersByState() requires a type parameter (one of 'spot', 'margin', 'futures', 'swap').");const c={instrument_id:a.id,state:e};let d=n+"GetOrders";(a.futures||a.swap)&&(d+="InstrumentId");const h=this.omit(r,"type"),l=await this[d](this.extend(c,h));let u;if(a.swap||a.futures)u=this.safeValue(l,"order_info",[]);else{u=l;const e=l.length;if(e<1)return[];if(e>1){void 0!==this.safeValue(l[1],"before")&&(u=l[0])}}return this.parseOrders(u,a,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByState("6",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByState("7",e,t,s,i)}parseDepositAddress(e,t){const s=this.safeString(e,"address");let i=this.safeString2(e,"tag","payment_id");i=this.safeString2(e,"memo","Memo",i);const r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r);return this.checkAddress(s),{currency:a,address:s,tag:i,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=e.split("-"),i={currency:this.currency(s[0]).id},r=await this.accountGetDepositAddress(this.extend(i,t)),a=this.parseDepositAddresses(r),n=this.safeValue(a,e);if(void 0===n)throw new h(this.id+" fetchDepositAddress() cannot return nonexistent addresses, you should create withdrawal addresses with the exchange website first");return n}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),c=this.safeString(n,s,s),d=this.safeString(n,i,i),h={amount:this.currencyToPrecision(e,t),currency:a.id,from:c,to:d,type:"0"};if("main"===c)h.type="1",h.sub_account=d,h.to="0";else if("main"===d)h.type="2",h.sub_account=c,h.from="0",h.to="6";else if("5"===c||"5"===d){let e=this.safeString2(r,"instrument_id","to_instrument_id");if(void 0===e){const t=this.safeString(r,"symbol");if(void 0===t)throw new o(this.id+" transfer() requires an exchange-specific instrument_id parameter or a unified symbol parameter");r=this.omit(r,"symbol");e=this.market(t).id;"5"===c&&(h.instrument_id=e),"5"===d&&(h.to_instrument_id=e)}}const l=await this.accountPostTransfer(this.extend(h,r));return this.parseTransfer(l,a)}parseTransfer(e,t){const s=this.safeValue(this.options,"accountsById",{});return{info:e,id:this.safeString(e,"transfer_id"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(this.safeString(e,"currency"),t),amount:this.safeNumber(e,"amount"),fromAccount:this.safeString(s,this.safeString(e,"from")),toAccount:this.safeString(s,this.safeString(e,"to")),status:this.parseTransferStatus(this.safeString(e,"result"))}}parseTransferStatus(e){return this.safeString({true:"ok"},e,"failed")}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e);i&&(s=s+":"+i);const c=this.safeString(a,"fee");if(void 0===c)throw new o(this.id+" withdraw() requires a 'fee' string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKEx are fee-free, please set '0'. Withdrawing to external digital asset address requires network transaction fee.");const d={currency:n.id,to_address:s,destination:"4",amount:this.numberToString(t),fee:c};"password"in a?d.trade_pwd=a.password:"trade_pwd"in a?d.trade_pwd=a.trade_pwd:this.password&&(d.trade_pwd=this.password);const h=this.omit(a,["fee","password","trade_pwd"]);if(!("trade_pwd"in d))throw new r(this.id+" withdraw() requires this.password set on the exchange instance or a password / trade_pwd parameter");const l=await this.accountPostWithdrawal(this.extend(d,h));return this.parseTransaction(l,n)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="accountGetDepositHistory";void 0!==e&&(a=this.currency(e),r.currency=a.id,n+="Currency");const o=await this[n](this.extend(r,i));return this.parseTransactions(o,a,t,s,i)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a,n="accountGetWithdrawalHistory";void 0!==e&&(a=this.currency(e),r.currency=a.id,n+="Currency");const o=await this[n](this.extend(r,i));return this.parseTransactions(o,a,t,s,i)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending"},e,e)}parseTransaction(e,t){let s,i,r;const a=this.safeString(e,"withdrawal_id"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),c=this.safeString(e,"tag");void 0!==a?(s="withdrawal",i=a,r=o):(i=this.safeString2(e,"payment_id","deposit_id"),s="deposit",r=o);const d=this.safeString(e,"currency"),h=this.safeCurrencyCode(d),l=this.safeNumber(e,"amount"),u=this.parseTransactionStatus(this.safeString(e,"status")),f=this.safeString(e,"txid"),p=this.parse8601(this.safeString(e,"timestamp"));let m;if("deposit"===s)m=0;else if(void 0!==d){const t=this.safeString(e,"fee");if(void 0!==t){const e=d.toLowerCase(),s=t.replace(e,"");m=parseFloat(s)}}return{info:e,id:i,currency:h,amount:l,network:void 0,addressFrom:n,addressTo:o,address:r,tagFrom:void 0,tagTo:c,tag:c,status:u,type:s,updated:void 0,txid:f,timestamp:p,datetime:this.iso8601(p),fee:{currency:h,cost:m}}}parseMyTrade(e,t){const s=this.safeValue(e,1),i=this.safeValue(e,0),r=this.safeString(i,"instrument_id");if(r!==this.safeString(s,"instrument_id"))throw new w(this.id+" parseMyTrade() received unrecognized response format, differing instrument_ids in one fill, the exchange API might have changed, paste your verbose output: https://github.com/ccxt/ccxt/wiki/FAQ#what-is-required-to-get-help");const a=r,n=(t=this.safeMarket(a,t)).symbol,o=t.quoteId;let c,d,h;let l;this.safeString(s,"currency")===o?(c=this.safeString(i,"side"),d=this.safeString(i,"size"),h=this.safeString(s,"size"),l=this.safeString(i,"currency")):(c=this.safeString(s,"side"),d=this.safeString(s,"size"),h=this.safeString(i,"size"),l=this.safeString(s,"currency"));const u=this.safeString(s,"trade_id"),f=this.safeString(s,"price"),p=this.safeString(i,"fee"),m=this.safeString(s,"fee"),g=this.safeCurrencyCode(this.safeString(i,"currency")),y=this.safeCurrencyCode(this.safeString(s,"currency"));let b,v;void 0===p||O.stringEquals(p,"0")?b=void 0===m||O.stringEquals(m,"0")?{cost:"0",currency:this.safeCurrencyCode(l)}:{cost:O.stringNeg(m),currency:y}:void 0===m||O.stringEquals(m,"0")?b={cost:O.stringNeg(p),currency:g}:v=[{cost:O.stringNeg(p),currency:g},{cost:O.stringNeg(m),currency:y}];const S=this.parse8601(this.safeString2(s,"timestamp","created_at"));let k=this.safeString2(s,"exec_type","liquidity");"M"===k?k="maker":"T"===k&&(k="taker");const T=this.safeString(s,"order_id");return this.safeTrade({info:e,timestamp:S,datetime:this.iso8601(S),symbol:n,id:u,order:T,type:void 0,takerOrMaker:k,side:c,price:f,amount:d,cost:h,fee:b,fees:v},t)}parseMyTrades(e,t,s,i,r={}){const a=this.groupBy(e,"trade_id"),n=Object.keys(a),o=[];for(let e=0;e<n.length;e++){const t=a[n[e]];if(2===t.length){const e=this.parseMyTrade(t);o.push(e)}}return t=this.safeMarket(void 0,t),this.filterBySymbolSinceLimit(o,t.symbol,s,i)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e);void 0!==s&&s>100&&(s=100);const a={instrument_id:r.id},n=this.safeString2(this.options,"fetchMyTrades","defaultType"),c=this.safeString(i,"type",n),d=this.omit(i,"type"),h=c+"GetFills",l=await this[h](this.extend(a,d));return this.parseMyTrades(l,r,t,s,i)}async fetchOrderTrades(e,t,s,i,r={}){const a={order_id:e};return await this.fetchMyTrades(t,s,i,this.extend(a,r))}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e);let i;const r={instrument_id:s.id},a=s.type;if("futures"===a||"swap"===a)i=a+"GetInstrumentIdPosition";else{if("option"!==a)throw new w(this.id+" fetchPosition() does not support "+a+" market "+e+", supported market types are futures, swap or option");if(void 0===this.safeString(t,"underlying"))throw new o(this.id+" fetchPosition() requires an underlying parameter for "+a+" market "+e);i=a+"GetUnderlyingPosition"}return await this[i](this.extend(r,t))}async fetchPositions(e,t={}){let s;await this.loadMarkets();const i=this.safeString2(this.options,"fetchPositions","defaultType"),r=this.safeString(t,"type",i);if("futures"===r||"swap"===r)s=r+"GetPosition";else{if("option"!==r)throw new w(this.id+" fetchPositions() does not support "+r+" markets, supported market types are futures, swap or option");if(void 0===this.safeString(t,"underlying"))throw new o(this.id+" fetchPositions() requires an underlying parameter for "+r+" markets");s=r+"GetUnderlyingPosition"}t=this.omit(t,"type");return await this[s](t)}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r=this.safeString2(this.options,"fetchLedger","defaultType"),a=this.safeString(i,"type",r),n=this.omit(i,"type"),c="account"===a?"":"Accounts";let d="";const h={};let l;if(void 0!==s&&(h.limit=s),"spot"===a){if(void 0===e)throw new o(this.id+" fetchLedger() requires a currency code argument for '"+a+"' markets");d="Currency",l=this.currency(e),h.currency=l.id}else if("futures"===a){if(void 0===e)throw new o(this.id+" fetchLedger() requires an underlying symbol for '"+a+"' markets");d="Underlying";const t=this.market(e),s=this.safeValue(t,"info",{}),i=this.safeString(s,"settlement_currency"),r=this.safeCurrencyCode(i);l=this.currency(r);const n=this.safeString(s,"underlying");h.underlying=n}else if("margin"===a||"swap"===a){if(void 0===e)throw new o(this.id+" fetchLedger() requires a code argument (a market symbol) for '"+a+"' markets");d="InstrumentId";const t=this.market(e);l=this.currency(t.base),h.instrument_id=t.id}else{if("account"!==a)throw new w(this.id+" fetchLedger does not support the '"+a+"' type (the type must be one of 'account', 'spot', 'margin', 'futures', 'swap')");void 0!==e&&(l=this.currency(e),h.currency=l.id)}const u=a+"Get"+c+d+"Ledger",f=await this[u](this.extend(h,n));if(f.length<1)return[];const p=Array.isArray(f[0]),m="margin"===a&&p?f[0]:f;if("swap"===a){const i=this.parseLedger(m);return this.filterBySymbolSinceLimit(i,e,t,s)}return this.parseLedger(m,l,t,s)}parseLedgerEntryType(e){return this.safeString({transfer:"transfer",trade:"trade",rebate:"rebate",match:"trade",fee:"fee",settlement:"trade",liquidation:"trade",funding:"fee",margin:"margin"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"ledger_id"),i=this.safeValue(e,"details",{}),r=this.safeString(i,"order_id"),a=this.parseLedgerEntryType(this.safeString(e,"type")),n=this.safeCurrencyCode(this.safeString(e,"currency"),t),o=this.safeNumber(e,"amount"),c=this.parse8601(this.safeString(e,"timestamp")),d={cost:this.safeNumber(e,"fee"),currency:n},h=this.safeNumber(e,"balance"),l=this.safeString(e,"instrument_id");let u;if(l in this.markets_by_id){u=this.markets_by_id[l].symbol}return{info:e,id:s,account:undefined,referenceId:r,referenceAccount:undefined,type:a,currency:n,symbol:u,amount:o,before:undefined,after:h,status:"ok",timestamp:c,datetime:this.iso8601(c),fee:d}}sign(e,t="public",s="GET",i={},r,a){const n=Array.isArray(i);let o="/api/"+t+"/"+this.version+"/";o+=n?e:this.implodeParams(e,i);const c=n?i:this.omit(i,this.extractParams(e));let d=this.implodeHostname(this.urls.api.rest)+o;const h=this.getPathAuthenticationType(e);if("public"===h||"information"===h)Object.keys(c).length&&(d+="?"+this.urlencode(c));else if("private"===h){this.checkRequiredCredentials();const e=this.iso8601(this.milliseconds());r={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":e};let t=e+s+o;if("GET"===s){if(Object.keys(c).length){const e="?"+this.urlencode(c);d+=e,t+=e}}else(n||Object.keys(c).length)&&(t+=a=this.json(c)),r["Content-Type"]="application/json";const i=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64");r["OK-ACCESS-SIGN"]=i}return{url:d,method:s,body:a,headers:r}}getPathAuthenticationType(e){if("underlying"===e)return"public";const t=this.safeValue(this.options,"auth",{}),s=this.findBroadlyMatchedKey(t,e);return this.safeString(t,s,"private")}handleErrors(e,t,s,i,n,o,c,d,h){if(!c)return;const l=this.id+" "+o;if(503===e)throw new a(l);const u=this.safeString(c,"message"),f=this.safeString2(c,"code","error_code"),p=void 0!==u&&""!==u,m=void 0!==f&&"0"!==f;if(p&&(this.throwExactlyMatchedException(this.exceptions.exact,u,l),this.throwBroadlyMatchedException(this.exceptions.broad,u,l)),m&&this.throwExactlyMatchedException(this.exceptions.exact,f,l),m||p)throw new r(l)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],235:[function(e,t,s){"use strict";const i=e("./okx.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"okex",alias:!0})}}},{"./okx.js":237}],236:[function(e,t,s){"use strict";const i=e("./okex.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"okex5",alias:!0})}}},{"./okex.js":235}],237:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,OnMaintenance:n,ArgumentsRequired:o,BadRequest:c,AccountSuspended:d,InvalidAddress:h,PermissionDenied:l,InsufficientFunds:u,InvalidNonce:f,InvalidOrder:p,OrderNotFound:m,AuthenticationError:g,RequestTimeout:y,BadSymbol:b,RateLimitExceeded:v,NetworkError:w,CancelPending:S,NotSupported:k,AccountNotEnabled:T}=e("./base/errors"),{TICK_SIZE:O}=e("./base/functions/number"),_=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"okx",name:"OKX",countries:["CN","US"],version:"v5",rateLimit:100,pro:!0,certified:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!0,fetchBorrowRateHistory:!0,fetchBorrowRates:!0,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchL3OrderBook:!1,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPermissions:void 0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTradingLimits:void 0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!0,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6Hutc","12h":"12Hutc","1d":"1Dutc","1w":"1Wutc","1M":"1Mutc","3M":"3Mutc","6M":"6Mutc","1y":"1Yutc"},hostname:"www.okx.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg",api:{rest:"https://{hostname}"},www:"https://www.okx.com",doc:"https://www.okx.com/docs-v5/en/",fees:"https://www.okx.com/pages/products/fees.html",referral:"https://www.okx.com/join/1888677",test:{rest:"https://{hostname}"}},api:{public:{get:{"market/tickers":1,"market/ticker":1,"market/index-tickers":1,"market/books":1,"market/candles":1,"market/history-candles":1,"market/index-candles":1,"market/mark-price-candles":1,"market/trades":1,"market/platform-24-volume":10,"market/open-oracle":100,"market/index-components":1,"public/instruments":1,"public/delivery-exercise-history":.5,"public/open-interest":1,"public/funding-rate":1,"public/funding-rate-history":1,"public/price-limit":1,"public/opt-summary":1,"public/estimated-price":2,"public/discount-rate-interest-free-quota":10,"public/time":2,"public/liquidation-orders":.5,"public/mark-price":2,"public/position-tiers":2,"public/underlying":1,"public/interest-rate-loan-quota":10,"public/vip-interest-rate-loan-quota":10,"rubik/stat/trading-data/support-coin":4,"rubik/stat/taker-volume":4,"rubik/stat/margin/loan-ratio":4,"rubik/stat/contracts/long-short-account-ratio":4,"rubik/stat/contracts/open-interest-volume":4,"rubik/stat/option/open-interest-volume":4,"rubik/stat/option/open-interest-volume-ratio":4,"rubik/stat/option/open-interest-volume-expiry":4,"rubik/stat/option/open-interest-volume-strike":4,"rubik/stat/option/taker-block-volume":4,"system/status":100,"asset/lending-rate-summary":5/3,"asset/lending-rate-history":5/3,"market/exchange-rate":20}},private:{get:{"account/account-position-risk":2,"account/balance":2,"account/positions":2,"account/bills":5/3,"account/bills-archive":5/3,"account/config":4,"account/max-size":1,"account/max-avail-size":1,"account/leverage-info":1,"account/max-loan":1,"account/trade-fee":4,"account/interest-accrued":4,"account/interest-rate":4,"account/max-withdrawal":1,"account/risk-state":2,"account/borrow-repay-history":4,"account/interest-limits":4,"asset/asset-valuation":.2,"asset/deposit-address":5/3,"asset/balances":5/3,"asset/transfer-state":10,"asset/deposit-history":5/3,"asset/withdrawal-history":5/3,"asset/currencies":5/3,"asset/bills":5/3,"asset/piggy-balance":5/3,"asset/deposit-lightning":5,"asset/lending-history":5/3,"asset/saving-balance":5/3,"trade/order":1/3,"trade/orders-pending":1,"trade/orders-history":.5,"trade/orders-history-archive":1,"trade/fills":1/3,"trade/fills-history":2,"trade/orders-algo-pending":1,"trade/orders-algo-history":1,"account/subaccount/balances":10,"asset/subaccount/bills":5/3,"users/subaccount/list":10,"users/subaccount/apikey":10,"users/entrust-subaccount-list":10,"broker/nd/info":10,"broker/nd/subaccount-info":10,"asset/broker/nd/subaccount-deposit-address":4,"asset/broker/nd/subaccount-deposit-history":4,"broker/nd/rebate-daily":1,"broker/nd/subaccount/apikey":10,"broker/nd/rebate-per-orders":300,"asset/convert/currencies":5/3,"asset/convert/currency-pair":5/3,"asset/convert/estimate-quote":5,"asset/convert/trade":5,"asset/convert/history":5/3,"account/greeks":2},post:{"account/set-position-mode":4,"account/set-leverage":1,"account/position/margin-balance":1,"account/set-greeks":4,"account/set-isolated-mode":4,"account/simulated_margin":10,"account/borrow-repay":5/3,"asset/transfer":10,"asset/withdrawal":5/3,"asset/purchase_redempt":5/3,"asset/withdrawal-lightning":5,"asset/set-lending-rate":5/3,"asset/cancel-withdrawal":5/3,"asset/convert-dust-assets":10,"trade/order":1/3,"trade/batch-orders":1/15,"trade/cancel-order":1/3,"trade/cancel-batch-orders":1/15,"trade/amend-order":1/3,"trade/amend-batch-orders":1/3,"trade/close-position":1,"trade/order-algo":1,"trade/cancel-algos":1,"trade/cancel-advance-algos":1,"users/subaccount/delete-apikey":10,"users/subaccount/modify-apikey":10,"users/subaccount/apikey":10,"asset/subaccount/transfer":10,"asset/subaccount/set-transfer-out":10,"broker/nd/create-subaccount":10,"broker/nd/delete-subaccount":10,"broker/nd/set-subaccount-level":4,"broker/nd/set-subaccount-fee-rate":4,"asset/broker/nd/subaccount-deposit-address":4,"broker/nd/subaccount/apikey":10,"broker/nd/subaccount/delete-apikey":10,"broker/nd/subaccount/modify-apikey":10,"broker/nd/rebate-per-orders":36e3}}},fees:{trading:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},spot:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},future:{taker:this.parseNumber("0.0005"),maker:this.parseNumber("0.0002")},swap:{taker:this.parseNumber("0.00050"),maker:this.parseNumber("0.00020")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r,2:r,5e4:c,50001:n,50002:c,50004:y,50005:a,50006:c,50007:d,50008:g,50009:d,50010:r,50011:v,50012:r,50013:a,50014:c,50015:r,50016:r,50017:r,50018:r,50019:r,50020:r,50021:r,50022:r,50023:r,50024:c,50025:r,50026:a,50027:l,50028:r,50100:r,50101:g,50102:f,50103:g,50104:g,50105:g,50106:g,50107:g,50108:r,50109:r,50110:l,50111:g,50112:g,50113:g,50114:g,50115:c,51e3:c,51001:b,51002:b,51003:c,51004:p,51005:p,51006:p,51007:p,51008:u,51009:d,51010:T,51011:p,51012:b,51014:b,51015:b,51016:p,51017:r,51018:r,51019:r,51020:p,51021:b,51022:b,51023:r,51024:d,51025:r,51026:b,51027:b,51028:b,51029:b,51030:b,51031:p,51100:p,51101:p,51102:p,51103:p,51104:p,51105:p,51106:p,51107:p,51108:p,51109:p,51110:p,51111:c,51112:p,51113:v,51115:p,51116:p,51117:p,51118:p,51119:u,51120:p,51121:p,51122:p,51124:p,51125:p,51126:p,51127:u,51128:p,51129:p,51130:b,51131:u,51132:p,51133:p,51134:p,51135:p,51136:p,51137:p,51138:p,51139:p,51201:p,51202:p,51203:p,51204:p,51205:p,51250:p,51251:p,51252:p,51253:p,51254:p,51255:p,51256:p,51257:p,51258:p,51259:p,51260:p,51261:p,51262:p,51263:p,51264:p,51265:p,51267:p,51268:p,51269:p,51270:p,51271:p,51272:p,51273:p,51274:p,51275:p,51276:p,51277:p,51278:p,51279:p,51280:p,51400:m,51401:m,51402:m,51403:p,51404:p,51405:r,51406:r,51407:c,51408:r,51409:r,51410:S,51500:r,51501:r,51502:u,51503:r,51506:r,51508:r,51509:r,51510:r,51511:r,51600:r,51601:r,51602:r,51603:m,52e3:r,54e3:r,54001:r,58e3:r,58001:g,58002:l,58003:r,58004:d,58005:r,58006:r,58007:r,58100:r,58101:d,58102:v,58103:r,58104:r,58105:r,58106:r,58107:r,58108:r,58109:r,58110:r,58111:r,58112:r,58114:r,58115:r,58116:r,58117:r,58200:r,58201:r,58202:r,58203:h,58204:d,58205:r,58206:r,58207:h,58208:r,58209:r,58210:r,58211:r,58212:r,58213:g,58300:r,58350:u,59e3:r,59001:r,59100:r,59101:r,59102:r,59103:u,59104:r,59105:r,59106:r,59107:r,59108:u,59109:r,59200:u,59201:u,59300:r,59301:r,59401:r,59500:r,59501:r,59502:r,59503:r,59504:r,59505:r,59506:r,59507:r,59508:d,60001:g,60002:g,60003:g,60004:g,60005:g,60006:f,60007:g,60008:g,60009:g,60010:g,60011:g,60012:c,60013:c,60014:v,60015:w,60016:a,60017:c,60018:c,60019:c,63999:r},broad:{"server error":a}},httpExceptions:{429:a},precisionMode:O,options:{defaultNetwork:"ERC20",networks:{ETH:"ERC20",TRX:"TRC20",OMNI:"Omni",SOLANA:"Solana",POLYGON:"Polygon",OEC:"OEC",ALGO:"ALGO"},layerTwo:{Lightning:!0,Liquid:!0},fetchOpenInterestHistory:{timeframes:{"5m":"5m","1h":"1H","1d":"1D","5M":"5m","1H":"1H","1D":"1D"}},fetchOHLCV:{},createOrder:"privatePostTradeBatchOrders",createMarketBuyOrderRequiresPrice:!1,fetchMarkets:["spot","future","swap","option"],defaultType:"spot",defaultMarginMode:"cross",fetchLedger:{method:"privateGetAccountBills"},fetchOrder:{method:"privateGetTradeOrder"},fetchOpenOrders:{method:"privateGetTradeOrdersPending"},cancelOrders:{method:"privatePostTradeCancelBatchOrders"},fetchCanceledOrders:{method:"privateGetTradeOrdersHistory"},algoOrderTypes:{conditional:!0,trigger:!0,oco:!0,move_order_stop:!0,iceberg:!0,twap:!0},accountsByType:{spot:"1",future:"3",futures:"3",margin:"5",funding:"6",swap:"9",option:"12",trading:"18"},accountsById:{1:"spot",3:"future",5:"margin",6:"funding",9:"swap",12:"option",18:"trading"},exchangeType:{spot:"SPOT",margin:"MARGIN",swap:"SWAP",future:"FUTURES",futures:"FUTURES",option:"OPTION",SPOT:"SPOT",MARGIN:"MARGIN",SWAP:"SWAP",FUTURES:"FUTURES",OPTION:"OPTION"},brokerId:"e847386590ce4dBC"},commonCurrencies:{AE:"AET",BOX:"DefiBox",HOT:"Hydro Protocol",HSR:"HC",MAG:"Maggie",SBTC:"Super Bitcoin",TRADE:"Unitrade",YOYO:"YOYOW",WIN:"WinToken"}})}handleMarketTypeAndParams(e,t,s={}){const i=this.safeString(s,"instType");s=this.omit(s,"instType");return void 0===this.safeString(s,"type")&&void 0!==i&&(s.type=i),super.handleMarketTypeAndParams(e,t,s)}convertToInstrumentType(e){const t=this.safeValue(this.options,"exchangeType",{});return this.safeString(t,e,e)}async fetchStatus(e={}){const t=await this.publicGetSystemStatus(e),s=this.safeValue(t,"data",[]),i={updated:void 0,status:0===s.length?"ok":"maintenance",eta:void 0,url:void 0,info:t};for(let e=0;e<s.length;e++){const t=s[e];"ongoing"===this.safeString(t,"state")&&(i.eta=this.safeInteger(t,"end"),i.status="maintenance")}return i}async fetchTime(e={}){const t=await this.publicGetPublicTime(e),s=this.safeValue(t,"data",[]),i=this.safeValue(s,0,{});return this.safeInteger(i,"ts")}async fetchAccounts(e={}){const t=await this.privateGetAccountConfig(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"uid"),a=this.safeString(t,"acctLv");i.push({id:r,type:a,currency:void 0,info:t})}return i}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets");let s=[],i=[];for(let i=0;i<t.length;i++)s.push(this.fetchMarketsByType(t[i],e));s=await Promise.all(s);for(let e=0;e<s.length;e++)i=this.arrayConcat(i,s[e]);return i}parseMarkets(e){const t=[];for(let s=0;s<e.length;s++)t.push(this.parseMarket(e[s]));return t}parseMarket(e){const t=this.safeString(e,"instId");let s=this.safeStringLower(e,"instType");"futures"===s&&(s="future");const i="spot"===s,r="future"===s,a="swap"===s,n="option"===s,o=a||r||n;let c=this.safeString(e,"baseCcy"),d=this.safeString(e,"quoteCcy");const h=this.safeString(e,"settleCcy"),l=this.safeCurrencyCode(h),u=this.safeString(e,"uly");if(void 0!==u&&!i){const e=u.split("-");c=this.safeString(e,0),d=this.safeString(e,1)}const f=this.safeCurrencyCode(c),p=this.safeCurrencyCode(d);let m,g,y,b=f+"/"+p;if(o)if(b=b+":"+l,m=this.safeInteger(e,"expTime"),r){b=b+"-"+this.yymmdd(m)}else n&&(g=this.safeString(e,"stk"),y=this.safeString(e,"optType"),b=b+"-"+g+"-"+y,y="P"===y?"put":"call");const v=this.safeString(e,"tickSz"),w=this.safeString(e,"minSz"),S=this.parseNumber(w),k=this.safeValue2(this.fees,s,"trading",{}),T=this.parseNumber(v);let O=this.safeString(e,"lever","1");return O=_.stringMax(O,"1"),this.extend(k,{id:t,symbol:b,base:f,quote:p,settle:l,baseId:c,quoteId:d,settleId:h,type:s,spot:i,margin:i&&_.stringGt(O,"1"),swap:a,future:r,option:n,active:!0,contract:o,linear:o?d===h:void 0,inverse:o?c===h:void 0,contractSize:o?this.safeNumber(e,"ctVal"):void 0,expiry:m,expiryDatetime:this.iso8601(m),strike:g,optionType:y,precision:{amount:this.safeNumber(e,"lotSz"),price:T},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(O)},amount:{min:S,max:void 0},price:{min:T,max:void 0},cost:{min:void 0,max:void 0}},info:e})}async fetchMarketsByType(e,t={}){const s={instType:this.convertToInstrumentType(e)};if("option"===e){const e=this.safeValue(this.options,"defaultUnderlying","BTC-USD"),i=this.safeString2(t,"uly","marketId",e);if(void 0===i)throw new o(this.id+" fetchMarketsByType() requires an underlying uly or marketId parameter for options markets");s.uly=i}const i=await this.publicGetPublicInstruments(this.extend(s,t)),r=this.safeValue(i,"data",[]);return this.parseMarkets(r)}safeNetwork(e){return this.safeString({Bitcoin:"BTC",Omni:"OMNI",TRON:"TRC20"},e,e)}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.privateGetAssetCurrencies(e),s=this.safeValue(t,"data",[]),i={},r=this.groupBy(s,"ccy"),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeCurrency(t).code,n=r[t],o={};let c,d,h,l=!1;for(let e=0;e<n.length;e++){const t=n[e],i=this.safeValue(t,"canDep"),r=this.safeValue(t,"canWd"),a=this.safeValue(t,"canInternal"),u=!!(i&&r&&a);l=void 0===l?u:l;const f=this.safeString(t,"chain");if(i&&!c?c=!0:i||(c=!1),r&&!d?d=!0:r||(d=!1),void 0!==f&&f.indexOf("-")>=0){const e=f.split("-"),a=this.safeString(e,1,f);let n=this.safeNetwork(a);const c=this.safeValue(t,"mainNet",!1),d=this.safeValue(this.options,"layerTwo",{Liquid:!0,Lightning:!0});c&&!(a in d)&&(n=s);const l=this.parseNumber(this.parsePrecision(this.safeString(t,"wdTickSz")));h=void 0===h?l:Math.max(h,l),o[n]={id:f,network:n,active:u,deposit:i,withdraw:r,fee:this.safeNumber(t,"minFee"),precision:l,limits:{withdraw:{min:this.safeNumber(t,"minWd"),max:this.safeNumber(t,"maxWd")}},info:t}}}const u=this.safeValue(n,0);i[s]={info:void 0,code:s,id:t,name:this.safeString(u,"name"),active:l,deposit:c,withdraw:d,fee:void 0,precision:h,limits:{amount:{min:void 0,max:void 0}},networks:o}}return i}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={instId:this.market(e).id};void 0!==(t=void 0===t?20:t)&&(i.sz=t);const r=await this.publicGetMarketBooks(this.extend(i,s)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{}),o=this.safeInteger(n,"ts");return this.parseOrderBook(n,e,o)}parseTicker(e,t){const s=this.safeInteger(e,"ts"),i=this.safeString(e,"instId"),r=(t=this.safeMarket(i,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open24h"),o=this.safeValue(t,"spot",!1)?this.safeString(e,"volCcy24h"):void 0,c=this.safeString(e,"vol24h"),d=this.safeString(e,"high24h"),h=this.safeString(e,"low24h");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:d,low:h,bid:this.safeString(e,"bidPx"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"askPx"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:c,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={instId:s.id},r=await this.publicGetMarketTicker(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,s)}async fetchTickersByType(e,t,s={}){await this.loadMarkets();const i={instType:this.convertToInstrumentType(e)};if("option"===e){const e=this.safeValue(this.options,"defaultUnderlying","BTC-USD"),t=this.safeString2(s,"uly","marketId",e);if(void 0===t)throw new o(this.id+" fetchTickersByType() requires an underlying uly or marketId parameter for options markets");i.uly=t}const r=await this.publicGetMarketTickers(this.extend(i,s)),a=this.safeValue(r,"data",[]);return this.parseTickers(a,t)}async fetchTickers(e,t={}){const[s,i]=this.handleMarketTypeAndParams("fetchTickers",void 0,t);return await this.fetchTickersByType(s,e,i)}parseTrade(e,t){const s=this.safeString(e,"tradeId"),i=this.safeString(e,"instId"),r=(t=this.safeMarket(i,t,"-")).symbol,a=this.safeInteger(e,"ts"),n=this.safeString2(e,"fillPx","px"),o=this.safeString2(e,"fillSz","sz"),c=this.safeString(e,"side"),d=this.safeString(e,"ordId"),h=this.safeString(e,"fee");let l;if(void 0!==h){const t=_.stringNeg(h),s=this.safeString(e,"feeCcy");l={cost:t,currency:this.safeCurrencyCode(s)}}let u=this.safeString(e,"execType");return"T"===u?u="taker":"M"===u&&(u="maker"),this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,id:s,order:d,type:void 0,takerOrMaker:u,side:c,price:n,amount:o,cost:void 0,fee:l},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={instId:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetMarketTrades(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseOHLCV(e,t){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price");r=this.omit(r,"price"),void 0===i&&(i=100);const o={instId:a.id,bar:this.timeframes[t],limit:i};let c="Candles";if(void 0!==s){const e=this.parseTimeframe(t);this.milliseconds()-s>i*e*1e3&&(c="HistoryCandles");const r=1e3*e,a=Math.max(s-1,0);o.before=a,o.after=this.sum(a,r*i)}const d=this.safeInteger(r,"until");void 0!==d&&(o.after=d,r=this.omit(r,"until"));const h=this.safeValue(this.options,"fetchOHLCV",{});c=this.safeString(h,"type",c);const l=this.safeString(r,"type",c);r=this.omit(r,"type");let u="publicGetMarket"+l;"mark"===n?u="publicGetMarketMarkPriceCandles":"index"===n&&(u="publicGetMarketIndexCandles");const f=await this[u](this.extend(o,r)),p=this.safeValue(f,"data",[]);return this.parseOHLCVs(p,a,t,s,i)}async fetchFundingRateHistory(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={instId:r.id};void 0!==t&&(a.before=Math.max(t-1,0)),void 0!==s&&(a.limit=s);const n=await this.publicGetPublicFundingRateHistory(this.extend(a,i)),c=[],d=this.safeValue(n,"data",[]);for(let e=0;e<d.length;e++){const t=d[e],s=this.safeNumber(t,"fundingTime");c.push({symbol:this.safeSymbol(this.safeString(t,"instId")),fundingRate:this.safeNumber(t,"realizedRate"),timestamp:s,datetime:this.iso8601(s)})}const h=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,s)}parseBalanceByType(e,t){return"funding"===e?this.parseFundingBalance(t):this.parseTradingBalance(t)}parseTradingBalance(e){const t={info:e},s=this.safeValue(e,"data",[]),i=this.safeValue(s,0,{}),r=this.safeInteger(i,"uTime"),a=this.safeValue(i,"details",[]);for(let e=0;e<a.length;e++){const s=a[e],i=this.safeString(s,"ccy"),r=this.safeCurrencyCode(i),n=this.account(),o=this.safeString(s,"eq"),c=this.safeString(s,"availEq");void 0===o||void 0===c?(n.free=this.safeString(s,"availBal"),n.used=this.safeString(s,"frozenBal")):(n.total=o,n.free=c),t[r]=n}return t.timestamp=r,t.datetime=this.iso8601(r),this.safeBalance(t)}parseFundingBalance(e){const t={info:e},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"ccy"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"bal"),n.free=this.safeString(i,"availBal"),n.used=this.safeString(i,"frozenBal"),t[a]=n}return this.safeBalance(t)}parseTradingFee(e,t){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.parseNumber(_.stringNeg(this.safeString2(e,"maker","makerU"))),taker:this.parseNumber(_.stringNeg(this.safeString2(e,"taker","takerU")))}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={instType:this.convertToInstrumentType(s.type)};if(s.spot)i.instId=s.id;else{if(!(s.swap||s.future||s.option))throw new k(this.id+" fetchTradingFee() supports spot, swap, future or option markets only");i.uly=s.baseId+"-"+s.quoteId}const r=await this.privateGetAccountTradeFee(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTradingFee(n,s)}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let i;i="funding"===t?"privateGetAssetBalances":"privateGetAccountBalance";const r=await this[i](this.extend({},s));return this.parseBalanceByType(t,r)}async createOrder(e,t,s,i,a,n={}){await this.loadMarkets();const o=this.market(e),c={instId:o.id,side:s,ordType:t,sz:this.amountToPrecision(e,i)},d=o.spot,h=o.contract,l=this.safeValueN(n,["triggerPrice","stopPrice","triggerPx"]),u=this.safeString(n,"timeInForce","GTC"),f=this.safeValue2(n,"takeProfitPrice","tpTriggerPx"),m=this.safeValue(n,"tpOrdPx",a),g=this.safeString(n,"tpTriggerPxType","last"),y=this.safeValue2(n,"stopLossPrice","slTriggerPx"),b=this.safeValue(n,"slOrdPx",a),v=this.safeString(n,"slTriggerPxType","last"),w=this.safeString2(n,"clOrdId","clientOrderId"),S=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");let T=this.safeString2(n,"marginMode","tdMode"),O=!1;if(void 0!==T&&"cash"!==T?O=!0:(T=S,O=this.safeValue(n,"margin",!1)),!0===O&&o.spot&&!o.margin)throw new k(this.id+" does not support margin trading for "+e+" market");if(d){if(O){const e="buy"===s?o.quote:o.base,t=this.safeString(n,"ccy",e);c.ccy=this.safeCurrencyCode(t)}const e=O?T:"cash";c.tdMode=e}else h&&(c.tdMode=T);const _="market"===t,x=this.isPostOnly(_,"post_only"===t,n);n=this.omit(n,["currency","ccy","marginMode","timeInForce","stopPrice","triggerPrice","clientOrderId","stopLossPrice","takeProfitPrice","slOrdPx","tpOrdPx","margin"]);const M="IOC"===u||"ioc"===t,I="FOK"===u||"fok"===t,C=void 0!==l||"trigger"===t,P=void 0!==y||void 0!==f||"conditional"===t,A=_&&M||"optimal_limit_ioc"===t,N=this.safeString(this.options,"createOrder","privatePostTradeBatchOrders"),V=this.safeString(this.options,"tgtCcy","base_ccy"),B=this.safeString(n,"tgtCcy",V);h||O||(c.tgtCcy=B);let E,L=N;if(_||A){if(c.ordType="market",d&&"buy"===s&&"quote_ccy"===B){let t=this.safeNumber2(n,"cost","sz");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==a)void 0===t&&(t=i*a);else if(void 0===t)throw new p(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' unified extra parameter or in exchange-specific 'sz' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?i:t;c.sz=this.costToPrecision(e,t),n=this.omit(n,["cost","sz"])}A&&h&&(c.ordType="optimal_limit_ioc")}else C||P||(c.px=this.priceToPrecision(e,a));if(x)L=N,c.ordType="post_only";else if(M&&!A)L=N,c.ordType="ioc";else if(I)L=N,c.ordType="fok";else if(C)L="privatePostTradeOrderAlgo",c.ordType="trigger",c.triggerPx=this.priceToPrecision(e,l),c.orderPx=_?"-1":this.priceToPrecision(e,a);else if(P){L="privatePostTradeOrderAlgo",c.ordType="conditional";void 0!==f&&void 0!==y&&(c.ordType="oco"),void 0!==f&&(c.tpTriggerPx=this.priceToPrecision(e,f),c.tpOrdPx=void 0===m?"-1":this.priceToPrecision(e,m),c.tpTriggerPxType=g),void 0!==y&&(c.slTriggerPx=this.priceToPrecision(e,y),c.slOrdPx=void 0===b?"-1":this.priceToPrecision(e,b),c.slTriggerPxType=v)}if("oco"!==t&&"move_order_stop"!==t&&"iceberg"!==t&&"twap"!==t||(L="privatePostTradeOrderAlgo"),void 0===w){const e=this.safeString(this.options,"brokerId");void 0!==e&&(c.clOrdId=e+this.uuid16())}else c.clOrdId=w,n=this.omit(n,["clOrdId","clientOrderId"]);if("privatePostTradeOrder"===L||"privatePostTradeOrderAlgo"===L)E=this.extend(c,n);else{if("privatePostTradeBatchOrders"!==L)throw new r(this.id+' createOrder() this.options["createOrder"] must be either privatePostTradeBatchOrders or privatePostTradeOrder');E=[this.extend(c,n)]}const R=await this[L](E),D=this.safeValue(R,"data",[]),F=this.safeValue(D,0),G=this.parseOrder(F,o);return this.extend(G,{type:t,side:s})}async cancelOrder(e,t,s={}){if(this.safeValue(s,"stop")){const i=await this.cancelOrders([e],t,s);return this.safeValue(i,0)}if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={instId:i.id},a=this.safeString2(s,"clOrdId","clientOrderId");void 0!==a?r.clOrdId=a:r.ordId=e;const n=this.omit(s,["clOrdId","clientOrderId"]),c=await this.privatePostTradeCancelOrder(this.extend(r,n)),d=this.safeValue(c,"data",[]),h=this.safeValue(d,0);return this.parseOrder(h,i)}parseIds(e){return"string"==typeof e?e.split(","):e}async cancelOrders(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=[],a=this.safeValue(this.options,"cancelOrders",{}),n=this.safeString(a,"method","privatePostTradeCancelBatchOrders");let c=this.safeString(s,"method",n);const d=this.parseIds(this.safeValue2(s,"clOrdId","clientOrderId")),h=this.parseIds(this.safeValue(s,"algoId")),l=this.safeValue(s,"stop");if(l&&(c="privatePostTradeCancelAlgos"),void 0===d){if(e=this.parseIds(e),void 0!==h)for(let e=0;e<h.length;e++)r.push({algoId:h[e],instId:i.id});for(let t=0;t<e.length;t++)l?r.push({algoId:e[t],instId:i.id}):r.push({ordId:e[t],instId:i.id})}else for(let e=0;e<d.length;e++)r.push({instId:i.id,clOrdId:d[e]});const u=await this[c](r),f=this.safeValue(u,"data",[]);return this.parseOrders(f,i,void 0,void 0,s)}parseOrderStatus(e){return this.safeString({canceled:"canceled",live:"open",partially_filled:"open",filled:"closed"},e,e)}parseOrder(e,t){const s=this.safeString2(e,"ordId","algoId"),i=this.safeInteger(e,"cTime"),r=this.safeInteger(e,"fillTime"),a=this.safeString(e,"side");let n,o,c=this.safeString(e,"ordType");"post_only"===c?(n=!0,c="limit"):"fok"===c?(o="FOK",c="limit"):"ioc"===c&&(o="IOC",c="limit");const d=this.safeString(e,"instId"),h=this.safeSymbol(d,t,"-"),l=this.safeString(e,"accFillSz"),u=this.safeString2(e,"px","ordPx"),f=this.safeString(e,"avgPx"),p=this.parseOrderStatus(this.safeString(e,"state")),m=this.safeString(e,"fee");let g,y;const b=this.safeString(this.options,"tgtCcy","base_ccy"),v=this.safeString(e,"tgtCcy",b),w=this.safeString(e,"instType");let S;if("buy"===a&&"market"===c&&"SPOT"===w&&"quote_ccy"===v?y=this.safeString(e,"sz"):g=this.safeString(e,"sz"),void 0!==m){const t=_.stringNeg(m),s=this.safeString(e,"feeCcy"),i=this.safeCurrencyCode(s);S={cost:this.parseNumber(t),currency:i}}let k=this.safeString(e,"clOrdId");void 0!==k&&k.length<1&&(k=void 0);const T=this.safeNumber2(e,"triggerPx","slTriggerPx");return this.safeOrder({info:e,id:s,clientOrderId:k,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:r,symbol:h,type:c,timeInForce:o,postOnly:n,side:a,price:u,stopPrice:T,average:f,cost:y,amount:g,filled:l,remaining:void 0,status:p,fee:S,trades:void 0},t)}async fetchOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={instId:i.id},a=this.safeString2(s,"clOrdId","clientOrderId"),n=this.safeValue(this.options,"fetchOrder",{}),c=this.safeValue(this.options,"algoOrderTypes",{}),d=this.safeString(n,"method","privateGetTradeOrder");let h=this.safeString(s,"method",d);const l=this.safeString(s,"ordType"),u=this.safeValue(s,"stop");u||l in c?(h="privateGetTradeOrdersAlgoHistory",r.algoId=e,u&&(r.ordType="trigger",s=this.omit(s,"ordType"))):void 0!==a?r.clOrdId=a:r.ordId=e;const f=this.omit(s,["method","stop","clOrdId","clientOrderId"]),p=await this[h](this.extend(r,f)),m=this.safeValue(p,"data",[]),g=this.safeValue(m,0);return this.parseOrder(g,i)}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instId=a.id),void 0!==s&&(r.limit=s);const n=this.safeValue(this.options,"fetchOpenOrders",{}),o=this.safeValue(this.options,"algoOrderTypes",{}),c=this.safeString(n,"method","privateGetTradeOrdersPending");let d=this.safeString(i,"method",c);const h=this.safeString(i,"ordType"),l=this.safeValue(i,"stop");(l||h in o)&&(d="privateGetTradeOrdersAlgoPending",l&&(r.ordType="trigger",i=this.omit(i,"ordType")));const u=this.omit(i,["method","stop"]),f=await this[d](this.extend(r,u)),p=this.safeValue(f,"data",[]);return this.parseOrders(p,a,t,s)}async fetchCanceledOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instId=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchCanceledOrders",a,i);r.instType=this.convertToInstrumentType(n),void 0!==s&&(r.limit=s),r.state="canceled";const c=this.safeValue(this.options,"fetchCanceledOrders",{}),d=this.safeValue(this.options,"algoOrderTypes",{}),h=this.safeString(c,"method","privateGetTradeOrdersHistory");let l=this.safeString(i,"method",h);const u=this.safeString(i,"ordType");(this.safeValue(i,"stop")||u in d)&&(l="privateGetTradeOrdersAlgoHistory");const f=this.omit(o,["method","stop"]),p=await this[l](this.extend(r,f)),m=this.safeValue(p,"data",[]);return this.parseOrders(m,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instId=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchClosedOrders",a,i);r.instType=this.convertToInstrumentType(n),void 0!==s&&(r.limit=s),r.state="filled";const c=this.safeString(this.options,"method","privateGetTradeOrdersHistory"),d=await this[c](this.extend(r,o)),h=this.safeValue(d,"data",[]);return this.parseOrders(h,a,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instId=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,i);r.instType=this.convertToInstrumentType(n),void 0!==s&&(r.limit=s);const c=await this.privateGetTradeFillsHistory(this.extend(r,o)),d=this.safeValue(c,"data",[]);return this.parseTrades(d,a,t,s,o)}async fetchOrderTrades(e,t,s,i,r={}){const a={ordId:e};return await this.fetchMyTrades(t,s,i,this.extend(a,r))}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchLedger",{});let a=this.safeString(r,"method");a=this.safeString(i,"method",a),i=this.omit(i,"method");const n={},[o,c]=this.handleMarketTypeAndParams("fetchLedger",void 0,i);let d;void 0!==o&&(n.instType=this.convertToInstrumentType(o)),void 0!==s&&(n.limit=s),void 0!==e&&(d=this.currency(e),n.ccy=d.id);const h=await this[a](this.extend(n,c)),l=this.safeValue(h,"data",[]);return this.parseLedger(l,d,t,s)}parseLedgerEntryType(e){return this.safeString({1:"transfer",2:"trade",3:"trade",4:"rebate",5:"trade",6:"transfer",7:"trade",8:"fee",9:"trade",10:"trade",11:"trade"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"billId"),i=this.safeString(e,"ordId"),r=this.parseLedgerEntryType(this.safeString(e,"type")),a=this.safeCurrencyCode(this.safeString(e,"ccy"),t),n=this.safeString(e,"balChg"),o=this.parseNumber(n),c=this.safeInteger(e,"ts"),d=this.safeString(e,"fee");let h;void 0!==d&&(h={cost:this.parseNumber(_.stringNeg(d)),currency:a});const l=this.safeString(e,"bal"),u=this.parseNumber(l),f=this.safeString(e,"instId");let p;if(f in this.markets_by_id){p=this.markets_by_id[f].symbol}return{id:s,info:e,timestamp:c,datetime:this.iso8601(c),account:undefined,referenceId:i,referenceAccount:undefined,type:r,currency:a,symbol:p,amount:o,before:undefined,after:u,status:"ok",fee:h}}parseDepositAddress(e,t){const s=this.safeString(e,"addr");let i=this.safeString2(e,"tag","pmtId");i=this.safeString(e,"memo",i);const r=this.safeString(e,"ccy"),a=(t=this.safeCurrency(r,t)).code,n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),c=this.indexBy(o,"id");let d=this.safeValue(c,n);"USDT-Polygon"===n&&(d=this.safeValue(c,"USDT-Polygon-Bridge"));const h=this.safeString(d,"network");return this.checkAddress(s),{currency:a,address:s,tag:i,network:h,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const s={ccy:this.currency(e).id},i=await this.privateGetAssetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data",[]),a=this.filterBy(r,"selected",!0),n=this.parseDepositAddresses(a,[e],!1);return this.indexBy(n,"network")}async fetchDepositAddress(e,t={}){const s=this.safeStringUpper(t,"network"),i=this.safeValue(this.options,"networks",{}),r=this.safeString(i,s,s);t=this.omit(t,"network");const a=await this.fetchDepositAddressesByNetwork(e,t);let n;if(void 0===r){if(n=this.safeValue(a,e),void 0===n){const t=this.safeString(i,e,e);if(n=this.safeValue(a,t),void 0===n){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(n=this.safeValue(a,t),void 0===n){const t=Object.values(a);if(n=this.safeValue(t,0),void 0===n)throw new h(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return n}if(n=this.safeValue(a,r),void 0===n)throw new h(this.id+" fetchDepositAddress() cannot find "+r+" deposit address for "+e);return n}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e);void 0!==i&&(s=s+":"+i);const c=this.safeString(a,"fee");if(void 0===c)throw new o(this.id+" withdraw() requires a 'fee' string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKX are fee-free, please set '0'. Withdrawing to external digital asset address requires network transaction fee.");const d={ccy:n.id,toAddr:s,dest:"4",amt:this.numberToString(t),fee:this.numberToString(c)};"password"in a?d.pwd=a.password:"pwd"in a&&(d.pwd=a.pwd);const h=this.safeValue(this.options,"networks",{});let l=this.safeStringUpper(a,"network");l=this.safeString(h,l,l),void 0!==l&&(d.chain=n.id+"-"+l,a=this.omit(a,"network"));const u=this.omit(a,["fee","password","pwd"]);if(!("pwd"in d))throw new r(this.id+" withdraw() requires a password parameter or a pwd parameter, it must be the funding password, not the API passphrase");const f=await this.privatePostAssetWithdrawal(this.extend(d,u)),p=this.safeValue(f,"data",[]),m=this.safeValue(p,0);return this.parseTransaction(m,n)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.ccy=a.id),void 0!==t&&(r.before=Math.max(t-1,0)),void 0!==s&&(r.limit=s);const n=await this.privateGetAssetDepositHistory(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,s,i)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={depId:e};let r;void 0!==t&&(r=this.currency(t),i.ccy=r.id);const a=await this.privateGetAssetDepositHistory(this.extend(i,s)),n=this.safeValue(a,"data"),o=this.safeValue(n,0,{});return this.parseTransaction(o,r)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.ccy=a.id),void 0!==t&&(r.before=Math.max(t-1,0)),void 0!==s&&(r.limit=s);const n=await this.privateGetAssetWithdrawalHistory(this.extend(r,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,s,i)}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={wdId:e};let r;void 0!==t&&(r=this.currency(t),i.ccy=r.id);const a=await this.privateGetAssetWithdrawalHistory(this.extend(i,s)),n=this.safeValue(a,"data"),o=this.safeValue(n,0,{});return this.parseTransaction(o)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending"},e,e)}parseTransaction(e,t){let s,i;const r=this.safeString(e,"wdId"),a=this.safeString(e,"from"),n=this.safeString(e,"to"),o=n;let c=this.safeString2(e,"tag","memo");c=this.safeString2(e,"pmtId",c),void 0!==r?(s="withdrawal",i=r):(i=this.safeString(e,"depId"),s="deposit");const d=this.safeString(e,"ccy"),h=this.safeCurrencyCode(d),l=this.safeNumber(e,"amt"),u=this.parseTransactionStatus(this.safeString(e,"state")),f=this.safeString(e,"txId"),p=this.safeInteger(e,"ts");let m;return m="deposit"===s?0:this.safeNumber(e,"fee"),{info:e,id:i,currency:h,amount:l,network:void 0,addressFrom:a,addressTo:n,address:o,tagFrom:void 0,tagTo:c,tag:c,status:u,type:s,updated:void 0,txid:f,timestamp:p,datetime:this.iso8601(p),fee:{currency:h,cost:m}}}async fetchLeverage(e,t={}){await this.loadMarkets();const s=this.safeStringLower(t,"mgnMode");if(t=this.omit(t,["mgnMode"]),"cross"!==s&&"isolated"!==s)throw new c(this.id+" fetchLeverage() requires a mgnMode parameter that must be either cross or isolated");const i={instId:this.market(e).id,mgnMode:s};return await this.privateGetAccountLeverageInfo(this.extend(i,t))}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),[i,r]=this.handleMarketTypeAndParams("fetchPosition",s,t),a={instId:s.id};void 0!==i&&(a.instType=this.convertToInstrumentType(i));const n=await this.privateGetAccountPositions(r),o=this.safeValue(n,"data",[]),c=this.safeValue(o,0);return void 0===c?c:this.parsePosition(c)}async fetchPositions(e,t={}){await this.loadMarkets();const s={},[i,r]=this.handleMarketTypeAndParams("fetchPositions",void 0,t);void 0!==i&&("swap"!==i&&"future"!==i||(s.instType=this.convertToInstrumentType(i)));const a=await this.privateGetAccountPositions(this.extend(s,r)),n=this.safeValue(a,"data",[]),o=[];for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"instType");"FUTURES"!==s&&"SWAP"!==s||o.push(this.parsePosition(n[e]))}return this.filterByArray(o,"symbol",e,!1)}parsePosition(e,t){const s=this.safeString(e,"instId"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString(e,"pos"),a=_.stringAbs(r);let n,o=this.safeString(e,"posSide");const c="net"!==o;void 0!==r&&(n=this.parseNumber(a),"net"===o&&(o=_.stringGt(r,"0")?"long":"short"));const d=this.safeValue(t,"contractSize"),h=this.numberToString(d),l=this.safeString(e,"markPx");let u=this.safeString(e,"notionalUsd");t.inverse&&(u=_.stringDiv(_.stringMul(a,h),l));const f=this.parseNumber(u),p=this.safeString(e,"mgnMode");let m;const g=this.safeString(e,"avgPx"),y=this.safeString(e,"upl"),b=this.safeString(e,"lever");let v,w;"cross"===p?(m=this.safeString(e,"imr"),w=_.stringAdd(m,y)):"isolated"===p&&(v=_.stringDiv("1",b),w=this.safeString(e,"margin"));const S=this.safeString(e,"mmr"),k=this.parseNumber(S);let T=_.stringDiv(S,u);void 0===v?v=this.parseNumber(_.stringDiv(m,u,4)):void 0===m&&(m=_.stringMul(v,u));T=this.parseNumber(_.stringDiv(_.stringAdd(T,"0.00005"),"1",4));const O=this.safeNumber(e,"liqPx"),x=this.safeString(e,"uplRatio"),M=this.parseNumber(_.stringMul(x,"100")),I=this.safeInteger(e,"uTime"),C=this.parseNumber(_.stringDiv(S,w,4));return{info:e,symbol:i,notional:f,marginMode:p,liquidationPrice:O,entryPrice:this.parseNumber(g),unrealizedPnl:this.parseNumber(y),percentage:M,contracts:n,contractSize:d,markPrice:this.parseNumber(l),side:o,hedged:c,timestamp:I,datetime:this.iso8601(I),maintenanceMargin:k,maintenanceMarginPercentage:T,collateral:this.parseNumber(w),initialMargin:this.parseNumber(m),initialMarginPercentage:this.parseNumber(v),leverage:this.parseNumber(b),marginRatio:C}}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d={ccy:a.id,amt:this.currencyToPrecision(e,t),type:"0",from:o,to:c};"master"===o?(d.type="1",d.subAcct=c,d.from=this.safeString(r,"from","6"),d.to=this.safeString(r,"to","6")):"master"===c&&(d.type="2",d.subAcct=o,d.from=this.safeString(r,"from","6"),d.to=this.safeString(r,"to","6"));const h=await this.privatePostAssetTransfer(this.extend(d,r)),l=this.safeValue(h,"data",[]),u=this.safeValue(l,0,{});return this.parseTransfer(u,a)}parseTransfer(e,t){const s=this.safeString(e,"transId"),i=this.safeString(e,"ccy"),r=this.safeCurrencyCode(i,t),a=this.safeNumber(e,"amt"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),c=this.safeValue(this.options,"accountsById",{}),d=this.safeString(c,n),h=this.safeString(c,o),l=this.milliseconds(),u=this.safeString(e,"state");return{info:e,id:s,timestamp:l,datetime:this.iso8601(l),currency:r,amount:a,fromAccount:d,toAccount:h,status:u}}async fetchTransfer(e,t,s={}){await this.loadMarkets();const i={transId:e},r=await this.privateGetAssetTransferState(this.extend(i,s)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0);return this.parseTransfer(n)}sign(e,t="public",s="GET",i={},r,a){const n=Array.isArray(i),o="/api/"+this.version+"/"+this.implodeParams(e,i),c=this.omit(i,this.extractParams(e));let d=this.implodeHostname(this.urls.api.rest)+o;if("public"===t)Object.keys(c).length&&(d+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e=this.iso8601(this.milliseconds());r={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":e};let t=e+s+o;if("GET"===s){if(Object.keys(c).length){const e="?"+this.urlencode(c);d+=e,t+=e}}else(n||Object.keys(c).length)&&(t+=a=this.json(c)),r["Content-Type"]="application/json";const i=this.hmac(this.encode(t),this.encode(this.secret),"sha256","base64");r["OK-ACCESS-SIGN"]=i}return{url:d,method:s,body:a,headers:r}}parseFundingRate(e,t){const s=this.safeInteger(e,"nextFundingTime"),i=this.safeString(e,"instId"),r=this.safeSymbol(i,t),a=this.safeNumber(e,"nextFundingRate"),n=this.safeInteger(e,"fundingTime");return{info:e,symbol:r,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:n,fundingDatetime:this.iso8601(n),nextFundingRate:a,nextFundingTimestamp:s,nextFundingDatetime:this.iso8601(s),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new r(this.id+" fetchFundingRate() is only valid for swap markets");const i={instId:s.id},a=await this.publicGetPublicFundingRate(this.extend(i,t)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0,{});return this.parseFundingRate(o,s)}async fetchFundingHistory(e,t,s,i={}){await this.loadMarkets();const r={type:"8"};let a;void 0!==s&&(r.limit=s.toString()),void 0!==e&&(a=this.market(e),e=a.symbol,a.contract&&(a.linear?(r.ctType="linear",r.ccy=a.quoteId):(r.ctType="inverse",r.ccy=a.baseId)));const[n,o]=this.handleMarketTypeAndParams("fetchFundingHistory",a,i);"swap"===n&&(r.instType=this.convertToInstrumentType(n));const c=await this.privateGetAccountBillsArchive(this.extend(r,o)),d=this.safeValue(c,"data",[]),h=[];for(let e=0;e<d.length;e++){const t=d[e],s=this.safeInteger(t,"ts"),i=this.safeString(t,"instId"),r=this.safeMarket(i),a=this.safeString(t,"ccy"),n=this.safeCurrencyCode(a);h.push({info:t,symbol:r.symbol,code:n,timestamp:s,datetime:this.iso8601(s),id:this.safeString(t,"billId"),amount:this.safeNumber(t,"balChg")})}const l=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(l,e,t,s)}async setLeverage(e,t,s={}){if(void 0===t)throw new o(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new c(this.id+" setLeverage() leverage should be between 1 and 125");await this.loadMarkets();const i=this.market(t),r=this.safeStringLower(s,"mgnMode");if(s=this.omit(s,["mgnMode"]),"cross"!==r&&"isolated"!==r)throw new c(this.id+' setLeverage() params["mgnMode"] must be either cross or isolated');const a={lever:e,mgnMode:r,instId:i.id};return await this.privatePostAccountSetLeverage(this.extend(a,s))}async setPositionMode(e,t,s={}){let i;i=e?"long_short_mode":"net_mode";const r={posMode:i};return await this.privatePostAccountSetPositionMode(this.extend(r,s))}async setMarginMode(e,t,s={}){if(void 0===t)throw new o(this.id+" setMarginMode() requires a symbol argument");if("cross"!==(e=e.toLowerCase())&&"isolated"!==e)throw new c(this.id+" setMarginMode() marginMode must be either cross or isolated");await this.loadMarkets();const i=this.market(t),r=this.safeInteger(s,"lever");if(void 0===r||r<1||r>125)throw new c(this.id+' setMarginMode() params["lever"] should be between 1 and 125');s=this.omit(s,["lever"]);const a={lever:r,mgnMode:e,instId:i.id};return await this.privatePostAccountSetLeverage(this.extend(a,s))}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetAccountInterestRate(e),s=this.milliseconds(),i=this.safeValue(t,"data"),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeCurrencyCode(this.safeString(t,"ccy"));r[a]={currency:a,rate:this.safeNumber(t,"interestRate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:t}}return r}async fetchBorrowRate(e,t={}){await this.loadMarkets();const s={ccy:this.currency(e).id},i=await this.privateGetAccountInterestRate(this.extend(s,t)),r=this.safeValue(i,"data"),a=this.safeValue(r,0);return this.parseBorrowRate(a)}parseBorrowRate(e,t){const s=this.safeString(e,"ccy"),i=this.safeInteger(e,"ts");return{currency:this.safeCurrencyCode(s),rate:this.safeNumber2(e,"interestRate","rate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}parseBorrowRateHistories(e,t,s,i){const r={};for(let s=0;s<e.length;s++){const i=e[s],a=this.safeCurrencyCode(this.safeString(i,"ccy"));if(void 0===t||t.includes(a)){a in r||(r[a]=[]);const e=this.parseBorrowRate(i);r[a].push(e)}}const a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e];r[t]=this.filterByCurrencySinceLimit(r[t],t,s,i)}return r}parseBorrowRateHistory(e,t,s,i){const r=[];for(let t=0;t<e.length;t++){const s=e[t],i=this.parseBorrowRate(s);r.push(i)}const a=this.sortBy(r,"timestamp");return this.filterByCurrencySinceLimit(a,t,s,i)}async fetchBorrowRateHistories(e,t,s,i={}){await this.loadMarkets();const r={};void 0!==t&&(r.before=t),void 0!==s&&(r.limit=s);const a=await this.publicGetAssetLendingRateHistory(this.extend(r,i)),n=this.safeValue(a,"data");return this.parseBorrowRateHistories(n,e,t,s)}async fetchBorrowRateHistory(e,t,s,i={}){await this.loadMarkets();const r={ccy:this.currency(e).id};void 0!==t&&(r.before=t),void 0!==s&&(r.limit=s);const a=await this.publicGetAssetLendingRateHistory(this.extend(r,i)),n=this.safeValue(a,"data");return this.parseBorrowRateHistory(n,e,t,s)}async modifyMarginHelper(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeString(i,"posSide","net");i=this.omit(i,["posSide"]);const n={instId:r.id,amt:t,type:s,posSide:a},o=await this.privatePostAccountPositionMarginBalance(this.extend(n,i));return this.parseMarginModification(o,r)}parseMarginModification(e,t){const s=this.safeValue(e,"data",[]),i=this.safeValue(s,0,{}),r="0"===this.safeString(e,"code")?"ok":"failed",a=this.safeNumber(i,"amt"),n="reduce"===this.safeString(i,"type")?"reduce":"add",o=this.safeString(i,"instId"),c=this.safeMarket(o,t);return{info:e,type:n,amount:a,code:c.inverse?c.base:c.quote,symbol:c.symbol,status:r}}async reduceMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"reduce",s)}async addMargin(e,t,s={}){return await this.modifyMarginHelper(e,t,"add",s)}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const s=this.market(e),i=s.spot?"MARGIN":this.convertToInstrumentType(s.type),r=this.safeString(s.info,"uly");if(!r)throw new c(this.id+" fetchMarketLeverageTiers() cannot fetch leverage tiers for "+e);const a={instType:i,tdMode:this.safeString(t,"tdMode","isolated"),uly:r};"MARGIN"===i&&(a.instId=s.id);const n=await this.publicGetPublicPositionTiers(this.extend(a,t)),o=this.safeValue(n,"data");return this.parseMarketLeverageTiers(o,s)}parseMarketLeverageTiers(e,t){const s=[];for(let i=0;i<e.length;i++){const r=e[i];s.push({tier:this.safeInteger(r,"tier"),currency:t.quote,minNotional:this.safeNumber(r,"minSz"),maxNotional:this.safeNumber(r,"maxSz"),maintenanceMarginRate:this.safeNumber(r,"mmr"),maxLeverage:this.safeNumber(r,"maxLever"),info:r})}return s}async fetchBorrowInterest(e,t,s,i,r={}){await this.loadMarkets();const a={mgnMode:void 0!==t?"isolated":"cross"};let n;if(void 0!==e){const t=this.currency(e);a.ccy=t.id}void 0!==s&&(a.before=s-1),void 0!==i&&(a.limit=i),void 0!==t&&(n=this.market(t),a.instId=n.id);const o=await this.privateGetAccountInterestAccrued(this.extend(a,r)),c=this.safeValue(o,"data"),d=this.parseBorrowInterests(c);return this.filterByCurrencySinceLimit(d,e,s,i)}parseBorrowInterest(e,t){const s=this.safeString(e,"instId");let i="cross";void 0!==s&&(t=this.safeMarket(s,t),i=this.safeString(t,"symbol"));const r=this.safeNumber(e,"ts"),a=void 0===s?"cross":"isolated";return{account:i,symbol:this.safeString(t,"symbol"),marginMode:a,currency:this.safeCurrencyCode(this.safeString(e,"ccy")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"liab"),timestamp:r,datetime:this.iso8601(r),info:e}}async borrowMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e),a={ccy:r.id,amt:this.currencyToPrecision(e,t),side:"borrow"},n=await this.privatePostAccountBorrowRepay(this.extend(a,i)),o=this.safeValue(n,"data",[]),c=this.safeValue(o,0),d=this.parseMarginLoan(c,r);return this.extend(d,{symbol:s})}async repayMargin(e,t,s,i={}){await this.loadMarkets();const r=this.currency(e),a={ccy:r.id,amt:this.currencyToPrecision(e,t),side:"repay"},n=await this.privatePostAccountBorrowRepay(this.extend(a,i)),o=this.safeValue(n,"data",[]),c=this.safeValue(o,0),d=this.parseMarginLoan(c,r);return this.extend(d,{symbol:s})}parseMarginLoan(e,t){const s=this.safeString(e,"ccy");return{id:void 0,currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amt"),symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchOpenInterestHistory(e,t="5m",s,i,r={}){const a=this.safeValue(this.options,"fetchOpenInterestHistory",{}),n=this.safeValue(a,"timeframes",{});if("5m"!==(t=this.safeString(n,t,t))&&"1H"!==t&&"1D"!==t)throw new c(this.id+" fetchOpenInterestHistory cannot only use the 5m, 1h, and 1d timeframe");await this.loadMarkets();const o={ccy:this.currency(e).id,period:t};void 0!==s&&(o.begin=s);const d=this.safeInteger2(r,"till","until");void 0!==d&&(o.end=d,r=this.omit(r,["until","till"]));const h=await this.publicGetRubikStatContractsOpenInterestVolume(this.extend(o,r)),l=this.safeValue(h,"data");return this.parseOpenInterests(l,void 0,s,i)}parseOpenInterest(e,t){const s=this.safeNumber(e,0);return{symbol:void 0,baseVolume:void 0,quoteVolume:this.safeNumber(e,1),timestamp:s,datetime:this.iso8601(s),info:e}}setSandboxMode(e){super.setSandboxMode(e),e?this.headers["x-simulated-trading"]="1":"x-simulated-trading"in this.headers&&(this.headers=this.omit(this.headers,"x-simulated-trading"))}handleErrors(e,t,s,i,a,n,o,c,d){if(!o)return;const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+n,t=this.safeValue(o,"data",[]);for(let s=0;s<t.length;s++){const i=t[s],r=this.safeString(i,"sCode"),a=this.safeString(i,"sMsg");this.throwExactlyMatchedException(this.exceptions.exact,r,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],238:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r}=e("./base/errors"),{TICK_SIZE:a}=e("./base/functions/number"),n=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"paymium",name:"Paymium",countries:["FR","EU"],rateLimit:2e3,version:"v1",has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg",api:"https://paymium.com/api",www:"https://www.paymium.com",fees:"https://www.paymium.com/page/help/fees",doc:["https://github.com/Paymium/api-documentation","https://www.paymium.com/page/developers","https://paymium.github.io/api-documentation/"],referral:"https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj"},api:{public:{get:["countries","data/{currency}/ticker","data/{currency}/trades","data/{currency}/depth","bitcoin_charts/{id}/trades","bitcoin_charts/{id}/depth"]},private:{get:["user","user/addresses","user/addresses/{address}","user/orders","user/orders/{uuid}","user/price_alerts","merchant/get_payment/{uuid}"],post:["user/addresses","user/orders","user/withdrawals","user/email_transfers","user/payment_requests","user/price_alerts","merchant/create_payment"],delete:["user/orders/{uuid}","user/orders/{uuid}/cancel","user/price_alerts/{id}"]}},markets:{"BTC/EUR":{id:"eur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"btc",quoteId:"eur",type:"spot",spot:!0}},fees:{trading:{maker:this.parseNumber("-0.001"),taker:this.parseNumber("0.005")}},precisionMode:a})}parseBalance(e){const t={info:e},s=Object.keys(this.currencies);for(let i=0;i<s.length;i++){const r=s[i],a=this.currency(r).id,n="balance_"+a;if(n in e){const s=this.account(),i="locked_"+a;s.free=this.safeString(e,n),s.used=this.safeString(e,i),t[r]=s}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUser(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currency:i.id},a=await this.publicGetDataCurrencyDepth(this.extend(r,s));return this.parseOrderBook(a,i.symbol,void 0,"bids","asks","price","amount")}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.safeTimestamp(e,"at"),r=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),o=n.stringMul(a,r),c=this.safeString(e,"price");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:c,last:c,previousClose:void 0,change:void 0,percentage:this.safeString(e,"variation"),average:void 0,baseVolume:a,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={currency:s.id},r=await this.publicGetDataCurrencyTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeTimestamp(e,"created_at_int"),i=this.safeString(e,"uuid");t=this.safeMarket(void 0,t);const r=this.safeString(e,"side"),a=this.safeString(e,"price"),n="traded_"+t.base.toLowerCase(),o=this.safeString(e,n);return this.safeTrade({info:e,id:i,order:void 0,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currency:r.id},n=await this.publicGetDataCurrencyTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}async createDepositAddress(e,t={}){await this.loadMarkets();const s=await this.privatePostUserAddresses(t);return this.parseDepositAddress(s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={address:e},i=await this.privateGetUserAddressesAddress(this.extend(s,t));return this.parseDepositAddress(i)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=await this.privateGetUserAddresses(t);return this.parseDepositAddresses(s,e)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"currency");return{info:e,currency:this.safeCurrencyCode(i,t),address:s,tag:void 0,network:void 0}}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={type:this.capitalize(t)+"Order",currency:n.id,direction:s,amount:i};"market"!==t&&(o.price=r);const c=await this.privatePostUserOrders(this.extend(o,a));return{info:c,id:c.uuid}}async cancelOrder(e,t,s={}){const i={uuid:e};return await this.privateDeleteUserOrdersUuidCancel(this.extend(i,s))}async transfer(e,t,s,i,a={}){await this.loadMarkets();const n=this.currency(e);if(i.indexOf("@")<0)throw new r(this.id+" transfer() only allows transfers to an email address");if("BTC"!==e&&"EUR"!==e)throw new r(this.id+" transfer() only allows BTC or EUR");const o={currency:n.id,amount:this.currencyToPrecision(e,t),email:i},c=await this.privatePostUserEmailTransfers(this.extend(o,a));return this.parseTransfer(c,n)}parseTransfer(e,t){const s=this.safeString(e,"currency"),i=this.safeString(e,"updated_at"),r=this.parseDate(i),a=this.safeValue(e,"account_operations"),n=this.safeValue(a,0,{}),o=this.safeString(e,"state");return{info:e,id:this.safeString(e,"uuid"),timestamp:r,datetime:this.iso8601(r),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amount"),fromAccount:void 0,toAccount:this.safeString(n,"address"),status:this.parseTransferStatus(o)}}parseTransferStatus(e){return this.safeString({executed:"ok"},e,e)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e=this.nonce().toString();let t=e+n;if(r={"Api-Key":this.apiKey,"Api-Nonce":e},"POST"===s)Object.keys(o).length&&(t+=a=this.json(o),r["Content-Type"]="application/json");else if(Object.keys(o).length){const e=this.urlencode(o);t+=e,n+="?"+e}r["Api-Signature"]=this.hmac(this.encode(t),this.encode(this.secret))}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;if(void 0!==this.safeValue(o,"errors"))throw new r(this.id+" "+this.json(o))}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],239:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadSymbol:a,AuthenticationError:n,InsufficientFunds:o,InvalidOrder:c,ArgumentsRequired:d,OrderNotFound:h,BadRequest:l,PermissionDenied:u,AccountSuspended:f,CancelPending:p,DDoSProtection:m,DuplicateOrderId:g,RateLimitExceeded:y}=e("./base/errors"),{TICK_SIZE:b}=e("./base/functions/number"),v=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"phemex",name:"Phemex",countries:["CN"],rateLimit:100,version:"v1",certified:!1,pro:!0,hostname:"api.phemex.com",has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistories:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!0,setMargin:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg",test:{v1:"https://testnet-api.phemex.com/v1",public:"https://testnet-api.phemex.com/exchange/public",private:"https://testnet-api.phemex.com"},api:{v1:"https://{hostname}/v1",public:"https://{hostname}/exchange/public",private:"https://{hostname}"},www:"https://phemex.com",doc:"https://github.com/phemex/phemex-api-docs",fees:"https://phemex.com/fees-conditions",referral:{url:"https://phemex.com/register?referralCode=EDNVJ",discount:.1}},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","3h":"10800","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2592000"},api:{public:{get:["cfg/v2/products","cfg/fundingRates","products","nomics/trades","md/kline"]},v1:{get:["md/orderbook","md/trade","md/ticker/24hr","md/ticker/24hr/all","md/spot/ticker/24hr","md/spot/ticker/24hr/all","exchange/public/products"]},private:{get:["spot/orders/active","spot/orders","spot/wallets","exchange/spot/order","exchange/spot/order/trades","accounts/accountPositions","accounts/positions","api-data/futures/funding-fees","orders/activeList","exchange/order/list","exchange/order","exchange/order/trade","phemex-user/users/children","phemex-user/wallets/v2/depositAddress","phemex-user/wallets/tradeAccountDetail","phemex-user/order/closedPositionList","exchange/margins/transfer","exchange/wallets/confirm/withdraw","exchange/wallets/withdrawList","exchange/wallets/depositList","exchange/wallets/v2/depositAddress","api-data/spots/funds","assets/convert","assets/transfer","assets/spots/sub-accounts/transfer","assets/futures/sub-accounts/transfer","assets/quote","assets/convert"],post:["spot/orders","orders","positions/assign","exchange/wallets/transferOut","exchange/wallets/transferIn","exchange/margins","exchange/wallets/createWithdraw","exchange/wallets/cancelWithdraw","exchange/wallets/createWithdrawAddress","assets/transfer","assets/spots/sub-accounts/transfer","assets/futures/sub-accounts/transfer","assets/universal-transfer","assets/convert"],put:["spot/orders","orders/replace","positions/leverage","positions/riskLimit"],delete:["spot/orders","spot/orders/all","orders/cancel","orders","orders/all"]}},precisionMode:b,fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{412:l,6001:l,19999:l,10001:g,10002:h,10003:p,10004:p,10005:p,11001:o,11002:c,11003:o,11004:c,11005:o,11006:r,11007:r,11008:r,11009:r,11010:o,11011:c,11012:c,11013:c,11014:c,11015:c,11016:l,11017:r,11018:r,11019:r,11020:r,11021:r,11022:f,11023:r,11024:r,11025:l,11026:r,11027:a,11028:a,11029:r,11030:r,11031:m,11032:m,11033:g,11034:c,11035:c,11036:c,11037:c,11038:c,11039:c,11040:c,11041:c,11042:c,11043:c,11044:c,11045:c,11046:c,11047:c,11048:c,11049:c,11050:c,11051:c,11052:c,11053:c,11054:c,11055:c,11056:c,11057:c,11058:c,11059:c,11060:c,11061:p,11062:c,11063:c,11064:c,11065:c,11066:c,11067:c,11068:c,11069:r,11070:a,11071:c,11072:c,11073:c,11074:c,11075:c,11076:c,11077:c,11078:c,11079:c,11080:c,11081:c,11082:o,11083:c,11084:c,11085:g,11086:c,11087:c,11088:c,11089:c,11090:c,11091:c,11092:c,11093:c,11094:c,11095:c,11096:c,11097:l,11098:l,11099:r,11100:o,11101:o,11102:l,11103:l,11104:l,11105:o,11106:o,11107:r,11108:c,11109:c,11110:c,11111:c,11112:c,11113:l,11114:c,11115:c,11116:c,11117:c,11118:c,11119:c,11120:c,11121:c,11122:c,11123:c,11124:c,11125:c,11126:c,11128:c,11129:c,11130:c,11131:c,11132:c,11133:c,11134:c,3e4:l,30018:l,34003:u,35104:o,39995:y,39996:u},broad:{"401 Insufficient privilege":u,"401 Request IP mismatch":u,"Failed to find api-key":n,"Missing required parameter":l,"API Signature verification failed":n,"Api key not found":n}},options:{brokerId:"ccxt2022","x-phemex-request-expiry":60,createOrderByQuoteRequiresPrice:!0,networks:{TRC20:"TRX",ERC20:"ETH"},defaultNetworks:{USDT:"ETH"},defaultSubType:"linear",accountsByType:{spot:"spot",future:"future"},transfer:{fillResponseFromRequest:!0}}})}parseSafeNumber(e){if(void 0===e)return e;let t=e.split(",");return e=t.join(""),t=e.split(" "),this.safeNumber(t,0)}parseSwapMarket(e){const t=this.safeString(e,"symbol"),s=this.safeString2(e,"baseCurrency","contractUnderlyingAssets"),i=this.safeString(e,"quoteCurrency"),r=this.safeString(e,"settleCurrency"),a=this.safeCurrencyCode(s),n=this.safeCurrencyCode(i),o=this.safeCurrencyCode(r);let c=!1;r!==i&&(c=!0);const d=this.safeInteger(e,"priceScale"),h=this.safeInteger(e,"ratioScale"),l=this.safeInteger(e,"valueScale"),u=this.safeString(e,"minPriceEp"),f=this.safeString(e,"maxPriceEp"),p=this.safeString(e,"makerFeeRateEr"),m=this.safeString(e,"takerFeeRateEr"),g=this.safeString(e,"status"),y=this.safeString(e,"contractSize"," ");let b;if(y.indexOf(" ")){const e=y.split(" ");b=this.parseNumber(e[0])}else b=this.parseNumber(y);return{id:t,symbol:a+"/"+n+":"+o,base:a,quote:n,settle:o,baseId:s,quoteId:i,settleId:r,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"Listed"===g,contract:!0,linear:!c,inverse:c,taker:this.parseNumber(this.fromEn(m,h)),maker:this.parseNumber(this.fromEn(p,h)),contractSize:b,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:d,valueScale:l,ratioScale:h,precision:{amount:this.safeNumber(e,"lotSize"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(e,"maxLeverage")},amount:{min:void 0,max:void 0},price:{min:this.parseNumber(this.fromEn(u,d)),max:this.parseNumber(this.fromEn(f,d))},cost:{min:void 0,max:this.parseNumber(this.safeString(e,"maxOrderQty"))}},info:e}}parseSpotMarket(e){const t=this.safeStringLower(e,"type"),s=this.safeString(e,"symbol"),i=this.safeString(e,"quoteCurrency"),r=this.safeString(e,"baseCurrency"),a=this.safeCurrencyCode(r),n=this.safeCurrencyCode(i),o=this.safeString(e,"status"),c=this.parseSafeNumber(this.safeString(e,"baseTickSize")),d=this.parseSafeNumber(this.safeString(e,"quoteTickSize"));return{id:s,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:r,quoteId:i,settleId:void 0,type:t,spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"Listed"===o,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"defaultTakerFee"),maker:this.safeNumber(e,"defaultMakerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:8,valueScale:8,ratioScale:8,precision:{amount:c,price:d},limits:{leverage:{min:void 0,max:void 0},amount:{min:c,max:this.parseSafeNumber(this.safeString(e,"maxBaseOrderSize"))},price:{min:d,max:void 0},cost:{min:this.parseSafeNumber(this.safeString(e,"minOrderValue")),max:this.parseSafeNumber(this.safeString(e,"maxOrderValue"))}},info:e}}async fetchMarkets(e={}){const t=await this.publicGetCfgV2Products(e),s=await this.v1GetExchangePublicProducts(e),i=this.safeValue(s,"data",[]),r=this.safeValue(t,"data",{}),a=this.safeValue(r,"products",[]),n=this.safeValue(r,"riskLimits",[]),o=this.indexBy(n,"symbol"),c=this.indexBy(i,"symbol"),d=[];for(let e=0;e<a.length;e++){let t=a[e];if("perpetual"===this.safeStringLower(t,"type")){const e=this.safeString(t,"symbol"),s=this.safeValue(o,e,{});t=this.extend(t,s);const i=this.safeValue(c,e,{});t=this.extend(t,i),t=this.parseSwapMarket(t)}else t=this.parseSpotMarket(t);d.push(t)}return d}async fetchCurrencies(e={}){const t=await this.publicGetCfgV2Products(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"currencies",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"currency"),a=this.safeString(t,"name"),n=this.safeCurrencyCode(s),o=this.safeString(t,"valueScale"),c=parseInt(o),d=this.safeString(t,"minValueEv"),h=this.safeString(t,"maxValueEv");let l,u,f;if(void 0!==c){const e=this.parsePrecision(o);f=this.parseNumber(e),l=this.parseNumber(v.stringMul(d,e)),u=this.parseNumber(v.stringMul(h,e))}r[n]={id:s,info:t,code:n,name:a,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:f,limits:{amount:{min:l,max:u},withdraw:{min:void 0,max:void 0}},valueScale:c}}return r}parseBidAsk(e,t=0,s=1,i){if(void 0===i)throw new d(this.id+" parseBidAsk() requires a market argument");let r=this.safeString(e,s);return i.spot&&(r=this.fromEv(r,i)),[this.parseNumber(this.fromEp(this.safeString(e,t),i)),this.parseNumber(r)]}parseOrderBook(e,t,s,i="bids",r="asks",a=0,n=1,o){const c={symbol:t,timestamp:s,datetime:this.iso8601(s),nonce:void 0},d=[i,r];for(let t=0;t<d.length;t++){const s=d[t],i=[],r=this.safeValue(e,s);for(let e=0;e<r.length;e++)i.push(this.parseBidAsk(r[e],a,n,o));c[s]=i}return c[i]=this.sortBy(c[i],0,!0),c[r]=this.sortBy(c[r],0),c}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a=await this.v1GetMdOrderbook(this.extend(r,s)),n=this.safeValue(a,"result",{}),o=this.safeValue(n,"book",{}),c=this.safeIntegerProduct(n,"timestamp",1e-6),d=this.parseOrderBook(o,e,c,"bids","asks",0,1,i);return d.nonce=this.safeInteger(n,"sequence"),d}toEn(e,t){const s=e.toString(),i=new v(s);i.decimals=i.decimals-t,i.reduce();const r=i.toString();return parseInt(parseFloat(r))}toEv(e,t){return void 0===e||void 0===t?e:this.toEn(e,t.valueScale)}toEp(e,t){return void 0===e||void 0===t?e:this.toEn(e,t.priceScale)}fromEn(e,t){if(void 0===e)return;const s=new v(e);return s.decimals=this.sum(s.decimals,t),s.reduce(),s.toString()}fromEp(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}parseOHLCV(e,t){let s;return s=void 0!==t&&t.spot?this.parseNumber(this.fromEv(this.safeString(e,7),t)):this.safeNumber(e,7),[this.safeTimestamp(e,0),this.parseNumber(this.fromEp(this.safeString(e,3),t)),this.parseNumber(this.fromEp(this.safeString(e,4),t)),this.parseNumber(this.fromEp(this.safeString(e,5),t)),this.parseNumber(this.fromEp(this.safeString(e,6),t)),s]}async fetchOHLCV(e,t="1m",s,i,r={}){const a={resolution:this.timeframes[t]},n=this.parseTimeframe(t),o=this.seconds();if(void 0!==s)void 0===i&&(i=2e3),s=parseInt(s/1e3),a.from=s,a.to=Math.min(o,this.sum(s,n*i));else{if(void 0===i)throw new d(this.id+" fetchOHLCV() requires a since argument, or a limit argument, or both");i=Math.min(i,2e3),a.from=o-n*this.sum(i,1),a.to=o}await this.loadMarkets();const c=this.market(e);a.symbol=c.id;const h=await this.publicGetMdKline(this.extend(a,r)),l=this.safeValue(h,"data",{}),u=this.safeValue(l,"rows",[]);return this.parseOHLCVs(u,c,t,s,i)}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeIntegerProduct(e,"timestamp",1e-6),a=this.fromEp(this.safeString(e,"lastEp"),t),n=this.fromEv(this.safeString(e,"turnoverEv"),t);let o=this.safeString(e,"volume");void 0===o&&(o=this.fromEv(this.safeString(e,"volumeEv"),t));const c=this.fromEp(this.safeString(e,"openEp"),t);return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.fromEp(this.safeString(e,"highEp"),t),low:this.fromEp(this.safeString(e,"lowEp"),t),bid:this.fromEp(this.safeString(e,"bidEp"),t),bidVolume:void 0,ask:this.fromEp(this.safeString(e,"askEp"),t),askVolume:void 0,vwap:void 0,open:c,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=s.spot?"v1GetMdSpotTicker24hr":"v1GetMdTicker24hr",a=await this[r](this.extend(i,t)),n=this.safeValue(a,"result",{});return this.parseTicker(n,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.v1GetMdTrade(this.extend(a,i)),o=this.safeValue(n,"result",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}parseTrade(e,t){let s,i,r,a,n,o,c,d;const h=this.safeString(e,"symbol"),l=(t=this.safeMarket(h,t)).symbol;let u,f;if(Array.isArray(e)){const o=e.length;r=this.safeIntegerProduct(e,0,1e-6),o>4&&(a=this.safeString(e,o-4)),n=this.safeStringLower(e,o-3),s=this.fromEp(this.safeString(e,o-2),t),i=this.fromEv(this.safeString(e,o-1),t)}else{r=this.safeIntegerProduct(e,"transactTimeNs",1e-6),a=this.safeString2(e,"execId","execID"),u=this.safeString(e,"orderID"),n=this.safeStringLower(e,"side"),c=this.parseOrderType(this.safeString(e,"ordType"));"MakerFill"===this.safeString(e,"execStatus")&&(f="maker"),s=this.fromEp(this.safeString(e,"execPriceEp"),t),i=this.fromEv(this.safeString(e,"execBaseQtyEv"),t),i=this.safeString(e,"execQty",i),o=this.fromEv(this.safeString2(e,"execQuoteQtyEv","execValueEv"),t);const h=this.fromEv(this.safeString(e,"execFeeEv"),t);if(void 0!==h){const s=this.fromEr(this.safeString(e,"feeRateEr"),t);let i;if(t.spot)i="buy"===n?t.base:t.quote;else{const e=this.safeValue(t,"info");if(void 0!==e){const t=this.safeString(e,"settlementCurrency");i=this.safeCurrencyCode(t)}}d={cost:this.parseNumber(h),rate:this.parseNumber(s),currency:i}}}return this.safeTrade({info:e,id:a,symbol:l,timestamp:r,datetime:this.iso8601(r),order:u,type:c,side:n,takerOrMaker:f,price:s,amount:i,cost:o,fee:d},t)}parseSpotBalance(e){let t;const s={info:e},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"currency"),n=this.safeCurrencyCode(a),o=this.safeValue(this.currencies,n,{}),c=this.safeInteger(o,"valueScale",8),d=this.account(),h=this.safeString(r,"balanceEv"),l=this.safeString(r,"lockedTradingBalanceEv"),u=this.safeString(r,"lockedWithdrawEv"),f=this.fromEn(h,c),p=this.fromEn(l,c),m=this.fromEn(u,c),g=v.stringAdd(p,m),y=this.safeIntegerProduct(r,"lastUpdateTimeNs",1e-6);t=void 0===t?y:Math.max(t,y),d.total=f,d.used=g,s[n]=d}return s.timestamp=t,s.datetime=this.iso8601(t),this.safeBalance(s)}parseSwapBalance(e){const t={info:e},s=this.safeValue(e,"data",{}),i=this.safeValue(s,"account",{}),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.currency(a),o=this.account(),c=this.safeString(i,"accountBalanceEv"),d=this.safeString(i,"totalUsedBalanceEv"),h=this.safeInteger(n,"valueScale",8);return o.total=this.fromEn(c,h),o.used=this.fromEn(d,h),t[a]=o,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"defaultType","fetchBalance","spot"),s=this.safeString(e,"type",t);let i="privateGetSpotWallets";const r={};if("swap"===s){const t=this.safeString(e,"code");if(void 0!==t){const s=this.currency(t);r.currency=s.id,e=this.omit(e,"code")}else{if(void 0===this.safeString(e,"currency"))throw new d(this.id+" fetchBalance() requires a code parameter or a currency parameter for "+s+" type")}i="privateGetAccountsAccountPositions"}e=this.omit(e,"type");const a=await this[i](this.extend(r,e));return"swap"===s?this.parseSwapBalance(a):this.parseSpotBalance(a)}parseOrderStatus(e){return this.safeString({Created:"open",Untriggered:"open",Deactivated:"closed",Triggered:"open",Rejected:"rejected",New:"open",PartiallyFilled:"open",Filled:"closed",Canceled:"canceled"},e,e)}parseOrderType(e){return this.safeString({Limit:"limit",Market:"market"},e,e)}parseTimeInForce(e){return this.safeString({GoodTillCancel:"GTC",PostOnly:"PO",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseSpotOrder(e,t){const s=this.safeString(e,"orderID");let i=this.safeString(e,"clOrdID");void 0!==i&&i.length<1&&(i=void 0);const r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.fromEp(this.safeString(e,"priceEp"),t),o=this.fromEv(this.safeString(e,"baseQtyEv"),t),c=this.omitZero(this.fromEv(this.safeString(e,"leavesBaseQtyEv"),t)),d=this.fromEv(this.safeString2(e,"cumBaseQtyEv","cumBaseValueEv"),t),h=this.fromEv(this.safeString2(e,"cumQuoteValueEv","quoteQtyEv"),t),l=this.fromEp(this.safeString(e,"avgPriceEp"),t),u=this.parseOrderStatus(this.safeString(e,"ordStatus")),f=this.safeStringLower(e,"side"),p=this.parseOrderType(this.safeString(e,"ordType")),m=this.safeIntegerProduct2(e,"actionTimeNs","createTimeNs",1e-6);let g;const y=this.fromEv(this.safeString(e,"cumFeeEv"),t);void 0!==y&&(g={cost:y,currency:void 0});const b=this.parseTimeInForce(this.safeString(e,"timeInForce")),v=this.parseNumber(this.omitZero(this.fromEp(this.safeString(e,"stopPxEp",t)))),w="PO"===b;return this.safeOrder({info:e,id:s,clientOrderId:i,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:void 0,symbol:a,type:p,timeInForce:b,postOnly:w,side:f,price:n,stopPrice:v,amount:o,cost:h,average:l,filled:d,remaining:c,status:u,fee:g,trades:void 0},t)}parseSwapOrder(e,t){const s=this.safeString(e,"orderID");let i=this.safeString(e,"clOrdID");void 0!==i&&i.length<1&&(i=void 0);const r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeStringLower(e,"side"),c=this.parseOrderType(this.safeString(e,"orderType")),d=this.parseNumber(this.fromEp(this.safeString(e,"priceEp"),t)),h=this.safeNumber(e,"orderQty"),l=this.safeNumber(e,"cumQty"),u=this.safeNumber(e,"leavesQty"),f=this.safeIntegerProduct(e,"actionTimeNs",1e-6),p=this.safeNumber(e,"cumValue");let m=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===m&&(m=void 0);const g=this.parseTimeInForce(this.safeString(e,"timeInForce")),y=this.safeNumber(e,"stopPx"),b="PO"===g;let v=this.safeValue(e,"reduceOnly");return"ReduceOnly"===this.safeString(e,"execInst")&&(v=!0),{info:e,id:s,clientOrderId:i,datetime:this.iso8601(f),timestamp:f,lastTradeTimestamp:m,symbol:a,type:c,timeInForce:g,postOnly:b,reduceOnly:v,side:o,price:d,stopPrice:y,amount:h,filled:l,remaining:u,cost:p,average:void 0,status:n,fee:void 0,trades:void 0}}parseOrder(e,t){return"closedPnl"in e?this.parseSwapOrder(e,t):this.parseSpotOrder(e,t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e);s=this.capitalize(s),t=this.capitalize(t);const o=this.safeValue(a,"reduceOnly"),c={symbol:n.id,side:s,ordType:t},h=this.safeString2(a,"clOrdID","clientOrderId");if(void 0===h){const e=this.safeString(this.options,"brokerId");void 0!==e&&(c.clOrdID=e+this.uuid16())}else c.clOrdID=h,a=this.omit(a,["clOrdID","clientOrderId"]);const l=this.safeString2(a,"stopPx","stopPrice");if(void 0!==l&&(c.stopPxEp=this.toEp(l,n)),a=this.omit(a,["stopPx","stopPrice"]),n.spot){let e=this.safeValue(a,"qtyType","ByBase");if("Market"!==t&&"Stop"!==t&&"MarketIfTouched"!==t||void 0!==r&&(e="ByQuote"),c.qtyType=e,"ByQuote"===e){let t=this.safeNumber(a,"cost");if(a=this.omit(a,"cost"),this.options.createOrderByQuoteRequiresPrice)if(void 0!==r)t=i*r;else if(void 0===t)throw new d(this.id+" createOrder() "+e+" requires a price argument or a cost parameter");t=void 0===t?i:t;const s=t.toString();c.quoteQtyEv=this.toEv(s,n)}else{const e=i.toString();c.baseQtyEv=this.toEv(e,n)}}else if(n.swap&&(void 0!==o&&(c.reduceOnly=o),c.orderQty=parseInt(i),void 0!==l)){const e=this.safeString(a,"triggerType","ByMarkPrice");c.triggerType=e}if("Limit"===t||"StopLimit"===t||"LimitIfTouched"===t){const e=r.toString();c.priceEp=this.toEp(e,n)}const u=this.safeString(a,"takeProfitPrice");void 0!==u&&(c.takeProfitEp=this.toEp(u,n),a=this.omit(a,"takeProfitPrice"));const f=this.safeString(a,"stopLossPrice");void 0!==f&&(c.stopLossEp=this.toEp(f,n),a=this.omit(a,"stopLossPrice"));const p=n.spot?"privatePostSpotOrders":"privatePostOrders";a=this.omit(a,"reduceOnly");const m=await this[p](this.extend(c,a)),g=this.safeValue(m,"data",{});return this.parseOrder(g,n)}async editOrder(e,t,s,i,r,a,n={}){if(void 0===t)throw new d(this.id+" editOrder() requires a symbol argument");if(void 0!==s)throw new d(this.id+" editOrder() type changing is not implemented. Try to cancel & recreate order for that purpose");if(void 0!==i)throw new d(this.id+" editOrder() side changing is not implemented. Try to cancel & recreate order for that purpose");await this.loadMarkets();const o=this.market(t),c={symbol:o.id},h=this.safeString2(n,"clientOrderId","clOrdID");n=this.omit(n,["clientOrderId","clOrdID"]),void 0!==h?c.clOrdID=h:c.orderID=e,void 0!==a&&(c.priceEp=this.toEp(a,o));const l=this.safeString(n,"baseQtyEv");n=this.omit(n,["baseQtyEv"]),void 0!==l?c.baseQtyEV=l:void 0!==r&&(c.baseQtyEV=this.toEv(r,o));const u=this.safeString2(n,"stopPx","stopPrice");void 0!==u&&(c.stopPxEp=this.toEp(u,o)),n=this.omit(n,["stopPx","stopPrice"]);const f=o.spot?"privatePutSpotOrders":"privatePutOrdersReplace",p=await this[f](this.extend(c,n)),m=this.safeValue(p,"data",{});return this.parseOrder(m,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={symbol:i.id},a=this.safeString2(s,"clientOrderId","clOrdID");s=this.omit(s,["clientOrderId","clOrdID"]),void 0!==a?r.clOrdID=a:r.orderID=e;const n=i.spot?"privateDeleteSpotOrders":"privateDeleteOrdersCancel",o=await this[n](this.extend(r,s)),c=this.safeValue(o,"data",{});return this.parseOrder(c,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new d(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s={},i=this.market(e);let r="privateDeleteSpotOrdersAll";return i.swap&&(r="privateDeleteOrdersAll"),s.symbol=i.id,await this[r](this.extend(s,t))}async fetchOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=i.spot?"privateGetSpotOrdersActive":"privateGetExchangeOrder",a={symbol:i.id},n=this.safeString2(s,"clientOrderId","clOrdID");s=this.omit(s,["clientOrderId","clOrdID"]),void 0!==n?a.clOrdID=n:a.orderID=e;const o=await this[r](this.extend(a,s)),c=this.safeValue(o,"data",{});let l=c;if(Array.isArray(c)){if(c.length<1)throw new h(void 0!==n?this.id+" fetchOrder() "+t+" order with clientOrderId "+n+" not found":this.id+" fetchOrder() "+t+" order with id "+e+" not found");l=this.safeValue(c,0,{})}return this.parseOrder(l,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.spot?"privateGetSpotOrders":"privateGetExchangeOrderList",n={symbol:r.id};void 0!==t&&(n.start=t),void 0!==s&&(n.limit=s);const o=await this[a](this.extend(n,i)),c=this.safeValue(o,"data",{}),h=this.safeValue(c,"rows",[]);return this.parseOrders(h,r,t,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.spot?"privateGetSpotOrders":"privateGetOrdersActiveList",n={symbol:r.id};let o;try{o=await this[a](this.extend(n,i))}catch(e){if(e instanceof h)return[]}const c=this.safeValue(o,"data",{});if(Array.isArray(c))return this.parseOrders(c,r,t,s);{const e=this.safeValue(c,"rows",[]);return this.parseOrders(e,r,t,s)}}async fetchClosedOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.spot?"privateGetExchangeSpotOrder":"privateGetExchangeOrderList",n={symbol:r.id};void 0!==t&&(n.start=t),void 0!==s&&(n.limit=s);const o=await this[a](this.extend(n,i)),c=this.safeValue(o,"data",{});if(Array.isArray(c))return this.parseOrders(c,r,t,s);{const e=this.safeValue(c,"rows",[]);return this.parseOrders(e,r,t,s)}}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.spot?"privateGetExchangeSpotOrderTrades":"privateGetExchangeOrderTrade",n={symbol:r.id};void 0!==t&&(n.start=t),r.swap&&void 0!==s&&(n.limit=s);const o=await this[a](this.extend(n,i)),c=this.safeValue(o,"data",{}),h=this.safeValue(c,"rows",[]);return this.parseTrades(h,r,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=this.safeValue(this.options,"defaultNetworks"),a=this.safeStringUpper(r,e),n=this.safeValue(this.options,"networks",{});let o=this.safeStringUpper(t,"network",a);o=this.safeString(n,o,o),void 0===o?i.chainName=s.id:(i.chainName=o,t=this.omit(t,"network"));const c=await this.privateGetPhemexUserWalletsV2DepositAddress(this.extend(i,t)),d=this.safeValue(c,"data",{}),h=this.safeString(d,"address"),l=this.safeString(d,"tag");return this.checkAddress(h),{currency:e,address:h,tag:l,network:void 0,info:c}}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetExchangeWalletsDepositList(i),n=this.safeValue(a,"data",{});return this.parseTransactions(n,r,t,s)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetExchangeWalletsWithdrawList(i),n=this.safeValue(a,"data",{});return this.parseTransactions(n,r,t,s)}parseTransactionStatus(e){return this.safeString({Success:"ok",Succeed:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"address"),r=void 0,a=this.safeString(e,"txHash"),n=this.safeString(e,"currency"),o=(t=this.safeCurrency(n,t)).code,c=this.safeInteger2(e,"createdAt","submitedAt");let d=this.safeStringLower(e,"type");const h=this.parseNumber(this.fromEn(this.safeString(e,"feeEv"),t.valueScale));let l;void 0!==h&&(d="withdrawal",l={cost:h,currency:o});const u=this.parseTransactionStatus(this.safeString(e,"status")),f=this.parseNumber(this.fromEn(this.safeString(e,"amountEv"),t.valueScale));return{info:e,id:s,txid:a,timestamp:c,datetime:this.iso8601(c),network:void 0,address:i,addressTo:i,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:d,amount:f,currency:o,status:u,updated:void 0,fee:l}}async fetchPositions(e,t={}){await this.loadMarkets();const s=this.safeString(this.options,"defaultSubType","linear");let i=this.safeString(t,"code");void 0===i?i="linear"===s?"USD":"BTC":t=this.omit(t,"code");const r={currency:this.currency(i).id},a=await this.privateGetAccountsAccountPositions(this.extend(r,t)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"positions",[]),c=[];for(let e=0;e<o.length;e++){const t=o[e];c.push(this.parsePosition(t))}return this.filterByArray(c,"symbol",e,!1)}parsePosition(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString(e,"positionMargin"),a=this.safeString(e,"value"),n=this.safeString(e,"maintMarginReq"),o=v.stringMul(a,n),c=this.safeString(e,"assignedPosBalance"),d=v.stringDiv(c,a),h=this.safeNumber(e,"liquidationPrice"),l=this.safeString(e,"markPrice"),u=this.safeString(e,"size"),f=this.safeValue(t,"contractSize"),p=this.numberToString(f),m=this.safeNumber(e,"leverage"),g=this.safeString(e,"avgEntryPrice"),y="Buy"===this.safeString(e,"side")?"long":"short";let b;b="USD"===this.safeString(e,"currency")?"long"===y?v.stringSub(l,g):v.stringSub(g,l):"long"===y?v.stringSub(v.stringDiv("1",g),v.stringDiv("1",l)):v.stringSub(v.stringDiv("1",l),v.stringDiv("1",g));const w=v.stringMul(v.stringMul(b,u),p),S=v.stringMul(v.stringDiv(w,c),"100"),k=v.stringDiv(o,r);return{info:e,symbol:i,contracts:this.parseNumber(u),contractSize:f,unrealizedPnl:this.parseNumber(w),leverage:m,liquidationPrice:h,collateral:this.parseNumber(r),notional:this.parseNumber(a),markPrice:this.parseNumber(l),entryPrice:this.parseNumber(g),timestamp:void 0,initialMargin:this.parseNumber(c),initialMarginPercentage:this.parseNumber(d),maintenanceMargin:this.parseNumber(o),maintenanceMarginPercentage:this.parseNumber(n),marginRatio:this.parseNumber(k),datetime:void 0,marginMode:void 0,side:y,hedged:!1,percentage:this.parseNumber(S)}}async fetchFundingHistory(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new d(this.id+" fetchFundingHistory() requires a symbol argument");const r=this.market(e),a={symbol:r.id};if(s>200)throw new l(this.id+" fetchFundingHistory() limit argument cannot exceed 200");void 0!==s&&(a.limit=s);const n=await this.privateGetApiDataFuturesFundingFees(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"rows",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],s=this.safeInteger(t,"createTime");h.push({info:t,symbol:this.safeString(t,"symbol"),code:this.safeCurrencyCode(this.safeString(t,"currency")),timestamp:s,datetime:this.iso8601(s),id:void 0,amount:this.fromEv(this.safeString(t,"execFeeEv"),r)})}return h}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new a(this.id+" fetchFundingRate() supports swap contracts only");const i={symbol:s.id},r=await this.v1GetMdTicker24hr(this.extend(i,t)),n=this.safeValue(r,"result",{});return this.parseFundingRate(n,s)}parseFundingRate(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeIntegerProduct(e,"timestamp",1e-6);return{info:e,symbol:i,markPrice:this.fromEp(this.safeString(e,"markEp"),t),indexPrice:this.fromEp(this.safeString(e,"indexEp"),t),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),fundingRate:this.fromEr(this.safeString(e,"fundingRateEr"),t),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.fromEr(this.safeString(e,"predFundingRateEr"),t),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async setMargin(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id,posBalanceEv:this.toEv(t,i)},a=await this.privatePostPositionsAssign(this.extend(r,s));return this.extend(this.parseMarginModification(a,i),{amount:t})}parseMarginStatus(e){return this.safeString({0:"ok"},e,e)}parseMarginModification(e,t){return{info:e,type:"set",amount:void 0,total:void 0,code:(t=this.safeMarket(void 0,t))[this.safeValue(t,"inverse")?"base":"quote"],symbol:this.safeSymbol(void 0,t),status:this.parseMarginStatus(this.safeString(e,"code"))}}async setMarginMode(e,t,s={}){if(void 0===t)throw new d(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new l(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();const i=this.market(t);if("swap"!==i.type)throw new a(this.id+" setMarginMode() supports swap contracts only");let r=this.safeInteger(s,"leverage");if("cross"===e&&(r=0),void 0===r)throw new d(this.id+" setMarginMode() requires a leverage parameter");const n={symbol:i.id,leverage:r};return await this.privatePutPositionsLeverage(this.extend(n,s))}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.publicGetCfgV2Products(t),i=this.safeValue(s,"data",{}),r=this.safeValue(i,"riskLimits");return this.parseLeverageTiers(r,e,"symbol")}parseMarketLeverageTiers(e,t){const s=(t=this.safeMarket(void 0,t)).info.riskLimits,i=[];let r=0;for(let e=0;e<s.length;e++){const a=s[e],n=this.safeInteger(a,"limit");i.push({tier:this.sum(e,1),currency:t.settle,minNotional:r,maxNotional:n,maintenanceMarginRate:this.safeString(a,"maintenanceMargin"),maxLeverage:void 0,info:a}),r=n}return i}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e)),o="/"+this.implodeParams(e,i);let c=o,d="";if("GET"!==s&&"DELETE"!==s&&"PUT"!==s&&"/positions/assign"!==c||Object.keys(n).length&&(d=this.urlencodeWithArrayRepeat(n),c+="?"+d),"private"===t){this.checkRequiredCredentials();const e=this.seconds(),t=this.safeInteger(this.options,"x-phemex-request-expiry",60),n=this.sum(e,t).toString();r={"x-phemex-access-token":this.apiKey,"x-phemex-request-expiry":n};let c="";"POST"===s&&(c=this.json(i),a=c,r["Content-Type"]="application/json");const h=o+d+n+c;r["x-phemex-request-signature"]=this.hmac(this.encode(h),this.encode(this.secret))}return c=this.implodeHostname(this.urls.api[t])+c,{url:c,method:s,body:a,headers:r}}async setLeverage(e,t,s={}){if(void 0===t)throw new d(this.id+" setLeverage() requires a symbol argument");if(e<1||e>100)throw new l(this.id+" setLeverage() leverage should be between 1 and 100");await this.loadMarkets();const i={symbol:this.market(t).id,leverage:e};return await this.privatePutPositionsLeverage(this.extend(i,s))}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,i),d=this.toEv(t,a);let h,l;if("spot"===o&&"future"===c?h=2:"future"===o&&"spot"===c&&(h=1),void 0!==h){const e={currency:a.id,moveOp:h,amountEv:d},t=await this.privatePostAssetsTransfer(this.extend(e,r)),s=this.safeValue(t,"data",{});l=this.parseTransfer(s,a)}else{const e={fromUserId:o,toUserId:c,amountEv:d,currency:a.id,bizType:this.safeString(r,"bizType","SPOT")},t=await this.privatePostAssetsUniversalTransfer(this.extend(e,r));l=this.parseTransfer(t)}const u=this.safeValue(this.options,"transfer",{});return this.safeValue(u,"fillResponseFromRequest",!0)&&(void 0===l.fromAccount&&(l.fromAccount=s),void 0===l.toAccount&&(l.toAccount=i),void 0===l.amount&&(l.amount=t),void 0===l.currency&&(l.currency=e)),l}async fetchTransfers(e,t,s,i={}){if(await this.loadMarkets(),void 0===e)throw new d(this.id+" fetchTransfers() requires a code argument");const r=this.currency(e),a={currency:r.id};void 0!==t&&(a.start=t),void 0!==s&&(a.limit=s);const n=await this.privateGetAssetsTransfer(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"rows",[]);return this.parseTransfers(c,r,t,s)}parseTransfer(e,t){const s=this.safeString(e,"linkKey"),i=this.safeString(e,"status"),r=this.safeString(e,"amountEv"),a=this.fromEv(r,t),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),c=this.safeInteger(e,"side");let d,h;1===c?(d="swap",h="spot"):2===c&&(d="spot",h="swap");const l=this.safeInteger(e,"createTime");return{info:e,id:s,timestamp:l,datetime:this.iso8601(l),currency:o,amount:a,fromAccount:d,toAccount:h,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({3:"rejected",6:"canceled",10:"ok",11:"failed"},e,e)}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"error",o),l=this.safeString(h,"code"),u=this.safeString(h,"msg");if(void 0!==l&&"0"!==l){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,l,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],240:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,RequestTimeout:n,AuthenticationError:o,PermissionDenied:c,RateLimitExceeded:d,InsufficientFunds:h,OrderNotFound:l,InvalidOrder:u,AccountSuspended:f,CancelPending:p,InvalidNonce:m,OnMaintenance:g,BadSymbol:y}=e("./base/errors"),{TICK_SIZE:b}=e("./base/functions/number"),v=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"poloniex",name:"Poloniex",countries:["US"],rateLimit:166.667,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:void 0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrder:"emulated",fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"5m":300,"15m":900,"30m":1800,"2h":7200,"4h":14400,"1d":86400},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{public:"https://poloniex.com/public",private:"https://poloniex.com/tradingApi"},www:"https://www.poloniex.com",doc:"https://docs.poloniex.com",fees:"https://poloniex.com/fees",referral:"https://poloniex.com/signup?c=UBFZJRPJ"},api:{public:{get:{return24hVolume:1,returnChartData:1,returnCurrencies:1,returnLoanOrders:1,returnOrderBook:1,returnTicker:1,returnTradeHistory:1}},private:{post:{buy:1,cancelLoanOffer:1,cancelOrder:1,cancelAllOrders:1,closeMarginPosition:1,createLoanOffer:1,generateNewAddress:1,getMarginPosition:1,marginBuy:1,marginSell:1,moveOrder:1,returnActiveLoans:1,returnAvailableAccountBalances:1,returnBalances:1,returnCompleteBalances:1,returnDepositAddresses:1,returnDepositsWithdrawals:1,returnFeeInfo:1,returnLendingHistory:1,returnMarginAccountSummary:1,returnOpenLoanOffers:1,returnOpenOrders:1,returnOrderTrades:1,returnOrderStatus:1,returnTradableBalances:1,returnTradeHistory:1,sell:1,toggleAutoRenew:1,transferBalance:1,withdraw:1}}},fees:{trading:{feeSide:"get",maker:this.parseNumber("0.0009"),taker:this.parseNumber("0.0009")},funding:{}},limits:{amount:{min:1e-6,max:void 0},price:{min:1e-8,max:void 0},cost:{min:void 0,max:void 0}},commonCurrencies:{AIR:"AirCoin",APH:"AphroditeCoin",BCC:"BTCtalkcoin",BCHABC:"BCHABC",BDG:"Badgercoin",BTM:"Bitmark",CON:"Coino",GOLD:"GoldEagles",GPUC:"GPU",HOT:"Hotcoin",ITC:"Information Coin",KEY:"KEYCoin",MASK:"NFTX Hashmasks Index",MEME:"Degenerator Meme",PLX:"ParallaxCoin",REPV2:"REP",STR:"XLM",SOC:"SOCC",TRADE:"Unitrade",XAP:"API Coin",USDTTRON:"USDT",USDTETH:"USDT",UST:"USTC"},options:{networks:{ERC20:"ETH",TRX:"TRON",TRC20:"TRON"},limits:{cost:{min:{BTC:1e-4,ETH:1e-4,USDT:1,TRX:100,BNB:.06,USDC:1,USDJ:1,TUSD:1e-4,DAI:1,PAX:1,BUSD:1}}},accountsByType:{spot:"exchange",margin:"margin",future:"futures",lending:"lending"},accountsById:{exchange:"spot",margin:"margin",futures:"future",lending:"lending"}},precisionMode:b,exceptions:{exact:{"You may only place orders that reduce your position.":u,"Invalid order number, or you are not the person who placed the order.":l,"Permission denied":c,"Permission denied.":c,"Connection timed out. Please try again.":n,"Internal error. Please try again.":a,"Currently in maintenance mode.":g,"Order not found, or you are not the person who placed it.":l,"Invalid API key/secret pair.":o,"Please do not make more than 8 API calls per second.":d,"This IP has been temporarily throttled. Please ensure your requests are valid and try again in one minute.":d,"Rate must be greater than zero.":u,"Invalid currency pair.":y,"Invalid currencyPair parameter.":y,"Trading is disabled in this market.":y,"Invalid orderNumber parameter.":l,"Order is beyond acceptable bounds.":u,"This account is closed.":f},broad:{"Total must be at least":u,"This account is frozen":f,"This account is locked.":f,"Not enough":h,"Nonce must be greater":m,"You have already called cancelOrder":p,"Amount must be at least":u,"is either completed or does not exist":l,"Error pulling ":r}}})}parseOHLCV(e,t){return[this.safeTimestamp(e,"date"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"quoteVolume")]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={currencyPair:a.id,period:this.timeframes[t]};if(void 0===s)n.end=this.seconds(),n.start=void 0===i?n.end-this.parseTimeframe("1w"):n.end-i*this.parseTimeframe(t);else if(n.start=parseInt(s/1e3),void 0!==i){const e=this.sum(n.start,i*this.parseTimeframe(t));n.end=e}const o=await this.publicGetReturnChartData(this.extend(n,r));return this.parseOHLCVs(o,a,t,s,i)}async loadMarkets(e=!1,t={}){const s=await super.loadMarkets(e,t);return(void 0===this.safeValue(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexBy(this.currencies,"numericId")),s}async fetchMarkets(e={}){const t=await this.publicGetReturnTicker(e),s=Object.keys(t),i=[];for(let e=0;e<s.length;e++){const r=s[e],a=t[r],[n,o]=r.split("_"),c=this.safeCurrencyCode(o),d=this.safeCurrencyCode(n),h=this.safeString(a,"isFrozen"),l=this.safeInteger(a,"marginTradingEnabled");i.push({id:r,numericId:this.safeInteger(a,"id"),symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:o,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:1===l,swap:!1,future:!1,option:!1,active:"1"!==h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00000001")},limits:this.extend(this.limits,{leverage:{min:void 0,max:void 0},cost:{min:this.safeValue(this.options.limits.cost.min,d),max:void 0}}),info:a})}return i}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=Object.keys(e);for(let i=0;i<s.length;i++){const r=s[i],a=this.safeValue(e,r,{}),n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"available"),o.used=this.safeString(a,"onOrders"),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostReturnCompleteBalances(this.extend({account:"all"},e));return this.parseBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostReturnFeeInfo(e),s={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];s[i]={info:t,symbol:i,maker:this.safeNumber(t,"makerFee"),taker:this.safeNumber(t,"takerFee"),percentage:!0,tierBased:!0}}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={currencyPair:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetReturnOrderBook(this.extend(r,s)),n=this.parseOrderBook(a,i.symbol);return n.nonce=this.safeInteger(a,"seq"),n}async fetchOrderBooks(e,t,s={}){await this.loadMarkets();const i={currencyPair:"all"};void 0!==t&&(i.depth=t);const r=await this.publicGetReturnOrderBook(this.extend(i,s)),a=Object.keys(r),n={};for(let e=0;e<a.length;e++){const t=a[e];let s;if(t in this.markets_by_id)s=this.markets_by_id[t].symbol;else{const[e,i]=t.split("_");s=this.safeCurrencyCode(i)+"/"+this.safeCurrencyCode(e)}const i=this.parseOrderBook(r[t],s);i.nonce=this.safeInteger(r[t],"seq"),n[s]=i}return n}parseTicker(e,t){const s=this.milliseconds(),i=this.safeSymbol(void 0,t),r=this.safeString(e,"last"),a=this.safeString(e,"percentChange"),n=v.stringMul(a,"100");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:this.safeString(e,"highestBid"),bidVolume:void 0,ask:this.safeString(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:n,average:void 0,baseVolume:this.safeString(e,"quoteVolume"),quoteVolume:this.safeString(e,"baseVolume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetReturnTicker(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e];let a,n;if(t in this.markets_by_id)n=this.markets_by_id[t],a=n.symbol;else{const[e,s]=t.split("_");a=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(e),n={symbol:a}}const o=s[t];r[a]=this.parseTicker(o,n)}return this.filterByArray(r,"symbol",e)}async fetchCurrencies(e={}){const t=await this.publicGetReturnCurrencies(e),s=Object.keys(t),i={};for(let e=0;e<s.length;e++){const r=s[e],a=t[r],n=this.safeCurrencyCode(r),o=this.safeInteger(a,"delisted",0),c=!this.safeInteger(a,"disabled",0)&&!o,d=this.safeInteger(a,"id"),h=this.safeNumber(a,"txFee");i[n]={id:r,numericId:d,code:n,info:a,name:a.name,active:c,deposit:void 0,withdraw:void 0,fee:h,precision:this.parseNumber("0.00000001"),limits:{amount:{min:this.parseNumber("0.00000001"),max:void 0},withdraw:{min:h,max:void 0}}}}return i}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=(await this.publicGetReturnTicker(t))[s.id];return this.parseTicker(i,s)}parseTrade(e,t){const s=this.safeString2(e,"globalTradeID","tradeID"),i=this.safeString(e,"orderNumber"),r=this.parse8601(this.safeString(e,"date")),a=this.safeString(e,"currencyPair"),n=(t=this.safeMarket(a,t,"_")).symbol,o=this.safeString(e,"type");let c;const d=this.safeString(e,"rate"),h=this.safeString(e,"amount"),l=this.safeString(e,"total"),u=this.safeString(e,"feeDisplay");if(void 0!==u){const e=u.split(" "),t=this.safeString(e,0);if(void 0!==t){const s=this.safeString(e,1),i=this.safeCurrencyCode(s);let r=this.safeString(e,2);if(void 0!==r){r=r.replace("(","");const e=r.split("%");r=this.safeString(e,0),r=v.stringDiv(r,"100")}c={cost:t,currency:i,rate:r}}}else{const s=this.safeString(e,"fee");if(void 0!==s&&void 0!==t){const e="buy"===o?h:l;c={cost:s,currency:"buy"===o?t.base:t.quote,rate:v.stringDiv(s,e)}}}let f;return void 0!==this.safeNumber(e,"takerAdjustment")&&(f="taker"),this.safeTrade({id:s,info:e,timestamp:r,datetime:this.iso8601(r),symbol:n,order:i,type:"limit",side:o,takerOrMaker:f,price:d,amount:h,cost:l,fee:c},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currencyPair:r.id};void 0!==t&&(a.start=parseInt(t/1e3),a.end=this.seconds());const n=await this.publicGetReturnTradeHistory(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={currencyPair:r?r.id:"all"};void 0!==t&&(a.start=parseInt(t/1e3),a.end=this.sum(this.seconds(),1)),void 0!==s&&(a.limit=parseInt(s));const n=await this.privatePostReturnTradeHistory(this.extend(a,i));let o=[];if(void 0!==r)o=this.parseTrades(n,r);else if(n){const e=Object.keys(n);for(let t=0;t<e.length;t++){const s=e[t];let i;if(s in this.markets_by_id){i=this.markets_by_id[s];const e=this.parseTrades(n[s],i);for(let t=0;t<e.length;t++)o.push(e[t])}else{const[e,t]=s.split("_"),i=this.safeCurrencyCode(t),r=this.safeCurrencyCode(e),a=i+"/"+r,c=n[s];for(let e=0;e<c.length;e++){const t={symbol:a,base:i,quote:r};o.push(this.parseTrade(c[e],t))}}}}return this.filterBySinceLimit(o,t,s)}parseOrderStatus(e){return this.safeString({Open:"open","Partially filled":"open"},e,e)}parseOrder(e,t){let s=this.safeInteger(e,"timestamp");void 0===s&&(s=this.parse8601(this.safeString(e,"date")));const i=this.safeString(e,"currencyPair"),r=(t=this.safeMarket(i,t,"_")).symbol;let a=this.safeValue(e,"resultingTrades");Array.isArray(a)||(a=this.safeValue(a,this.safeString(t,"id",i)));const n=this.safeString2(e,"price","rate"),o=this.safeString(e,"amount"),c=this.safeString(e,"startingAmount"),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString(e,"type"),l=this.safeString(e,"orderNumber");let u;const f=this.safeString(e,"tokenFeeCurrency");let p,m;const g=this.safeString(e,"fee");void 0===f?m="buy"===h?t.base:t.quote:(m=this.safeCurrencyCode(f),p=this.safeString(e,"tokenFee")),void 0!==p&&(u={rate:g,cost:p,currency:m});const y=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:l,clientOrderId:y,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:d,symbol:r,type:"limit",timeInForce:void 0,postOnly:void 0,side:h,price:n,stopPrice:void 0,cost:void 0,average:void 0,amount:c,filled:void 0,remaining:o,trades:a,fee:u},t)}parseOpenOrders(e,t,s){for(let i=0;i<e.length;i++){const r=e[i],a=this.extend(r,{status:"open",type:"limit",side:r.type,price:r.rate});s.push(this.parseOrder(a,t))}return s}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={currencyPair:r?r.id:"all"},n=await this.privatePostReturnOpenOrders(this.extend(a,i)),o={status:"open"};if(void 0===r){const e=Object.keys(n);let i=[];for(let t=0;t<e.length;t++){const s=e[t],r=n[s],a=this.markets_by_id[s];i=this.arrayConcat(i,this.parseOrders(r,a,void 0,void 0,o))}return this.filterBySinceLimit(i,t,s)}return this.parseOrders(n,r,t,s,o)}async createOrder(e,t,s,i,a,n={}){if("market"===t)throw new r(this.id+" createOrder() does not accept market orders");await this.loadMarkets();const o="privatePost"+this.capitalize(s),c=this.market(e);i=this.amountToPrecision(e,i);const d={currencyPair:c.id,rate:this.priceToPrecision(e,a),amount:i},h=this.safeString(n,"clientOrderId");void 0!==h&&(d.clientOrderId=h,n=this.omit(n,"clientOrderId"));let l=await this[o](this.extend(d,n));return l=this.extend(l,{type:s}),this.parseOrder(l,c)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets(),a=parseFloat(a);const o={orderNumber:e,rate:this.priceToPrecision(t,a)};void 0!==r&&(o.amount=this.amountToPrecision(t,r));const c=await this.privatePostMoveOrder(this.extend(o,n));return this.parseOrder(c)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={},r=this.safeValue(s,"clientOrderId");return void 0===r?i.orderNumber=e:i.clientOrderId=r,s=this.omit(s,"clientOrderId"),await this.privatePostCancelOrder(this.extend(i,s))}async cancelAllOrders(e,t={}){const s={};let i;void 0!==e&&(i=this.market(e),s.currencyPair=i.id);return await this.privatePostCancelAllOrders(this.extend(s,t))}async fetchOpenOrder(e,t,s={}){await this.loadMarkets();const i={orderNumber:e=e.toString()},r=await this.privatePostReturnOrderStatus(this.extend(i,s)),a=this.safeValue(r.result,e);if(void 0===a)throw new l(this.id+" order id "+e+" not found");return this.extend(this.parseOrder(a),{id:e})}async fetchClosedOrder(e,t,s={}){await this.loadMarkets();const i={orderNumber:e},r=await this.privatePostReturnOrderTrades(this.extend(i,s)),a=this.safeValue(r,0);if(void 0===a)throw new l(this.id+" order id "+e+" not found");return e=this.safeValue(a,"globalTradeID",e),this.safeOrder({info:r,id:e,clientOrderId:this.safeValue(a,"clientOrderId"),timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:"closed",symbol:void 0,type:void 0,timeInForce:void 0,postOnly:void 0,side:void 0,price:void 0,stopPrice:void 0,cost:void 0,average:void 0,amount:void 0,filled:void 0,remaining:void 0,trades:r,fee:void 0})}async fetchOrderStatus(e,t,s={}){await this.loadMarkets();const i=await this.fetchOpenOrders(t,void 0,void 0,s);return e in this.indexBy(i,"id")?"open":"closed"}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={orderNumber:e},n=await this.privatePostReturnOrderTrades(this.extend(a,r));return this.parseTrades(n)}async createDepositAddress(e,t={}){let s,i;await this.loadMarkets(),e in this.currencies?(i=this.currency(e),s=i.id):s=e;const r={currency:s},a=await this.privatePostGenerateNewAddress(this.extend(r,t));let n,o;if("1"===this.safeString(a,"success")&&(n=this.safeString(a,"response")),this.checkAddress(n),void 0!==i){const e=this.safeString(i.info,"depositAddress");void 0!==e&&(o=n,n=e)}return{currency:e,address:n,tag:o,info:a}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=await this.privatePostReturnDepositAddresses(t);let i,r;e in this.currencies?(r=this.currency(e),i=r.id):i=e;let a,n=this.safeString(s,i);if(this.checkAddress(n),void 0!==r){const e=this.safeString(r.info,"depositAddress");void 0!==e&&(a=n,n=e)}return{currency:e,address:n,tag:a,network:void 0,info:s}}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);t=this.currencyToPrecision(e,t);const n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,s),c=this.safeString(n,i,s),d={amount:t,currency:a.id,fromAccount:o,toAccount:c},h=await this.privatePostTransferBalance(this.extend(d,r));return this.parseTransfer(h,a)}parseTransferStatus(e){return this.safeString({1:"ok"},e,e)}parseTransfer(e,t){const s=this.safeString(e,"message").split(" "),i=this.safeNumber(s,1),r=this.safeString(s,2),a=this.safeString(s,4),n=this.safeString(s,6),o=this.safeValue(this.options,"accountsById",{});return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(r,t),amount:i,fromAccount:this.safeString(o,a),toAccount:this.safeString(o,n),status:this.parseOrderStatus(this.safeString(e,"success","failed"))}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,address:s};void 0!==i&&(n.paymentId=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.currency+=c,r=this.omit(r,"network"));const d=await this.privatePostWithdraw(this.extend(n,r));return this.parseTransaction(d,a)}async fetchTransactionsHelper(e,t,s,i={}){await this.loadMarkets();const r=this.seconds(),a={start:void 0!==t?parseInt(t/1e3):r-31104e4,end:r};void 0!==s&&(a.limit=s);return await this.privatePostReturnDepositsWithdrawals(this.extend(a,i))}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r=await this.fetchTransactionsHelper(e,t,s,i);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"withdrawals",[]),o=this.safeValue(r,"deposits",[]),c=this.parseTransactions(n,a,t,s),d=this.parseTransactions(o,a,t,s),h=this.arrayConcat(d,c);return this.filterByCurrencySinceLimit(this.sortBy(h,"timestamp"),e,t,s)}async fetchWithdrawals(e,t,s,i={}){const r=await this.fetchTransactionsHelper(e,t,s,i);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"withdrawals",[]),o=this.parseTransactions(n,a,t,s);return this.filterByCurrencySinceLimit(o,e,t,s)}async fetchDeposits(e,t,s,i={}){const r=await this.fetchTransactionsHelper(e,t,s,i);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"deposits",[]),o=this.parseTransactions(n,a,t,s);return this.filterByCurrencySinceLimit(o,e,t,s)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok","AWAITING APPROVAL":"pending",PENDING:"pending",PROCESSING:"pending","COMPLETE ERROR":"failed"},e,e)}parseTransaction(e,t){const s=this.safeTimestamp(e,"timestamp"),i=this.safeString(e,"currency"),r=this.safeCurrencyCode(i);let a=this.safeString(e,"status","pending"),n=this.safeString(e,"txid");if(void 0!==a){const e=a.split(": "),t=e.length;a=e[0],t>1&&void 0===n&&(n=e[1]),a=this.parseTransactionStatus(a)}const o="withdrawalNumber"in e?"withdrawal":"deposit",c=this.safeString(e,"type",o),d=this.safeString2(e,"withdrawalNumber","depositNumber");let h=this.safeNumber(e,"amount");const l=this.safeString(e,"address"),u=this.safeString(e,"paymentID"),f=this.safeNumber(e,"fee",0);return"withdrawal"===c&&(h-=f),{info:e,id:d,currency:r,amount:h,network:void 0,address:l,addressTo:void 0,addressFrom:void 0,tag:u,tagTo:void 0,tagFrom:void 0,status:a,type:c,updated:void 0,txid:n,timestamp:s,datetime:this.iso8601(s),fee:{currency:r,cost:f}}}async fetchPosition(e,t={}){await this.loadMarkets();const s={currencyPair:this.market(e).id};return await this.privatePostGetMarginPosition(this.extend(s,t))}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t];const o=this.extend({command:e},i);return"public"===t?n+="?"+this.urlencode(o):(this.checkRequiredCredentials(),o.nonce=this.nonce(),a=this.urlencode(o),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}),{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"error"in o){const e=o.error,t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r(t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],241:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ExchangeNotAvailable:a,BadResponse:n,BadRequest:o,InvalidOrder:c,InsufficientFunds:d,AuthenticationError:h,ArgumentsRequired:l,InvalidAddress:u,RateLimitExceeded:f,DDoSProtection:p,BadSymbol:m}=e("./base/errors"),{TRUNCATE:g,TICK_SIZE:y}=e("./base/functions/number"),b=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"probit",name:"ProBit",countries:["SC","KR"],rateLimit:50,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"1W","1M":"1M"},version:"v1",urls:{logo:"https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg",api:{accounts:"https://accounts.probit.com",public:"https://api.probit.com/api/exchange",private:"https://api.probit.com/api/exchange"},www:"https://www.probit.com",doc:["https://docs-en.probit.com","https://docs-ko.probit.com"],fees:"https://support.probit.com/hc/en-us/articles/360020968611-Trading-Fees",referral:"https://www.probit.com/r/34608773"},api:{public:{get:{market:1,currency:1,currency_with_platform:1,time:1,ticker:1,order_book:1,trade:1,candle:1}},private:{post:{new_order:2,cancel_order:1,withdrawal:2},get:{balance:1,order:1,open_order:1,order_history:1,trade_history:1,deposit_address:1}},accounts:{post:{token:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{exact:{UNAUTHORIZED:h,INVALID_ARGUMENT:o,TRADING_UNAVAILABLE:a,NOT_ENOUGH_BALANCE:d,NOT_ALLOWED_COMBINATION:o,INVALID_ORDER:c,RATE_LIMIT_EXCEEDED:f,MARKET_UNAVAILABLE:a,INVALID_MARKET:m,MARKET_CLOSED:m,MARKET_NOT_FOUND:m,INVALID_CURRENCY:o,TOO_MANY_OPEN_ORDERS:p,DUPLICATE_ADDRESS:u,invalid_grant:h}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:y,options:{createMarketBuyOrderRequiresPrice:!0,timeInForce:{limit:"gtc",market:"ioc"},networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON",TRX:"TRON"}},commonCurrencies:{AUTO:"Cube",AZU:"Azultec",BCC:"BCC",BDP:"BidiPass",BIRD:"Birdchain",BTCBEAR:"BEAR",BTCBULL:"BULL",CBC:"CryptoBharatCoin",CHE:"Chellit",CLR:"Color Platform",CTK:"Cryptyk",CTT:"Castweet",DIP:"Dipper",DKT:"DAKOTA",EGC:"EcoG9coin",EPS:"Epanus",FX:"Fanzy",GDT:"Gorilla Diamond",GM:"GM Holding",GOGOL:"GOL",GOL:"Goldofir",GRB:"Global Reward Bank",HBC:"Hybrid Bank Cash",HUSL:"The Hustle App",LAND:"Landbox",LBK:"Legal Block",ORC:"Oracle System",PXP:"PIXSHOP COIN",PYE:"CreamPYE",ROOK:"Reckoon",SOC:"Soda Coin",SST:"SocialSwap",TCT:"Top Coin Token",TOR:"Torex",TPAY:"Tetra Pay",UNI:"UNICORN Token",UNISWAP:"UNI"}})}async fetchMarkets(e={}){const t=await this.publicGetMarket(e),s=this.safeValue(t,"data",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeString(t,"base_currency_id"),n=this.safeString(t,"quote_currency_id"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeValue(t,"closed",!1),h=this.safeString(t,"taker_fee_rate"),l=b.stringDiv(h,"100"),u=this.safeString(t,"maker_fee_rate"),f=b.stringDiv(u,"100");i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!d,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),maker:this.parseNumber(f),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_precision"))),price:this.safeNumber(t,"price_increment"),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"cost_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_quantity"),max:this.safeNumber(t,"max_quantity")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:this.safeNumber(t,"min_cost"),max:this.safeNumber(t,"max_cost")}},info:t})}return i}async fetchCurrencies(e={}){const t=await this.publicGetCurrencyWithPlatform(e),s=this.safeValue(t,"data",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"display_name"),o=this.safeString(n,"en-us"),c=this.safeValue(t,"platform",[]),d=this.sortBy(c,"priority"),h=this.safeValue(d,0,{}),l=!this.safeValue(h,"deposit_suspended"),u=!this.safeValue(h,"withdrawal_suspended"),f=l&&u,p=this.safeValue(h,"withdrawal_fee",{}),m=[];for(let e=0;e<p.length;e++){const t=p[e],s=this.safeNumber(t,"amount"),i=this.safeInteger(t,"priority");void 0!==s&&void 0!==i&&m.push(t)}const g=this.sortBy(m,"priority"),y=this.safeValue(g,0,{}),b=this.safeNumber(y,"amount");i[a]={id:r,code:a,info:t,name:o,active:f,deposit:l,withdraw:u,fee:b,precision:this.parseNumber(this.parsePrecision(this.safeString(h,"precision"))),limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(h,"min_deposit_amount"),max:void 0},withdraw:{min:this.safeNumber(h,"min_withdrawal_amount"),max:void 0}}}}return i}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"currency_id"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"total"),n.free=this.safeString(i,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market_id:i.id},a=await this.publicGetOrderBook(this.extend(r,s)),n=this.safeValue(a,"data",[]),o=this.groupBy(n,"side");return this.parseOrderBook(o,i.symbol,void 0,"buy","sell","price","quantity")}async fetchTickers(e,t={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.market_ids=t.join(",")}const i=await this.publicGetTicker(this.extend(s,t)),r=this.safeValue(i,"data",[]);return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market_ids:s.id},r=await this.publicGetTicker(this.extend(i,t)),a=this.safeValue(r,"data",[]),o=this.safeValue(a,0);if(void 0===o)throw new n(this.id+" fetchTicker() returned an empty response");return this.parseTicker(o,s)}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"time")),i=this.safeString(e,"market_id"),r=this.safeSymbol(i,t,"-"),a=this.safeString(e,"last"),n=this.safeString(e,"change"),o=this.safeString(e,"base_volume"),c=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:n,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:c,info:e},t)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={limit:100,start_time:this.iso8601(0),end_time:this.iso8601(this.milliseconds())};void 0!==e&&(r=this.market(e),a.market_id=r.id),void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==s&&(a.limit=s);const n=await this.privateGetTradeHistory(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market_id:r.id,limit:100,start_time:"1970-01-01T00:00:00.000Z",end_time:this.iso8601(this.milliseconds())};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==s&&(a.limit=s);const n=await this.publicGetTrade(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"time")),i=this.safeString(e,"id");let r;if(void 0!==i){const e=i.split(":");r=this.safeString(e,0)}r=this.safeString(e,"market_id",r);const a=this.safeSymbol(r,t,"-"),n=this.safeString(e,"side"),o=this.safeString(e,"price"),c=this.safeString(e,"quantity"),d=this.safeString(e,"order_id"),h=this.safeString(e,"fee_amount");let l;if(void 0!==h){const t=this.safeString(e,"fee_currency_id");l={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:a,order:d,type:void 0,side:n,takerOrMaker:void 0,price:o,amount:c,cost:void 0,fee:l},t)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"data"))}normalizeOHLCVTimestamp(e,t,s=!1){const i=this.parseTimeframe(t);if("1M"===t){const t=this.iso8601(e).split("-"),i=this.safeString(t,0);let r=this.safeInteger(t,1);return s&&(r=this.sum(r,1)),r=r<10?"0"+r.toString():r.toString(),i+"-"+r+"-01T00:00:00.000Z"}if("1w"===t){const t=259200,r=(e=parseInt(e/1e3))-t,a=Math.floor(r/i);let n=this.sum(t,a*i);return s&&(n=this.sum(n,i)),this.iso8601(1e3*n)}return e=parseInt(e/1e3),e=i*parseInt(e/i),s&&(e=this.sum(e,i)),this.iso8601(1e3*e)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.timeframes[t];i=void 0===i?100:i;let o=this.sum(i,1);o=Math.min(1e3,o);const c={market_ids:a.id,interval:n,sort:"asc",limit:o},d=this.milliseconds(),h=this.parseTimeframe(t);let u=s,f=d;if(void 0===s){if(void 0===i)throw new l(this.id+" fetchOHLCV() requires either a since argument or a limit argument");u=d-i*h*1e3}else f=void 0===i?d:this.sum(s,this.sum(i,1)*h*1e3);const p=this.normalizeOHLCVTimestamp(u,t),m=this.normalizeOHLCVTimestamp(f,t,!0);c.start_time=p,c.end_time=m;const g=await this.publicGetCandle(this.extend(c,r)),y=this.safeValue(g,"data",[]);return this.parseOHLCVs(y,a,t,s,i)}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"start_time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"base_volume")]}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets(),t=this.parse8601(t);const r={};let a;void 0!==e&&(a=this.market(e),r.market_id=a.id);const n=await this.privateGetOpenOrder(this.extend(r,i)),o=this.safeValue(n,"data");return this.parseOrders(o,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={start_time:this.iso8601(0),end_time:this.iso8601(this.milliseconds()),limit:100};let a;void 0!==e&&(a=this.market(e),r.market_id=a.id),t&&(r.start_time=this.iso8601(t)),s&&(r.limit=s);const n=await this.privateGetOrderHistory(this.extend(r,i)),o=this.safeValue(n,"data");return this.parseOrders(o,a,t,s)}async fetchOrder(e,t,s={}){if(void 0===t)throw new l(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={market_id:i.id},a=this.safeString2(s,"clientOrderId","client_order_id");void 0!==a?r.client_order_id=a:r.order_id=e;const n=this.omit(s,["clientOrderId","client_order_id"]),o=await this.privateGetOrder(this.extend(r,n)),c=this.safeValue(o,"data",[]),d=this.safeValue(c,0);return this.parseOrder(d,i)}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed"},e,e)}parseOrder(e,t){const s=this.parseOrderStatus(this.safeString(e,"status")),i=this.safeString(e,"id"),r=this.safeString(e,"type"),a=this.safeString(e,"side"),n=this.safeString(e,"market_id"),o=this.safeSymbol(n,t,"-"),c=this.parse8601(this.safeString(e,"time"));let d=this.safeString(e,"limit_price");const h=this.safeString(e,"filled_quantity");let l=this.safeString(e,"open_quantity");const u=this.safeString(e,"cancelled_quantity");void 0!==u&&(l=b.stringAdd(l,u));const f=this.safeString(e,"quantity",b.stringAdd(h,l)),p=this.safeString2(e,"filled_cost","cost");"market"===r&&(d=void 0);const m=this.safeString(e,"client_order_id"),g=this.safeStringUpper(e,"time_in_force");return this.safeOrder({id:i,info:e,clientOrderId:m,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:o,type:r,timeInForce:g,side:a,status:s,price:d,stopPrice:void 0,amount:f,filled:h,remaining:l,average:void 0,cost:p,fee:void 0,trades:void 0},t)}costToPrecision(e,t){return this.decimalToPrecision(t,g,this.markets[e].precision.cost,this.precisionMode)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeValue(this.options,"timeInForce"),d=this.safeValue(o,t),h=this.safeString2(a,"timeInForce","time_in_force",d),l={market_id:n.id,type:t,side:s,time_in_force:h},u=this.safeString2(a,"clientOrderId","client_order_id");let f;if(void 0!==u&&(l.client_order_id=u),"limit"===t)l.limit_price=this.priceToPrecision(e,r),l.quantity=this.amountToPrecision(e,i);else if("market"===t)if("buy"===s){let t=this.safeNumber(a,"cost");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==r)void 0===t&&(t=i*r);else if(void 0===t)throw new c(this.id+" createOrder() requires the price argument for market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?i:t;f=this.costToPrecision(e,t),l.cost=f}else l.quantity=this.amountToPrecision(e,i);const p=this.omit(a,["timeInForce","time_in_force","clientOrderId","client_order_id"]),m=await this.privatePostNewOrder(this.extend(l,p)),g=this.safeValue(m,"data"),y=this.parseOrder(g,n);return"market"===t&&"buy"===s&&(y.amount=void 0,y.cost=this.parseNumber(f),y.remaining=void 0),y}async cancelOrder(e,t,s={}){if(void 0===t)throw new l(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i={market_id:this.market(t).id,order_id:e},r=await this.privatePostCancelOrder(this.extend(i,s)),a=this.safeValue(r,"data");return this.parseOrder(a)}parseDepositAddress(e,t){const s=this.safeString(e,"address"),i=this.safeString(e,"destination_tag"),r=this.safeString(e,"currency_id"),a=this.safeCurrencyCode(r);return this.checkAddress(s),{currency:a,address:s,tag:i,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency_id:s.id},r=await this.privateGetDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0);if(void 0===n)throw new u(this.id+" fetchDepositAddress() returned an empty response");return this.parseDepositAddress(n,s)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s={};if(e){const t=[];for(let s=0;s<e.length;s++){const i=this.currency(e[s]);t.push(i.id)}s.currency_id=e.join(",")}const i=await this.privateGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data",[]);return this.parseDepositAddresses(r)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e);void 0===i&&(i="");const n={currency_id:a.id,address:s,destination_tag:i,amount:this.numberToString(t)},o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeString(o,c,c),void 0!==c&&(n.platform_id=c,r=this.omit(r,"network"));const d=await this.privatePostWithdrawal(this.extend(n,r)),h=this.safeValue(d,"data");return this.parseTransaction(h,a)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeNumber(e,"amount"),r=this.safeString(e,"address"),a=this.safeString(e,"destination_tag"),n=this.safeString(e,"hash"),o=this.parse8601(this.safeString(e,"time")),c=this.safeString(e,"type"),d=this.safeString(e,"currency_id"),h=this.safeCurrencyCode(d),l=this.parseTransactionStatus(this.safeString(e,"status")),u=this.safeNumber(e,"fee");let f;return void 0!==u&&0!==u&&(f={currency:h,cost:u}),{id:s,currency:h,amount:i,network:void 0,addressFrom:void 0,address:r,addressTo:r,tagFrom:void 0,tag:a,tagTo:a,status:l,type:c,txid:n,timestamp:o,datetime:this.iso8601(o),updated:void 0,fee:f,info:e}}parseTransactionStatus(e){return this.safeString({requested:"pending",pending:"pending",confirming:"pending",confirmed:"pending",applying:"pending",done:"ok",cancelled:"canceled",cancelling:"canceled"},e,e)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/";const o=this.omit(i,this.extractParams(e));if("accounts"===t){this.checkRequiredCredentials(),n+=this.implodeParams(e,i);const t=this.apiKey+":"+this.secret,s=this.stringToBase64(t);r={Authorization:"Basic "+this.decode(s),"Content-Type":"application/json"},Object.keys(o).length&&(a=this.json(o))}else if(n+=this.version+"/","public"===t)n+=this.implodeParams(e,i),Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){const t=this.milliseconds();this.checkRequiredCredentials();const c=this.safeInteger(this.options,"expires");if(void 0===c||c<t)throw new h(this.id+" access token expired, call signIn() method");r={Authorization:"Bearer "+this.safeString(this.options,"accessToken")},n+=this.implodeParams(e,i),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o),r["Content-Type"]="application/json")}return{url:n,method:s,body:a,headers:r}}async signIn(e={}){this.checkRequiredCredentials();const t=await this.accountsPostToken(this.extend({grant_type:"client_credentials"},e)),s=this.safeInteger(t,"expires_in"),i=this.safeString(t,"access_token");return this.options.accessToken=i,this.options.expires=this.sum(this.milliseconds(),1e3*s),t}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"errorCode"in o){const e=this.safeString(o,"errorCode"),t=this.safeString(o,"message");if(void 0!==e){const s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.exact,e,s),new r(s)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],242:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InvalidOrder:a,InsufficientFunds:n,AuthenticationError:o,RateLimitExceeded:c,BadSymbol:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"qtrade",name:"qTrade",countries:["US"],rateLimit:1e3,version:"v1",urls:{logo:"https://user-images.githubusercontent.com/51840849/80491487-74a99c00-896b-11ea-821e-d307e832f13e.jpg",api:"https://api.qtrade.io",www:"https://qtrade.io",doc:"https://qtrade-exchange.github.io/qtrade-docs",referral:"https://qtrade.io/?ref=BKOQWVFGRH2C",fees:"https://qtrade.io/fees"},has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"5m":"fivemin","15m":"fifteenmin","30m":"thirtymin","1h":"onehour","2h":"twohour","4h":"fourhour","1d":"oneday"},api:{public:{get:["ticker/{market_string}","tickers","currency/{code}","currencies","common","market/{market_string}","markets","market/{market_string}/trades","orderbook/{market_string}","market/{market_string}/ohlcv/{interval}"]},private:{get:["me","balances","balances_all","market/{market_string}","orders","order/{order_id}","trades","withdraw/{withdraw_id}","withdraws","deposit/{deposit_id}","deposits","transfers"],post:["cancel_order","withdraw","deposit_address/{currency}","sell_limit","buy_limit"]}},fees:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.0")},funding:{withdraw:{}}},commonCurrencies:{BTM:"Bitmark"},precisionMode:h,exceptions:{exact:{invalid_auth:o,insuff_funds:n,market_not_found:d,too_small:a,limit_exceeded:c}}})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"markets",[]),r=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"market_string"),a=this.safeInteger(t,"id"),n=this.safeString(t,"market_currency"),o=this.safeString(t,"base_currency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeValue(t,"can_view",!1),l=this.safeValue(t,"can_trade",!1)&&h;r.push({id:s,numericId:a,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:l,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee"),maker:this.safeNumber(t,"maker_fee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"market_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"base_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minimum_sell_value"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minimum_buy_value"),max:void 0}},info:t})}return r}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"currencies",[]),r={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"code"),a=this.safeCurrencyCode(s),n=this.safeString(t,"long_name"),o=this.safeString(t,"type"),c=this.safeValue(t,"can_withdraw",!0),d=this.safeValue(t,"withdraw_disabled",!1),h=!this.safeValue(t,"deposit_disabled",!1),l=c&&!d,u=this.safeValue(t,"config",{}),f=this.safeString(t,"status"),p=l&&h&&"ok"===f;r[a]={id:s,code:a,info:t,type:o,name:n,fee:this.safeNumber(u,"withdraw_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),active:p,deposit:h,withdraw:l,limits:{amount:{min:this.safeNumber(t,"minimum_order"),max:void 0},withdraw:{min:void 0,max:void 0}}}}return r}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"market_volume")]}async fetchOHLCV(e,t="5m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market_string:a.id,interval:this.timeframes[t]},o=await this.publicGetMarketMarketStringOhlcvInterval(this.extend(n,r)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"slices",[]);return this.parseOHLCVs(d,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market_string:i.id},a=await this.publicGetOrderbookMarketString(this.extend(r,s)),n=this.safeValue(a,"data",{}),o={},c={buy:"bids",sell:"asks"},d=Object.keys(c);for(let e=0;e<d.length;e++){const t=d[e],s=c[t],i=this.safeValue(n,t,{}),r=Object.keys(i),a=[];for(let e=0;e<r.length;e++){const t=r[e],s=this.safeNumber(r,e),n=this.safeNumber(i,t);a.push([s,n])}o[s]=a}const h=this.safeIntegerProduct(n,"last_change",.001);return this.parseOrderBook(o,i.symbol,h)}parseTicker(e,t){const s=this.safeString(e,"id_hr"),i=this.safeSymbol(s,t,"_"),r=this.safeIntegerProduct(e,"last_change",.001),a=this.safeString(e,"day_open"),n=this.safeString(e,"last"),o=this.safeString(e,"day_change"),c=this.safeString(e,"day_avg_price"),d=this.safeString(e,"day_volume_market"),h=this.safeString(e,"day_volume_base"),u=l.stringMul(o,"100"),f=l.stringMul(o,a);return this.safeTicker({symbol:i,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"day_high"),low:this.safeString(e,"day_low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:a,close:n,last:n,previousClose:void 0,change:f,percentage:u,average:c,baseVolume:d,quoteVolume:h,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=this.safeValue(s,"data",{}),r=this.safeValue(i,"markets",[]),a={};for(let e=0;e<r.length;e++){const t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market_string:s.id},r=await this.publicGetTickerMarketString(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market_string:r.id},n=await this.publicGetMarketMarketStringTrades(this.extend(a,i)),o=this.safeValue(n,"data",{}),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={desc:!0};let a;const n=this.safeValue(i,"market_id");void 0!==n?r.market_id=n:void 0!==e&&(a=this.market(e),r.market_string=a.id);const o=await this.privateGetTrades(this.extend(r,i)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"trades",[]);return this.parseTrades(d,a,t,s)}parseTrade(e,t){const s=this.safeString(e,"id");let i=this.safeIntegerProduct(e,"created_at_ts",.001);void 0===i&&(i=this.parse8601(this.safeString(e,"created_at")));const r=this.safeString(e,"side"),a=this.safeString(e,"market_string");t=this.safeMarket(a,t);const n=this.safeString2(e,"base_volume","base_amount"),o=this.safeString(e,"price"),c=this.safeString2(e,"market_amount","amount");let d;const h=this.safeString(e,"base_fee");if(void 0!==h){d={currency:void 0===t?void 0:t.quote,cost:h}}const l=this.safeValue(e,"taker",!0)?"taker":"maker",u=this.safeString(e,"order_id");return this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:u,type:void 0,side:r,takerOrMaker:l,price:o,amount:c,cost:n,fee:d},t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={market_string:s.id},r=await this.publicGetMarketMarketString(this.extend(i,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"market",{});return{info:n,symbol:s.symbol,maker:this.safeNumber(n,"maker_fee"),taker:this.safeNumber(n,"taker_fee"),percentage:!0,tierBased:!0}}parseBalance(e){const t=this.safeValue(e,"data",{});let s=this.safeValue(t,"balances",[]);const i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=a in i?i[a]:this.account();n.free=this.safeString(t,"balance"),n.used="0",i[a]=n}s=this.safeValue(t,"order_balances",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=a in i?i[a]:this.account();n.used=this.safeString(t,"balance"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalancesAll(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,n={}){if("limit"!==t)throw new a(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),c={amount:this.amountToPrecision(o.symbol,i),market_id:o.numericId,price:this.priceToPrecision(o.symbol,r)},d="sell"===s?"privatePostSellLimit":"privatePostBuyLimit",h=await this[d](this.extend(c,n)),l=this.safeValue(h,"data",{}),u=this.safeValue(l,"order",{});return this.parseOrder(u,o)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"order_type");let a,n;if(void 0!==r){const e=r.split("_");n=this.safeString(e,0),a=this.safeString(e,1)}const o=this.safeString(e,"price"),c=this.safeString(e,"market_amount"),d=this.safeString(e,"market_amount_remaining"),h=this.safeValue(e,"open",!1),l=this.safeString(e,"close_reason");let u;u=h?"open":"canceled"===l?"canceled":"closed";const f=this.safeString(e,"market_string"),p=(t=this.safeMarket(f,t,"_")).symbol,m=this.safeValue(e,"trades",[]);return this.safeOrder({info:e,id:s,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:p,type:a,timeInForce:void 0,postOnly:void 0,side:n,price:o,stopPrice:void 0,average:void 0,amount:c,remaining:d,filled:void 0,status:u,fee:void 0,fees:void 0,cost:void 0,trades:m},t)}async cancelOrder(e,t,s={}){const i={id:parseInt(e)};return await this.privatePostCancelOrder(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetOrderOrderId(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"order",{});return this.parseOrder(n)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;const n=this.safeValue(i,"market_id");void 0!==n?r.market_id=n:void 0!==e&&(a=this.market(e),r.market_string=a.id);const o=await this.privateGetOrders(this.extend(r,i)),c=this.safeValue(o,"data",{}),d=this.safeValue(c,"orders",[]);return this.parseOrders(d,a,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({open:!0},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({open:!1},i))}parseDepositAddress(e,t){const s=void 0===t?void 0:t.code;let i,r=this.safeString(e,"address");if(void 0!==r){const e=r.split(":");r=this.safeString(e,0),i=this.safeString(e,1)}return this.checkAddress(r),{currency:s,address:r,tag:i,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.privatePostDepositAddressCurrency(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,s)}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={deposit_id:e},r=await this.privateGetDepositDepositId(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"deposit",{});return this.parseTransaction(n)}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetDeposits(i),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"deposits",[]);return this.parseTransactions(o,r,t,s)}async fetchTransfers(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetTransfers(i),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"transfers",[]);return this.parseTransfers(o,r,t,s)}parseTransfer(e,t){const s=this.safeString(e,"currency"),i=this.safeString(e,"created_at");return{info:e,id:this.safeString(e,"id"),timestamp:this.parse8601(i),datetime:i,currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amount"),fromAccount:this.safeString(e,"sender_id"),toAccount:void 0,status:"ok"}}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={withdraw_id:e},r=await this.privateGetWithdrawWithdrawId(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"withdraw",{});return this.parseTransaction(n)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetWithdraws(i),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"withdraws",[]);return this.parseTransactions(o,r,t,s)}parseTransaction(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"id"),r=this.safeValue(e,"network_data",{}),a=this.safeValue(r,"unsigned_tx",{}),n=this.safeString(a,"from"),o=this.safeString(r,"txid");let c,d=this.safeString(e,"address");if(void 0!==d){const e=d.split(":");e.length>1&&(d=this.safeString(e,0),c=this.safeString(e,1))}const h=d,l=c,u=this.safeValue(e,"cancel_requested"),f=void 0===u?"deposit":"withdrawal",p=this.safeNumber(e,"amount"),m=this.safeString(e,"currency"),g=this.safeCurrencyCode(m);let y=this.parseTransactionStatus(this.safeString(e,"status"));const b=this.safeString(e,"code");u?y="canceled":void 0===y&&(y=this.parseTransactionStatus(b));return{info:e,id:i,txid:o,timestamp:s,datetime:this.iso8601(s),network:void 0,addressFrom:n,addressTo:h,address:d,tagFrom:undefined,tagTo:l,tag:c,type:f,amount:p,currency:g,status:y,updated:void 0,fee:undefined}}parseTransactionStatus(e){return this.safeString({initiated:"pending",needs_create:"pending",credited:"ok",confirmed:"ok"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a={address:s,amount:t,currency:this.currency(e).id};void 0!==i&&(a.address+=":"+i);const n=await this.privatePostWithdraw(this.extend(a,r)),o=this.safeValue(n,"data",{}),c=this.parseTransaction(o);return this.extend(c,{currency:e,address:s,addressTo:s,tag:i,tagTo:i,amount:t})}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n="/"+this.version+"/";"private"===t&&(n+="user/"),n+=this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("POST"===s?a=this.json(o):Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t){const e=this.milliseconds().toString(),t=[s,n,e,"POST"===s?a:"",this.secret].join("\n"),i=this.hash(this.encode(t),"sha256","base64");let o=this.apiKey;"string"!=typeof o&&(o=o.toString());r={Authorization:"HMAC-SHA256 "+o+":"+i,"HMAC-Timestamp":e},"POST"===s&&(r["Content-Type"]="application/json")}return n=this.urls.api+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"errors",[]);if(h.length<1)return;const l=this.id+" "+n;for(let e=0;e<h.length;e++){const t=h[e],s=this.safeString(t,"code");this.throwExactlyMatchedException(this.exceptions.exact,s,l)}throw new r(l)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],243:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{AuthenticationError:r,ExchangeError:a,BadSymbol:n,BadRequest:o,InvalidOrder:c,ArgumentsRequired:d,OrderNotFound:h,InsufficientFunds:l,DDoSProtection:u}=e("./base/errors"),{TICK_SIZE:f}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"ripio",name:"Ripio",countries:["AR","BR"],rateLimit:50,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/94507548-a83d6a80-0218-11eb-9998-28b9cec54165.jpg",api:{public:"https://api.exchange.ripio.com/api",private:"https://api.exchange.ripio.com/api"},www:"https://exchange.ripio.com",doc:["https://exchange.ripio.com/en/api/"],fees:"https://exchange.ripio.com/en/fee"},api:{public:{get:["rate/all/","rate/{pair}/","orderbook/{pair}/","tradehistory/{pair}/","pair/","currency/","orderbook/{pair}/depth/"]},private:{get:["balances/exchange_balances/","order/{pair}/{order_id}/","order/{pair}/","trade/{pair}/"],post:["order/{pair}/","order/{pair}/{order_id}/cancel/"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:0,maker:0}},precisionMode:f,requiredCredentials:{apiKey:!0,secret:!1},exceptions:{exact:{},broad:{"Authentication credentials were not provided":r,"Disabled pair":n,"Invalid order type":c,"Your balance is not enough":l,"Order couldn't be created":a,"not found":h,"Invalid pair":n,"amount must be a number":o,"Total must be at least":c,"Account not found":o,"Wrong password provided":r,"User tokens limit":u,"Something unexpected ocurred":a,account_balance:o}}})}async fetchMarkets(e={}){const t=await this.publicGetPair(e),s=[],i=this.safeValue(t,"results",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"base"),a=this.safeString(t,"quote"),n=this.safeString(t,"symbol"),o=this.safeCurrencyCode(r),c=this.safeCurrencyCode(a),d=this.safeValue(t,"fees",[]),h=this.safeValue(d,0,{});s.push({id:n,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"enabled",!0),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(h,"taker_fee",0),maker:this.safeNumber(h,"maker_fee",0),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"min_amount"),price:this.safeNumber(t,"price_tick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_amount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_value"),max:void 0}},info:t})}return s}async fetchCurrencies(e={}){const t=await this.publicGetCurrency(e),s=this.safeValue(t,"results",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"name"),o=this.safeValue(t,"enabled",!0);i[a]={id:r,code:a,name:n,info:t,active:o,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"decimal_places"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"pair"),r=(t=this.safeMarket(i,t,"_")).symbol,a=this.safeString(e,"last_price"),n=this.safeString(e,"avg");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bid_volume"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"ask_volume"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:n,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetRatePair(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetRateAll(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetOrderbookPair(this.extend(r,s)),n=this.parseOrderBook(a,i.symbol,void 0,"buy","sell","price","amount");return n.nonce=this.safeInteger(a,"updated_id"),n}parseTrade(e,t){const s=this.safeString(e,"id");let i=this.safeInteger(e,"timestamp");i=this.safeTimestamp(e,"created_at",i);let r=this.safeString(e,"side");const a=this.safeString(e,"taker_side")===r?"taker":"maker";void 0!==r&&(r=r.toLowerCase());const n=this.safeString2(e,"price","match_price"),o=this.safeString2(e,"amount","exchanged"),c=this.safeString(e,"pair");t=this.safeMarket(c,t);const d=this.safeString(e,a+"_fee"),h=this.safeString(e,a);let l;return void 0!==d&&(l={cost:d,currency:"buy"===r?t.base:t.quote}),this.safeTrade({id:s,order:h,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:r,price:n,amount:o,cost:void 0,takerOrMaker:a,fee:l,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradehistoryPair(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetPair(e),s=this.safeValue(t,"results",[]),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeSymbol(r,void 0,"_"),n=this.safeValue(t,"fees",[]),o=this.safeValue(n,0,{});i[a]={info:t,symbol:a,maker:this.safeNumber(o,"maker_fee"),taker:this.safeNumber(o,"taker_fee"),tierBased:!1}}return i}parseBalance(e){const t={info:e};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalancesExchangeBalances(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),c=s.toUpperCase(),d={pair:n.id,order_type:o,side:c,amount:this.amountToPrecision(e,i)};"LIMIT"===o&&(d.limit_price=this.priceToPrecision(e,r));const h=await this.privatePostOrderPair(this.extend(d,a));return this.parseOrder(h,n)}async cancelOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={pair:i.id,order_id:e},a=await this.privatePostOrderPairOrderIdCancel(this.extend(r,s));return this.parseOrder(a,i)}async fetchOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r={pair:i.id,order_id:e},a=await this.privateGetOrderPairOrderId(this.extend(r,s));return this.parseOrder(a,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.offset=s);const n=await this.privateGetOrderPair(this.extend(a,i)),o=this.safeValue(n,"results",{}),c=this.safeValue(o,"data",[]);return this.parseOrders(c,r,t,s)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"OPEN,PART"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"CLOS,CANC,COMP"},i))}parseOrderStatus(e){return this.safeString({OPEN:"open",PART:"open",CLOS:"canceled",CANC:"canceled",COMP:"closed"},e,e)}parseOrder(e,t){const s=this.safeString(e,"order_id"),i=this.safeNumber(e,"amount");let r=this.safeNumber(e,"notional");const a=this.safeStringLower(e,"order_type"),n="market"===a?"fill_price":"limit_price",o=this.safeNumber(e,n),c=this.safeStringLower(e,"side"),d=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeTimestamp(e,"created_at");let l,u=this.safeValue(e,"fill_price"),f=this.safeNumber(e,"filled");const p=this.safeValue(e,"fills");let m,g;if(void 0!==p){if(p.length>0){f=0,r=0,m=this.parseTrades(p,t,void 0,void 0,{order:s,side:c});for(let e=0;e<m.length;e++){const t=m[e];f=this.sum(t.amount,f),r=this.sum(t.cost,r),g=t.timestamp}void 0===u&&f>0&&(u=r/f)}}void 0!==f&&(void 0===r&&void 0!==o&&(r=o*f),void 0!==i&&(l=Math.max(0,i-f)));const y=this.safeString(e,"pair"),b=this.safeSymbol(y,t,"_"),v=this.safeNumber(e,"stop_price");return{id:s,clientOrderId:void 0,info:e,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:g,symbol:b,type:a,timeInForce:void 0,postOnly:void 0,side:c,price:o,stopPrice:v,amount:i,cost:r,average:u,filled:f,remaining:l,status:d,fee:void 0,trades:m}}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.limit=s);const n=await this.privateGetTradePair(this.extend(a,i)),o=this.safeValue(n,"results",{}),c=this.safeValue(o,"data",[]);return this.parseTrades(c,r,t,s)}sign(e,t="public",s="GET",i={},r,a){const n="/"+this.version+"/"+this.implodeParams(e,i);let o=this.urls.api[t]+n;const c=this.omit(i,this.extractParams(e));return"public"===t?Object.keys(c).length&&(o+="?"+this.urlencode(c)):"private"===t&&(this.checkRequiredCredentials(),"POST"===s?a=this.json(c):Object.keys(c).length&&(o+="?"+this.urlencode(c)),r={"Content-Type":"application/json",Authorization:"Bearer "+this.apiKey}),{url:o,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"detail");if(void 0!==h){const e=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,h,e)}const l=this.safeValue(o,"errors");if(void 0!==l){const e=this.id+" "+n,t=Object.keys(l);for(let s=0;s<t.length;s++){const i=t[s],r=this.safeValue(l,i,[]),a=this.safeString(r,0);this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw new a(e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],244:[function(e,t,s){!function(t,s){"use strict";function i(e,t){if(!e)throw new Error(t||"Assertion failed")}function r(e,t){e.super_=t;var s=function(){};s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e}function a(e,t,s){if(a.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(s=t,t=10),this._init(e||0,t||10,s||"be"))}var n;"object"==typeof t?t.exports=a:s.BN=a,a.BN=a,a.wordSize=26;try{n=e("buffer").Buffer}catch(e){}function o(e,t,s){for(var r=0,a=Math.min(e.length,s),n=0,o=t;o<a;o++){var c,d=e.charCodeAt(o)-48;r<<=4,r|=c=d>=49&&d<=54?d-49+10:d>=17&&d<=22?d-17+10:d,n|=c}return i(!(240&n),"Invalid character in "+e),r}function c(e,t,s,r){for(var a=0,n=0,o=Math.min(e.length,s),c=t;c<o;c++){var d=e.charCodeAt(c)-48;a*=r,n=d>=49?d-49+10:d>=17?d-17+10:d,i(d>=0&&n<r,"Invalid character"),a+=n}return a}function d(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}a.isBN=function(e){return e instanceof a||null!==e&&"object"==typeof e&&e.constructor.wordSize===a.wordSize&&Array.isArray(e.words)},a.max=function(e,t){return e.cmp(t)>0?e:t},a.min=function(e,t){return e.cmp(t)<0?e:t},a.prototype._init=function(e,t,s){if("number"==typeof e)return this._initNumber(e,t,s);if("object"==typeof e)return this._initArray(e,t,s);"hex"===t&&(t=16),i(t===(0|t)&&t>=2&&t<=36);var r=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&r++,16===t?this._parseHex(e,r):this._parseBase(e,t,r),"-"===e[0]&&(this.negative=1),this._strip(),"le"===s&&this._initArray(this.toArray(),t,s)},a.prototype._initNumber=function(e,t,s){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(i(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===s&&this._initArray(this.toArray(),t,s)},a.prototype._initArray=function(e,t,s){if(i("number"==typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var a,n,o=0;if("be"===s)for(r=e.length-1,a=0;r>=0;r-=3)n=e[r]|e[r-1]<<8|e[r-2]<<16,this.words[a]|=n<<o&67108863,this.words[a+1]=n>>>26-o&67108863,(o+=24)>=26&&(o-=26,a++);else if("le"===s)for(r=0,a=0;r<e.length;r+=3)n=e[r]|e[r+1]<<8|e[r+2]<<16,this.words[a]|=n<<o&67108863,this.words[a+1]=n>>>26-o&67108863,(o+=24)>=26&&(o-=26,a++);return this._strip()},a.prototype._parseHex=function(e,t){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var s=0;s<this.length;s++)this.words[s]=0;var i,r,a=0;for(s=e.length-6,i=0;s>=t;s-=6)r=o(e,s,s+6),this.words[i]|=r<<a&67108863,this.words[i+1]|=r>>>26-a&4194303,(a+=24)>=26&&(a-=26,i++);s+6!==t&&(r=o(e,t,s+6),this.words[i]|=r<<a&67108863,this.words[i+1]|=r>>>26-a&4194303),this._strip()},a.prototype._parseBase=function(e,t,s){this.words=[0],this.length=1;for(var i=0,r=1;r<=67108863;r*=t)i++;i--,r=r/t|0;for(var a=e.length-s,n=a%i,o=Math.min(a,a-n)+s,d=0,h=s;h<o;h+=i)d=c(e,h,h+i,t),this.imuln(r),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d);if(0!==n){var l=1;for(d=c(e,h,e.length,t),h=0;h<n;h++)l*=t;this.imuln(l),this.words[0]+d<67108864?this.words[0]+=d:this._iaddn(d)}},a.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},a.prototype._move=function(e){e.words=this.words,e.length=this.length,e.negative=this.negative,e.red=this.red},a.prototype.clone=function(){var e=new a(null);return this.copy(e),e},a.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},a.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},a.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for?a.prototype[Symbol.for("nodejs.util.inspect.custom")]=d:a.prototype.inspect=d;var h=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],u=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];a.prototype.toString=function(e,t){var s;if(t=0|t||1,16===(e=e||10)||"hex"===e){s="";for(var r=0,a=0,n=0;n<this.length;n++){var o=this.words[n],c=(16777215&(o<<r|a)).toString(16);s=0!==(a=o>>>24-r&16777215)||n!==this.length-1?h[6-c.length]+c+s:c+s,(r+=2)>=26&&(r-=26,n--)}for(0!==a&&(s=a.toString(16)+s);s.length%t!=0;)s="0"+s;return 0!==this.negative&&(s="-"+s),s}if(e===(0|e)&&e>=2&&e<=36){var d=l[e],f=u[e];s="";var p=this.clone();for(p.negative=0;!p.isZero();){var m=p.modrn(f).toString(e);s=(p=p.idivn(f)).isZero()?m+s:h[d-m.length]+m+s}for(this.isZero()&&(s="0"+s);s.length%t!=0;)s="0"+s;return 0!==this.negative&&(s="-"+s),s}i(!1,"Base should be between 2 and 36")},a.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},a.prototype.toJSON=function(){return this.toString(16,2)},n&&(a.prototype.toBuffer=function(e,t){return this.toArrayLike(n,e,t)}),a.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)};function f(e,t,s){s.negative=t.negative^e.negative;var i=e.length+t.length|0;s.length=i,i=i-1|0;var r=0|e.words[0],a=0|t.words[0],n=r*a,o=67108863&n,c=n/67108864|0;s.words[0]=o;for(var d=1;d<i;d++){for(var h=c>>>26,l=67108863&c,u=Math.min(d,t.length-1),f=Math.max(0,d-e.length+1);f<=u;f++){var p=d-f|0;h+=(n=(r=0|e.words[p])*(a=0|t.words[f])+l)/67108864|0,l=67108863&n}s.words[d]=0|l,c=0|h}return 0!==c?s.words[d]=0|c:s.length--,s._strip()}a.prototype.toArrayLike=function(e,t,s){this._strip();var r=this.byteLength(),a=s||Math.max(1,r);i(r<=a,"byte array longer than desired length"),i(a>0,"Requested array length <= 0");var n=function(e,t){return e.allocUnsafe?e.allocUnsafe(t):new e(t)}(e,a);return this["_toArrayLike"+("le"===t?"LE":"BE")](n,r),n},a.prototype._toArrayLikeLE=function(e,t){for(var s=0,i=0,r=0,a=0;r<this.length;r++){var n=this.words[r]<<a|i;e[s++]=255&n,s<e.length&&(e[s++]=n>>8&255),s<e.length&&(e[s++]=n>>16&255),6===a?(s<e.length&&(e[s++]=n>>24&255),i=0,a=0):(i=n>>>24,a+=2)}if(s<e.length)for(e[s++]=i;s<e.length;)e[s++]=0},a.prototype._toArrayLikeBE=function(e,t){for(var s=e.length-1,i=0,r=0,a=0;r<this.length;r++){var n=this.words[r]<<a|i;e[s--]=255&n,s>=0&&(e[s--]=n>>8&255),s>=0&&(e[s--]=n>>16&255),6===a?(s>=0&&(e[s--]=n>>24&255),i=0,a=0):(i=n>>>24,a+=2)}if(s>=0)for(e[s--]=i;s>=0;)e[s--]=0},Math.clz32?a.prototype._countBits=function(e){return 32-Math.clz32(e)}:a.prototype._countBits=function(e){var t=e,s=0;return t>=4096&&(s+=13,t>>>=13),t>=64&&(s+=7,t>>>=7),t>=8&&(s+=4,t>>>=4),t>=2&&(s+=2,t>>>=2),s+t},a.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,s=0;return 0==(8191&t)&&(s+=13,t>>>=13),0==(127&t)&&(s+=7,t>>>=7),0==(15&t)&&(s+=4,t>>>=4),0==(3&t)&&(s+=2,t>>>=2),0==(1&t)&&s++,s},a.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},a.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var s=this._zeroBits(this.words[t]);if(e+=s,26!==s)break}return e},a.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},a.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},a.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},a.prototype.isNeg=function(){return 0!==this.negative},a.prototype.neg=function(){return this.clone().ineg()},a.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},a.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this._strip()},a.prototype.ior=function(e){return i(0==(this.negative|e.negative)),this.iuor(e)},a.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},a.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},a.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var s=0;s<t.length;s++)this.words[s]=this.words[s]&e.words[s];return this.length=t.length,this._strip()},a.prototype.iand=function(e){return i(0==(this.negative|e.negative)),this.iuand(e)},a.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},a.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},a.prototype.iuxor=function(e){var t,s;this.length>e.length?(t=this,s=e):(t=e,s=this);for(var i=0;i<s.length;i++)this.words[i]=t.words[i]^s.words[i];if(this!==t)for(;i<t.length;i++)this.words[i]=t.words[i];return this.length=t.length,this._strip()},a.prototype.ixor=function(e){return i(0==(this.negative|e.negative)),this.iuxor(e)},a.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},a.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},a.prototype.inotn=function(e){i("number"==typeof e&&e>=0);var t=0|Math.ceil(e/26),s=e%26;this._expand(t),s>0&&t--;for(var r=0;r<t;r++)this.words[r]=67108863&~this.words[r];return s>0&&(this.words[r]=~this.words[r]&67108863>>26-s),this._strip()},a.prototype.notn=function(e){return this.clone().inotn(e)},a.prototype.setn=function(e,t){i("number"==typeof e&&e>=0);var s=e/26|0,r=e%26;return this._expand(s+1),this.words[s]=t?this.words[s]|1<<r:this.words[s]&~(1<<r),this._strip()},a.prototype.iadd=function(e){var t,s,i;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(s=this,i=e):(s=e,i=this);for(var r=0,a=0;a<i.length;a++)t=(0|s.words[a])+(0|i.words[a])+r,this.words[a]=67108863&t,r=t>>>26;for(;0!==r&&a<s.length;a++)t=(0|s.words[a])+r,this.words[a]=67108863&t,r=t>>>26;if(this.length=s.length,0!==r)this.words[this.length]=r,this.length++;else if(s!==this)for(;a<s.length;a++)this.words[a]=s.words[a];return this},a.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},a.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var s,i,r=this.cmp(e);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(s=this,i=e):(s=e,i=this);for(var a=0,n=0;n<i.length;n++)a=(t=(0|s.words[n])-(0|i.words[n])+a)>>26,this.words[n]=67108863&t;for(;0!==a&&n<s.length;n++)a=(t=(0|s.words[n])+a)>>26,this.words[n]=67108863&t;if(0===a&&n<s.length&&s!==this)for(;n<s.length;n++)this.words[n]=s.words[n];return this.length=Math.max(this.length,n),s!==this&&(this.negative=1),this._strip()},a.prototype.sub=function(e){return this.clone().isub(e)};var p=function(e,t,s){var i,r,a,n=e.words,o=t.words,c=s.words,d=0,h=0|n[0],l=8191&h,u=h>>>13,f=0|n[1],p=8191&f,m=f>>>13,g=0|n[2],y=8191&g,b=g>>>13,v=0|n[3],w=8191&v,S=v>>>13,k=0|n[4],T=8191&k,O=k>>>13,_=0|n[5],x=8191&_,M=_>>>13,I=0|n[6],C=8191&I,P=I>>>13,A=0|n[7],N=8191&A,V=A>>>13,B=0|n[8],E=8191&B,L=B>>>13,R=0|n[9],D=8191&R,F=R>>>13,G=0|o[0],q=8191&G,H=G>>>13,j=0|o[1],U=8191&j,z=j>>>13,W=0|o[2],K=8191&W,X=W>>>13,Z=0|o[3],Y=8191&Z,Q=Z>>>13,J=0|o[4],$=8191&J,ee=J>>>13,te=0|o[5],se=8191&te,ie=te>>>13,re=0|o[6],ae=8191&re,ne=re>>>13,oe=0|o[7],ce=8191&oe,de=oe>>>13,he=0|o[8],le=8191&he,ue=he>>>13,fe=0|o[9],pe=8191&fe,me=fe>>>13;s.negative=e.negative^t.negative,s.length=19;var ge=(d+(i=Math.imul(l,q))|0)+((8191&(r=(r=Math.imul(l,H))+Math.imul(u,q)|0))<<13)|0;d=((a=Math.imul(u,H))+(r>>>13)|0)+(ge>>>26)|0,ge&=67108863,i=Math.imul(p,q),r=(r=Math.imul(p,H))+Math.imul(m,q)|0,a=Math.imul(m,H);var ye=(d+(i=i+Math.imul(l,U)|0)|0)+((8191&(r=(r=r+Math.imul(l,z)|0)+Math.imul(u,U)|0))<<13)|0;d=((a=a+Math.imul(u,z)|0)+(r>>>13)|0)+(ye>>>26)|0,ye&=67108863,i=Math.imul(y,q),r=(r=Math.imul(y,H))+Math.imul(b,q)|0,a=Math.imul(b,H),i=i+Math.imul(p,U)|0,r=(r=r+Math.imul(p,z)|0)+Math.imul(m,U)|0,a=a+Math.imul(m,z)|0;var be=(d+(i=i+Math.imul(l,K)|0)|0)+((8191&(r=(r=r+Math.imul(l,X)|0)+Math.imul(u,K)|0))<<13)|0;d=((a=a+Math.imul(u,X)|0)+(r>>>13)|0)+(be>>>26)|0,be&=67108863,i=Math.imul(w,q),r=(r=Math.imul(w,H))+Math.imul(S,q)|0,a=Math.imul(S,H),i=i+Math.imul(y,U)|0,r=(r=r+Math.imul(y,z)|0)+Math.imul(b,U)|0,a=a+Math.imul(b,z)|0,i=i+Math.imul(p,K)|0,r=(r=r+Math.imul(p,X)|0)+Math.imul(m,K)|0,a=a+Math.imul(m,X)|0;var ve=(d+(i=i+Math.imul(l,Y)|0)|0)+((8191&(r=(r=r+Math.imul(l,Q)|0)+Math.imul(u,Y)|0))<<13)|0;d=((a=a+Math.imul(u,Q)|0)+(r>>>13)|0)+(ve>>>26)|0,ve&=67108863,i=Math.imul(T,q),r=(r=Math.imul(T,H))+Math.imul(O,q)|0,a=Math.imul(O,H),i=i+Math.imul(w,U)|0,r=(r=r+Math.imul(w,z)|0)+Math.imul(S,U)|0,a=a+Math.imul(S,z)|0,i=i+Math.imul(y,K)|0,r=(r=r+Math.imul(y,X)|0)+Math.imul(b,K)|0,a=a+Math.imul(b,X)|0,i=i+Math.imul(p,Y)|0,r=(r=r+Math.imul(p,Q)|0)+Math.imul(m,Y)|0,a=a+Math.imul(m,Q)|0;var we=(d+(i=i+Math.imul(l,$)|0)|0)+((8191&(r=(r=r+Math.imul(l,ee)|0)+Math.imul(u,$)|0))<<13)|0;d=((a=a+Math.imul(u,ee)|0)+(r>>>13)|0)+(we>>>26)|0,we&=67108863,i=Math.imul(x,q),r=(r=Math.imul(x,H))+Math.imul(M,q)|0,a=Math.imul(M,H),i=i+Math.imul(T,U)|0,r=(r=r+Math.imul(T,z)|0)+Math.imul(O,U)|0,a=a+Math.imul(O,z)|0,i=i+Math.imul(w,K)|0,r=(r=r+Math.imul(w,X)|0)+Math.imul(S,K)|0,a=a+Math.imul(S,X)|0,i=i+Math.imul(y,Y)|0,r=(r=r+Math.imul(y,Q)|0)+Math.imul(b,Y)|0,a=a+Math.imul(b,Q)|0,i=i+Math.imul(p,$)|0,r=(r=r+Math.imul(p,ee)|0)+Math.imul(m,$)|0,a=a+Math.imul(m,ee)|0;var Se=(d+(i=i+Math.imul(l,se)|0)|0)+((8191&(r=(r=r+Math.imul(l,ie)|0)+Math.imul(u,se)|0))<<13)|0;d=((a=a+Math.imul(u,ie)|0)+(r>>>13)|0)+(Se>>>26)|0,Se&=67108863,i=Math.imul(C,q),r=(r=Math.imul(C,H))+Math.imul(P,q)|0,a=Math.imul(P,H),i=i+Math.imul(x,U)|0,r=(r=r+Math.imul(x,z)|0)+Math.imul(M,U)|0,a=a+Math.imul(M,z)|0,i=i+Math.imul(T,K)|0,r=(r=r+Math.imul(T,X)|0)+Math.imul(O,K)|0,a=a+Math.imul(O,X)|0,i=i+Math.imul(w,Y)|0,r=(r=r+Math.imul(w,Q)|0)+Math.imul(S,Y)|0,a=a+Math.imul(S,Q)|0,i=i+Math.imul(y,$)|0,r=(r=r+Math.imul(y,ee)|0)+Math.imul(b,$)|0,a=a+Math.imul(b,ee)|0,i=i+Math.imul(p,se)|0,r=(r=r+Math.imul(p,ie)|0)+Math.imul(m,se)|0,a=a+Math.imul(m,ie)|0;var ke=(d+(i=i+Math.imul(l,ae)|0)|0)+((8191&(r=(r=r+Math.imul(l,ne)|0)+Math.imul(u,ae)|0))<<13)|0;d=((a=a+Math.imul(u,ne)|0)+(r>>>13)|0)+(ke>>>26)|0,ke&=67108863,i=Math.imul(N,q),r=(r=Math.imul(N,H))+Math.imul(V,q)|0,a=Math.imul(V,H),i=i+Math.imul(C,U)|0,r=(r=r+Math.imul(C,z)|0)+Math.imul(P,U)|0,a=a+Math.imul(P,z)|0,i=i+Math.imul(x,K)|0,r=(r=r+Math.imul(x,X)|0)+Math.imul(M,K)|0,a=a+Math.imul(M,X)|0,i=i+Math.imul(T,Y)|0,r=(r=r+Math.imul(T,Q)|0)+Math.imul(O,Y)|0,a=a+Math.imul(O,Q)|0,i=i+Math.imul(w,$)|0,r=(r=r+Math.imul(w,ee)|0)+Math.imul(S,$)|0,a=a+Math.imul(S,ee)|0,i=i+Math.imul(y,se)|0,r=(r=r+Math.imul(y,ie)|0)+Math.imul(b,se)|0,a=a+Math.imul(b,ie)|0,i=i+Math.imul(p,ae)|0,r=(r=r+Math.imul(p,ne)|0)+Math.imul(m,ae)|0,a=a+Math.imul(m,ne)|0;var Te=(d+(i=i+Math.imul(l,ce)|0)|0)+((8191&(r=(r=r+Math.imul(l,de)|0)+Math.imul(u,ce)|0))<<13)|0;d=((a=a+Math.imul(u,de)|0)+(r>>>13)|0)+(Te>>>26)|0,Te&=67108863,i=Math.imul(E,q),r=(r=Math.imul(E,H))+Math.imul(L,q)|0,a=Math.imul(L,H),i=i+Math.imul(N,U)|0,r=(r=r+Math.imul(N,z)|0)+Math.imul(V,U)|0,a=a+Math.imul(V,z)|0,i=i+Math.imul(C,K)|0,r=(r=r+Math.imul(C,X)|0)+Math.imul(P,K)|0,a=a+Math.imul(P,X)|0,i=i+Math.imul(x,Y)|0,r=(r=r+Math.imul(x,Q)|0)+Math.imul(M,Y)|0,a=a+Math.imul(M,Q)|0,i=i+Math.imul(T,$)|0,r=(r=r+Math.imul(T,ee)|0)+Math.imul(O,$)|0,a=a+Math.imul(O,ee)|0,i=i+Math.imul(w,se)|0,r=(r=r+Math.imul(w,ie)|0)+Math.imul(S,se)|0,a=a+Math.imul(S,ie)|0,i=i+Math.imul(y,ae)|0,r=(r=r+Math.imul(y,ne)|0)+Math.imul(b,ae)|0,a=a+Math.imul(b,ne)|0,i=i+Math.imul(p,ce)|0,r=(r=r+Math.imul(p,de)|0)+Math.imul(m,ce)|0,a=a+Math.imul(m,de)|0;var Oe=(d+(i=i+Math.imul(l,le)|0)|0)+((8191&(r=(r=r+Math.imul(l,ue)|0)+Math.imul(u,le)|0))<<13)|0;d=((a=a+Math.imul(u,ue)|0)+(r>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,i=Math.imul(D,q),r=(r=Math.imul(D,H))+Math.imul(F,q)|0,a=Math.imul(F,H),i=i+Math.imul(E,U)|0,r=(r=r+Math.imul(E,z)|0)+Math.imul(L,U)|0,a=a+Math.imul(L,z)|0,i=i+Math.imul(N,K)|0,r=(r=r+Math.imul(N,X)|0)+Math.imul(V,K)|0,a=a+Math.imul(V,X)|0,i=i+Math.imul(C,Y)|0,r=(r=r+Math.imul(C,Q)|0)+Math.imul(P,Y)|0,a=a+Math.imul(P,Q)|0,i=i+Math.imul(x,$)|0,r=(r=r+Math.imul(x,ee)|0)+Math.imul(M,$)|0,a=a+Math.imul(M,ee)|0,i=i+Math.imul(T,se)|0,r=(r=r+Math.imul(T,ie)|0)+Math.imul(O,se)|0,a=a+Math.imul(O,ie)|0,i=i+Math.imul(w,ae)|0,r=(r=r+Math.imul(w,ne)|0)+Math.imul(S,ae)|0,a=a+Math.imul(S,ne)|0,i=i+Math.imul(y,ce)|0,r=(r=r+Math.imul(y,de)|0)+Math.imul(b,ce)|0,a=a+Math.imul(b,de)|0,i=i+Math.imul(p,le)|0,r=(r=r+Math.imul(p,ue)|0)+Math.imul(m,le)|0,a=a+Math.imul(m,ue)|0;var _e=(d+(i=i+Math.imul(l,pe)|0)|0)+((8191&(r=(r=r+Math.imul(l,me)|0)+Math.imul(u,pe)|0))<<13)|0;d=((a=a+Math.imul(u,me)|0)+(r>>>13)|0)+(_e>>>26)|0,_e&=67108863,i=Math.imul(D,U),r=(r=Math.imul(D,z))+Math.imul(F,U)|0,a=Math.imul(F,z),i=i+Math.imul(E,K)|0,r=(r=r+Math.imul(E,X)|0)+Math.imul(L,K)|0,a=a+Math.imul(L,X)|0,i=i+Math.imul(N,Y)|0,r=(r=r+Math.imul(N,Q)|0)+Math.imul(V,Y)|0,a=a+Math.imul(V,Q)|0,i=i+Math.imul(C,$)|0,r=(r=r+Math.imul(C,ee)|0)+Math.imul(P,$)|0,a=a+Math.imul(P,ee)|0,i=i+Math.imul(x,se)|0,r=(r=r+Math.imul(x,ie)|0)+Math.imul(M,se)|0,a=a+Math.imul(M,ie)|0,i=i+Math.imul(T,ae)|0,r=(r=r+Math.imul(T,ne)|0)+Math.imul(O,ae)|0,a=a+Math.imul(O,ne)|0,i=i+Math.imul(w,ce)|0,r=(r=r+Math.imul(w,de)|0)+Math.imul(S,ce)|0,a=a+Math.imul(S,de)|0,i=i+Math.imul(y,le)|0,r=(r=r+Math.imul(y,ue)|0)+Math.imul(b,le)|0,a=a+Math.imul(b,ue)|0;var xe=(d+(i=i+Math.imul(p,pe)|0)|0)+((8191&(r=(r=r+Math.imul(p,me)|0)+Math.imul(m,pe)|0))<<13)|0;d=((a=a+Math.imul(m,me)|0)+(r>>>13)|0)+(xe>>>26)|0,xe&=67108863,i=Math.imul(D,K),r=(r=Math.imul(D,X))+Math.imul(F,K)|0,a=Math.imul(F,X),i=i+Math.imul(E,Y)|0,r=(r=r+Math.imul(E,Q)|0)+Math.imul(L,Y)|0,a=a+Math.imul(L,Q)|0,i=i+Math.imul(N,$)|0,r=(r=r+Math.imul(N,ee)|0)+Math.imul(V,$)|0,a=a+Math.imul(V,ee)|0,i=i+Math.imul(C,se)|0,r=(r=r+Math.imul(C,ie)|0)+Math.imul(P,se)|0,a=a+Math.imul(P,ie)|0,i=i+Math.imul(x,ae)|0,r=(r=r+Math.imul(x,ne)|0)+Math.imul(M,ae)|0,a=a+Math.imul(M,ne)|0,i=i+Math.imul(T,ce)|0,r=(r=r+Math.imul(T,de)|0)+Math.imul(O,ce)|0,a=a+Math.imul(O,de)|0,i=i+Math.imul(w,le)|0,r=(r=r+Math.imul(w,ue)|0)+Math.imul(S,le)|0,a=a+Math.imul(S,ue)|0;var Me=(d+(i=i+Math.imul(y,pe)|0)|0)+((8191&(r=(r=r+Math.imul(y,me)|0)+Math.imul(b,pe)|0))<<13)|0;d=((a=a+Math.imul(b,me)|0)+(r>>>13)|0)+(Me>>>26)|0,Me&=67108863,i=Math.imul(D,Y),r=(r=Math.imul(D,Q))+Math.imul(F,Y)|0,a=Math.imul(F,Q),i=i+Math.imul(E,$)|0,r=(r=r+Math.imul(E,ee)|0)+Math.imul(L,$)|0,a=a+Math.imul(L,ee)|0,i=i+Math.imul(N,se)|0,r=(r=r+Math.imul(N,ie)|0)+Math.imul(V,se)|0,a=a+Math.imul(V,ie)|0,i=i+Math.imul(C,ae)|0,r=(r=r+Math.imul(C,ne)|0)+Math.imul(P,ae)|0,a=a+Math.imul(P,ne)|0,i=i+Math.imul(x,ce)|0,r=(r=r+Math.imul(x,de)|0)+Math.imul(M,ce)|0,a=a+Math.imul(M,de)|0,i=i+Math.imul(T,le)|0,r=(r=r+Math.imul(T,ue)|0)+Math.imul(O,le)|0,a=a+Math.imul(O,ue)|0;var Ie=(d+(i=i+Math.imul(w,pe)|0)|0)+((8191&(r=(r=r+Math.imul(w,me)|0)+Math.imul(S,pe)|0))<<13)|0;d=((a=a+Math.imul(S,me)|0)+(r>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,i=Math.imul(D,$),r=(r=Math.imul(D,ee))+Math.imul(F,$)|0,a=Math.imul(F,ee),i=i+Math.imul(E,se)|0,r=(r=r+Math.imul(E,ie)|0)+Math.imul(L,se)|0,a=a+Math.imul(L,ie)|0,i=i+Math.imul(N,ae)|0,r=(r=r+Math.imul(N,ne)|0)+Math.imul(V,ae)|0,a=a+Math.imul(V,ne)|0,i=i+Math.imul(C,ce)|0,r=(r=r+Math.imul(C,de)|0)+Math.imul(P,ce)|0,a=a+Math.imul(P,de)|0,i=i+Math.imul(x,le)|0,r=(r=r+Math.imul(x,ue)|0)+Math.imul(M,le)|0,a=a+Math.imul(M,ue)|0;var Ce=(d+(i=i+Math.imul(T,pe)|0)|0)+((8191&(r=(r=r+Math.imul(T,me)|0)+Math.imul(O,pe)|0))<<13)|0;d=((a=a+Math.imul(O,me)|0)+(r>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,i=Math.imul(D,se),r=(r=Math.imul(D,ie))+Math.imul(F,se)|0,a=Math.imul(F,ie),i=i+Math.imul(E,ae)|0,r=(r=r+Math.imul(E,ne)|0)+Math.imul(L,ae)|0,a=a+Math.imul(L,ne)|0,i=i+Math.imul(N,ce)|0,r=(r=r+Math.imul(N,de)|0)+Math.imul(V,ce)|0,a=a+Math.imul(V,de)|0,i=i+Math.imul(C,le)|0,r=(r=r+Math.imul(C,ue)|0)+Math.imul(P,le)|0,a=a+Math.imul(P,ue)|0;var Pe=(d+(i=i+Math.imul(x,pe)|0)|0)+((8191&(r=(r=r+Math.imul(x,me)|0)+Math.imul(M,pe)|0))<<13)|0;d=((a=a+Math.imul(M,me)|0)+(r>>>13)|0)+(Pe>>>26)|0,Pe&=67108863,i=Math.imul(D,ae),r=(r=Math.imul(D,ne))+Math.imul(F,ae)|0,a=Math.imul(F,ne),i=i+Math.imul(E,ce)|0,r=(r=r+Math.imul(E,de)|0)+Math.imul(L,ce)|0,a=a+Math.imul(L,de)|0,i=i+Math.imul(N,le)|0,r=(r=r+Math.imul(N,ue)|0)+Math.imul(V,le)|0,a=a+Math.imul(V,ue)|0;var Ae=(d+(i=i+Math.imul(C,pe)|0)|0)+((8191&(r=(r=r+Math.imul(C,me)|0)+Math.imul(P,pe)|0))<<13)|0;d=((a=a+Math.imul(P,me)|0)+(r>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,i=Math.imul(D,ce),r=(r=Math.imul(D,de))+Math.imul(F,ce)|0,a=Math.imul(F,de),i=i+Math.imul(E,le)|0,r=(r=r+Math.imul(E,ue)|0)+Math.imul(L,le)|0,a=a+Math.imul(L,ue)|0;var Ne=(d+(i=i+Math.imul(N,pe)|0)|0)+((8191&(r=(r=r+Math.imul(N,me)|0)+Math.imul(V,pe)|0))<<13)|0;d=((a=a+Math.imul(V,me)|0)+(r>>>13)|0)+(Ne>>>26)|0,Ne&=67108863,i=Math.imul(D,le),r=(r=Math.imul(D,ue))+Math.imul(F,le)|0,a=Math.imul(F,ue);var Ve=(d+(i=i+Math.imul(E,pe)|0)|0)+((8191&(r=(r=r+Math.imul(E,me)|0)+Math.imul(L,pe)|0))<<13)|0;d=((a=a+Math.imul(L,me)|0)+(r>>>13)|0)+(Ve>>>26)|0,Ve&=67108863;var Be=(d+(i=Math.imul(D,pe))|0)+((8191&(r=(r=Math.imul(D,me))+Math.imul(F,pe)|0))<<13)|0;return d=((a=Math.imul(F,me))+(r>>>13)|0)+(Be>>>26)|0,Be&=67108863,c[0]=ge,c[1]=ye,c[2]=be,c[3]=ve,c[4]=we,c[5]=Se,c[6]=ke,c[7]=Te,c[8]=Oe,c[9]=_e,c[10]=xe,c[11]=Me,c[12]=Ie,c[13]=Ce,c[14]=Pe,c[15]=Ae,c[16]=Ne,c[17]=Ve,c[18]=Be,0!==d&&(c[19]=d,s.length++),s};function m(e,t,s){s.negative=t.negative^e.negative,s.length=e.length+t.length;for(var i=0,r=0,a=0;a<s.length-1;a++){var n=r;r=0;for(var o=67108863&i,c=Math.min(a,t.length-1),d=Math.max(0,a-e.length+1);d<=c;d++){var h=a-d,l=(0|e.words[h])*(0|t.words[d]),u=67108863&l;o=67108863&(u=u+o|0),r+=(n=(n=n+(l/67108864|0)|0)+(u>>>26)|0)>>>26,n&=67108863}s.words[a]=o,i=n,n=r}return 0!==i?s.words[a]=i:s.length--,s._strip()}function g(e,t,s){return m(e,t,s)}function y(e,t){this.x=e,this.y=t}Math.imul||(p=f),a.prototype.mulTo=function(e,t){var s=this.length+e.length;return 10===this.length&&10===e.length?p(this,e,t):s<63?f(this,e,t):s<1024?m(this,e,t):g(this,e,t)},y.prototype.makeRBT=function(e){for(var t=new Array(e),s=a.prototype._countBits(e)-1,i=0;i<e;i++)t[i]=this.revBin(i,s,e);return t},y.prototype.revBin=function(e,t,s){if(0===e||e===s-1)return e;for(var i=0,r=0;r<t;r++)i|=(1&e)<<t-r-1,e>>=1;return i},y.prototype.permute=function(e,t,s,i,r,a){for(var n=0;n<a;n++)i[n]=t[e[n]],r[n]=s[e[n]]},y.prototype.transform=function(e,t,s,i,r,a){this.permute(a,e,t,s,i,r);for(var n=1;n<r;n<<=1)for(var o=n<<1,c=Math.cos(2*Math.PI/o),d=Math.sin(2*Math.PI/o),h=0;h<r;h+=o)for(var l=c,u=d,f=0;f<n;f++){var p=s[h+f],m=i[h+f],g=s[h+f+n],y=i[h+f+n],b=l*g-u*y;y=l*y+u*g,g=b,s[h+f]=p+g,i[h+f]=m+y,s[h+f+n]=p-g,i[h+f+n]=m-y,f!==o&&(b=c*l-d*u,u=c*u+d*l,l=b)}},y.prototype.guessLen13b=function(e,t){var s=1|Math.max(t,e),i=1&s,r=0;for(s=s/2|0;s;s>>>=1)r++;return 1<<r+1+i},y.prototype.conjugate=function(e,t,s){if(!(s<=1))for(var i=0;i<s/2;i++){var r=e[i];e[i]=e[s-i-1],e[s-i-1]=r,r=t[i],t[i]=-t[s-i-1],t[s-i-1]=-r}},y.prototype.normalize13b=function(e,t){for(var s=0,i=0;i<t/2;i++){var r=8192*Math.round(e[2*i+1]/t)+Math.round(e[2*i]/t)+s;e[i]=67108863&r,s=r<67108864?0:r/67108864|0}return e},y.prototype.convert13b=function(e,t,s,r){for(var a=0,n=0;n<t;n++)a+=0|e[n],s[2*n]=8191&a,a>>>=13,s[2*n+1]=8191&a,a>>>=13;for(n=2*t;n<r;++n)s[n]=0;i(0===a),i(0==(-8192&a))},y.prototype.stub=function(e){for(var t=new Array(e),s=0;s<e;s++)t[s]=0;return t},y.prototype.mulp=function(e,t,s){var i=2*this.guessLen13b(e.length,t.length),r=this.makeRBT(i),a=this.stub(i),n=new Array(i),o=new Array(i),c=new Array(i),d=new Array(i),h=new Array(i),l=new Array(i),u=s.words;u.length=i,this.convert13b(e.words,e.length,n,i),this.convert13b(t.words,t.length,d,i),this.transform(n,a,o,c,i,r),this.transform(d,a,h,l,i,r);for(var f=0;f<i;f++){var p=o[f]*h[f]-c[f]*l[f];c[f]=o[f]*l[f]+c[f]*h[f],o[f]=p}return this.conjugate(o,c,i),this.transform(o,c,u,a,i,r),this.conjugate(u,a,i),this.normalize13b(u,i),s.negative=e.negative^t.negative,s.length=e.length+t.length,s._strip()},a.prototype.mul=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},a.prototype.mulf=function(e){var t=new a(null);return t.words=new Array(this.length+e.length),g(this,e,t)},a.prototype.imul=function(e){return this.clone().mulTo(e,this)},a.prototype.imuln=function(e){var t=e<0;t&&(e=-e),i("number"==typeof e),i(e<67108864);for(var s=0,r=0;r<this.length;r++){var a=(0|this.words[r])*e,n=(67108863&a)+(67108863&s);s>>=26,s+=a/67108864|0,s+=n>>>26,this.words[r]=67108863&n}return 0!==s&&(this.words[r]=s,this.length++),t?this.ineg():this},a.prototype.muln=function(e){return this.clone().imuln(e)},a.prototype.sqr=function(){return this.mul(this)},a.prototype.isqr=function(){return this.imul(this.clone())},a.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),s=0;s<t.length;s++){var i=s/26|0,r=s%26;t[s]=e.words[i]>>>r&1}return t}(e);if(0===t.length)return new a(1);for(var s=this,i=0;i<t.length&&0===t[i];i++,s=s.sqr());if(++i<t.length)for(var r=s.sqr();i<t.length;i++,r=r.sqr())0!==t[i]&&(s=s.mul(r));return s},a.prototype.iushln=function(e){i("number"==typeof e&&e>=0);var t,s=e%26,r=(e-s)/26,a=67108863>>>26-s<<26-s;if(0!==s){var n=0;for(t=0;t<this.length;t++){var o=this.words[t]&a,c=(0|this.words[t])-o<<s;this.words[t]=c|n,n=o>>>26-s}n&&(this.words[t]=n,this.length++)}if(0!==r){for(t=this.length-1;t>=0;t--)this.words[t+r]=this.words[t];for(t=0;t<r;t++)this.words[t]=0;this.length+=r}return this._strip()},a.prototype.ishln=function(e){return i(0===this.negative),this.iushln(e)},a.prototype.iushrn=function(e,t,s){var r;i("number"==typeof e&&e>=0),r=t?(t-t%26)/26:0;var a=e%26,n=Math.min((e-a)/26,this.length),o=67108863^67108863>>>a<<a,c=s;if(r-=n,r=Math.max(0,r),c){for(var d=0;d<n;d++)c.words[d]=this.words[d];c.length=n}if(0===n);else if(this.length>n)for(this.length-=n,d=0;d<this.length;d++)this.words[d]=this.words[d+n];else this.words[0]=0,this.length=1;var h=0;for(d=this.length-1;d>=0&&(0!==h||d>=r);d--){var l=0|this.words[d];this.words[d]=h<<26-a|l>>>a,h=l&o}return c&&0!==h&&(c.words[c.length++]=h),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},a.prototype.ishrn=function(e,t,s){return i(0===this.negative),this.iushrn(e,t,s)},a.prototype.shln=function(e){return this.clone().ishln(e)},a.prototype.ushln=function(e){return this.clone().iushln(e)},a.prototype.shrn=function(e){return this.clone().ishrn(e)},a.prototype.ushrn=function(e){return this.clone().iushrn(e)},a.prototype.testn=function(e){i("number"==typeof e&&e>=0);var t=e%26,s=(e-t)/26,r=1<<t;return!(this.length<=s)&&!!(this.words[s]&r)},a.prototype.imaskn=function(e){i("number"==typeof e&&e>=0);var t=e%26,s=(e-t)/26;if(i(0===this.negative,"imaskn works only with positive numbers"),this.length<=s)return this;if(0!==t&&s++,this.length=Math.min(s,this.length),0!==t){var r=67108863^67108863>>>t<<t;this.words[this.length-1]&=r}return this._strip()},a.prototype.maskn=function(e){return this.clone().imaskn(e)},a.prototype.iaddn=function(e){return i("number"==typeof e),i(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<=e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},a.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},a.prototype.isubn=function(e){if(i("number"==typeof e),i(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},a.prototype.addn=function(e){return this.clone().iaddn(e)},a.prototype.subn=function(e){return this.clone().isubn(e)},a.prototype.iabs=function(){return this.negative=0,this},a.prototype.abs=function(){return this.clone().iabs()},a.prototype._ishlnsubmul=function(e,t,s){var r,a,n=e.length+s;this._expand(n);var o=0;for(r=0;r<e.length;r++){a=(0|this.words[r+s])+o;var c=(0|e.words[r])*t;o=((a-=67108863&c)>>26)-(c/67108864|0),this.words[r+s]=67108863&a}for(;r<this.length-s;r++)o=(a=(0|this.words[r+s])+o)>>26,this.words[r+s]=67108863&a;if(0===o)return this._strip();for(i(-1===o),o=0,r=0;r<this.length;r++)o=(a=-(0|this.words[r])+o)>>26,this.words[r]=67108863&a;return this.negative=1,this._strip()},a.prototype._wordDiv=function(e,t){var s=(this.length,e.length),i=this.clone(),r=e,n=0|r.words[r.length-1];0!==(s=26-this._countBits(n))&&(r=r.ushln(s),i.iushln(s),n=0|r.words[r.length-1]);var o,c=i.length-r.length;if("mod"!==t){(o=new a(null)).length=c+1,o.words=new Array(o.length);for(var d=0;d<o.length;d++)o.words[d]=0}var h=i.clone()._ishlnsubmul(r,1,c);0===h.negative&&(i=h,o&&(o.words[c]=1));for(var l=c-1;l>=0;l--){var u=67108864*(0|i.words[r.length+l])+(0|i.words[r.length+l-1]);for(u=Math.min(u/n|0,67108863),i._ishlnsubmul(r,u,l);0!==i.negative;)u--,i.negative=0,i._ishlnsubmul(r,1,l),i.isZero()||(i.negative^=1);o&&(o.words[l]=u)}return o&&o._strip(),i._strip(),"div"!==t&&0!==s&&i.iushrn(s),{div:o||null,mod:i}},a.prototype.divmod=function(e,t,s){return i(!e.isZero()),this.isZero()?{div:new a(0),mod:new a(0)}:0!==this.negative&&0===e.negative?(o=this.neg().divmod(e,t),"mod"!==t&&(r=o.div.neg()),"div"!==t&&(n=o.mod.neg(),s&&0!==n.negative&&n.iadd(e)),{div:r,mod:n}):0===this.negative&&0!==e.negative?(o=this.divmod(e.neg(),t),"mod"!==t&&(r=o.div.neg()),{div:r,mod:o.mod}):0!=(this.negative&e.negative)?(o=this.neg().divmod(e.neg(),t),"div"!==t&&(n=o.mod.neg(),s&&0!==n.negative&&n.isub(e)),{div:o.div,mod:n}):e.length>this.length||this.cmp(e)<0?{div:new a(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new a(this.modrn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new a(this.modrn(e.words[0]))}:this._wordDiv(e,t);var r,n,o},a.prototype.div=function(e){return this.divmod(e,"div",!1).div},a.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},a.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},a.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var s=0!==t.div.negative?t.mod.isub(e):t.mod,i=e.ushrn(1),r=e.andln(1),a=s.cmp(i);return a<0||1===r&&0===a?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},a.prototype.modrn=function(e){var t=e<0;t&&(e=-e),i(e<=67108863);for(var s=(1<<26)%e,r=0,a=this.length-1;a>=0;a--)r=(s*r+(0|this.words[a]))%e;return t?-r:r},a.prototype.modn=function(e){return this.modrn(e)},a.prototype.idivn=function(e){var t=e<0;t&&(e=-e),i(e<=67108863);for(var s=0,r=this.length-1;r>=0;r--){var a=(0|this.words[r])+67108864*s;this.words[r]=a/e|0,s=a%e}return this._strip(),t?this.ineg():this},a.prototype.divn=function(e){return this.clone().idivn(e)},a.prototype.egcd=function(e){i(0===e.negative),i(!e.isZero());var t=this,s=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var r=new a(1),n=new a(0),o=new a(0),c=new a(1),d=0;t.isEven()&&s.isEven();)t.iushrn(1),s.iushrn(1),++d;for(var h=s.clone(),l=t.clone();!t.isZero();){for(var u=0,f=1;0==(t.words[0]&f)&&u<26;++u,f<<=1);if(u>0)for(t.iushrn(u);u-- >0;)(r.isOdd()||n.isOdd())&&(r.iadd(h),n.isub(l)),r.iushrn(1),n.iushrn(1);for(var p=0,m=1;0==(s.words[0]&m)&&p<26;++p,m<<=1);if(p>0)for(s.iushrn(p);p-- >0;)(o.isOdd()||c.isOdd())&&(o.iadd(h),c.isub(l)),o.iushrn(1),c.iushrn(1);t.cmp(s)>=0?(t.isub(s),r.isub(o),n.isub(c)):(s.isub(t),o.isub(r),c.isub(n))}return{a:o,b:c,gcd:s.iushln(d)}},a.prototype._invmp=function(e){i(0===e.negative),i(!e.isZero());var t=this,s=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var r,n=new a(1),o=new a(0),c=s.clone();t.cmpn(1)>0&&s.cmpn(1)>0;){for(var d=0,h=1;0==(t.words[0]&h)&&d<26;++d,h<<=1);if(d>0)for(t.iushrn(d);d-- >0;)n.isOdd()&&n.iadd(c),n.iushrn(1);for(var l=0,u=1;0==(s.words[0]&u)&&l<26;++l,u<<=1);if(l>0)for(s.iushrn(l);l-- >0;)o.isOdd()&&o.iadd(c),o.iushrn(1);t.cmp(s)>=0?(t.isub(s),n.isub(o)):(s.isub(t),o.isub(n))}return(r=0===t.cmpn(1)?n:o).cmpn(0)<0&&r.iadd(e),r},a.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),s=e.clone();t.negative=0,s.negative=0;for(var i=0;t.isEven()&&s.isEven();i++)t.iushrn(1),s.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;s.isEven();)s.iushrn(1);var r=t.cmp(s);if(r<0){var a=t;t=s,s=a}else if(0===r||0===s.cmpn(1))break;t.isub(s)}return s.iushln(i)},a.prototype.invm=function(e){return this.egcd(e).a.umod(e)},a.prototype.isEven=function(){return 0==(1&this.words[0])},a.prototype.isOdd=function(){return 1==(1&this.words[0])},a.prototype.andln=function(e){return this.words[0]&e},a.prototype.bincn=function(e){i("number"==typeof e);var t=e%26,s=(e-t)/26,r=1<<t;if(this.length<=s)return this._expand(s+1),this.words[s]|=r,this;for(var a=r,n=s;0!==a&&n<this.length;n++){var o=0|this.words[n];a=(o+=a)>>>26,o&=67108863,this.words[n]=o}return 0!==a&&(this.words[n]=a,this.length++),this},a.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},a.prototype.cmpn=function(e){var t,s=e<0;if(0!==this.negative&&!s)return-1;if(0===this.negative&&s)return 1;if(this._strip(),this.length>1)t=1;else{s&&(e=-e),i(e<=67108863,"Number is too big");var r=0|this.words[0];t=r===e?0:r<e?-1:1}return 0!==this.negative?0|-t:t},a.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},a.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,s=this.length-1;s>=0;s--){var i=0|this.words[s],r=0|e.words[s];if(i!==r){i<r?t=-1:i>r&&(t=1);break}}return t},a.prototype.gtn=function(e){return 1===this.cmpn(e)},a.prototype.gt=function(e){return 1===this.cmp(e)},a.prototype.gten=function(e){return this.cmpn(e)>=0},a.prototype.gte=function(e){return this.cmp(e)>=0},a.prototype.ltn=function(e){return-1===this.cmpn(e)},a.prototype.lt=function(e){return-1===this.cmp(e)},a.prototype.lten=function(e){return this.cmpn(e)<=0},a.prototype.lte=function(e){return this.cmp(e)<=0},a.prototype.eqn=function(e){return 0===this.cmpn(e)},a.prototype.eq=function(e){return 0===this.cmp(e)},a.red=function(e){return new O(e)},a.prototype.toRed=function(e){return i(!this.red,"Already a number in reduction context"),i(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},a.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},a.prototype._forceRed=function(e){return this.red=e,this},a.prototype.forceRed=function(e){return i(!this.red,"Already a number in reduction context"),this._forceRed(e)},a.prototype.redAdd=function(e){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},a.prototype.redIAdd=function(e){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},a.prototype.redSub=function(e){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},a.prototype.redISub=function(e){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},a.prototype.redShl=function(e){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},a.prototype.redMul=function(e){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},a.prototype.redIMul=function(e){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},a.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},a.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},a.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},a.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},a.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},a.prototype.redPow=function(e){return i(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var b={k256:null,p224:null,p192:null,p25519:null};function v(e,t){this.name=e,this.p=new a(t,16),this.n=this.p.bitLength(),this.k=new a(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function w(){v.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function S(){v.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function k(){v.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function T(){v.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function O(e){if("string"==typeof e){var t=a._prime(e);this.m=t.p,this.prime=t}else i(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function _(e){O.call(this,e),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new a(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}v.prototype._tmp=function(){var e=new a(null);return e.words=new Array(Math.ceil(this.n/13)),e},v.prototype.ireduce=function(e){var t,s=e;do{this.split(s,this.tmp),t=(s=(s=this.imulK(s)).iadd(this.tmp)).bitLength()}while(t>this.n);var i=t<this.n?-1:s.ucmp(this.p);return 0===i?(s.words[0]=0,s.length=1):i>0?s.isub(this.p):s._strip(),s},v.prototype.split=function(e,t){e.iushrn(this.n,0,t)},v.prototype.imulK=function(e){return e.imul(this.k)},r(w,v),w.prototype.split=function(e,t){for(var s=4194303,i=Math.min(e.length,9),r=0;r<i;r++)t.words[r]=e.words[r];if(t.length=i,e.length<=9)return e.words[0]=0,void(e.length=1);var a=e.words[9];for(t.words[t.length++]=a&s,r=10;r<e.length;r++){var n=0|e.words[r];e.words[r-10]=(n&s)<<4|a>>>22,a=n}a>>>=22,e.words[r-10]=a,0===a&&e.length>10?e.length-=10:e.length-=9},w.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,s=0;s<e.length;s++){var i=0|e.words[s];t+=977*i,e.words[s]=67108863&t,t=64*i+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},r(S,v),r(k,v),r(T,v),T.prototype.imulK=function(e){for(var t=0,s=0;s<e.length;s++){var i=19*(0|e.words[s])+t,r=67108863&i;i>>>=26,e.words[s]=r,t=i}return 0!==t&&(e.words[e.length++]=t),e},a._prime=function(e){if(b[e])return b[e];var t;if("k256"===e)t=new w;else if("p224"===e)t=new S;else if("p192"===e)t=new k;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new T}return b[e]=t,t},O.prototype._verify1=function(e){i(0===e.negative,"red works only with positives"),i(e.red,"red works only with red numbers")},O.prototype._verify2=function(e,t){i(0==(e.negative|t.negative),"red works only with positives"),i(e.red&&e.red===t.red,"red works only with red numbers")},O.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):(e.umod(this.m)._forceRed(this)._move(e),e)},O.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},O.prototype.add=function(e,t){this._verify2(e,t);var s=e.add(t);return s.cmp(this.m)>=0&&s.isub(this.m),s._forceRed(this)},O.prototype.iadd=function(e,t){this._verify2(e,t);var s=e.iadd(t);return s.cmp(this.m)>=0&&s.isub(this.m),s},O.prototype.sub=function(e,t){this._verify2(e,t);var s=e.sub(t);return s.cmpn(0)<0&&s.iadd(this.m),s._forceRed(this)},O.prototype.isub=function(e,t){this._verify2(e,t);var s=e.isub(t);return s.cmpn(0)<0&&s.iadd(this.m),s},O.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},O.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},O.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},O.prototype.isqr=function(e){return this.imul(e,e.clone())},O.prototype.sqr=function(e){return this.mul(e,e)},O.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(i(t%2==1),3===t){var s=this.m.add(new a(1)).iushrn(2);return this.pow(e,s)}for(var r=this.m.subn(1),n=0;!r.isZero()&&0===r.andln(1);)n++,r.iushrn(1);i(!r.isZero());var o=new a(1).toRed(this),c=o.redNeg(),d=this.m.subn(1).iushrn(1),h=this.m.bitLength();for(h=new a(2*h*h).toRed(this);0!==this.pow(h,d).cmp(c);)h.redIAdd(c);for(var l=this.pow(h,r),u=this.pow(e,r.addn(1).iushrn(1)),f=this.pow(e,r),p=n;0!==f.cmp(o);){for(var m=f,g=0;0!==m.cmp(o);g++)m=m.redSqr();i(g<p);var y=this.pow(l,new a(1).iushln(p-g-1));u=u.redMul(y),l=y.redSqr(),f=f.redMul(l),p=g}return u},O.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},O.prototype.pow=function(e,t){if(t.isZero())return new a(1).toRed(this);if(0===t.cmpn(1))return e.clone();var s=new Array(16);s[0]=new a(1).toRed(this),s[1]=e;for(var i=2;i<s.length;i++)s[i]=this.mul(s[i-1],e);var r=s[0],n=0,o=0,c=t.bitLength()%26;for(0===c&&(c=26),i=t.length-1;i>=0;i--){for(var d=t.words[i],h=c-1;h>=0;h--){var l=d>>h&1;r!==s[0]&&(r=this.sqr(r)),0!==l||0!==n?(n<<=1,n|=l,(4===++o||0===i&&0===h)&&(r=this.mul(r,s[n]),o=0,n=0)):o=0}c=26}return r},O.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},O.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},a.mont=function(e){return new _(e)},r(_,O),_.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},_.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},_.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var s=e.imul(t),i=s.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=s.isub(i).iushrn(this.shift),a=r;return r.cmp(this.m)>=0?a=r.isub(this.m):r.cmpn(0)<0&&(a=r.iadd(this.m)),a._forceRed(this)},_.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new a(0)._forceRed(this);var s=e.mul(t),i=s.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=s.isub(i).iushrn(this.shift),n=r;return r.cmp(this.m)>=0?n=r.isub(this.m):r.cmpn(0)<0&&(n=r.iadd(this.m)),n._forceRed(this)},_.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}(void 0===t||t,this)},{buffer:65}],245:[function(e,t,s){var i,r;i=this,r=function(){var e,t,s,i,r,a=a||function(e,t){var s=Object.create||function(){function e(){}return function(t){var s;return e.prototype=t,s=new e,e.prototype=null,s}}(),i={},r=i.lib={},a=r.Base={extend:function(e){var t=s(this);return e&&t.mixIn(e),t.hasOwnProperty("init")&&this.init!==t.init||(t.init=function(){t.$super.init.apply(this,arguments)}),t.init.prototype=t,t.$super=this,t},create:function(){var e=this.extend();return e.init.apply(e,arguments),e},init:function(){},mixIn:function(e){for(var t in e)e.hasOwnProperty(t)&&(this[t]=e[t]);e.hasOwnProperty("toString")&&(this.toString=e.toString)},clone:function(){return this.init.prototype.extend(this)}},n=r.WordArray=a.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=null!=t?t:4*e.length},toString:function(e){return(e||c).stringify(this)},concat:function(e){var t=this.words,s=e.words,i=this.sigBytes,r=e.sigBytes;if(this.clamp(),i%4)for(var a=0;a<r;a++){var n=s[a>>>2]>>>24-a%4*8&255;t[i+a>>>2]|=n<<24-(i+a)%4*8}else for(a=0;a<r;a+=4)t[i+a>>>2]=s[a>>>2];return this.sigBytes+=r,this},clamp:function(){var t=this.words,s=this.sigBytes;t[s>>>2]&=4294967295<<32-s%4*8,t.length=e.ceil(s/4)},clone:function(){var e=a.clone.call(this);return e.words=this.words.slice(0),e},random:function(t){for(var s,i=[],r=function(t){var s=987654321,i=4294967295;return function(){var r=((s=36969*(65535&s)+(s>>16)&i)<<16)+(t=18e3*(65535&t)+(t>>16)&i)&i;return r/=4294967296,(r+=.5)*(e.random()>.5?1:-1)}},a=0;a<t;a+=4){var o=r(4294967296*(s||e.random()));s=987654071*o(),i.push(4294967296*o()|0)}return new n.init(i,t)}}),o=i.enc={},c=o.Hex={stringify:function(e){for(var t=e.words,s=e.sigBytes,i=[],r=0;r<s;r++){var a=t[r>>>2]>>>24-r%4*8&255;i.push((a>>>4).toString(16)),i.push((15&a).toString(16))}return i.join("")},parse:function(e){for(var t=e.length,s=[],i=0;i<t;i+=2)s[i>>>3]|=parseInt(e.substr(i,2),16)<<24-i%8*4;return new n.init(s,t/2)}},d=o.Latin1={stringify:function(e){for(var t=e.words,s=e.sigBytes,i=[],r=0;r<s;r++){var a=t[r>>>2]>>>24-r%4*8&255;i.push(String.fromCharCode(a))}return i.join("")},parse:function(e){for(var t=e.length,s=[],i=0;i<t;i++)s[i>>>2]|=(255&e.charCodeAt(i))<<24-i%4*8;return new n.init(s,t)}},h=o.Utf8={stringify:function(e){try{return decodeURIComponent(escape(d.stringify(e)))}catch(e){throw new Error("Malformed UTF-8 data")}},parse:function(e){return d.parse(unescape(encodeURIComponent(e)))}},l=r.BufferedBlockAlgorithm=a.extend({reset:function(){this._data=new n.init,this._nDataBytes=0},_append:function(e){"string"==typeof e&&(e=h.parse(e)),this._data.concat(e),this._nDataBytes+=e.sigBytes},_process:function(t){var s=this._data,i=s.words,r=s.sigBytes,a=this.blockSize,o=r/(4*a),c=(o=t?e.ceil(o):e.max((0|o)-this._minBufferSize,0))*a,d=e.min(4*c,r);if(c){for(var h=0;h<c;h+=a)this._doProcessBlock(i,h);var l=i.splice(0,c);s.sigBytes-=d}return new n.init(l,d)},clone:function(){var e=a.clone.call(this);return e._data=this._data.clone(),e},_minBufferSize:0}),u=(r.Hasher=l.extend({cfg:a.extend(),init:function(e){this.cfg=this.cfg.extend(e),this.reset()},reset:function(){l.reset.call(this),this._doReset()},update:function(e){return this._append(e),this._process(),this},finalize:function(e){return e&&this._append(e),this._doFinalize()},blockSize:16,_createHelper:function(e){return function(t,s){return new e.init(s).finalize(t)}},_createHmacHelper:function(e){return function(t,s){return new u.HMAC.init(e,s).finalize(t)}}}),i.algo={});return i}(Math);return t=(e=a).lib.WordArray,e.enc.Base64={stringify:function(e){var t=e.words,s=e.sigBytes,i=this._map;e.clamp();for(var r=[],a=0;a<s;a+=3)for(var n=(t[a>>>2]>>>24-a%4*8&255)<<16|(t[a+1>>>2]>>>24-(a+1)%4*8&255)<<8|t[a+2>>>2]>>>24-(a+2)%4*8&255,o=0;o<4&&a+.75*o<s;o++)r.push(i.charAt(n>>>6*(3-o)&63));var c=i.charAt(64);if(c)for(;r.length%4;)r.push(c);return r.join("")},parse:function(e){var s=e.length,i=this._map,r=this._reverseMap;if(!r){r=this._reverseMap=[];for(var a=0;a<i.length;a++)r[i.charCodeAt(a)]=a}var n=i.charAt(64);if(n){var o=e.indexOf(n);-1!==o&&(s=o)}return function(e,s,i){for(var r=[],a=0,n=0;n<s;n++)if(n%4){var o=i[e.charCodeAt(n-1)]<<n%4*2,c=i[e.charCodeAt(n)]>>>6-n%4*2;r[a>>>2]|=(o|c)<<24-a%4*8,a++}return t.create(r,a)}(e,s,r)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="},function(e){var t=a,s=t.lib,i=s.WordArray,r=s.Hasher,n=t.algo,o=[];!function(){for(var t=0;t<64;t++)o[t]=4294967296*e.abs(e.sin(t+1))|0}();var c=n.MD5=r.extend({_doReset:function(){this._hash=new i.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(e,t){for(var s=0;s<16;s++){var i=t+s,r=e[i];e[i]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8)}var a=this._hash.words,n=e[t+0],c=e[t+1],f=e[t+2],p=e[t+3],m=e[t+4],g=e[t+5],y=e[t+6],b=e[t+7],v=e[t+8],w=e[t+9],S=e[t+10],k=e[t+11],T=e[t+12],O=e[t+13],_=e[t+14],x=e[t+15],M=a[0],I=a[1],C=a[2],P=a[3];M=d(M,I,C,P,n,7,o[0]),P=d(P,M,I,C,c,12,o[1]),C=d(C,P,M,I,f,17,o[2]),I=d(I,C,P,M,p,22,o[3]),M=d(M,I,C,P,m,7,o[4]),P=d(P,M,I,C,g,12,o[5]),C=d(C,P,M,I,y,17,o[6]),I=d(I,C,P,M,b,22,o[7]),M=d(M,I,C,P,v,7,o[8]),P=d(P,M,I,C,w,12,o[9]),C=d(C,P,M,I,S,17,o[10]),I=d(I,C,P,M,k,22,o[11]),M=d(M,I,C,P,T,7,o[12]),P=d(P,M,I,C,O,12,o[13]),C=d(C,P,M,I,_,17,o[14]),M=h(M,I=d(I,C,P,M,x,22,o[15]),C,P,c,5,o[16]),P=h(P,M,I,C,y,9,o[17]),C=h(C,P,M,I,k,14,o[18]),I=h(I,C,P,M,n,20,o[19]),M=h(M,I,C,P,g,5,o[20]),P=h(P,M,I,C,S,9,o[21]),C=h(C,P,M,I,x,14,o[22]),I=h(I,C,P,M,m,20,o[23]),M=h(M,I,C,P,w,5,o[24]),P=h(P,M,I,C,_,9,o[25]),C=h(C,P,M,I,p,14,o[26]),I=h(I,C,P,M,v,20,o[27]),M=h(M,I,C,P,O,5,o[28]),P=h(P,M,I,C,f,9,o[29]),C=h(C,P,M,I,b,14,o[30]),M=l(M,I=h(I,C,P,M,T,20,o[31]),C,P,g,4,o[32]),P=l(P,M,I,C,v,11,o[33]),C=l(C,P,M,I,k,16,o[34]),I=l(I,C,P,M,_,23,o[35]),M=l(M,I,C,P,c,4,o[36]),P=l(P,M,I,C,m,11,o[37]),C=l(C,P,M,I,b,16,o[38]),I=l(I,C,P,M,S,23,o[39]),M=l(M,I,C,P,O,4,o[40]),P=l(P,M,I,C,n,11,o[41]),C=l(C,P,M,I,p,16,o[42]),I=l(I,C,P,M,y,23,o[43]),M=l(M,I,C,P,w,4,o[44]),P=l(P,M,I,C,T,11,o[45]),C=l(C,P,M,I,x,16,o[46]),M=u(M,I=l(I,C,P,M,f,23,o[47]),C,P,n,6,o[48]),P=u(P,M,I,C,b,10,o[49]),C=u(C,P,M,I,_,15,o[50]),I=u(I,C,P,M,g,21,o[51]),M=u(M,I,C,P,T,6,o[52]),P=u(P,M,I,C,p,10,o[53]),C=u(C,P,M,I,S,15,o[54]),I=u(I,C,P,M,c,21,o[55]),M=u(M,I,C,P,v,6,o[56]),P=u(P,M,I,C,x,10,o[57]),C=u(C,P,M,I,y,15,o[58]),I=u(I,C,P,M,O,21,o[59]),M=u(M,I,C,P,m,6,o[60]),P=u(P,M,I,C,k,10,o[61]),C=u(C,P,M,I,f,15,o[62]),I=u(I,C,P,M,w,21,o[63]),a[0]=a[0]+M|0,a[1]=a[1]+I|0,a[2]=a[2]+C|0,a[3]=a[3]+P|0},_doFinalize:function(){var t=this._data,s=t.words,i=8*this._nDataBytes,r=8*t.sigBytes;s[r>>>5]|=128<<24-r%32;var a=e.floor(i/4294967296),n=i;s[15+(r+64>>>9<<4)]=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),s[14+(r+64>>>9<<4)]=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8),t.sigBytes=4*(s.length+1),this._process();for(var o=this._hash,c=o.words,d=0;d<4;d++){var h=c[d];c[d]=16711935&(h<<8|h>>>24)|4278255360&(h<<24|h>>>8)}return o},clone:function(){var e=r.clone.call(this);return e._hash=this._hash.clone(),e}});function d(e,t,s,i,r,a,n){var o=e+(t&s|~t&i)+r+n;return(o<<a|o>>>32-a)+t}function h(e,t,s,i,r,a,n){var o=e+(t&i|s&~i)+r+n;return(o<<a|o>>>32-a)+t}function l(e,t,s,i,r,a,n){var o=e+(t^s^i)+r+n;return(o<<a|o>>>32-a)+t}function u(e,t,s,i,r,a,n){var o=e+(s^(t|~i))+r+n;return(o<<a|o>>>32-a)+t}t.MD5=r._createHelper(c),t.HmacMD5=r._createHmacHelper(c)}(Math),function(){var e=a,t=e.lib,s=t.WordArray,i=t.Hasher,r=e.algo,n=[],o=r.SHA1=i.extend({_doReset:function(){this._hash=new s.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var s=this._hash.words,i=s[0],r=s[1],a=s[2],o=s[3],c=s[4],d=0;d<80;d++){if(d<16)n[d]=0|e[t+d];else{var h=n[d-3]^n[d-8]^n[d-14]^n[d-16];n[d]=h<<1|h>>>31}var l=(i<<5|i>>>27)+c+n[d];l+=d<20?1518500249+(r&a|~r&o):d<40?1859775393+(r^a^o):d<60?(r&a|r&o|a&o)-1894007588:(r^a^o)-899497514,c=o,o=a,a=r<<30|r>>>2,r=i,i=l}s[0]=s[0]+i|0,s[1]=s[1]+r|0,s[2]=s[2]+a|0,s[3]=s[3]+o|0,s[4]=s[4]+c|0},_doFinalize:function(){var e=this._data,t=e.words,s=8*this._nDataBytes,i=8*e.sigBytes;return t[i>>>5]|=128<<24-i%32,t[14+(i+64>>>9<<4)]=Math.floor(s/4294967296),t[15+(i+64>>>9<<4)]=s,e.sigBytes=4*t.length,this._process(),this._hash},clone:function(){var e=i.clone.call(this);return e._hash=this._hash.clone(),e}});e.SHA1=i._createHelper(o),e.HmacSHA1=i._createHmacHelper(o)}(),function(e){var t=a,s=t.lib,i=s.WordArray,r=s.Hasher,n=t.algo,o=[],c=[];!function(){function t(t){for(var s=e.sqrt(t),i=2;i<=s;i++)if(!(t%i))return!1;return!0}function s(e){return 4294967296*(e-(0|e))|0}for(var i=2,r=0;r<64;)t(i)&&(r<8&&(o[r]=s(e.pow(i,.5))),c[r]=s(e.pow(i,1/3)),r++),i++}();var d=[],h=n.SHA256=r.extend({_doReset:function(){this._hash=new i.init(o.slice(0))},_doProcessBlock:function(e,t){for(var s=this._hash.words,i=s[0],r=s[1],a=s[2],n=s[3],o=s[4],h=s[5],l=s[6],u=s[7],f=0;f<64;f++){if(f<16)d[f]=0|e[t+f];else{var p=d[f-15],m=(p<<25|p>>>7)^(p<<14|p>>>18)^p>>>3,g=d[f-2],y=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;d[f]=m+d[f-7]+y+d[f-16]}var b=i&r^i&a^r&a,v=(i<<30|i>>>2)^(i<<19|i>>>13)^(i<<10|i>>>22),w=u+((o<<26|o>>>6)^(o<<21|o>>>11)^(o<<7|o>>>25))+(o&h^~o&l)+c[f]+d[f];u=l,l=h,h=o,o=n+w|0,n=a,a=r,r=i,i=w+(v+b)|0}s[0]=s[0]+i|0,s[1]=s[1]+r|0,s[2]=s[2]+a|0,s[3]=s[3]+n|0,s[4]=s[4]+o|0,s[5]=s[5]+h|0,s[6]=s[6]+l|0,s[7]=s[7]+u|0},_doFinalize:function(){var t=this._data,s=t.words,i=8*this._nDataBytes,r=8*t.sigBytes;return s[r>>>5]|=128<<24-r%32,s[14+(r+64>>>9<<4)]=e.floor(i/4294967296),s[15+(r+64>>>9<<4)]=i,t.sigBytes=4*s.length,this._process(),this._hash},clone:function(){var e=r.clone.call(this);return e._hash=this._hash.clone(),e}});t.SHA256=r._createHelper(h),t.HmacSHA256=r._createHmacHelper(h)}(Math),function(){var e=a,t=e.lib.WordArray,s=e.enc;function i(e){return e<<8&4278255360|e>>>8&16711935}s.Utf16=s.Utf16BE={stringify:function(e){for(var t=e.words,s=e.sigBytes,i=[],r=0;r<s;r+=2){var a=t[r>>>2]>>>16-r%4*8&65535;i.push(String.fromCharCode(a))}return i.join("")},parse:function(e){for(var s=e.length,i=[],r=0;r<s;r++)i[r>>>1]|=e.charCodeAt(r)<<16-r%2*16;return t.create(i,2*s)}},s.Utf16LE={stringify:function(e){for(var t=e.words,s=e.sigBytes,r=[],a=0;a<s;a+=2){var n=i(t[a>>>2]>>>16-a%4*8&65535);r.push(String.fromCharCode(n))}return r.join("")},parse:function(e){for(var s=e.length,r=[],a=0;a<s;a++)r[a>>>1]|=i(e.charCodeAt(a)<<16-a%2*16);return t.create(r,2*s)}}}(),function(){if("function"==typeof ArrayBuffer){var e=a.lib.WordArray,t=e.init,s=e.init=function(e){if(e instanceof ArrayBuffer&&(e=new Uint8Array(e)),(e instanceof Int8Array||"undefined"!=typeof Uint8ClampedArray&&e instanceof Uint8ClampedArray||e instanceof Int16Array||e instanceof Uint16Array||e instanceof Int32Array||e instanceof Uint32Array||e instanceof Float32Array||e instanceof Float64Array)&&(e=new Uint8Array(e.buffer,e.byteOffset,e.byteLength)),e instanceof Uint8Array){for(var s=e.byteLength,i=[],r=0;r<s;r++)i[r>>>2]|=e[r]<<24-r%4*8;t.call(this,i,s)}else t.apply(this,arguments)};s.prototype=e}}(),
/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
function(e){var t=a,s=t.lib,i=s.WordArray,r=s.Hasher,n=t.algo,o=i.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),c=i.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),d=i.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),h=i.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),l=i.create([0,1518500249,1859775393,2400959708,2840853838]),u=i.create([1352829926,1548603684,1836072691,2053994217,0]),f=n.RIPEMD160=r.extend({_doReset:function(){this._hash=i.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,t){for(var s=0;s<16;s++){var i=t+s,r=e[i];e[i]=16711935&(r<<8|r>>>24)|4278255360&(r<<24|r>>>8)}var a,n,f,w,S,k,T,O,_,x,M,I=this._hash.words,C=l.words,P=u.words,A=o.words,N=c.words,V=d.words,B=h.words;for(k=a=I[0],T=n=I[1],O=f=I[2],_=w=I[3],x=S=I[4],s=0;s<80;s+=1)M=a+e[t+A[s]]|0,M+=s<16?p(n,f,w)+C[0]:s<32?m(n,f,w)+C[1]:s<48?g(n,f,w)+C[2]:s<64?y(n,f,w)+C[3]:b(n,f,w)+C[4],M=(M=v(M|=0,V[s]))+S|0,a=S,S=w,w=v(f,10),f=n,n=M,M=k+e[t+N[s]]|0,M+=s<16?b(T,O,_)+P[0]:s<32?y(T,O,_)+P[1]:s<48?g(T,O,_)+P[2]:s<64?m(T,O,_)+P[3]:p(T,O,_)+P[4],M=(M=v(M|=0,B[s]))+x|0,k=x,x=_,_=v(O,10),O=T,T=M;M=I[1]+f+_|0,I[1]=I[2]+w+x|0,I[2]=I[3]+S+k|0,I[3]=I[4]+a+T|0,I[4]=I[0]+n+O|0,I[0]=M},_doFinalize:function(){var e=this._data,t=e.words,s=8*this._nDataBytes,i=8*e.sigBytes;t[i>>>5]|=128<<24-i%32,t[14+(i+64>>>9<<4)]=16711935&(s<<8|s>>>24)|4278255360&(s<<24|s>>>8),e.sigBytes=4*(t.length+1),this._process();for(var r=this._hash,a=r.words,n=0;n<5;n++){var o=a[n];a[n]=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8)}return r},clone:function(){var e=r.clone.call(this);return e._hash=this._hash.clone(),e}});function p(e,t,s){return e^t^s}function m(e,t,s){return e&t|~e&s}function g(e,t,s){return(e|~t)^s}function y(e,t,s){return e&s|t&~s}function b(e,t,s){return e^(t|~s)}function v(e,t){return e<<t|e>>>32-t}t.RIPEMD160=r._createHelper(f),t.HmacRIPEMD160=r._createHmacHelper(f)}(Math),function(){var e=a,t=e.lib.Base,s=e.enc.Utf8;e.algo.HMAC=t.extend({init:function(e,t){e=this._hasher=new e.init,"string"==typeof t&&(t=s.parse(t));var i=e.blockSize,r=4*i;t.sigBytes>r&&(t=e.finalize(t)),t.clamp();for(var a=this._oKey=t.clone(),n=this._iKey=t.clone(),o=a.words,c=n.words,d=0;d<i;d++)o[d]^=1549556828,c[d]^=909522486;a.sigBytes=n.sigBytes=r,this.reset()},reset:function(){var e=this._hasher;e.reset(),e.update(this._iKey)},update:function(e){return this._hasher.update(e),this},finalize:function(e){var t=this._hasher,s=t.finalize(e);return t.reset(),t.finalize(this._oKey.clone().concat(s))}})}(),function(){var e=a,t=e.lib,s=t.Base,i=t.WordArray,r=e.algo,n=r.SHA1,o=r.HMAC,c=r.PBKDF2=s.extend({cfg:s.extend({keySize:4,hasher:n,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var s=this.cfg,r=o.create(s.hasher,e),a=i.create(),n=i.create([1]),c=a.words,d=n.words,h=s.keySize,l=s.iterations;c.length<h;){var u=r.update(t).finalize(n);r.reset();for(var f=u.words,p=f.length,m=u,g=1;g<l;g++){m=r.finalize(m),r.reset();for(var y=m.words,b=0;b<p;b++)f[b]^=y[b]}a.concat(u),d[0]++}return a.sigBytes=4*h,a}});e.PBKDF2=function(e,t,s){return c.create(s).compute(e,t)}}(),function(){var e=a,t=e.lib,s=t.Base,i=t.WordArray,r=e.algo,n=r.MD5,o=r.EvpKDF=s.extend({cfg:s.extend({keySize:4,hasher:n,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var s=this.cfg,r=s.hasher.create(),a=i.create(),n=a.words,o=s.keySize,c=s.iterations;n.length<o;){d&&r.update(d);var d=r.update(e).finalize(t);r.reset();for(var h=1;h<c;h++)d=r.finalize(d),r.reset();a.concat(d)}return a.sigBytes=4*o,a}});e.EvpKDF=function(e,t,s){return o.create(s).compute(e,t)}}(),function(){var e=a,t=e.lib.WordArray,s=e.algo,i=s.SHA256,r=s.SHA224=i.extend({_doReset:function(){this._hash=new t.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var e=i._doFinalize.call(this);return e.sigBytes-=4,e}});e.SHA224=i._createHelper(r),e.HmacSHA224=i._createHmacHelper(r)}(),function(e){var t=a,s=t.lib,i=s.Base,r=s.WordArray,n=t.x64={};n.Word=i.extend({init:function(e,t){this.high=e,this.low=t}}),n.WordArray=i.extend({init:function(e,t){e=this.words=e||[],this.sigBytes=null!=t?t:8*e.length},toX32:function(){for(var e=this.words,t=e.length,s=[],i=0;i<t;i++){var a=e[i];s.push(a.high),s.push(a.low)}return r.create(s,this.sigBytes)},clone:function(){for(var e=i.clone.call(this),t=e.words=this.words.slice(0),s=t.length,r=0;r<s;r++)t[r]=t[r].clone();return e}})}(),function(e){var t=a,s=t.lib,i=s.WordArray,r=s.Hasher,n=t.x64.Word,o=t.algo,c=[],d=[],h=[];!function(){for(var e=1,t=0,s=0;s<24;s++){c[e+5*t]=(s+1)*(s+2)/2%64;var i=(2*e+3*t)%5;e=t%5,t=i}for(e=0;e<5;e++)for(t=0;t<5;t++)d[e+5*t]=t+(2*e+3*t)%5*5;for(var r=1,a=0;a<24;a++){for(var o=0,l=0,u=0;u<7;u++){if(1&r){var f=(1<<u)-1;f<32?l^=1<<f:o^=1<<f-32}128&r?r=r<<1^113:r<<=1}h[a]=n.create(o,l)}}();var l=[];!function(){for(var e=0;e<25;e++)l[e]=n.create()}();var u=o.SHA3=r.extend({cfg:r.cfg.extend({outputLength:512}),_doReset:function(){for(var e=this._state=[],t=0;t<25;t++)e[t]=new n.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(e,t){for(var s=this._state,i=this.blockSize/2,r=0;r<i;r++){var a=e[t+2*r],n=e[t+2*r+1];a=16711935&(a<<8|a>>>24)|4278255360&(a<<24|a>>>8),n=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8),(I=s[r]).high^=n,I.low^=a}for(var o=0;o<24;o++){for(var u=0;u<5;u++){for(var f=0,p=0,m=0;m<5;m++)f^=(I=s[u+5*m]).high,p^=I.low;var g=l[u];g.high=f,g.low=p}for(u=0;u<5;u++){var y=l[(u+4)%5],b=l[(u+1)%5],v=b.high,w=b.low;for(f=y.high^(v<<1|w>>>31),p=y.low^(w<<1|v>>>31),m=0;m<5;m++)(I=s[u+5*m]).high^=f,I.low^=p}for(var S=1;S<25;S++){var k=(I=s[S]).high,T=I.low,O=c[S];O<32?(f=k<<O|T>>>32-O,p=T<<O|k>>>32-O):(f=T<<O-32|k>>>64-O,p=k<<O-32|T>>>64-O);var _=l[d[S]];_.high=f,_.low=p}var x=l[0],M=s[0];for(x.high=M.high,x.low=M.low,u=0;u<5;u++)for(m=0;m<5;m++){var I=s[S=u+5*m],C=l[S],P=l[(u+1)%5+5*m],A=l[(u+2)%5+5*m];I.high=C.high^~P.high&A.high,I.low=C.low^~P.low&A.low}I=s[0];var N=h[o];I.high^=N.high,I.low^=N.low}},_doFinalize:function(){var t=this._data,s=t.words,r=(this._nDataBytes,8*t.sigBytes),a=32*this.blockSize;s[r>>>5]|=1<<24-r%32,s[(e.ceil((r+1)/a)*a>>>5)-1]|=128,t.sigBytes=4*s.length,this._process();for(var n=this._state,o=this.cfg.outputLength/8,c=o/8,d=[],h=0;h<c;h++){var l=n[h],u=l.high,f=l.low;u=16711935&(u<<8|u>>>24)|4278255360&(u<<24|u>>>8),f=16711935&(f<<8|f>>>24)|4278255360&(f<<24|f>>>8),d.push(f),d.push(u)}return new i.init(d,o)},clone:function(){for(var e=r.clone.call(this),t=e._state=this._state.slice(0),s=0;s<25;s++)t[s]=t[s].clone();return e}});t.SHA3=r._createHelper(u),t.HmacSHA3=r._createHmacHelper(u)}(Math),function(){var e=a,t=e.lib.Hasher,s=e.x64,i=s.Word,r=s.WordArray,n=e.algo;function o(){return i.create.apply(i,arguments)}var c=[o(1116352408,3609767458),o(1899447441,602891725),o(3049323471,3964484399),o(3921009573,2173295548),o(961987163,4081628472),o(1508970993,3053834265),o(2453635748,2937671579),o(2870763221,3664609560),o(3624381080,2734883394),o(310598401,1164996542),o(607225278,1323610764),o(1426881987,3590304994),o(1925078388,4068182383),o(2162078206,991336113),o(2614888103,633803317),o(3248222580,3479774868),o(3835390401,2666613458),o(4022224774,944711139),o(264347078,2341262773),o(604807628,2007800933),o(770255983,1495990901),o(1249150122,1856431235),o(1555081692,3175218132),o(1996064986,2198950837),o(2554220882,3999719339),o(2821834349,766784016),o(2952996808,2566594879),o(3210313671,3203337956),o(3336571891,1034457026),o(3584528711,2466948901),o(113926993,3758326383),o(338241895,168717936),o(666307205,1188179964),o(773529912,1546045734),o(1294757372,1522805485),o(1396182291,2643833823),o(1695183700,2343527390),o(1986661051,1014477480),o(2177026350,1206759142),o(2456956037,344077627),o(2730485921,1290863460),o(2820302411,3158454273),o(3259730800,3505952657),o(3345764771,106217008),o(3516065817,3606008344),o(3600352804,1432725776),o(4094571909,1467031594),o(275423344,851169720),o(430227734,3100823752),o(506948616,1363258195),o(659060556,3750685593),o(883997877,3785050280),o(958139571,3318307427),o(1322822218,3812723403),o(1537002063,2003034995),o(1747873779,3602036899),o(1955562222,1575990012),o(2024104815,1125592928),o(2227730452,2716904306),o(2361852424,442776044),o(2428436474,593698344),o(2756734187,3733110249),o(3204031479,2999351573),o(3329325298,3815920427),o(3391569614,3928383900),o(3515267271,566280711),o(3940187606,3454069534),o(4118630271,4000239992),o(116418474,1914138554),o(174292421,2731055270),o(289380356,3203993006),o(460393269,320620315),o(685471733,587496836),o(852142971,1086792851),o(1017036298,365543100),o(1126000580,2618297676),o(1288033470,3409855158),o(1501505948,4234509866),o(1607167915,987167468),o(1816402316,1246189591)],d=[];!function(){for(var e=0;e<80;e++)d[e]=o()}();var h=n.SHA512=t.extend({_doReset:function(){this._hash=new r.init([new i.init(1779033703,4089235720),new i.init(3144134277,2227873595),new i.init(1013904242,4271175723),new i.init(2773480762,1595750129),new i.init(1359893119,2917565137),new i.init(2600822924,725511199),new i.init(528734635,4215389547),new i.init(1541459225,327033209)])},_doProcessBlock:function(e,t){for(var s=this._hash.words,i=s[0],r=s[1],a=s[2],n=s[3],o=s[4],h=s[5],l=s[6],u=s[7],f=i.high,p=i.low,m=r.high,g=r.low,y=a.high,b=a.low,v=n.high,w=n.low,S=o.high,k=o.low,T=h.high,O=h.low,_=l.high,x=l.low,M=u.high,I=u.low,C=f,P=p,A=m,N=g,V=y,B=b,E=v,L=w,R=S,D=k,F=T,G=O,q=_,H=x,j=M,U=I,z=0;z<80;z++){var W=d[z];if(z<16)var K=W.high=0|e[t+2*z],X=W.low=0|e[t+2*z+1];else{var Z=d[z-15],Y=Z.high,Q=Z.low,J=(Y>>>1|Q<<31)^(Y>>>8|Q<<24)^Y>>>7,$=(Q>>>1|Y<<31)^(Q>>>8|Y<<24)^(Q>>>7|Y<<25),ee=d[z-2],te=ee.high,se=ee.low,ie=(te>>>19|se<<13)^(te<<3|se>>>29)^te>>>6,re=(se>>>19|te<<13)^(se<<3|te>>>29)^(se>>>6|te<<26),ae=d[z-7],ne=ae.high,oe=ae.low,ce=d[z-16],de=ce.high,he=ce.low;K=(K=(K=J+ne+((X=$+oe)>>>0<$>>>0?1:0))+ie+((X+=re)>>>0<re>>>0?1:0))+de+((X+=he)>>>0<he>>>0?1:0),W.high=K,W.low=X}var le,ue=R&F^~R&q,fe=D&G^~D&H,pe=C&A^C&V^A&V,me=P&N^P&B^N&B,ge=(C>>>28|P<<4)^(C<<30|P>>>2)^(C<<25|P>>>7),ye=(P>>>28|C<<4)^(P<<30|C>>>2)^(P<<25|C>>>7),be=(R>>>14|D<<18)^(R>>>18|D<<14)^(R<<23|D>>>9),ve=(D>>>14|R<<18)^(D>>>18|R<<14)^(D<<23|R>>>9),we=c[z],Se=we.high,ke=we.low,Te=j+be+((le=U+ve)>>>0<U>>>0?1:0),Oe=ye+me;j=q,U=H,q=F,H=G,F=R,G=D,R=E+(Te=(Te=(Te=Te+ue+((le+=fe)>>>0<fe>>>0?1:0))+Se+((le+=ke)>>>0<ke>>>0?1:0))+K+((le+=X)>>>0<X>>>0?1:0))+((D=L+le|0)>>>0<L>>>0?1:0)|0,E=V,L=B,V=A,B=N,A=C,N=P,C=Te+(ge+pe+(Oe>>>0<ye>>>0?1:0))+((P=le+Oe|0)>>>0<le>>>0?1:0)|0}p=i.low=p+P,i.high=f+C+(p>>>0<P>>>0?1:0),g=r.low=g+N,r.high=m+A+(g>>>0<N>>>0?1:0),b=a.low=b+B,a.high=y+V+(b>>>0<B>>>0?1:0),w=n.low=w+L,n.high=v+E+(w>>>0<L>>>0?1:0),k=o.low=k+D,o.high=S+R+(k>>>0<D>>>0?1:0),O=h.low=O+G,h.high=T+F+(O>>>0<G>>>0?1:0),x=l.low=x+H,l.high=_+q+(x>>>0<H>>>0?1:0),I=u.low=I+U,u.high=M+j+(I>>>0<U>>>0?1:0)},_doFinalize:function(){var e=this._data,t=e.words,s=8*this._nDataBytes,i=8*e.sigBytes;return t[i>>>5]|=128<<24-i%32,t[30+(i+128>>>10<<5)]=Math.floor(s/4294967296),t[31+(i+128>>>10<<5)]=s,e.sigBytes=4*t.length,this._process(),this._hash.toX32()},clone:function(){var e=t.clone.call(this);return e._hash=this._hash.clone(),e},blockSize:32});e.SHA512=t._createHelper(h),e.HmacSHA512=t._createHmacHelper(h)}(),function(){var e=a,t=e.x64,s=t.Word,i=t.WordArray,r=e.algo,n=r.SHA512,o=r.SHA384=n.extend({_doReset:function(){this._hash=new i.init([new s.init(3418070365,3238371032),new s.init(1654270250,914150663),new s.init(2438529370,812702999),new s.init(355462360,4144912697),new s.init(1731405415,4290775857),new s.init(2394180231,1750603025),new s.init(3675008525,1694076839),new s.init(1203062813,3204075428)])},_doFinalize:function(){var e=n._doFinalize.call(this);return e.sigBytes-=16,e}});e.SHA384=n._createHelper(o),e.HmacSHA384=n._createHmacHelper(o)}(),a.lib.Cipher||function(e){var t=a,s=t.lib,i=s.Base,r=s.WordArray,n=s.BufferedBlockAlgorithm,o=t.enc,c=(o.Utf8,o.Base64),d=t.algo.EvpKDF,h=s.Cipher=n.extend({cfg:i.extend(),createEncryptor:function(e,t){return this.create(this._ENC_XFORM_MODE,e,t)},createDecryptor:function(e,t){return this.create(this._DEC_XFORM_MODE,e,t)},init:function(e,t,s){this.cfg=this.cfg.extend(s),this._xformMode=e,this._key=t,this.reset()},reset:function(){n.reset.call(this),this._doReset()},process:function(e){return this._append(e),this._process()},finalize:function(e){return e&&this._append(e),this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function e(e){return"string"==typeof e?v:y}return function(t){return{encrypt:function(s,i,r){return e(i).encrypt(t,s,i,r)},decrypt:function(s,i,r){return e(i).decrypt(t,s,i,r)}}}}()}),l=(s.StreamCipher=h.extend({_doFinalize:function(){return this._process(!0)},blockSize:1}),t.mode={}),u=s.BlockCipherMode=i.extend({createEncryptor:function(e,t){return this.Encryptor.create(e,t)},createDecryptor:function(e,t){return this.Decryptor.create(e,t)},init:function(e,t){this._cipher=e,this._iv=t}}),f=l.CBC=function(){var e=u.extend();function t(e,t,s){var i=this._iv;if(i){var r=i;this._iv=void 0}else r=this._prevBlock;for(var a=0;a<s;a++)e[t+a]^=r[a]}return e.Encryptor=e.extend({processBlock:function(e,s){var i=this._cipher,r=i.blockSize;t.call(this,e,s,r),i.encryptBlock(e,s),this._prevBlock=e.slice(s,s+r)}}),e.Decryptor=e.extend({processBlock:function(e,s){var i=this._cipher,r=i.blockSize,a=e.slice(s,s+r);i.decryptBlock(e,s),t.call(this,e,s,r),this._prevBlock=a}}),e}(),p=(t.pad={}).Pkcs7={pad:function(e,t){for(var s=4*t,i=s-e.sigBytes%s,a=i<<24|i<<16|i<<8|i,n=[],o=0;o<i;o+=4)n.push(a);var c=r.create(n,i);e.concat(c)},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},m=(s.BlockCipher=h.extend({cfg:h.cfg.extend({mode:f,padding:p}),reset:function(){h.reset.call(this);var e=this.cfg,t=e.iv,s=e.mode;if(this._xformMode==this._ENC_XFORM_MODE)var i=s.createEncryptor;else i=s.createDecryptor,this._minBufferSize=1;this._mode&&this._mode.__creator==i?this._mode.init(this,t&&t.words):(this._mode=i.call(s,this,t&&t.words),this._mode.__creator=i)},_doProcessBlock:function(e,t){this._mode.processBlock(e,t)},_doFinalize:function(){var e=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){e.pad(this._data,this.blockSize);var t=this._process(!0)}else t=this._process(!0),e.unpad(t);return t},blockSize:4}),s.CipherParams=i.extend({init:function(e){this.mixIn(e)},toString:function(e){return(e||this.formatter).stringify(this)}})),g=(t.format={}).OpenSSL={stringify:function(e){var t=e.ciphertext,s=e.salt;if(s)var i=r.create([1398893684,1701076831]).concat(s).concat(t);else i=t;return i.toString(c)},parse:function(e){var t=c.parse(e),s=t.words;if(1398893684==s[0]&&1701076831==s[1]){var i=r.create(s.slice(2,4));s.splice(0,4),t.sigBytes-=16}return m.create({ciphertext:t,salt:i})}},y=s.SerializableCipher=i.extend({cfg:i.extend({format:g}),encrypt:function(e,t,s,i){i=this.cfg.extend(i);var r=e.createEncryptor(s,i),a=r.finalize(t),n=r.cfg;return m.create({ciphertext:a,key:s,iv:n.iv,algorithm:e,mode:n.mode,padding:n.padding,blockSize:e.blockSize,formatter:i.format})},decrypt:function(e,t,s,i){return i=this.cfg.extend(i),t=this._parse(t,i.format),e.createDecryptor(s,i).finalize(t.ciphertext)},_parse:function(e,t){return"string"==typeof e?t.parse(e,this):e}}),b=(t.kdf={}).OpenSSL={execute:function(e,t,s,i){i||(i=r.random(8));var a=d.create({keySize:t+s}).compute(e,i),n=r.create(a.words.slice(t),4*s);return a.sigBytes=4*t,m.create({key:a,iv:n,salt:i})}},v=s.PasswordBasedCipher=y.extend({cfg:y.cfg.extend({kdf:b}),encrypt:function(e,t,s,i){var r=(i=this.cfg.extend(i)).kdf.execute(s,e.keySize,e.ivSize);i.iv=r.iv;var a=y.encrypt.call(this,e,t,r.key,i);return a.mixIn(r),a},decrypt:function(e,t,s,i){i=this.cfg.extend(i),t=this._parse(t,i.format);var r=i.kdf.execute(s,e.keySize,e.ivSize,t.salt);return i.iv=r.iv,y.decrypt.call(this,e,t,r.key,i)}})}(),a.mode.CFB=function(){var e=a.lib.BlockCipherMode.extend();function t(e,t,s,i){var r=this._iv;if(r){var a=r.slice(0);this._iv=void 0}else a=this._prevBlock;i.encryptBlock(a,0);for(var n=0;n<s;n++)e[t+n]^=a[n]}return e.Encryptor=e.extend({processBlock:function(e,s){var i=this._cipher,r=i.blockSize;t.call(this,e,s,r,i),this._prevBlock=e.slice(s,s+r)}}),e.Decryptor=e.extend({processBlock:function(e,s){var i=this._cipher,r=i.blockSize,a=e.slice(s,s+r);t.call(this,e,s,r,i),this._prevBlock=a}}),e}(),a.mode.ECB=((s=a.lib.BlockCipherMode.extend()).Encryptor=s.extend({processBlock:function(e,t){this._cipher.encryptBlock(e,t)}}),s.Decryptor=s.extend({processBlock:function(e,t){this._cipher.decryptBlock(e,t)}}),s),a.pad.AnsiX923={pad:function(e,t){var s=e.sigBytes,i=4*t,r=i-s%i,a=s+r-1;e.clamp(),e.words[a>>>2]|=r<<24-a%4*8,e.sigBytes+=r},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},a.pad.Iso10126={pad:function(e,t){var s=4*t,i=s-e.sigBytes%s;e.concat(a.lib.WordArray.random(i-1)).concat(a.lib.WordArray.create([i<<24],1))},unpad:function(e){var t=255&e.words[e.sigBytes-1>>>2];e.sigBytes-=t}},a.pad.Iso97971={pad:function(e,t){e.concat(a.lib.WordArray.create([2147483648],1)),a.pad.ZeroPadding.pad(e,t)},unpad:function(e){a.pad.ZeroPadding.unpad(e),e.sigBytes--}},a.mode.OFB=(i=a.lib.BlockCipherMode.extend(),r=i.Encryptor=i.extend({processBlock:function(e,t){var s=this._cipher,i=s.blockSize,r=this._iv,a=this._keystream;r&&(a=this._keystream=r.slice(0),this._iv=void 0),s.encryptBlock(a,0);for(var n=0;n<i;n++)e[t+n]^=a[n]}}),i.Decryptor=r,i),a.pad.NoPadding={pad:function(){},unpad:function(){}},function(e){var t=a,s=t.lib.CipherParams,i=t.enc.Hex;t.format.Hex={stringify:function(e){return e.ciphertext.toString(i)},parse:function(e){var t=i.parse(e);return s.create({ciphertext:t})}}}(),function(){var e=a,t=e.lib.BlockCipher,s=e.algo,i=[],r=[],n=[],o=[],c=[],d=[],h=[],l=[],u=[],f=[];!function(){for(var e=[],t=0;t<256;t++)e[t]=t<128?t<<1:t<<1^283;var s=0,a=0;for(t=0;t<256;t++){var p=a^a<<1^a<<2^a<<3^a<<4;p=p>>>8^255&p^99,i[s]=p,r[p]=s;var m=e[s],g=e[m],y=e[g],b=257*e[p]^16843008*p;n[s]=b<<24|b>>>8,o[s]=b<<16|b>>>16,c[s]=b<<8|b>>>24,d[s]=b,b=16843009*y^65537*g^257*m^16843008*s,h[p]=b<<24|b>>>8,l[p]=b<<16|b>>>16,u[p]=b<<8|b>>>24,f[p]=b,s?(s=m^e[e[e[y^m]]],a^=e[e[a]]):s=a=1}}();var p=[0,1,2,4,8,16,32,64,128,27,54],m=s.AES=t.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var e=this._keyPriorReset=this._key,t=e.words,s=e.sigBytes/4,r=4*((this._nRounds=s+6)+1),a=this._keySchedule=[],n=0;n<r;n++)if(n<s)a[n]=t[n];else{var o=a[n-1];n%s?s>6&&n%s==4&&(o=i[o>>>24]<<24|i[o>>>16&255]<<16|i[o>>>8&255]<<8|i[255&o]):(o=i[(o=o<<8|o>>>24)>>>24]<<24|i[o>>>16&255]<<16|i[o>>>8&255]<<8|i[255&o],o^=p[n/s|0]<<24),a[n]=a[n-s]^o}for(var c=this._invKeySchedule=[],d=0;d<r;d++)n=r-d,o=d%4?a[n]:a[n-4],c[d]=d<4||n<=4?o:h[i[o>>>24]]^l[i[o>>>16&255]]^u[i[o>>>8&255]]^f[i[255&o]]}},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._keySchedule,n,o,c,d,i)},decryptBlock:function(e,t){var s=e[t+1];e[t+1]=e[t+3],e[t+3]=s,this._doCryptBlock(e,t,this._invKeySchedule,h,l,u,f,r),s=e[t+1],e[t+1]=e[t+3],e[t+3]=s},_doCryptBlock:function(e,t,s,i,r,a,n,o){for(var c=this._nRounds,d=e[t]^s[0],h=e[t+1]^s[1],l=e[t+2]^s[2],u=e[t+3]^s[3],f=4,p=1;p<c;p++){var m=i[d>>>24]^r[h>>>16&255]^a[l>>>8&255]^n[255&u]^s[f++],g=i[h>>>24]^r[l>>>16&255]^a[u>>>8&255]^n[255&d]^s[f++],y=i[l>>>24]^r[u>>>16&255]^a[d>>>8&255]^n[255&h]^s[f++],b=i[u>>>24]^r[d>>>16&255]^a[h>>>8&255]^n[255&l]^s[f++];d=m,h=g,l=y,u=b}m=(o[d>>>24]<<24|o[h>>>16&255]<<16|o[l>>>8&255]<<8|o[255&u])^s[f++],g=(o[h>>>24]<<24|o[l>>>16&255]<<16|o[u>>>8&255]<<8|o[255&d])^s[f++],y=(o[l>>>24]<<24|o[u>>>16&255]<<16|o[d>>>8&255]<<8|o[255&h])^s[f++],b=(o[u>>>24]<<24|o[d>>>16&255]<<16|o[h>>>8&255]<<8|o[255&l])^s[f++],e[t]=m,e[t+1]=g,e[t+2]=y,e[t+3]=b},keySize:8});e.AES=t._createHelper(m)}(),function(){var e=a,t=e.lib,s=t.WordArray,i=t.BlockCipher,r=e.algo,n=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],o=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],c=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],d=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],h=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],l=r.DES=i.extend({_doReset:function(){for(var e=this._key.words,t=[],s=0;s<56;s++){var i=n[s]-1;t[s]=e[i>>>5]>>>31-i%32&1}for(var r=this._subKeys=[],a=0;a<16;a++){var d=r[a]=[],h=c[a];for(s=0;s<24;s++)d[s/6|0]|=t[(o[s]-1+h)%28]<<31-s%6,d[4+(s/6|0)]|=t[28+(o[s+24]-1+h)%28]<<31-s%6;for(d[0]=d[0]<<1|d[0]>>>31,s=1;s<7;s++)d[s]=d[s]>>>4*(s-1)+3;d[7]=d[7]<<5|d[7]>>>27}var l=this._invSubKeys=[];for(s=0;s<16;s++)l[s]=r[15-s]},encryptBlock:function(e,t){this._doCryptBlock(e,t,this._subKeys)},decryptBlock:function(e,t){this._doCryptBlock(e,t,this._invSubKeys)},_doCryptBlock:function(e,t,s){this._lBlock=e[t],this._rBlock=e[t+1],u.call(this,4,252645135),u.call(this,16,65535),f.call(this,2,858993459),f.call(this,8,16711935),u.call(this,1,1431655765);for(var i=0;i<16;i++){for(var r=s[i],a=this._lBlock,n=this._rBlock,o=0,c=0;c<8;c++)o|=d[c][((n^r[c])&h[c])>>>0];this._lBlock=n,this._rBlock=a^o}var l=this._lBlock;this._lBlock=this._rBlock,this._rBlock=l,u.call(this,1,1431655765),f.call(this,8,16711935),f.call(this,2,858993459),u.call(this,16,65535),u.call(this,4,252645135),e[t]=this._lBlock,e[t+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});function u(e,t){var s=(this._lBlock>>>e^this._rBlock)&t;this._rBlock^=s,this._lBlock^=s<<e}function f(e,t){var s=(this._rBlock>>>e^this._lBlock)&t;this._lBlock^=s,this._rBlock^=s<<e}e.DES=i._createHelper(l);var p=r.TripleDES=i.extend({_doReset:function(){var e=this._key.words;this._des1=l.createEncryptor(s.create(e.slice(0,2))),this._des2=l.createEncryptor(s.create(e.slice(2,4))),this._des3=l.createEncryptor(s.create(e.slice(4,6)))},encryptBlock:function(e,t){this._des1.encryptBlock(e,t),this._des2.decryptBlock(e,t),this._des3.encryptBlock(e,t)},decryptBlock:function(e,t){this._des3.decryptBlock(e,t),this._des2.encryptBlock(e,t),this._des1.decryptBlock(e,t)},keySize:6,ivSize:2,blockSize:2});e.TripleDES=i._createHelper(p)}(),function(){var e=a,t=e.lib.StreamCipher,s=e.algo,i=s.RC4=t.extend({_doReset:function(){for(var e=this._key,t=e.words,s=e.sigBytes,i=this._S=[],r=0;r<256;r++)i[r]=r;r=0;for(var a=0;r<256;r++){var n=r%s,o=t[n>>>2]>>>24-n%4*8&255;a=(a+i[r]+o)%256;var c=i[r];i[r]=i[a],i[a]=c}this._i=this._j=0},_doProcessBlock:function(e,t){e[t]^=r.call(this)},keySize:8,ivSize:0});function r(){for(var e=this._S,t=this._i,s=this._j,i=0,r=0;r<4;r++){s=(s+e[t=(t+1)%256])%256;var a=e[t];e[t]=e[s],e[s]=a,i|=e[(e[t]+e[s])%256]<<24-8*r}return this._i=t,this._j=s,i}e.RC4=t._createHelper(i);var n=s.RC4Drop=i.extend({cfg:i.cfg.extend({drop:192}),_doReset:function(){i._doReset.call(this);for(var e=this.cfg.drop;e>0;e--)r.call(this)}});e.RC4Drop=t._createHelper(n)}(),
/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
a.mode.CTRGladman=function(){var e=a.lib.BlockCipherMode.extend();function t(e){if(255==(e>>24&255)){var t=e>>16&255,s=e>>8&255,i=255&e;255===t?(t=0,255===s?(s=0,255===i?i=0:++i):++s):++t,e=0,e+=t<<16,e+=s<<8,e+=i}else e+=1<<24;return e}var s=e.Encryptor=e.extend({processBlock:function(e,s){var i=this._cipher,r=i.blockSize,a=this._iv,n=this._counter;a&&(n=this._counter=a.slice(0),this._iv=void 0),function(e){0===(e[0]=t(e[0]))&&(e[1]=t(e[1]))}(n);var o=n.slice(0);i.encryptBlock(o,0);for(var c=0;c<r;c++)e[s+c]^=o[c]}});return e.Decryptor=s,e}(),function(){var e=a,t=e.lib.StreamCipher,s=e.algo,i=[],r=[],n=[],o=s.Rabbit=t.extend({_doReset:function(){for(var e=this._key.words,t=this.cfg.iv,s=0;s<4;s++)e[s]=16711935&(e[s]<<8|e[s]>>>24)|4278255360&(e[s]<<24|e[s]>>>8);var i=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],r=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];for(this._b=0,s=0;s<4;s++)c.call(this);for(s=0;s<8;s++)r[s]^=i[s+4&7];if(t){var a=t.words,n=a[0],o=a[1],d=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8),h=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),l=d>>>16|4294901760&h,u=h<<16|65535&d;for(r[0]^=d,r[1]^=l,r[2]^=h,r[3]^=u,r[4]^=d,r[5]^=l,r[6]^=h,r[7]^=u,s=0;s<4;s++)c.call(this)}},_doProcessBlock:function(e,t){var s=this._X;c.call(this),i[0]=s[0]^s[5]>>>16^s[3]<<16,i[1]=s[2]^s[7]>>>16^s[5]<<16,i[2]=s[4]^s[1]>>>16^s[7]<<16,i[3]=s[6]^s[3]>>>16^s[1]<<16;for(var r=0;r<4;r++)i[r]=16711935&(i[r]<<8|i[r]>>>24)|4278255360&(i[r]<<24|i[r]>>>8),e[t+r]^=i[r]},blockSize:4,ivSize:2});function c(){for(var e=this._X,t=this._C,s=0;s<8;s++)r[s]=t[s];for(t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<r[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<r[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<r[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<r[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<r[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<r[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<r[6]>>>0?1:0)|0,this._b=t[7]>>>0<r[7]>>>0?1:0,s=0;s<8;s++){var i=e[s]+t[s],a=65535&i,o=i>>>16,c=((a*a>>>17)+a*o>>>15)+o*o,d=((4294901760&i)*i|0)+((65535&i)*i|0);n[s]=c^d}e[0]=n[0]+(n[7]<<16|n[7]>>>16)+(n[6]<<16|n[6]>>>16)|0,e[1]=n[1]+(n[0]<<8|n[0]>>>24)+n[7]|0,e[2]=n[2]+(n[1]<<16|n[1]>>>16)+(n[0]<<16|n[0]>>>16)|0,e[3]=n[3]+(n[2]<<8|n[2]>>>24)+n[1]|0,e[4]=n[4]+(n[3]<<16|n[3]>>>16)+(n[2]<<16|n[2]>>>16)|0,e[5]=n[5]+(n[4]<<8|n[4]>>>24)+n[3]|0,e[6]=n[6]+(n[5]<<16|n[5]>>>16)+(n[4]<<16|n[4]>>>16)|0,e[7]=n[7]+(n[6]<<8|n[6]>>>24)+n[5]|0}e.Rabbit=t._createHelper(o)}(),a.mode.CTR=function(){var e=a.lib.BlockCipherMode.extend(),t=e.Encryptor=e.extend({processBlock:function(e,t){var s=this._cipher,i=s.blockSize,r=this._iv,a=this._counter;r&&(a=this._counter=r.slice(0),this._iv=void 0);var n=a.slice(0);s.encryptBlock(n,0),a[i-1]=a[i-1]+1|0;for(var o=0;o<i;o++)e[t+o]^=n[o]}});return e.Decryptor=t,e}(),function(){var e=a,t=e.lib.StreamCipher,s=e.algo,i=[],r=[],n=[],o=s.RabbitLegacy=t.extend({_doReset:function(){var e=this._key.words,t=this.cfg.iv,s=this._X=[e[0],e[3]<<16|e[2]>>>16,e[1],e[0]<<16|e[3]>>>16,e[2],e[1]<<16|e[0]>>>16,e[3],e[2]<<16|e[1]>>>16],i=this._C=[e[2]<<16|e[2]>>>16,4294901760&e[0]|65535&e[1],e[3]<<16|e[3]>>>16,4294901760&e[1]|65535&e[2],e[0]<<16|e[0]>>>16,4294901760&e[2]|65535&e[3],e[1]<<16|e[1]>>>16,4294901760&e[3]|65535&e[0]];this._b=0;for(var r=0;r<4;r++)c.call(this);for(r=0;r<8;r++)i[r]^=s[r+4&7];if(t){var a=t.words,n=a[0],o=a[1],d=16711935&(n<<8|n>>>24)|4278255360&(n<<24|n>>>8),h=16711935&(o<<8|o>>>24)|4278255360&(o<<24|o>>>8),l=d>>>16|4294901760&h,u=h<<16|65535&d;for(i[0]^=d,i[1]^=l,i[2]^=h,i[3]^=u,i[4]^=d,i[5]^=l,i[6]^=h,i[7]^=u,r=0;r<4;r++)c.call(this)}},_doProcessBlock:function(e,t){var s=this._X;c.call(this),i[0]=s[0]^s[5]>>>16^s[3]<<16,i[1]=s[2]^s[7]>>>16^s[5]<<16,i[2]=s[4]^s[1]>>>16^s[7]<<16,i[3]=s[6]^s[3]>>>16^s[1]<<16;for(var r=0;r<4;r++)i[r]=16711935&(i[r]<<8|i[r]>>>24)|4278255360&(i[r]<<24|i[r]>>>8),e[t+r]^=i[r]},blockSize:4,ivSize:2});function c(){for(var e=this._X,t=this._C,s=0;s<8;s++)r[s]=t[s];for(t[0]=t[0]+1295307597+this._b|0,t[1]=t[1]+3545052371+(t[0]>>>0<r[0]>>>0?1:0)|0,t[2]=t[2]+886263092+(t[1]>>>0<r[1]>>>0?1:0)|0,t[3]=t[3]+1295307597+(t[2]>>>0<r[2]>>>0?1:0)|0,t[4]=t[4]+3545052371+(t[3]>>>0<r[3]>>>0?1:0)|0,t[5]=t[5]+886263092+(t[4]>>>0<r[4]>>>0?1:0)|0,t[6]=t[6]+1295307597+(t[5]>>>0<r[5]>>>0?1:0)|0,t[7]=t[7]+3545052371+(t[6]>>>0<r[6]>>>0?1:0)|0,this._b=t[7]>>>0<r[7]>>>0?1:0,s=0;s<8;s++){var i=e[s]+t[s],a=65535&i,o=i>>>16,c=((a*a>>>17)+a*o>>>15)+o*o,d=((4294901760&i)*i|0)+((65535&i)*i|0);n[s]=c^d}e[0]=n[0]+(n[7]<<16|n[7]>>>16)+(n[6]<<16|n[6]>>>16)|0,e[1]=n[1]+(n[0]<<8|n[0]>>>24)+n[7]|0,e[2]=n[2]+(n[1]<<16|n[1]>>>16)+(n[0]<<16|n[0]>>>16)|0,e[3]=n[3]+(n[2]<<8|n[2]>>>24)+n[1]|0,e[4]=n[4]+(n[3]<<16|n[3]>>>16)+(n[2]<<16|n[2]>>>16)|0,e[5]=n[5]+(n[4]<<8|n[4]>>>24)+n[3]|0,e[6]=n[6]+(n[5]<<16|n[5]>>>16)+(n[4]<<16|n[4]>>>16)|0,e[7]=n[7]+(n[6]<<8|n[6]>>>24)+n[5]|0}e.RabbitLegacy=t._createHelper(o)}(),a.pad.ZeroPadding={pad:function(e,t){var s=4*t;e.clamp(),e.sigBytes+=s-(e.sigBytes%s||s)},unpad:function(e){for(var t=e.words,s=e.sigBytes-1;!(t[s>>>2]>>>24-s%4*8&255);)s--;e.sigBytes=s+1}},a},"object"==typeof s?t.exports=s=r():"function"==typeof define&&define.amd?define([],r):i.CryptoJS=r()},{}],246:[function(e,t,s){"use strict";var i=s;i.inherits=function(e,t){e.super_=t;var s=function(){};s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e},i.version="6.5.0",i.utils=e("./elliptic/utils"),i.curve=e("./elliptic/curve"),i.curves=e("./elliptic/curves"),i.ec=e("./elliptic/ec"),i.eddsa=e("./elliptic/eddsa")},{"./elliptic/curve":249,"./elliptic/curves":252,"./elliptic/ec":253,"./elliptic/eddsa":256,"./elliptic/utils":260}],247:[function(e,t,s){"use strict";var i=e("../../../../BN/bn"),r=e("../../elliptic").utils,a=r.getNAF,n=r.getJSF,o=r.assert;function c(e,t){this.type=e,this.p=new i(t.p,16),this.red=t.prime?i.red(t.prime):i.mont(this.p),this.zero=new i(0).toRed(this.red),this.one=new i(1).toRed(this.red),this.two=new i(2).toRed(this.red),this.n=t.n&&new i(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4);var s=this.n&&this.p.div(this.n);!s||s.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function d(e,t){this.curve=e,this.type=t,this.precomputed=null}t.exports=c,c.prototype.point=function(){throw new Error("Not implemented")},c.prototype.validate=function(){throw new Error("Not implemented")},c.prototype._fixedNafMul=function(e,t){o(e.precomputed);var s=e._getDoubles(),i=a(t,1),r=(1<<s.step+1)-(s.step%2==0?2:1);r/=3;for(var n=[],c=0;c<i.length;c+=s.step){var d=0;for(t=c+s.step-1;t>=c;t--)d=(d<<1)+i[t];n.push(d)}for(var h=this.jpoint(null,null,null),l=this.jpoint(null,null,null),u=r;u>0;u--){for(c=0;c<n.length;c++){(d=n[c])===u?l=l.mixedAdd(s.points[c]):d===-u&&(l=l.mixedAdd(s.points[c].neg()))}h=h.add(l)}return h.toP()},c.prototype._wnafMul=function(e,t){var s=4,i=e._getNAFPoints(s);s=i.wnd;for(var r=i.points,n=a(t,s),c=this.jpoint(null,null,null),d=n.length-1;d>=0;d--){for(t=0;d>=0&&0===n[d];d--)t++;if(d>=0&&t++,c=c.dblp(t),d<0)break;var h=n[d];o(0!==h),c="affine"===e.type?h>0?c.mixedAdd(r[h-1>>1]):c.mixedAdd(r[-h-1>>1].neg()):h>0?c.add(r[h-1>>1]):c.add(r[-h-1>>1].neg())}return"affine"===e.type?c.toP():c},c.prototype._wnafMulAdd=function(e,t,s,i,r){for(var o=this._wnafT1,c=this._wnafT2,d=this._wnafT3,h=0,l=0;l<i;l++){var u=(_=t[l])._getNAFPoints(e);o[l]=u.wnd,c[l]=u.points}for(l=i-1;l>=1;l-=2){var f=l-1,p=l;if(1===o[f]&&1===o[p]){var m=[t[f],null,null,t[p]];0===t[f].y.cmp(t[p].y)?(m[1]=t[f].add(t[p]),m[2]=t[f].toJ().mixedAdd(t[p].neg())):0===t[f].y.cmp(t[p].y.redNeg())?(m[1]=t[f].toJ().mixedAdd(t[p]),m[2]=t[f].add(t[p].neg())):(m[1]=t[f].toJ().mixedAdd(t[p]),m[2]=t[f].toJ().mixedAdd(t[p].neg()));var g=[-3,-1,-5,-7,0,7,5,1,3],y=n(s[f],s[p]);h=Math.max(y[0].length,h),d[f]=new Array(h),d[p]=new Array(h);for(var b=0;b<h;b++){var v=0|y[0][b],w=0|y[1][b];d[f][b]=g[3*(v+1)+(w+1)],d[p][b]=0,c[f]=m}}else d[f]=a(s[f],o[f]),d[p]=a(s[p],o[p]),h=Math.max(d[f].length,h),h=Math.max(d[p].length,h)}var S=this.jpoint(null,null,null),k=this._wnafT4;for(l=h;l>=0;l--){for(var T=0;l>=0;){var O=!0;for(b=0;b<i;b++)k[b]=0|d[b][l],0!==k[b]&&(O=!1);if(!O)break;T++,l--}if(l>=0&&T++,S=S.dblp(T),l<0)break;for(b=0;b<i;b++){var _,x=k[b];0!==x&&(x>0?_=c[b][x-1>>1]:x<0&&(_=c[b][-x-1>>1].neg()),S="affine"===_.type?S.mixedAdd(_):S.add(_))}}for(l=0;l<i;l++)c[l]=null;return r?S:S.toP()},c.BasePoint=d,d.prototype.eq=function(){throw new Error("Not implemented")},d.prototype.validate=function(){return this.curve.validate(this)},c.prototype.decodePoint=function(e,t){e=r.toArray(e,t);var s=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1==2*s)return 6===e[0]?o(e[e.length-1]%2==0):7===e[0]&&o(e[e.length-1]%2==1),this.point(e.slice(1,1+s),e.slice(1+s,1+2*s));if((2===e[0]||3===e[0])&&e.length-1===s)return this.pointFromX(e.slice(1,1+s),3===e[0]);throw new Error("Unknown point format")},d.prototype.encodeCompressed=function(e){return this.encode(e,!0)},d.prototype._encode=function(e){var t=this.curve.p.byteLength(),s=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(s):[4].concat(s,this.getY().toArray("be",t))},d.prototype.encode=function(e,t){return r.encode(this._encode(t),e)},d.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},d.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},d.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var s=[this],i=this,r=0;r<t;r+=e){for(var a=0;a<e;a++)i=i.dbl();s.push(i)}return{step:e,points:s}},d.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],s=(1<<e)-1,i=1===s?null:this.dbl(),r=1;r<s;r++)t[r]=t[r-1].add(i);return{wnd:e,points:t}},d.prototype._getBeta=function(){return null},d.prototype.dblp=function(e){for(var t=this,s=0;s<e;s++)t=t.dbl();return t}},{"../../../../BN/bn":244,"../../elliptic":246}],248:[function(e,t,s){"use strict";var i=e("../curve"),r=e("../../elliptic"),a=e("../../../../BN/bn"),n=r.inherits,o=i.base,c=r.utils.assert;function d(e){this.twisted=1!=(0|e.a),this.mOneA=this.twisted&&-1==(0|e.a),this.extended=this.mOneA,o.call(this,"edwards",e),this.a=new a(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new a(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new a(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),c(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|e.c)}function h(e,t,s,i,r){o.BasePoint.call(this,e,"projective"),null===t&&null===s&&null===i?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new a(t,16),this.y=new a(s,16),this.z=i?new a(i,16):this.curve.one,this.t=r&&new a(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}n(d,o),t.exports=d,d.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},d.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},d.prototype.jpoint=function(e,t,s,i){return this.point(e,t,s,i)},d.prototype.pointFromX=function(e,t){(e=new a(e,16)).red||(e=e.toRed(this.red));var s=e.redSqr(),i=this.c2.redSub(this.a.redMul(s)),r=this.one.redSub(this.c2.redMul(this.d).redMul(s)),n=i.redMul(r.redInvm()),o=n.redSqrt();if(0!==o.redSqr().redSub(n).cmp(this.zero))throw new Error("invalid point");var c=o.fromRed().isOdd();return(t&&!c||!t&&c)&&(o=o.redNeg()),this.point(e,o)},d.prototype.pointFromY=function(e,t){(e=new a(e,16)).red||(e=e.toRed(this.red));var s=e.redSqr(),i=s.redSub(this.one),r=s.redMul(this.d).redAdd(this.one),n=i.redMul(r.redInvm());if(0===n.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var o=n.redSqrt();if(0!==o.redSqr().redSub(n).cmp(this.zero))throw new Error("invalid point");return o.isOdd()!==t&&(o=o.redNeg()),this.point(o,e)},d.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),s=e.y.redSqr(),i=t.redMul(this.a).redAdd(s),r=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(s)));return 0===i.cmp(r)},n(h,o.BasePoint),d.prototype.pointFromJSON=function(e){return h.fromJSON(this,e)},d.prototype.point=function(e,t,s,i){return new h(this,e,t,s,i)},h.fromJSON=function(e,t){return new h(e,t[0],t[1],t[2])},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&0===this.y.cmp(this.z)},h.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),s=this.z.redSqr();s=s.redIAdd(s);var i=this.curve._mulA(e),r=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),a=i.redAdd(t),n=a.redSub(s),o=i.redSub(t),c=r.redMul(n),d=a.redMul(o),h=r.redMul(o),l=n.redMul(a);return this.curve.point(c,d,l,h)},h.prototype._projDbl=function(){var e,t,s,i=this.x.redAdd(this.y).redSqr(),r=this.x.redSqr(),a=this.y.redSqr();if(this.curve.twisted){var n=(d=this.curve._mulA(r)).redAdd(a);if(this.zOne)e=i.redSub(r).redSub(a).redMul(n.redSub(this.curve.two)),t=n.redMul(d.redSub(a)),s=n.redSqr().redSub(n).redSub(n);else{var o=this.z.redSqr(),c=n.redSub(o).redISub(o);e=i.redSub(r).redISub(a).redMul(c),t=n.redMul(d.redSub(a)),s=n.redMul(c)}}else{var d=r.redAdd(a);o=this.curve._mulC(this.c.redMul(this.z)).redSqr(),c=d.redSub(o).redSub(o);e=this.curve._mulC(i.redISub(d)).redMul(c),t=this.curve._mulC(d).redMul(r.redISub(a)),s=d.redMul(c)}return this.curve.point(e,t,s)},h.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},h.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),s=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),i=this.t.redMul(this.curve.dd).redMul(e.t),r=this.z.redMul(e.z.redAdd(e.z)),a=s.redSub(t),n=r.redSub(i),o=r.redAdd(i),c=s.redAdd(t),d=a.redMul(n),h=o.redMul(c),l=a.redMul(c),u=n.redMul(o);return this.curve.point(d,h,u,l)},h.prototype._projAdd=function(e){var t,s,i=this.z.redMul(e.z),r=i.redSqr(),a=this.x.redMul(e.x),n=this.y.redMul(e.y),o=this.curve.d.redMul(a).redMul(n),c=r.redSub(o),d=r.redAdd(o),h=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(a).redISub(n),l=i.redMul(c).redMul(h);return this.curve.twisted?(t=i.redMul(d).redMul(n.redSub(this.curve._mulA(a))),s=c.redMul(d)):(t=i.redMul(d).redMul(n.redSub(a)),s=this.curve._mulC(c).redMul(d)),this.curve.point(l,t,s)},h.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},h.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},h.prototype.mulAdd=function(e,t,s){return this.curve._wnafMulAdd(1,[this,t],[e,s],2,!1)},h.prototype.jmulAdd=function(e,t,s){return this.curve._wnafMulAdd(1,[this,t],[e,s],2,!0)},h.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},h.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},h.prototype.getX=function(){return this.normalize(),this.x.fromRed()},h.prototype.getY=function(){return this.normalize(),this.y.fromRed()},h.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},h.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var s=e.clone(),i=this.curve.redN.redMul(this.z);;){if(s.iadd(this.curve.n),s.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(i),0===this.x.cmp(t))return!0}return!1},h.prototype.toP=h.prototype.normalize,h.prototype.mixedAdd=h.prototype.add},{"../../../../BN/bn":244,"../../elliptic":246,"../curve":249}],249:[function(e,t,s){"use strict";var i=s;i.base=e("./base"),i.short=e("./short"),i.mont=e("./mont"),i.edwards=e("./edwards")},{"./base":247,"./edwards":248,"./mont":250,"./short":251}],250:[function(e,t,s){"use strict";var i=e("../curve"),r=e("../../../../BN/bn"),a=e("../../elliptic").inherits,n=i.base,o=e("../../elliptic").utils;function c(e){n.call(this,"mont",e),this.a=new r(e.a,16).toRed(this.red),this.b=new r(e.b,16).toRed(this.red),this.i4=new r(4).toRed(this.red).redInvm(),this.two=new r(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function d(e,t,s){n.BasePoint.call(this,e,"projective"),null===t&&null===s?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new r(t,16),this.z=new r(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}a(c,n),t.exports=c,c.prototype.validate=function(e){var t=e.normalize().x,s=t.redSqr(),i=s.redMul(t).redAdd(s.redMul(this.a)).redAdd(t);return 0===i.redSqrt().redSqr().cmp(i)},a(d,n.BasePoint),c.prototype.decodePoint=function(e,t){return this.point(o.toArray(e,t),1)},c.prototype.point=function(e,t){return new d(this,e,t)},c.prototype.pointFromJSON=function(e){return d.fromJSON(this,e)},d.prototype.precompute=function(){},d.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},d.fromJSON=function(e,t){return new d(e,t[0],t[1]||e.one)},d.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},d.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},d.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),s=e.redSub(t),i=e.redMul(t),r=s.redMul(t.redAdd(this.curve.a24.redMul(s)));return this.curve.point(i,r)},d.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},d.prototype.diffAdd=function(e,t){var s=this.x.redAdd(this.z),i=this.x.redSub(this.z),r=e.x.redAdd(e.z),a=e.x.redSub(e.z).redMul(s),n=r.redMul(i),o=t.z.redMul(a.redAdd(n).redSqr()),c=t.x.redMul(a.redISub(n).redSqr());return this.curve.point(o,c)},d.prototype.mul=function(e){for(var t=e.clone(),s=this,i=this.curve.point(null,null),r=[];0!==t.cmpn(0);t.iushrn(1))r.push(t.andln(1));for(var a=r.length-1;a>=0;a--)0===r[a]?(s=s.diffAdd(i,this),i=i.dbl()):(i=s.diffAdd(i,this),s=s.dbl());return i},d.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},d.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},d.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},d.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},d.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},{"../../../../BN/bn":244,"../../elliptic":246,"../curve":249}],251:[function(e,t,s){"use strict";var i=e("../curve"),r=e("../../elliptic"),a=e("../../../../BN/bn"),n=r.inherits,o=i.base,c=r.utils.assert;function d(e){o.call(this,"short",e),this.a=new a(e.a,16).toRed(this.red),this.b=new a(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function h(e,t,s,i){o.BasePoint.call(this,e,"affine"),null===t&&null===s?(this.x=null,this.y=null,this.inf=!0):(this.x=new a(t,16),this.y=new a(s,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function l(e,t,s,i){o.BasePoint.call(this,e,"jacobian"),null===t&&null===s&&null===i?(this.x=this.curve.one,this.y=this.curve.one,this.z=new a(0)):(this.x=new a(t,16),this.y=new a(s,16),this.z=new a(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}n(d,o),t.exports=d,d.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,s;if(e.beta)t=new a(e.beta,16).toRed(this.red);else{var i=this._getEndoRoots(this.p);t=(t=i[0].cmp(i[1])<0?i[0]:i[1]).toRed(this.red)}if(e.lambda)s=new a(e.lambda,16);else{var r=this._getEndoRoots(this.n);0===this.g.mul(r[0]).x.cmp(this.g.x.redMul(t))?s=r[0]:(s=r[1],c(0===this.g.mul(s).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:s,basis:e.basis?e.basis.map((function(e){return{a:new a(e.a,16),b:new a(e.b,16)}})):this._getEndoBasis(s)}}},d.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:a.mont(e),s=new a(2).toRed(t).redInvm(),i=s.redNeg(),r=new a(3).toRed(t).redNeg().redSqrt().redMul(s);return[i.redAdd(r).fromRed(),i.redSub(r).fromRed()]},d.prototype._getEndoBasis=function(e){for(var t,s,i,r,n,o,c,d,h,l=this.n.ushrn(Math.floor(this.n.bitLength()/2)),u=e,f=this.n.clone(),p=new a(1),m=new a(0),g=new a(0),y=new a(1),b=0;0!==u.cmpn(0);){var v=f.div(u);d=f.sub(v.mul(u)),h=g.sub(v.mul(p));var w=y.sub(v.mul(m));if(!i&&d.cmp(l)<0)t=c.neg(),s=p,i=d.neg(),r=h;else if(i&&2==++b)break;c=d,f=u,u=d,g=p,p=h,y=m,m=w}n=d.neg(),o=h;var S=i.sqr().add(r.sqr());return n.sqr().add(o.sqr()).cmp(S)>=0&&(n=t,o=s),i.negative&&(i=i.neg(),r=r.neg()),n.negative&&(n=n.neg(),o=o.neg()),[{a:i,b:r},{a:n,b:o}]},d.prototype._endoSplit=function(e){var t=this.endo.basis,s=t[0],i=t[1],r=i.b.mul(e).divRound(this.n),a=s.b.neg().mul(e).divRound(this.n),n=r.mul(s.a),o=a.mul(i.a),c=r.mul(s.b),d=a.mul(i.b);return{k1:e.sub(n).sub(o),k2:c.add(d).neg()}},d.prototype.pointFromX=function(e,t){(e=new a(e,16)).red||(e=e.toRed(this.red));var s=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),i=s.redSqrt();if(0!==i.redSqr().redSub(s).cmp(this.zero))throw new Error("invalid point");var r=i.fromRed().isOdd();return(t&&!r||!t&&r)&&(i=i.redNeg()),this.point(e,i)},d.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,s=e.y,i=this.a.redMul(t),r=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return 0===s.redSqr().redISub(r).cmpn(0)},d.prototype._endoWnafMulAdd=function(e,t,s){for(var i=this._endoWnafT1,r=this._endoWnafT2,a=0;a<e.length;a++){var n=this._endoSplit(t[a]),o=e[a],c=o._getBeta();n.k1.negative&&(n.k1.ineg(),o=o.neg(!0)),n.k2.negative&&(n.k2.ineg(),c=c.neg(!0)),i[2*a]=o,i[2*a+1]=c,r[2*a]=n.k1,r[2*a+1]=n.k2}for(var d=this._wnafMulAdd(1,i,r,2*a,s),h=0;h<2*a;h++)i[h]=null,r[h]=null;return d},n(h,o.BasePoint),d.prototype.point=function(e,t,s){return new h(this,e,t,s)},d.prototype.pointFromJSON=function(e,t){return h.fromJSON(this,e,t)},h.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var s=this.curve,i=function(e){return s.point(e.x.redMul(s.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(i)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(i)}}}return t}},h.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},h.fromJSON=function(e,t,s){"string"==typeof t&&(t=JSON.parse(t));var i=e.point(t[0],t[1],s);if(!t[2])return i;function r(t){return e.point(t[0],t[1],s)}var a=t[2];return i.precomputed={beta:null,doubles:a.doubles&&{step:a.doubles.step,points:[i].concat(a.doubles.points.map(r))},naf:a.naf&&{wnd:a.naf.wnd,points:[i].concat(a.naf.points.map(r))}},i},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return this.inf},h.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var s=t.redSqr().redISub(this.x).redISub(e.x),i=t.redMul(this.x.redSub(s)).redISub(this.y);return this.curve.point(s,i)},h.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,s=this.x.redSqr(),i=e.redInvm(),r=s.redAdd(s).redIAdd(s).redIAdd(t).redMul(i),a=r.redSqr().redISub(this.x.redAdd(this.x)),n=r.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,n)},h.prototype.getX=function(){return this.x.fromRed()},h.prototype.getY=function(){return this.y.fromRed()},h.prototype.mul=function(e){return e=new a(e,16),this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},h.prototype.mulAdd=function(e,t,s){var i=[this,t],r=[e,s];return this.curve.endo?this.curve._endoWnafMulAdd(i,r):this.curve._wnafMulAdd(1,i,r,2)},h.prototype.jmulAdd=function(e,t,s){var i=[this,t],r=[e,s];return this.curve.endo?this.curve._endoWnafMulAdd(i,r,!0):this.curve._wnafMulAdd(1,i,r,2,!0)},h.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},h.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var s=this.precomputed,i=function(e){return e.neg()};t.precomputed={naf:s.naf&&{wnd:s.naf.wnd,points:s.naf.points.map(i)},doubles:s.doubles&&{step:s.doubles.step,points:s.doubles.points.map(i)}}}return t},h.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},n(l,o.BasePoint),d.prototype.jpoint=function(e,t,s){return new l(this,e,t,s)},l.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),s=this.x.redMul(t),i=this.y.redMul(t).redMul(e);return this.curve.point(s,i)},l.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},l.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),s=this.z.redSqr(),i=this.x.redMul(t),r=e.x.redMul(s),a=this.y.redMul(t.redMul(e.z)),n=e.y.redMul(s.redMul(this.z)),o=i.redSub(r),c=a.redSub(n);if(0===o.cmpn(0))return 0!==c.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var d=o.redSqr(),h=d.redMul(o),l=i.redMul(d),u=c.redSqr().redIAdd(h).redISub(l).redISub(l),f=c.redMul(l.redISub(u)).redISub(a.redMul(h)),p=this.z.redMul(e.z).redMul(o);return this.curve.jpoint(u,f,p)},l.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),s=this.x,i=e.x.redMul(t),r=this.y,a=e.y.redMul(t).redMul(this.z),n=s.redSub(i),o=r.redSub(a);if(0===n.cmpn(0))return 0!==o.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=n.redSqr(),d=c.redMul(n),h=s.redMul(c),l=o.redSqr().redIAdd(d).redISub(h).redISub(h),u=o.redMul(h.redISub(l)).redISub(r.redMul(d)),f=this.z.redMul(n);return this.curve.jpoint(l,u,f)},l.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var t=this,s=0;s<e;s++)t=t.dbl();return t}var i=this.curve.a,r=this.curve.tinv,a=this.x,n=this.y,o=this.z,c=o.redSqr().redSqr(),d=n.redAdd(n);for(s=0;s<e;s++){var h=a.redSqr(),l=d.redSqr(),u=l.redSqr(),f=h.redAdd(h).redIAdd(h).redIAdd(i.redMul(c)),p=a.redMul(l),m=f.redSqr().redISub(p.redAdd(p)),g=p.redISub(m),y=f.redMul(g);y=y.redIAdd(y).redISub(u);var b=d.redMul(o);s+1<e&&(c=c.redMul(u)),a=m,o=b,d=y}return this.curve.jpoint(a,d.redMul(r),o)},l.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},l.prototype._zeroDbl=function(){var e,t,s;if(this.zOne){var i=this.x.redSqr(),r=this.y.redSqr(),a=r.redSqr(),n=this.x.redAdd(r).redSqr().redISub(i).redISub(a);n=n.redIAdd(n);var o=i.redAdd(i).redIAdd(i),c=o.redSqr().redISub(n).redISub(n),d=a.redIAdd(a);d=(d=d.redIAdd(d)).redIAdd(d),e=c,t=o.redMul(n.redISub(c)).redISub(d),s=this.y.redAdd(this.y)}else{var h=this.x.redSqr(),l=this.y.redSqr(),u=l.redSqr(),f=this.x.redAdd(l).redSqr().redISub(h).redISub(u);f=f.redIAdd(f);var p=h.redAdd(h).redIAdd(h),m=p.redSqr(),g=u.redIAdd(u);g=(g=g.redIAdd(g)).redIAdd(g),e=m.redISub(f).redISub(f),t=p.redMul(f.redISub(e)).redISub(g),s=(s=this.y.redMul(this.z)).redIAdd(s)}return this.curve.jpoint(e,t,s)},l.prototype._threeDbl=function(){var e,t,s;if(this.zOne){var i=this.x.redSqr(),r=this.y.redSqr(),a=r.redSqr(),n=this.x.redAdd(r).redSqr().redISub(i).redISub(a);n=n.redIAdd(n);var o=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a),c=o.redSqr().redISub(n).redISub(n);e=c;var d=a.redIAdd(a);d=(d=d.redIAdd(d)).redIAdd(d),t=o.redMul(n.redISub(c)).redISub(d),s=this.y.redAdd(this.y)}else{var h=this.z.redSqr(),l=this.y.redSqr(),u=this.x.redMul(l),f=this.x.redSub(h).redMul(this.x.redAdd(h));f=f.redAdd(f).redIAdd(f);var p=u.redIAdd(u),m=(p=p.redIAdd(p)).redAdd(p);e=f.redSqr().redISub(m),s=this.y.redAdd(this.z).redSqr().redISub(l).redISub(h);var g=l.redSqr();g=(g=(g=g.redIAdd(g)).redIAdd(g)).redIAdd(g),t=f.redMul(p.redISub(e)).redISub(g)}return this.curve.jpoint(e,t,s)},l.prototype._dbl=function(){var e=this.curve.a,t=this.x,s=this.y,i=this.z,r=i.redSqr().redSqr(),a=t.redSqr(),n=s.redSqr(),o=a.redAdd(a).redIAdd(a).redIAdd(e.redMul(r)),c=t.redAdd(t),d=(c=c.redIAdd(c)).redMul(n),h=o.redSqr().redISub(d.redAdd(d)),l=d.redISub(h),u=n.redSqr();u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var f=o.redMul(l).redISub(u),p=s.redAdd(s).redMul(i);return this.curve.jpoint(h,f,p)},l.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),s=this.z.redSqr(),i=t.redSqr(),r=e.redAdd(e).redIAdd(e),a=r.redSqr(),n=this.x.redAdd(t).redSqr().redISub(e).redISub(i),o=(n=(n=(n=n.redIAdd(n)).redAdd(n).redIAdd(n)).redISub(a)).redSqr(),c=i.redIAdd(i);c=(c=(c=c.redIAdd(c)).redIAdd(c)).redIAdd(c);var d=r.redIAdd(n).redSqr().redISub(a).redISub(o).redISub(c),h=t.redMul(d);h=(h=h.redIAdd(h)).redIAdd(h);var l=this.x.redMul(o).redISub(h);l=(l=l.redIAdd(l)).redIAdd(l);var u=this.y.redMul(d.redMul(c.redISub(d)).redISub(n.redMul(o)));u=(u=(u=u.redIAdd(u)).redIAdd(u)).redIAdd(u);var f=this.z.redAdd(n).redSqr().redISub(s).redISub(o);return this.curve.jpoint(l,u,f)},l.prototype.mul=function(e,t){return e=new a(e,t),this.curve._wnafMul(this,e)},l.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),s=e.z.redSqr();if(0!==this.x.redMul(s).redISub(e.x.redMul(t)).cmpn(0))return!1;var i=t.redMul(this.z),r=s.redMul(e.z);return 0===this.y.redMul(r).redISub(e.y.redMul(i)).cmpn(0)},l.prototype.eqXToP=function(e){var t=this.z.redSqr(),s=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(s))return!0;for(var i=e.clone(),r=this.curve.redN.redMul(t);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(s.redIAdd(r),0===this.x.cmp(s))return!0}return!1},l.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},l.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},{"../../../../BN/bn":244,"../../elliptic":246,"../curve":249}],252:[function(e,t,s){"use strict";var i,r=s,a=e("../elliptic"),n=a.utils.assert;function o(e){"short"===e.type?this.curve=new a.curve.short(e):"edwards"===e.type?this.curve=new a.curve.edwards(e):this.curve=new a.curve.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,n(this.g.validate(),"Invalid curve"),n(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function c(e,t){Object.defineProperty(r,e,{configurable:!0,enumerable:!0,get:function(){var s=new o(t);return Object.defineProperty(r,e,{configurable:!0,enumerable:!0,value:s}),s}})}r.PresetCurve=o,c("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:"SHA256",gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),c("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:"SHA256",gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),c("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:"SHA256",gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),c("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:"SHA384",gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),c("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:"SHA512",gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),c("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:"SHA256",gRed:!1,g:["9"]}),c("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:"SHA256",gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{i=e("./precomputed/secp256k1")}catch(e){i=void 0}c("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:"SHA256",beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",i]})},{"../elliptic":246,"./precomputed/secp256k1":259}],253:[function(e,t,s){"use strict";var i=e("../../../../BN/bn"),r=e("../../hmac-drbg/hmac-drbg"),a=e("../../elliptic"),n=a.utils.assert,o=e("./key"),c=e("./signature");function d(e){if(!(this instanceof d))return new d(e);"string"==typeof e&&(n(a.curves.hasOwnProperty(e),"Unknown curve "+e),e=a.curves[e]),e instanceof a.curves.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}t.exports=d,d.prototype.keyPair=function(e){return new o(this,e)},d.prototype.keyFromPrivate=function(e,t){return o.fromPrivate(this,e,t)},d.prototype.keyFromPublic=function(e,t){return o.fromPublic(this,e,t)},d.prototype.genKeyPair=function(e){e||(e={});for(var t=new r({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||null,entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),s=this.n.byteLength(),a=this.n.sub(new i(2));;){var n=new i(t.generate(s));if(!(n.cmp(a)>0))return n.iaddn(1),this.keyFromPrivate(n)}},d.prototype._truncateToN=function(e,t){var s=8*e.byteLength()-this.n.bitLength();return s>0&&(e=e.ushrn(s)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},d.prototype.sign=function(e,t,s,a){"object"==typeof s&&(a=s,s=null),a||(a={}),t=this.keyFromPrivate(t,s),e=this._truncateToN(new i(e,16));for(var n=this.n.byteLength(),o=t.getPrivate().toArray("be",n),d=e.toArray("be",n),h=new r({hash:this.hash,entropy:a.extraEntropy?o.concat(a.extraEntropy):o,nonce:d,pers:a.pers,persEnc:a.persEnc||"utf8"}),l=this.n.sub(new i(1)),u=0;;u++){var f=a.k?a.k(u):new i(h.generate(this.n.byteLength()));if(!((f=this._truncateToN(f,!0)).cmpn(1)<=0||f.cmp(l)>=0)){var p=this.g.mul(f);if(!p.isInfinity()){var m=p.getX(),g=m.umod(this.n);if(0!==g.cmpn(0)){var y=f.invm(this.n).mul(g.mul(t.getPrivate()).iadd(e));if(0!==(y=y.umod(this.n)).cmpn(0)){var b=(p.getY().isOdd()?1:0)|(0!==m.cmp(g)?2:0);return a.canonical&&y.cmp(this.nh)>0&&(y=this.n.sub(y),b^=1),new c({r:g,s:y,recoveryParam:b})}}}}}},d.prototype.verify=function(e,t,s,r){e=this._truncateToN(new i(e,16)),s=this.keyFromPublic(s,r);var a=(t=new c(t,"hex")).r,n=t.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return!1;if(n.cmpn(1)<0||n.cmp(this.n)>=0)return!1;var o,d=n.invm(this.n),h=d.mul(e).umod(this.n),l=d.mul(a).umod(this.n);return this.curve._maxwellTrick?!(o=this.g.jmulAdd(h,s.getPublic(),l)).isInfinity()&&o.eqXToP(a):!(o=this.g.mulAdd(h,s.getPublic(),l)).isInfinity()&&0===o.getX().umod(this.n).cmp(a)},d.prototype.recoverPubKey=function(e,t,s,r){n((3&s)===s,"The recovery param is more than two bits"),t=new c(t,r);var a=this.n,o=new i(e),d=t.r,h=t.s,l=1&s,u=s>>1;if(d.cmp(this.curve.p.umod(this.curve.n))>=0&&u)throw new Error("Unable to find sencond key candinate");d=u?this.curve.pointFromX(d.add(this.curve.n),l):this.curve.pointFromX(d,l);var f=t.r.invm(a),p=a.sub(o).mul(f).umod(a),m=h.mul(f).umod(a);return this.g.mulAdd(p,d,m)},d.prototype.getKeyRecoveryParam=function(e,t,s,i){if(null!==(t=new c(t,i)).recoveryParam)return t.recoveryParam;for(var r=0;r<4;r++){var a;try{a=this.recoverPubKey(e,t,r)}catch(e){continue}if(a.eq(s))return r}throw new Error("Unable to find valid recovery factor")}},{"../../../../BN/bn":244,"../../elliptic":246,"../../hmac-drbg/hmac-drbg":261,"./key":254,"./signature":255}],254:[function(e,t,s){"use strict";var i=e("../../../../BN/bn"),r=e("../../elliptic").utils.assert;function a(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}t.exports=a,a.fromPublic=function(e,t,s){return t instanceof a?t:new a(e,{pub:t,pubEnc:s})},a.fromPrivate=function(e,t,s){return t instanceof a?t:new a(e,{priv:t,privEnc:s})},a.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},a.prototype.getPublic=function(e,t){return"string"==typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},a.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},a.prototype._importPrivate=function(e,t){this.priv=new i(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},a.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?r(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||r(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},a.prototype.derive=function(e){return e.mul(this.priv).getX()},a.prototype.sign=function(e,t,s){return this.ec.sign(e,this,t,s)},a.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},a.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},{"../../../../BN/bn":244,"../../elliptic":246}],255:[function(e,t,s){"use strict";var i=e("../../../../BN/bn"),r=e("../../elliptic").utils.assert;t.exports=function e(t,s){if(t instanceof e)return t;r(t.r&&t.s,"Signature without r or s"),this.r=new i(t.r,16),this.s=new i(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam}},{"../../../../BN/bn":244,"../../elliptic":246}],256:[function(e,t,s){"use strict";var i=e("../curves"),r=e("../utils"),a=r.assert,n=r.parseBytes,o=e("./key"),c=e("./signature");const d=e("../../../../BN/bn.js"),{byteArrayToWordArray:h}=e("../../../../../base/functions/encode"),l=e("../../../../crypto-js/crypto-js");function u(e){if(a("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof u))return new u(e);var t=i[e].curve;this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8)}t.exports=u,u.prototype.sign=function(e,t){e=n(e);var s=this.keyFromSecret(t),i=this.hashInt(s.secret(),e),r=this.g.mul(i),a=this.encodePoint(r),o=this.hashInt(a,s.pubBytes(),e);o=o.mul(s.priv());var c=i.add(o).umod(this.curve.n);return this.makeSignature({R:r,S:c,Rencoded:a})},u.prototype.signModified=function(e,t){e=n(e);var s=this.keyFromSecret(t);const i=new d(s.secret(),16,"le"),r=this.encodePoint(this.g.mul(i)),a=128&r[31];var o=this.hashInt(s.secret(),e),c=this.g.mul(o),h=this.encodePoint(c);let l=this.hashInt(h,r,e);l=l.mul(i);var u=o.add(l).umod(this.curve.n),f=u.toArray("le",32);return f[31]|=a,this.makeSignature({R:c,S:u,Rencoded:h,Sencoded:f})},u.prototype.verify=function(e,t,s){e=n(e),t=this.makeSignature(t);var i=this.keyFromPublic(s),r=this.hashInt(t.Rencoded(),i.pubBytes(),e),a=this.g.mul(t.S());return t.R().add(i.pub().mul(r)).eq(a)},u.prototype.hashInt=function(){let e=Array.from(arguments).reduce(((e,t)=>e.concat(t)));e=h(e);const t=l.SHA512(e).toString(l.enc.Hex);return r.intFromLE(t).umod(this.curve.n)},u.prototype.keyFromPublic=function(e){return o.fromPublic(this,e)},u.prototype.keyFromSecret=function(e){return o.fromSecret(this,e)},u.prototype.makeSignature=function(e){return e instanceof c?e:new c(this,e)},u.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},u.prototype.decodePoint=function(e){var t=(e=r.parseBytes(e)).length-1,s=e.slice(0,t).concat(-129&e[t]),i=0!=(128&e[t]),a=r.intFromLE(s);return this.curve.pointFromY(a,i)},u.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},u.prototype.decodeInt=function(e){return r.intFromLE(e)},u.prototype.isPoint=function(e){return e instanceof this.pointClass}},{"../../../../../base/functions/encode":132,"../../../../BN/bn.js":244,"../../../../crypto-js/crypto-js":245,"../curves":252,"../utils":260,"./key":257,"./signature":258}],257:[function(e,t,s){"use strict";var i=e("../utils"),r=i.assert,a=i.parseBytes,n=i.cachedProperty;function o(e,t){this.eddsa=e,this._secret=a(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=a(t.pub)}o.fromPublic=function(e,t){return t instanceof o?t:new o(e,{pub:t})},o.fromSecret=function(e,t){return t instanceof o?t:new o(e,{secret:t})},o.prototype.secret=function(){return this._secret},n(o,"pubBytes",(function(){return this.eddsa.encodePoint(this.pub())})),n(o,"pub",(function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())})),n(o,"privBytes",(function(){var e=this.eddsa,t=this.hash(),s=e.encodingLength-1,i=t.slice(0,e.encodingLength);return i[0]&=248,i[s]&=127,i[s]|=64,i})),n(o,"priv",(function(){return this.eddsa.decodeInt(this.privBytes())})),n(o,"hash",(function(){return this.eddsa.hash().update(this.secret()).digest()})),n(o,"messagePrefix",(function(){return this.hash().slice(this.eddsa.encodingLength)})),o.prototype.sign=function(e){return r(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},o.prototype.signModified=function(e){return r(this._secret,"KeyPair can only verify"),this.eddsa.signModified(e,this)},o.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},o.prototype.getSecret=function(e){return r(this._secret,"KeyPair is public only"),i.encode(this.secret(),e)},o.prototype.getPublic=function(e){return i.encode(this.pubBytes(),e)},t.exports=o},{"../utils":260}],258:[function(e,t,s){"use strict";var i=e("../../../../BN/bn"),r=e("../utils"),a=r.assert,n=r.cachedProperty,o=r.parseBytes;function c(e,t){this.eddsa=e,"object"!=typeof t&&(t=o(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),a(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof i&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}n(c,"S",(function(){return this.eddsa.decodeInt(this.Sencoded())})),n(c,"R",(function(){return this.eddsa.decodePoint(this.Rencoded())})),n(c,"Rencoded",(function(){return this.eddsa.encodePoint(this.R())})),n(c,"Sencoded",(function(){return this.eddsa.encodeInt(this.S())})),c.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},c.prototype.toHex=function(){return r.encode(this.toBytes(),"hex").toUpperCase()},t.exports=c},{"../../../../BN/bn":244,"../utils":260}],259:[function(e,t,s){t.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},{}],260:[function(e,t,s){"use strict";var i=s,r=e("../../../BN/bn");function a(e,t){var s=[];return t>0&&s.push(e>>>24),t>1&&s.push(e>>>16&255),t>2&&s.push(e>>>8&255),t>3&&s.push(255&e),s}function n(e){return 1===e.length?"0"+e:e}function o(e){for(var t="",s=0;s<e.length;s++)t+=n(e[s].toString(16));return t}i.assert=function(e,t){if(!e)throw new Error(t)},i.getNAF=function(e,t){for(var s=[],i=1<<t+1,r=e.clone();r.cmpn(1)>=0;){var a;if(r.isOdd()){var n=r.andln(i-1);a=n>(i>>1)-1?(i>>1)-n:n,r.isubn(a)}else a=0;s.push(a);for(var o=0!==r.cmpn(0)&&0===r.andln(i-1)?t+1:1,c=1;c<o;c++)s.push(0);r.iushrn(o)}return s},i.getJSF=function(e,t){var s=[[],[]];e=e.clone(),t=t.clone();for(var i=0,r=0;e.cmpn(-i)>0||t.cmpn(-r)>0;){var a,n,o,c=e.andln(3)+i&3,d=t.andln(3)+r&3;if(3===c&&(c=-1),3===d&&(d=-1),0==(1&c))a=0;else a=3!==(o=e.andln(7)+i&7)&&5!==o||2!==d?c:-c;if(s[0].push(a),0==(1&d))n=0;else n=3!==(o=t.andln(7)+r&7)&&5!==o||2!==c?d:-d;s[1].push(n),2*i===a+1&&(i=1-i),2*r===n+1&&(r=1-r),e.iushrn(1),t.iushrn(1)}return s},i.cachedProperty=function(e,t,s){var i="_"+t;e.prototype[t]=function(){return void 0!==this[i]?this[i]:this[i]=s.call(this)}},i.parseBytes=function(e){return"string"==typeof e?i.toArray(e,"hex"):e},i.intFromLE=function(e){return new r(e,"hex","le")},i.wordArrayToBuffer=function(e){let t;if(!e.hasOwnProperty("sigBytes")||!e.hasOwnProperty("words"))throw Error("Argument not a wordArray");t=e.sigBytes,e=e.words;const s=[];let i=[],r=0;for(;t>0;)i=a(e[r],Math.min(4,t)),t-=i.length,s.push(i),r++;return[].concat.apply([],s)},i.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var s=[];if("string"!=typeof e){for(var i=0;i<e.length;i++)s[i]=0|e[i];return s}if("hex"===t){(e=e.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(e="0"+e);for(i=0;i<e.length;i+=2)s.push(parseInt(e[i]+e[i+1],16))}else for(i=0;i<e.length;i++){var r=e.charCodeAt(i),a=r>>8,n=255&r;a?s.push(a,n):s.push(n)}return s},i.zero2=n,i.toHex=o,i.encode=function(e,t){return"hex"===t?o(e):e}},{"../../../BN/bn":244}],261:[function(e,t,s){"use strict";var i=e("../../../crypto-js/crypto-js"),r=e("../elliptic/utils").assert,a=e("../elliptic/utils"),{byteArrayToWordArray:n}=e("../../../../base/functions/encode");const o=i.enc.Utf8.parse(""),c=i.enc.Utf8.parse("\0");function d(e){if(!(this instanceof d))return new d(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.slice(3,6),this.minEntropy=e.minEntropy||192,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=e.entropy,s=e.nonce;r(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,s,[])}t.exports=d,d.prototype._init=function(e,t,s){var r=e.concat(t).concat(s);this.K=new i.lib.WordArray.init,this.V=new i.lib.WordArray.init;this.V.words=Array(this.outLen/32).fill(16843009),this.V.sigBytes=32,this._update(r),this._reseed=1,this.reseedInterval=281474976710656},d.prototype._hmac=function(){return new i.lib.WordArray.init},d.prototype._update=function(e){var t=this._hmac();t.concat(this.V),t.concat(c),e&&t.concat(n(e)),this.K=i["Hmac"+this.hash](t,this.K),this.V=i["Hmac"+this.hash](this.V,this.K),e&&((t=this._hmac()).concat(this.V),t.concat(o),t.concat(n(e)),this.K=i["Hmac"+this.hash](t,this.K),this.V=i["Hmac"+this.hash](this.V,this.K))},d.prototype.reseed=function(e,t,s,i){"string"!=typeof t&&(s,s=t,t=null),r(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(s||[])),this._reseed=1},d.prototype.generate=function(e,t,s,r){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof t&&(s,s=t,t=null),s&&(s=i.enc.Utf8.parse(s),this._update(s));for(var n=new i.lib.WordArray.init;n.sigBytes<e;)this.V=i["Hmac"+this.hash](this.V,this.K),n.concat(this.V);return this._update(s),this._reseed++,a.wordArrayToBuffer(n)}},{"../../../../base/functions/encode":132,"../../../crypto-js/crypto-js":245,"../elliptic/utils":260}],262:[function(e,t,s){"use strict";var i=e("../node-fetch/index");function r(e){const t=function(t,s){return"string"==typeof t&&"//"===t.slice(0,2)?e("https:"+t,s):e(t,s)};return t.http=e.http,t.https=e.https,t}t.exports=function(e){return e&&e.Promise&&(i.Promise=e.Promise),{fetch:r(i),Headers:i.Headers,Request:i.Request,Response:i.Response}}},{"../node-fetch/index":263}],263:[function(e,t,s){(function(i,r){"use strict";Object.defineProperty(s,"__esModule",{value:!0});const a=Symbol("buffer"),n=Symbol("type");class o{constructor(){this[n]="";const e=arguments[0],t=arguments[1],s=[];if(e){const t=e,i=Number(t.length);for(let e=0;e<i;e++){const i=t[e];let n;n=i instanceof r?i:ArrayBuffer.isView(i)?r.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?r.from(i):i instanceof o?i[a]:r.from("string"==typeof i?i:String(i)),s.push(n)}}this[a]=r.concat(s);let i=t&&void 0!==t.type&&String(t.type).toLowerCase();i&&!/[^\u0020-\u007E]/.test(i)&&(this[n]=i)}get size(){return this[a].length}get type(){return this[n]}slice(){const e=this.size,t=arguments[0],s=arguments[1];let i,r;i=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),r=void 0===s?e:s<0?Math.max(e+s,0):Math.min(s,e);const n=Math.max(r-i,0),c=this[a].slice(i,i+n),d=new o([],{type:arguments[2]});return d[a]=c,d}}function c(e,t,s){Error.call(this,e),this.message=e,this.type=t,s&&(this.code=this.errno=s.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(o.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(o.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c.prototype.name="FetchError";const d=e("stream");const h=e("stream").PassThrough,l=Symbol("Body internals");function u(e){var t=this,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=s.size;let a=void 0===i?0:i;var n=s.timeout;let h=void 0===n?0:n;null==e?e=null:"string"==typeof e||p(e)||e instanceof o||r.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||e instanceof d||(e=String(e)),this[l]={body:e,disturbed:!1,error:null},this.size=a,this.timeout=h,e instanceof d&&e.on("error",(function(e){t[l].error=new c(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e)}))}function f(){var e=this;if(this[l].disturbed)return u.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[l].disturbed=!0,this[l].error)return u.Promise.reject(this[l].error);if(null===this.body)return u.Promise.resolve(r.alloc(0));if("string"==typeof this.body)return u.Promise.resolve(r.from(this.body));if(this.body instanceof o)return u.Promise.resolve(this.body[a]);if(r.isBuffer(this.body))return u.Promise.resolve(this.body);if("[object ArrayBuffer]"===Object.prototype.toString.call(this.body))return u.Promise.resolve(r.from(this.body));if(!(this.body instanceof d))return u.Promise.resolve(r.alloc(0));let t=[],s=0,i=!1;return new u.Promise((function(a,n){let o;e.timeout&&(o=setTimeout((function(){i=!0,n(new c(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),e.body.on("error",(function(t){n(new c(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),e.body.on("data",(function(r){if(!i&&null!==r){if(e.size&&s+r.length>e.size)return i=!0,void n(new c(`content size at ${e.url} over limit: ${e.size}`,"max-size"));s+=r.length,t.push(r)}})),e.body.on("end",(function(){if(!i){clearTimeout(o);try{a(r.concat(t))}catch(t){n(new c(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function p(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function m(e){let t,s,i=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return i instanceof d&&"function"!=typeof i.getBoundary&&(t=new h,s=new h,i.pipe(t),i.pipe(s),e[l].body=t,i=s),i}function g(e){const t=e.body;return null===t?0:"string"==typeof t?r.byteLength(t):p(t)?r.byteLength(String(t)):t instanceof o?t.size:r.isBuffer(t)?t.length:"[object ArrayBuffer]"===Object.prototype.toString.call(t)?t.byteLength:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}u.prototype={get body(){return this[l].body},get bodyUsed(){return this[l].disturbed},arrayBuffer(){return f.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return f.call(this).then((function(t){return Object.assign(new o([],{type:e.toLowerCase()}),{[a]:t})}))},json(){var e=this;return f.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return u.Promise.reject(new c(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return f.call(this).then((function(e){return e.toString()}))},buffer(){return f.call(this)},textConverted(){var e=this;return f.call(this).then((function(t){return function(e,t){if("function"!=typeof convert)throw new Error("The package `encoding` must be installed to use the textConverted() function");const s=t.get("content-type");let i,r,a="utf-8";s&&(i=/charset=([^;]*)/i.exec(s));r=e.slice(0,1024).toString(),!i&&r&&(i=/<meta.+?charset=(['"])(.+?)\1/i.exec(r));!i&&r&&(i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r),i&&(i=/charset=(.*)/i.exec(i.pop())));!i&&r&&(i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r));i&&(a=i.pop(),"gb2312"!==a&&"gbk"!==a||(a="gb18030"));return convert(e,"UTF-8",a).toString()}(t,e.headers)}))}},Object.defineProperties(u.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),u.mixIn=function(e){for(const t of Object.getOwnPropertyNames(u.prototype))if(!(t in e)){const s=Object.getOwnPropertyDescriptor(u.prototype,t);Object.defineProperty(e,t,s)}},u.Promise=i.Promise;const y=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,b=/[^\t\x20-\x7e\x80-\xff]/;function v(e){if(e=`${e}`,y.test(e))throw new TypeError(`${e} is not a legal HTTP header name`)}function w(e){if(e=`${e}`,b.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function S(e,t){t=t.toLowerCase();for(const s in e)if(s.toLowerCase()===t)return s}const k=Symbol("map");class T{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[k]=Object.create(null),e instanceof T){const t=e.raw(),s=Object.keys(t);for(const e of s)for(const s of t[e])this.append(e,s)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const s=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");s.push(Array.from(t))}for(const e of s){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const s=e[t];this.append(t,s)}}}}get(e){v(e=`${e}`);const t=S(this[k],e);return void 0===t?null:this[k][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,s=O(this),i=0;for(;i<s.length;){var r=s[i];const a=r[0],n=r[1];e.call(t,n,a,this),s=O(this),i++}}set(e,t){t=`${t}`,v(e=`${e}`),w(t);const s=S(this[k],e);this[k][void 0!==s?s:e]=[t]}append(e,t){t=`${t}`,v(e=`${e}`),w(t);const s=S(this[k],e);void 0!==s?this[k][s].push(t):this[k][e]=[t]}has(e){return v(e=`${e}`),void 0!==S(this[k],e)}delete(e){v(e=`${e}`);const t=S(this[k],e);void 0!==t&&delete this[k][t]}raw(){return this[k]}keys(){return x(this,"key")}values(){return x(this,"value")}[Symbol.iterator](){return x(this,"key+value")}}function O(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const s=Object.keys(e[k]).sort();return s.map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[k][t].join(", ")}:function(t){return[t.toLowerCase(),e[k][t].join(", ")]})}T.prototype.entries=T.prototype[Symbol.iterator],Object.defineProperty(T.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(T.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const _=Symbol("internal");function x(e,t){const s=Object.create(M);return s[_]={target:e,kind:t,index:0},s}const M=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==M)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[_];const t=e.target,s=e.kind,i=e.index,r=O(t,s);return i>=r.length?{value:void 0,done:!0}:(this[_].index=i+1,{value:r[i],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function I(e){const t=Object.assign({__proto__:null},e[k]),s=S(e[k],"Host");return void 0!==s&&(t[s]=t[s][0]),t}Object.defineProperty(M,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const C=e("http").STATUS_CODES,P=Symbol("Response internals");class A{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};u.call(this,e,t);const s=t.status||200;this[P]={url:t.url,status:s,statusText:t.statusText||C[s],headers:new T(t.headers)}}get url(){return this[P].url}get status(){return this[P].status}get ok(){return this[P].status>=200&&this[P].status<300}get statusText(){return this[P].statusText}get headers(){return this[P].headers}clone(){return new A(m(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok})}}u.mixIn(A.prototype),Object.defineProperties(A.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(A.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});var N=e("url");const V=N.format,B=N.parse,E=Symbol("Request internals");function L(e){return"object"==typeof e&&"object"==typeof e[E]}class R{constructor(e){let t,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};L(e)?t=B(e.url):(t=e&&e.href?B(e.href):B(`${e}`),e={});let i=s.method||e.method||"GET";if(i=i.toUpperCase(),(null!=s.body||L(e)&&null!==e.body)&&("GET"===i||"HEAD"===i))throw new TypeError("Request with GET/HEAD method cannot have body");let a=null!=s.body?s.body:L(e)&&null!==e.body?m(e):null;u.call(this,a,{timeout:s.timeout||e.timeout||0,size:s.size||e.size||0});const n=new T(s.headers||e.headers||{});if(null!=s.body){const e=function(e){const t=e.body;return null===t?null:"string"==typeof t?"text/plain;charset=UTF-8":p(t)?"application/x-www-form-urlencoded;charset=UTF-8":t instanceof o?t.type||null:r.isBuffer(t)||"[object ArrayBuffer]"===Object.prototype.toString.call(t)?null:"function"==typeof t.getBoundary?`multipart/form-data;boundary=${t.getBoundary()}`:null}(this);null===e||n.has("Content-Type")||n.append("Content-Type",e)}this[E]={method:i,redirect:s.redirect||e.redirect||"follow",headers:n,parsedURL:t},this.follow=void 0!==s.follow?s.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==s.compress?s.compress:void 0===e.compress||e.compress,this.counter=s.counter||e.counter||0,this.agent=s.agent||e.agent}get method(){return this[E].method}get url(){return V(this[E].parsedURL)}get headers(){return this[E].headers}get redirect(){return this[E].redirect}clone(){return new R(this)}}u.mixIn(R.prototype),Object.defineProperty(R.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(R.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0}});const D=e("http"),F=e("https");const G=e("stream").PassThrough;const q=e("url").resolve,H=e("zlib");function j(e,t){if(!j.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return u.Promise=j.Promise,new j.Promise((function(s,i){const n=new R(e,t),d=function(e){const t=e[E].parsedURL,s=new T(e[E].headers);if(s.has("Accept")||s.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");let i=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(i="0"),null!=e.body){const t=g(e);"number"==typeof t&&(i=String(t))}return i&&s.set("Content-Length",i),s.has("User-Agent")||s.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&s.set("Accept-Encoding","gzip,deflate"),s.has("Connection")||e.agent||s.set("Connection","close"),Object.assign({},t,{method:e.method,headers:I(s),agent:e.agent})}(n),h=(0,("https:"===d.protocol?F:D).request)(d);let l;function u(){h.abort(),clearTimeout(l)}n.timeout&&h.once("socket",(function(e){l=setTimeout((function(){i(new c(`network timeout at: ${n.url}`,"request-timeout")),u()}),n.timeout)})),h.on("error",(function(e){i(new c(`request to ${n.url} failed, reason: ${e.message}`,"system",e)),u()})),h.on("response",(function(e){clearTimeout(l);const t=function(e){const t=new T;for(const s of Object.keys(e))if(!y.test(s))if(Array.isArray(e[s]))for(const i of e[s])b.test(i)||(void 0===t[k][s]?t[k][s]=[i]:t[k][s].push(i));else b.test(e[s])||(t[k][s]=[e[s]]);return t}(e.headers);if(j.isRedirect(e.statusCode)){const r=t.get("Location"),a=null===r?null:q(n.url,r);switch(n.redirect){case"error":return i(new c(`redirect mode is set to error: ${n.url}`,"no-redirect")),void u();case"manual":null!==a&&t.set("Location",a);break;case"follow":if(null===a)break;if(n.counter>=n.follow)return i(new c(`maximum redirect reached at: ${n.url}`,"max-redirect")),void u();const r={headers:new T(n.headers),follow:n.follow,counter:n.counter+1,agent:n.agent,compress:n.compress,method:n.method,body:n.body};return 303!==e.statusCode&&n.body&&null===g(n)?(i(new c("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void u()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==n.method)||(r.method="GET",r.body=void 0,r.headers.delete("content-length")),s(j(new R(a,r))),void u())}}let r=e.pipe(new G);const a={url:n.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:n.size,timeout:n.timeout},o=t.get("Content-Encoding");if(!n.compress||"HEAD"===n.method||null===o||204===e.statusCode||304===e.statusCode)return void s(new A(r,a));const d={flush:H.Z_SYNC_FLUSH,finishFlush:H.Z_SYNC_FLUSH};if("gzip"==o||"x-gzip"==o)return r=r.pipe(H.createGunzip(d)),void s(new A(r,a));if("deflate"!=o&&"x-deflate"!=o)s(new A(r,a));else{e.pipe(new G).once("data",(function(e){r=8==(15&e[0])?r.pipe(H.createInflate()):r.pipe(H.createInflateRaw()),s(new A(r,a))}))}})),function(e,t){const s=t.body;null===s?e.end():"string"==typeof s?(e.write(s),e.end()):p(s)?(e.write(r.from(String(s))),e.end()):s instanceof o?(e.write(s[a]),e.end()):r.isBuffer(s)?(e.write(s),e.end()):"[object ArrayBuffer]"===Object.prototype.toString.call(s)?(e.write(r.from(s)),e.end()):s.pipe(e)}(h,n)}))}j.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},j.default=j,j.Promise=i.Promise,j.http=D,j.https=F,t.exports=s=j,s.Headers=T,s.Request=R,s.Response=A,s.FetchError=c}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{},e("buffer").Buffer)},{buffer:65,http:109,https:70,stream:108,url:115,zlib:64}],264:[function(e,t,s){(function(s){
/*!
 * RSA library for Node.js
 *
 * Author: rzcoder
 * License MIT
 */
var i=e("./libs/rsa.js"),r=e("./utils")._,a=e("./schemes/schemes.js"),n=e("./formats/formats.js");t.exports=function(){var e={browser:["md5","ripemd160","sha1","sha256","sha512"]},t="pkcs1",o="pkcs1",c={private:"pkcs1-private-pem","private-der":"pkcs1-private-der",public:"pkcs8-public-pem","public-der":"pkcs8-public-der"};function d(e,a,n){if(!(this instanceof d))return new d(e,a,n);r.isObject(a)&&(n=a,a=void 0),this.$options={signingScheme:o,signingSchemeOptions:{hash:"sha256",saltLength:null},encryptionScheme:t,encryptionSchemeOptions:{hash:"sha1",label:null},environment:"browser",rsaUtils:this},this.keyPair=new i.Key,this.$cache={},s.isBuffer(e)||r.isString(e)?this.importKey(e,a):r.isObject(e)&&this.generateKeyPair(e.b,e.e),this.setOptions(n)}return d.prototype.setOptions=function(s){if((s=s||{}).environment&&(this.$options.environment=s.environment),s.signingScheme){if(r.isString(s.signingScheme)){var i=s.signingScheme.toLowerCase().split("-");1==i.length?e.node.indexOf(i[0])>-1?(this.$options.signingSchemeOptions={hash:i[0]},this.$options.signingScheme=o):(this.$options.signingScheme=i[0],this.$options.signingSchemeOptions={hash:null}):(this.$options.signingSchemeOptions={hash:i[1]},this.$options.signingScheme=i[0])}else r.isObject(s.signingScheme)&&(this.$options.signingScheme=s.signingScheme.scheme||o,this.$options.signingSchemeOptions=r.omit(s.signingScheme,"scheme"));if(!a.isSignature(this.$options.signingScheme))throw Error("Unsupported signing scheme");if(this.$options.signingSchemeOptions.hash&&-1===e[this.$options.environment].indexOf(this.$options.signingSchemeOptions.hash))throw Error("Unsupported hashing algorithm for "+this.$options.environment+" environment")}if(s.encryptionScheme){if(r.isString(s.encryptionScheme)?(this.$options.encryptionScheme=s.encryptionScheme.toLowerCase(),this.$options.encryptionSchemeOptions={}):r.isObject(s.encryptionScheme)&&(this.$options.encryptionScheme=s.encryptionScheme.scheme||t,this.$options.encryptionSchemeOptions=r.omit(s.encryptionScheme,"scheme")),!a.isEncryption(this.$options.encryptionScheme))throw Error("Unsupported encryption scheme");if(this.$options.encryptionSchemeOptions.hash&&-1===e[this.$options.environment].indexOf(this.$options.encryptionSchemeOptions.hash))throw Error("Unsupported hashing algorithm for "+this.$options.environment+" environment")}this.keyPair.setOptions(this.$options)},d.prototype.importKey=function(e,t){if(!e)throw Error("Empty key given");if(t&&(t=c[t]||t),!n.detectAndImport(this.keyPair,e,t)&&void 0===t)throw Error("Key format must be specified");return this.$cache={},this},d.prototype.isPrivate=function(){return this.keyPair.isPrivate()},d.prototype.isPublic=function(e){return this.keyPair.isPublic(e)},d.prototype.isEmpty=function(e){return!(this.keyPair.n||this.keyPair.e||this.keyPair.d)},d.prototype.sign=function(e,t,s){if(!this.isPrivate())throw Error("This is not private key");var i=this.keyPair.sign(this.$getDataForEncrypt(e,s));return t&&"buffer"!=t&&(i=i.toString(t)),i},d.prototype.$getDataForEncrypt=function(e,t){if(r.isString(e)||r.isNumber(e))return s.from(""+e,t||"utf8");if(s.isBuffer(e))return e;if(r.isObject(e))return s.from(JSON.stringify(e));throw Error("Unexpected data type")},d}()}).call(this,e("buffer").Buffer)},{"./formats/formats.js":271,"./libs/rsa.js":275,"./schemes/schemes.js":277,"./utils":278,buffer:65}],265:[function(e,t,s){t.exports={newInvalidAsn1Error:function(e){var t=new Error;return t.name="InvalidAsn1Error",t.message=e||"",t}}},{}],266:[function(e,t,s){var i=e("./errors"),r=e("./types"),a=e("./reader");for(var n in t.exports={Reader:a},r)r.hasOwnProperty(n)&&(t.exports[n]=r[n]);for(var o in i)i.hasOwnProperty(o)&&(t.exports[o]=i[o])},{"./errors":265,"./reader":267,"./types":268}],267:[function(e,t,s){(function(s){var i=e("assert"),r=e("./types"),a=e("./errors").newInvalidAsn1Error;function n(e){if(!e||!s.isBuffer(e))throw new TypeError("data must be a node Buffer");this._buf=e,this._size=e.length,this._len=0,this._offset=0}Object.defineProperty(n.prototype,"length",{enumerable:!0,get:function(){return this._len}}),Object.defineProperty(n.prototype,"offset",{enumerable:!0,get:function(){return this._offset}}),Object.defineProperty(n.prototype,"remain",{get:function(){return this._size-this._offset}}),Object.defineProperty(n.prototype,"buffer",{get:function(){return this._buf.slice(this._offset)}}),n.prototype.readByte=function(e){if(this._size-this._offset<1)return null;var t=255&this._buf[this._offset];return e||(this._offset+=1),t},n.prototype.peek=function(){return this.readByte(!0)},n.prototype.readLength=function(e){if(void 0===e&&(e=this._offset),e>=this._size)return null;var t=255&this._buf[e++];if(null===t)return null;if(128==(128&t)){if(0===(t&=127))throw a("Indefinite length not supported");if(t>4)throw a("encoding too long");if(this._size-e<t)return null;this._len=0;for(var s=0;s<t;s++)this._len=(this._len<<8)+(255&this._buf[e++])}else this._len=t;return e},n.prototype.readSequence=function(e){var t=this.peek();if(null===t)return null;if(void 0!==e&&e!==t)throw a("Expected 0x"+e.toString(16)+": got 0x"+t.toString(16));var s=this.readLength(this._offset+1);return null===s?null:(this._offset=s,t)},n.prototype.readInt=function(){return this._readTag(r.Integer)},n.prototype.readBoolean=function(){return 0!==this._readTag(r.Boolean)},n.prototype.readEnumeration=function(){return this._readTag(r.Enumeration)},n.prototype.readString=function(e,t){e||(e=r.OctetString);var i=this.peek();if(null===i)return null;if(i!==e)throw a("Expected 0x"+e.toString(16)+": got 0x"+i.toString(16));var n=this.readLength(this._offset+1);if(null===n)return null;if(this.length>this._size-n)return null;if(this._offset=n,0===this.length)return t?s.alloc(0):"";var o=this._buf.slice(this._offset,this._offset+this.length);return this._offset+=this.length,t?o:o.toString("utf8")},n.prototype.readOID=function(e){e||(e=r.OID);var t=this.readString(e,!0);if(null===t)return null;for(var s=[],i=0,a=0;a<t.length;a++){var n=255&t[a];i<<=7,i+=127&n,0==(128&n)&&(s.push(i),i=0)}return i=s.shift(),s.unshift(i%40),s.unshift(i/40>>0),s.join(".")},n.prototype._readTag=function(e){i.ok(void 0!==e);var t=this.peek();if(null===t)return null;if(t!==e)throw a("Expected 0x"+e.toString(16)+": got 0x"+t.toString(16));var s=this.readLength(this._offset+1);if(null===s)return null;if(this.length>4)throw a("Integer too long: "+this.length);if(this.length>this._size-s)return null;this._offset=s;for(var r=this._buf[this._offset],n=0,o=0;o<this.length;o++)n<<=8,n|=255&this._buf[this._offset++];return 128==(128&r)&&4!==o&&(n-=1<<8*o),n>>0},t.exports=n}).call(this,e("buffer").Buffer)},{"./errors":265,"./types":268,assert:57,buffer:65}],268:[function(e,t,s){t.exports={EOC:0,Boolean:1,Integer:2,BitString:3,OctetString:4,Null:5,OID:6,ObjectDescriptor:7,External:8,Real:9,Enumeration:10,PDV:11,Utf8String:12,RelativeOID:13,Sequence:16,Set:17,NumericString:18,PrintableString:19,T61String:20,VideotexString:21,IA5String:22,UTCTime:23,GeneralizedTime:24,GraphicString:25,VisibleString:26,GeneralString:28,UniversalString:29,CharacterString:30,BMPString:31,Constructor:32,Context:128}},{}],269:[function(e,t,s){var i=e("./ber/index");t.exports={Ber:i,BerReader:i.Reader}},{"./ber/index":266}],270:[function(e,t,s){e("../utils")._,e("../utils");t.exports={privateExport:function(e,t){return{n:e.n.toBuffer(),e:e.e,d:e.d.toBuffer(),p:e.p.toBuffer(),q:e.q.toBuffer(),dmp1:e.dmp1.toBuffer(),dmq1:e.dmq1.toBuffer(),coeff:e.coeff.toBuffer()}},privateImport:function(e,t,s){if(!(t.n&&t.e&&t.d&&t.p&&t.q&&t.dmp1&&t.dmq1&&t.coeff))throw Error("Invalid key data");e.setPrivate(t.n,t.e,t.d,t.p,t.q,t.dmp1,t.dmq1,t.coeff)},publicExport:function(e,t){return{n:e.n.toBuffer(),e:e.e}},publicImport:function(e,t,s){if(!t.n||!t.e)throw Error("Invalid key data");e.setPublic(t.n,t.e)},autoImport:function(e,s){return!(!s.n||!s.e)&&(s.d&&s.p&&s.q&&s.dmp1&&s.dmq1&&s.coeff?(t.exports.privateImport(e,s),!0):(t.exports.publicImport(e,s),!0))}}},{"../utils":278}],271:[function(e,t,s){e("../utils")._;t.exports={pkcs1:e("./pkcs1"),pkcs8:e("./pkcs8"),components:e("./components"),detectAndImport:function(e,s,i){if(void 0===i){for(var r in t.exports)if("function"==typeof t.exports[r].autoImport&&t.exports[r].autoImport(e,s))return!0}else if(i){var a=formatParse(i);if(!t.exports[a.scheme])throw Error("Unsupported key format");"private"===a.keyType?t.exports[a.scheme].privateImport(e,s,a.keyOpt):t.exports[a.scheme].publicImport(e,s,a.keyOpt)}return!1}}},{"../utils":278,"./components":270,"./pkcs1":272,"./pkcs8":273}],272:[function(e,t,s){(function(s){var i=e("../asn1/index").Ber,r=e("../utils")._,a=e("../utils");const n="-----BEGIN RSA PRIVATE KEY-----",o="-----END RSA PRIVATE KEY-----",c="-----BEGIN RSA PUBLIC KEY-----",d="-----END RSA PUBLIC KEY-----";t.exports={privateExport:function(e,t){t=t||{};var s=e.n.toBuffer(),r=e.d.toBuffer(),c=e.p.toBuffer(),d=e.q.toBuffer(),h=e.dmp1.toBuffer(),l=e.dmq1.toBuffer(),u=e.coeff.toBuffer(),f=s.length+r.length+c.length+d.length+h.length+l.length+u.length+512,p=new i.Writer({size:f});return p.startSequence(),p.writeInt(0),p.writeBuffer(s,2),p.writeInt(e.e),p.writeBuffer(r,2),p.writeBuffer(c,2),p.writeBuffer(d,2),p.writeBuffer(h,2),p.writeBuffer(l,2),p.writeBuffer(u,2),p.endSequence(),"der"===t.type?p.buffer:n+"\n"+a.linebrk(p.buffer.toString("base64"),64)+"\n"+o},privateImport:function(e,t,c){var d;if("der"!==(c=c||{}).type){if(s.isBuffer(t)&&(t=t.toString("utf8")),!r.isString(t))throw Error("Unsupported key format");var h=a.trimSurroundingText(t,n,o).replace(/\s+|\n\r|\n|\r$/gm,"");d=s.from(h,"base64")}else{if(!s.isBuffer(t))throw Error("Unsupported key format");d=t}var l=new i.Reader(d);l.readSequence(),l.readString(2,!0),e.setPrivate(l.readString(2,!0),l.readString(2,!0),l.readString(2,!0),l.readString(2,!0),l.readString(2,!0),l.readString(2,!0),l.readString(2,!0),l.readString(2,!0))},publicExport:function(e,t){t=t||{};var s=e.n.toBuffer(),r=s.length+512,n=new i.Writer({size:r});return n.startSequence(),n.writeBuffer(s,2),n.writeInt(e.e),n.endSequence(),"der"===t.type?n.buffer:c+"\n"+a.linebrk(n.buffer.toString("base64"),64)+"\n"+d},publicImport:function(e,t,n){var o;if("der"!==(n=n||{}).type){if(s.isBuffer(t)&&(t=t.toString("utf8")),r.isString(t)){var h=a.trimSurroundingText(t,c,d).replace(/\s+|\n\r|\n|\r$/gm,"");o=s.from(h,"base64")}}else{if(!s.isBuffer(t))throw Error("Unsupported key format");o=t}var l=new i.Reader(o);l.readSequence(),e.setPublic(l.readString(2,!0),l.readString(2,!0))},autoImport:function(e,s){return/^[\S\s]*-----BEGIN RSA PRIVATE KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END RSA PRIVATE KEY-----[\S\s]*$/g.test(s)?(t.exports.privateImport(e,s),!0):!!/^[\S\s]*-----BEGIN RSA PUBLIC KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END RSA PUBLIC KEY-----[\S\s]*$/g.test(s)&&(t.exports.publicImport(e,s),!0)}}}).call(this,e("buffer").Buffer)},{"../asn1/index":269,"../utils":278,buffer:65}],273:[function(e,t,s){(function(s){var i=e("../asn1/index").Ber,r=e("../utils")._,a="1.2.840.113549.1.1.1",n=e("../utils");const o="-----BEGIN PRIVATE KEY-----",c="-----END PRIVATE KEY-----",d="-----BEGIN PUBLIC KEY-----",h="-----END PUBLIC KEY-----";t.exports={privateExport:function(e,t){t=t||{};var s=e.n.toBuffer(),r=e.d.toBuffer(),d=e.p.toBuffer(),h=e.q.toBuffer(),l=e.dmp1.toBuffer(),u=e.dmq1.toBuffer(),f=e.coeff.toBuffer(),p=s.length+r.length+d.length+h.length+l.length+u.length+f.length+512,m=new i.Writer({size:p});m.startSequence(),m.writeInt(0),m.writeBuffer(s,2),m.writeInt(e.e),m.writeBuffer(r,2),m.writeBuffer(d,2),m.writeBuffer(h,2),m.writeBuffer(l,2),m.writeBuffer(u,2),m.writeBuffer(f,2),m.endSequence();var g=new i.Writer({size:p});return g.startSequence(),g.writeInt(0),g.startSequence(),g.writeOID(a),g.writeNull(),g.endSequence(),g.writeBuffer(m.buffer,4),g.endSequence(),"der"===t.type?g.buffer:o+"\n"+n.linebrk(g.buffer.toString("base64"),64)+"\n"+c},privateImport:function(e,t,d){var h;if("der"!==(d=d||{}).type){if(s.isBuffer(t)&&(t=t.toString("utf8")),!r.isString(t))throw Error("Unsupported key format");var l=n.trimSurroundingText(t,o,c).replace("-----END PRIVATE KEY-----","").replace(/\s+|\n\r|\n|\r$/gm,"");h=s.from(l,"base64")}else{if(!s.isBuffer(t))throw Error("Unsupported key format");h=t}var u=new i.Reader(h);if(u.readSequence(),u.readInt(0),new i.Reader(u.readString(48,!0)).readOID(6,!0)!==a)throw Error("Invalid Public key format");var f=new i.Reader(u.readString(4,!0));f.readSequence(),f.readString(2,!0),e.setPrivate(f.readString(2,!0),f.readString(2,!0),f.readString(2,!0),f.readString(2,!0),f.readString(2,!0),f.readString(2,!0),f.readString(2,!0),f.readString(2,!0))},publicExport:function(e,t){t=t||{};var s=e.n.toBuffer(),r=s.length+512,o=new i.Writer({size:r});o.writeByte(0),o.startSequence(),o.writeBuffer(s,2),o.writeInt(e.e),o.endSequence();var c=new i.Writer({size:r});return c.startSequence(),c.startSequence(),c.writeOID(a),c.writeNull(),c.endSequence(),c.writeBuffer(o.buffer,3),c.endSequence(),"der"===t.type?c.buffer:d+"\n"+n.linebrk(c.buffer.toString("base64"),64)+"\n"+h},publicImport:function(e,t,o){var c;if("der"!==(o=o||{}).type){if(s.isBuffer(t)&&(t=t.toString("utf8")),r.isString(t)){var l=n.trimSurroundingText(t,d,h).replace(/\s+|\n\r|\n|\r$/gm,"");c=s.from(l,"base64")}}else{if(!s.isBuffer(t))throw Error("Unsupported key format");c=t}var u=new i.Reader(c);if(u.readSequence(),new i.Reader(u.readString(48,!0)).readOID(6,!0)!==a)throw Error("Invalid Public key format");var f=new i.Reader(u.readString(3,!0));f.readByte(),f.readSequence(),e.setPublic(f.readString(2,!0),f.readString(2,!0))},autoImport:function(e,s){return/^[\S\s]*-----BEGIN PRIVATE KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END PRIVATE KEY-----[\S\s]*$/g.test(s)?(t.exports.privateImport(e,s),!0):!!/^[\S\s]*-----BEGIN PUBLIC KEY-----\s*(?=(([A-Za-z0-9+/=]+\s*)+))\1-----END PUBLIC KEY-----[\S\s]*$/g.test(s)&&(t.exports.publicImport(e,s),!0)}}}).call(this,e("buffer").Buffer)},{"../asn1/index":269,"../utils":278,buffer:65}],274:[function(e,t,s){(function(s){var i=e("../utils")._;function r(e,t){null!=e&&("number"==typeof e?this.fromNumber(e,t):s.isBuffer(e)?this.fromBuffer(e):null==t&&"string"!=typeof e?this.fromByteArray(e):this.fromString(e,t))}function a(){return new r(null)}r.prototype.am=function(e,t,s,i,r,a){for(var n=16383&t,o=t>>14;--a>=0;){var c=16383&this[e],d=this[e++]>>14,h=o*c+d*n;r=((c=n*c+((16383&h)<<14)+s[i]+r)>>28)+(h>>14)+o*d,s[i++]=268435455&c}return r},r.prototype.DB=28,r.prototype.DM=268435455,r.prototype.DV=1<<28;r.prototype.FV=Math.pow(2,52),r.prototype.F1=24,r.prototype.F2=4;var n,o,c=new Array;for(n="0".charCodeAt(0),o=0;o<=9;++o)c[n++]=o;for(n="a".charCodeAt(0),o=10;o<36;++o)c[n++]=o;for(n="A".charCodeAt(0),o=10;o<36;++o)c[n++]=o;function d(e){return"0123456789abcdefghijklmnopqrstuvwxyz".charAt(e)}function h(e,t){var s=c[e.charCodeAt(t)];return null==s?-1:s}function l(e){var t=a();return t.fromInt(e),t}function u(e){var t,s=1;return 0!=(t=e>>>16)&&(e=t,s+=16),0!=(t=e>>8)&&(e=t,s+=8),0!=(t=e>>4)&&(e=t,s+=4),0!=(t=e>>2)&&(e=t,s+=2),0!=(t=e>>1)&&(e=t,s+=1),s}function f(e){this.m=e}function p(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}function m(e,t){return e&t}function g(e,t){return e|t}function y(e,t){return e^t}function b(e){if(0===e)return-1;var t=0;return 0==(65535&e)&&(e>>=16,t+=16),0==(255&e)&&(e>>=8,t+=8),0==(15&e)&&(e>>=4,t+=4),0==(3&e)&&(e>>=2,t+=2),0==(1&e)&&++t,t}function v(){}function w(e){return e}function S(e){this.r2=a(),this.q3=a(),r.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e),this.m=e}f.prototype.convert=function(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e},f.prototype.revert=function(e){return e},f.prototype.reduce=function(e){e.divRemTo(this.m,null,e)},f.prototype.mulTo=function(e,t,s){e.multiplyTo(t,s),this.reduce(s)},f.prototype.sqrTo=function(e,t){e.squareTo(t),this.reduce(t)},p.prototype.convert=function(e){var t=a();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(r.ZERO)>0&&this.m.subTo(t,t),t},p.prototype.revert=function(e){var t=a();return e.copyTo(t),this.reduce(t),t},p.prototype.reduce=function(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(var t=0;t<this.m.t;++t){var s=32767&e[t],i=s*this.mpl+((s*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(e[s=t+this.m.t]+=this.m.am(0,i,e,t,0,this.m.t);e[s]>=e.DV;)e[s]-=e.DV,e[++s]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)},p.prototype.mulTo=function(e,t,s){e.multiplyTo(t,s),this.reduce(s)},p.prototype.sqrTo=function(e,t){e.squareTo(t),this.reduce(t)},v.prototype.convert=w,v.prototype.revert=w,v.prototype.mulTo=function(e,t,s){e.multiplyTo(t,s)},v.prototype.sqrTo=function(e,t){e.squareTo(t)},S.prototype.convert=function(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;var t=a();return e.copyTo(t),this.reduce(t),t},S.prototype.revert=function(e){return e},S.prototype.reduce=function(e){for(e.drShiftTo(this.m.t-1,this.r2),e.t>this.m.t+1&&(e.t=this.m.t+1,e.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);e.compareTo(this.r2)<0;)e.dAddOffset(1,this.m.t+1);for(e.subTo(this.r2,e);e.compareTo(this.m)>=0;)e.subTo(this.m,e)},S.prototype.mulTo=function(e,t,s){e.multiplyTo(t,s),this.reduce(s)},S.prototype.sqrTo=function(e,t){e.squareTo(t),this.reduce(t)},r.prototype.copyTo=function(e){for(var t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s},r.prototype.fromInt=function(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+DV:this.t=0},r.prototype.fromString=function(e,t,s){var i;switch(t){case 2:i=1;break;case 4:i=2;break;case 8:i=3;break;case 16:i=4;break;case 32:i=5;break;case 256:i=8;break;default:return void this.fromRadix(e,t)}this.t=0,this.s=0;for(var a=e.length,n=!1,o=0;--a>=0;){var c=8==i?255&e[a]:h(e,a);c<0?"-"==e.charAt(a)&&(n=!0):(n=!1,0===o?this[this.t++]=c:o+i>this.DB?(this[this.t-1]|=(c&(1<<this.DB-o)-1)<<o,this[this.t++]=c>>this.DB-o):this[this.t-1]|=c<<o,(o+=i)>=this.DB&&(o-=this.DB))}s||8!=i||0==(128&e[0])||(this.s=-1,o>0&&(this[this.t-1]|=(1<<this.DB-o)-1<<o)),this.clamp(),n&&r.ZERO.subTo(this,this)},r.prototype.fromByteArray=function(e,t){this.fromString(e,256,t)},r.prototype.fromBuffer=function(e){this.fromString(e,256,!0)},r.prototype.clamp=function(){for(var e=this.s&this.DM;this.t>0&&this[this.t-1]==e;)--this.t},r.prototype.dlShiftTo=function(e,t){var s;for(s=this.t-1;s>=0;--s)t[s+e]=this[s];for(s=e-1;s>=0;--s)t[s]=0;t.t=this.t+e,t.s=this.s},r.prototype.drShiftTo=function(e,t){for(var s=e;s<this.t;++s)t[s-e]=this[s];t.t=Math.max(this.t-e,0),t.s=this.s},r.prototype.lShiftTo=function(e,t){var s,i=e%this.DB,r=this.DB-i,a=(1<<r)-1,n=Math.floor(e/this.DB),o=this.s<<i&this.DM;for(s=this.t-1;s>=0;--s)t[s+n+1]=this[s]>>r|o,o=(this[s]&a)<<i;for(s=n-1;s>=0;--s)t[s]=0;t[n]=o,t.t=this.t+n+1,t.s=this.s,t.clamp()},r.prototype.rShiftTo=function(e,t){t.s=this.s;var s=Math.floor(e/this.DB);if(s>=this.t)t.t=0;else{var i=e%this.DB,r=this.DB-i,a=(1<<i)-1;t[0]=this[s]>>i;for(var n=s+1;n<this.t;++n)t[n-s-1]|=(this[n]&a)<<r,t[n-s]=this[n]>>i;i>0&&(t[this.t-s-1]|=(this.s&a)<<r),t.t=this.t-s,t.clamp()}},r.prototype.subTo=function(e,t){for(var s=0,i=0,r=Math.min(e.t,this.t);s<r;)i+=this[s]-e[s],t[s++]=i&this.DM,i>>=this.DB;if(e.t<this.t){for(i-=e.s;s<this.t;)i+=this[s],t[s++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;s<e.t;)i-=e[s],t[s++]=i&this.DM,i>>=this.DB;i-=e.s}t.s=i<0?-1:0,i<-1?t[s++]=this.DV+i:i>0&&(t[s++]=i),t.t=s,t.clamp()},r.prototype.multiplyTo=function(e,t){var s=this.abs(),i=e.abs(),a=s.t;for(t.t=a+i.t;--a>=0;)t[a]=0;for(a=0;a<i.t;++a)t[a+s.t]=s.am(0,i[a],t,a,0,s.t);t.s=0,t.clamp(),this.s!=e.s&&r.ZERO.subTo(t,t)},r.prototype.squareTo=function(e){for(var t=this.abs(),s=e.t=2*t.t;--s>=0;)e[s]=0;for(s=0;s<t.t-1;++s){var i=t.am(s,t[s],e,2*s,0,1);(e[s+t.t]+=t.am(s+1,2*t[s],e,2*s+1,i,t.t-s-1))>=t.DV&&(e[s+t.t]-=t.DV,e[s+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(s,t[s],e,2*s,0,1)),e.s=0,e.clamp()},r.prototype.divRemTo=function(e,t,s){var i=e.abs();if(!(i.t<=0)){var n=this.abs();if(n.t<i.t)return null!=t&&t.fromInt(0),void(null!=s&&this.copyTo(s));null==s&&(s=a());var o=a(),c=this.s,d=e.s,h=this.DB-u(i[i.t-1]);h>0?(i.lShiftTo(h,o),n.lShiftTo(h,s)):(i.copyTo(o),n.copyTo(s));var l=o.t,f=o[l-1];if(0!==f){var p=f*(1<<this.F1)+(l>1?o[l-2]>>this.F2:0),m=this.FV/p,g=(1<<this.F1)/p,y=1<<this.F2,b=s.t,v=b-l,w=null==t?a():t;for(o.dlShiftTo(v,w),s.compareTo(w)>=0&&(s[s.t++]=1,s.subTo(w,s)),r.ONE.dlShiftTo(l,w),w.subTo(o,o);o.t<l;)o[o.t++]=0;for(;--v>=0;){var S=s[--b]==f?this.DM:Math.floor(s[b]*m+(s[b-1]+y)*g);if((s[b]+=o.am(0,S,s,v,0,l))<S)for(o.dlShiftTo(v,w),s.subTo(w,s);s[b]<--S;)s.subTo(w,s)}null!=t&&(s.drShiftTo(l,t),c!=d&&r.ZERO.subTo(t,t)),s.t=l,s.clamp(),h>0&&s.rShiftTo(h,s),c<0&&r.ZERO.subTo(s,s)}}},r.prototype.invDigit=function(){if(this.t<1)return 0;var e=this[0];if(0==(1&e))return 0;var t=3&e;return(t=(t=(t=(t=t*(2-(15&e)*t)&15)*(2-(255&e)*t)&255)*(2-((65535&e)*t&65535))&65535)*(2-e*t%this.DV)%this.DV)>0?this.DV-t:-t},r.prototype.isEven=function(){return 0===(this.t>0?1&this[0]:this.s)},r.prototype.exp=function(e,t){if(e>4294967295||e<1)return r.ONE;var s=a(),i=a(),n=t.convert(this),o=u(e)-1;for(n.copyTo(s);--o>=0;)if(t.sqrTo(s,i),(e&1<<o)>0)t.mulTo(i,n,s);else{var c=s;s=i,i=c}return t.revert(s)},r.prototype.chunkSize=function(e){return Math.floor(Math.LN2*this.DB/Math.log(e))},r.prototype.toRadix=function(e){if(null==e&&(e=10),0===this.signum()||e<2||e>36)return"0";var t=this.chunkSize(e),s=Math.pow(e,t),i=l(s),r=a(),n=a(),o="";for(this.divRemTo(i,r,n);r.signum()>0;)o=(s+n.intValue()).toString(e).substr(1)+o,r.divRemTo(i,r,n);return n.intValue().toString(e)+o},r.prototype.fromRadix=function(e,t){this.fromInt(0),null==t&&(t=10);for(var s=this.chunkSize(t),i=Math.pow(t,s),a=!1,n=0,o=0,c=0;c<e.length;++c){var d=h(e,c);d<0?"-"==e.charAt(c)&&0===this.signum()&&(a=!0):(o=t*o+d,++n>=s&&(this.dMultiply(i),this.dAddOffset(o,0),n=0,o=0))}n>0&&(this.dMultiply(Math.pow(t,n)),this.dAddOffset(o,0)),a&&r.ZERO.subTo(this,this)},r.prototype.bitwiseTo=function(e,t,s){var i,r,a=Math.min(e.t,this.t);for(i=0;i<a;++i)s[i]=t(this[i],e[i]);if(e.t<this.t){for(r=e.s&this.DM,i=a;i<this.t;++i)s[i]=t(this[i],r);s.t=this.t}else{for(r=this.s&this.DM,i=a;i<e.t;++i)s[i]=t(r,e[i]);s.t=e.t}s.s=t(this.s,e.s),s.clamp()},r.prototype.addTo=function(e,t){for(var s=0,i=0,r=Math.min(e.t,this.t);s<r;)i+=this[s]+e[s],t[s++]=i&this.DM,i>>=this.DB;if(e.t<this.t){for(i+=e.s;s<this.t;)i+=this[s],t[s++]=i&this.DM,i>>=this.DB;i+=this.s}else{for(i+=this.s;s<e.t;)i+=e[s],t[s++]=i&this.DM,i>>=this.DB;i+=e.s}t.s=i<0?-1:0,i>0?t[s++]=i:i<-1&&(t[s++]=this.DV+i),t.t=s,t.clamp()},r.prototype.dMultiply=function(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()},r.prototype.dAddOffset=function(e,t){if(0!==e){for(;this.t<=t;)this[this.t++]=0;for(this[t]+=e;this[t]>=this.DV;)this[t]-=this.DV,++t>=this.t&&(this[this.t++]=0),++this[t]}},r.prototype.multiplyLowerTo=function(e,t,s){var i,r=Math.min(this.t+e.t,t);for(s.s=0,s.t=r;r>0;)s[--r]=0;for(i=s.t-this.t;r<i;++r)s[r+this.t]=this.am(0,e[r],s,r,0,this.t);for(i=Math.min(e.t,t);r<i;++r)this.am(0,e[r],s,r,0,t-r);s.clamp()},r.prototype.multiplyUpperTo=function(e,t,s){--t;var i=s.t=this.t+e.t-t;for(s.s=0;--i>=0;)s[i]=0;for(i=Math.max(t-this.t,0);i<e.t;++i)s[this.t+i-t]=this.am(t-i,e[i],s,0,0,this.t+i-t);s.clamp(),s.drShiftTo(1,s)},r.prototype.toString=function(e){if(this.s<0)return"-"+this.negate().toString(e);var t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.toRadix(e);t=2}var s,i=(1<<t)-1,r=!1,a="",n=this.t,o=this.DB-n*this.DB%t;if(n-- >0)for(o<this.DB&&(s=this[n]>>o)>0&&(r=!0,a=d(s));n>=0;)o<t?(s=(this[n]&(1<<o)-1)<<t-o,s|=this[--n]>>(o+=this.DB-t)):(s=this[n]>>(o-=t)&i,o<=0&&(o+=this.DB,--n)),s>0&&(r=!0),r&&(a+=d(s));return r?a:"0"},r.prototype.negate=function(){var e=a();return r.ZERO.subTo(this,e),e},r.prototype.abs=function(){return this.s<0?this.negate():this},r.prototype.compareTo=function(e){var t=this.s-e.s;if(0!=t)return t;var s=this.t;if(0!=(t=s-e.t))return this.s<0?-t:t;for(;--s>=0;)if(0!=(t=this[s]-e[s]))return t;return 0},r.prototype.bitLength=function(){return this.t<=0?0:this.DB*(this.t-1)+u(this[this.t-1]^this.s&this.DM)},r.prototype.mod=function(e){var t=a();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(r.ZERO)>0&&e.subTo(t,t),t},r.prototype.clone=function(){var e=a();return this.copyTo(e),e},r.prototype.intValue=function(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0===this.t)return-1}else{if(1==this.t)return this[0];if(0===this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]},r.prototype.signum=function(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1},r.prototype.toByteArray=function(){var e=this.t,t=new Array;t[0]=this.s;var s,i=this.DB-e*this.DB%8,r=0;if(e-- >0)for(i<this.DB&&(s=this[e]>>i)!=(this.s&this.DM)>>i&&(t[r++]=s|this.s<<this.DB-i);e>=0;)i<8?(s=(this[e]&(1<<i)-1)<<8-i,s|=this[--e]>>(i+=this.DB-8)):(s=this[e]>>(i-=8)&255,i<=0&&(i+=this.DB,--e)),0!=(128&s)&&(s|=-256),0===r&&(128&this.s)!=(128&s)&&++r,(r>0||s!=this.s)&&(t[r++]=s);return t},r.prototype.toBuffer=function(e){var t=s.from(this.toByteArray());if(!0===e&&0===t[0])t=t.slice(1);else if(i.isNumber(e)){if(t.length>e){for(var r=0;r<t.length-e;r++)if(0!==t[r])return null;return t.slice(t.length-e)}if(t.length<e){var a=s.alloc(e);return a.fill(0,0,e-t.length),t.copy(a,e-t.length),a}}return t},r.prototype.equals=function(e){return 0==this.compareTo(e)},r.prototype.min=function(e){return this.compareTo(e)<0?this:e},r.prototype.max=function(e){return this.compareTo(e)>0?this:e},r.prototype.and=function(e){var t=a();return this.bitwiseTo(e,m,t),t},r.prototype.or=function(e){var t=a();return this.bitwiseTo(e,g,t),t},r.prototype.xor=function(e){var t=a();return this.bitwiseTo(e,y,t),t},r.prototype.not=function(){for(var e=a(),t=0;t<this.t;++t)e[t]=this.DM&~this[t];return e.t=this.t,e.s=~this.s,e},r.prototype.getLowestSetBit=function(){for(var e=0;e<this.t;++e)if(0!=this[e])return e*this.DB+b(this[e]);return this.s<0?this.t*this.DB:-1},r.prototype.add=function(e){var t=a();return this.addTo(e,t),t},r.prototype.subtract=function(e){var t=a();return this.subTo(e,t),t},r.prototype.multiply=function(e){var t=a();return this.multiplyTo(e,t),t},r.prototype.divide=function(e){var t=a();return this.divRemTo(e,t,null),t},r.prototype.remainder=function(e){var t=a();return this.divRemTo(e,null,t),t},r.prototype.modPow=function(e,t){var s,i,r=e.bitLength(),n=l(1);if(r<=0)return n;s=r<18?1:r<48?3:r<144?4:r<768?5:6,i=r<8?new f(t):t.isEven()?new S(t):new p(t);var o=new Array,c=3,d=s-1,h=(1<<s)-1;if(o[1]=i.convert(this),s>1){var m=a();for(i.sqrTo(o[1],m);c<=h;)o[c]=a(),i.mulTo(m,o[c-2],o[c]),c+=2}var g,y,b=e.t-1,v=!0,w=a();for(r=u(e[b])-1;b>=0;){for(r>=d?g=e[b]>>r-d&h:(g=(e[b]&(1<<r+1)-1)<<d-r,b>0&&(g|=e[b-1]>>this.DB+r-d)),c=s;0==(1&g);)g>>=1,--c;if((r-=c)<0&&(r+=this.DB,--b),v)o[g].copyTo(n),v=!1;else{for(;c>1;)i.sqrTo(n,w),i.sqrTo(w,n),c-=2;c>0?i.sqrTo(n,w):(y=n,n=w,w=y),i.mulTo(w,o[g],n)}for(;b>=0&&0==(e[b]&1<<r);)i.sqrTo(n,w),y=n,n=w,w=y,--r<0&&(r=this.DB-1,--b)}return i.revert(n)},r.prototype.pow=function(e){return this.exp(e,new v)},r.prototype.gcd=function(e){var t=this.s<0?this.negate():this.clone(),s=e.s<0?e.negate():e.clone();if(t.compareTo(s)<0){var i=t;t=s,s=i}var r=t.getLowestSetBit(),a=s.getLowestSetBit();if(a<0)return t;for(r<a&&(a=r),a>0&&(t.rShiftTo(a,t),s.rShiftTo(a,s));t.signum()>0;)(r=t.getLowestSetBit())>0&&t.rShiftTo(r,t),(r=s.getLowestSetBit())>0&&s.rShiftTo(r,s),t.compareTo(s)>=0?(t.subTo(s,t),t.rShiftTo(1,t)):(s.subTo(t,s),s.rShiftTo(1,s));return a>0&&s.lShiftTo(a,s),s},r.int2char=d,r.ZERO=l(0),r.ONE=l(1),r.prototype.square=function(){var e=a();return this.squareTo(e),e},t.exports=r}).call(this,e("buffer").Buffer)},{"../utils":278,buffer:65}],275:[function(e,t,s){var i=e("../utils")._,r=e("./jsbn.js"),a=e("../utils.js"),n=e("../schemes/schemes.js");t.exports.Key=function(){function e(){this.n=null,this.e=0,this.d=null,this.p=null,this.q=null,this.dmp1=null,this.dmq1=null,this.coeff=null}return e.prototype.setOptions=function(e){var t=n[e.signingScheme],s=n[e.encryptionScheme];t===s?this.signingScheme=this.encryptionScheme=s.makeScheme(this,e):(this.encryptionScheme=s.makeScheme(this,e),this.signingScheme=t.makeScheme(this,e))},e.prototype.setPrivate=function(e,t,s,n,o,c,d,h){if(!(e&&t&&s&&e.length>0&&(i.isNumber(t)||t.length>0)&&s.length>0))throw Error("Invalid RSA private key");this.n=new r(e),this.e=i.isNumber(t)?t:a.get32IntFromBuffer(t,0),this.d=new r(s),n&&o&&c&&d&&h&&(this.p=new r(n),this.q=new r(o),this.dmp1=new r(c),this.dmq1=new r(d),this.coeff=new r(h)),this.$$recalculateCache()},e.prototype.$doPrivate=function(e){if(this.p||this.q)return e.modPow(this.d,this.n);for(var t=e.mod(this.p).modPow(this.dmp1,this.p),s=e.mod(this.q).modPow(this.dmq1,this.q);t.compareTo(s)<0;)t=t.add(this.p);return t.subtract(s).multiply(this.coeff).mod(this.p).multiply(this.q).add(s)},e.prototype.sign=function(e){return this.signingScheme.sign.apply(this.signingScheme,arguments)},e.prototype.isPrivate=function(){return this.n&&this.e&&this.d||!1},Object.defineProperty(e.prototype,"keySize",{get:function(){return this.cache.keyBitLength}}),Object.defineProperty(e.prototype,"encryptedDataLength",{get:function(){return this.cache.keyByteLength}}),Object.defineProperty(e.prototype,"maxMessageLength",{get:function(){return this.encryptionScheme.maxMessageLength()}}),e.prototype.$$recalculateCache=function(){this.cache=this.cache||{},this.cache.keyBitLength=this.n.bitLength(),this.cache.keyByteLength=this.cache.keyBitLength+6>>3},e}()},{"../schemes/schemes.js":277,"../utils":278,"../utils.js":278,"./jsbn.js":274}],276:[function(e,t,s){(function(s){var i=e("../libs/jsbn"),r=e("../../crypto-js/crypto-js"),a=3;e("constants");var n={md2:s.from("3020300c06082a864886f70d020205000410","hex"),md5:s.from("3020300c06082a864886f70d020505000410","hex"),sha1:s.from("3021300906052b0e03021a05000414","hex"),sha224:s.from("302d300d06096086480165030402040500041c","hex"),sha256:s.from("3031300d060960864801650304020105000420","hex"),sha384:s.from("3041300d060960864801650304020205000430","hex"),sha512:s.from("3051300d060960864801650304020305000440","hex"),ripemd160:s.from("3021300906052b2403020105000414","hex"),rmd160:s.from("3021300906052b2403020105000414","hex")},o={ripemd160:"rmd160"};function c(e,t){var s=[];return t>0&&s.push(e>>>24),t>1&&s.push(e>>>16&255),t>2&&s.push(e>>>8&255),t>3&&s.push(255&e),s}t.exports={isEncryption:!0,isSignature:!0},t.exports.makeScheme=function(e,t){function d(e,t){this.key=e,this.options=t}return d.prototype.maxMessageLength=function(){return this.options.encryptionSchemeOptions&&this.options.encryptionSchemeOptions.padding==a?this.key.encryptedDataLength:this.key.encryptedDataLength-11},d.prototype.encUnPad=function(e,t){t=t||{};var s=0;if(this.options.encryptionSchemeOptions&&this.options.encryptionSchemeOptions.padding==a)return"function"==typeof e.lastIndexOf?e.slice(e.lastIndexOf("\0")+1,e.length):e.slice(String.prototype.lastIndexOf.call(e,"\0")+1,e.length);if(e.length<4)return null;if(1===t.type){if(0!==e[0]&&1!==e[1])return null;for(s=3;0!==e[s];)if(255!=e[s]||++s>=e.length)return null}else{if(0!==e[0]&&2!==e[1])return null;for(s=3;0!==e[s];)if(++s>=e.length)return null}return e.slice(s+1,e.length)},d.prototype.sign=function(e){var t=this.options.signingSchemeOptions.hash||"sha256";if("browser"===this.options.environment){var a=function(e){let t;if(!e.hasOwnProperty("sigBytes")||!e.hasOwnProperty("words"))throw Error("Argument not a wordArray");t=e.sigBytes,e=e.words;const i=[];let r=[],a=0;for(;t>0;)r=c(e[a],Math.min(4,t)),t-=r.length,i.push(r),a++;return new s.from([].concat.apply([],i),"hex")}(r[(t=o[t]||t).toUpperCase()](e.toString())),n=this.pkcs1pad(a,t);return this.key.$doPrivate(new i(n)).toBuffer(this.key.encryptedDataLength)}throw new Error("CCXT only supports browser mode :P")},d.prototype.pkcs1pad=function(e,t){var i=n[t];if(!i)throw Error("Unsupported hash algorithm");var r=s.concat([i,e]);if(r.length+10>this.key.encryptedDataLength)throw Error("Key is too short for signing algorithm ("+t+")");var a=s.alloc(this.key.encryptedDataLength-r.length-1);return a.fill(255,0,a.length-1),a[0]=1,a[a.length-1]=0,s.concat([a,r])},new d(e,t)}}).call(this,e("buffer").Buffer)},{"../../crypto-js/crypto-js":245,"../libs/jsbn":274,buffer:65,constants:67}],277:[function(e,t,s){t.exports={pkcs1:e("./pkcs1"),isEncryption:function(e){return t.exports[e]&&t.exports[e].isEncryption},isSignature:function(e){return t.exports[e]&&t.exports[e].isSignature}}},{"./pkcs1":276}],278:[function(e,t,s){t.exports.linebrk=function(e,t){for(var s="",i=0;i+t<e.length;)s+=e.substring(i,i+t)+"\n",i+=t;return s+e.substring(i,e.length)},t.exports.get32IntFromBuffer=function(e,t){t=t||0;var s;if((s=e.length-t)>0){if(s>=4)return e.readUInt32BE(t);for(var i=0,r=t+s,a=0;r>t;r--,a+=2)i+=e[r-1]*Math.pow(16,a);return i}return NaN},t.exports._={isObject:function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)},isString:function(e){return"string"==typeof e||e instanceof String},isNumber:function(e){return"number"==typeof e||!isNaN(parseFloat(e))&&isFinite(e)},omit:function(e,t){var s={};for(var i in e)e.hasOwnProperty(i)&&i!==t&&(s[i]=e[i]);return s}},t.exports.trimSurroundingText=function(e,t,s){var i=0,r=e.length,a=e.indexOf(t);a>=0&&(i=a+t.length);var n=e.indexOf(s,a);return n>=0&&(r=n),e.substring(i,r)}},{}],279:[function(e,t,s){"use strict";var i=String.prototype.replace,r=/%20/g;t.exports={default:"RFC3986",formatters:{RFC1738:function(e){return i.call(e,r,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},{}],280:[function(e,t,s){"use strict";var i=e("./stringify"),r=e("./parse"),a=e("./formats");t.exports={formats:a,parse:r,stringify:i}},{"./formats":279,"./parse":281,"./stringify":282}],281:[function(e,t,s){"use strict";var i=e("./utils"),r=Object.prototype.hasOwnProperty,a={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:i.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},n=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},o=function(e,t,s){if(e){var i=s.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,n=/(\[[^[\]]*])/.exec(i),o=n?i.slice(0,n.index):i,c=[];if(o){if(!s.plainObjects&&r.call(Object.prototype,o)&&!s.allowPrototypes)return;c.push(o)}for(var d=0;null!==(n=a.exec(i))&&d<s.depth;){if(d+=1,!s.plainObjects&&r.call(Object.prototype,n[1].slice(1,-1))&&!s.allowPrototypes)return;c.push(n[1])}return n&&c.push("["+i.slice(n.index)+"]"),function(e,t,s){for(var i=t,r=e.length-1;r>=0;--r){var a,n=e[r];if("[]"===n&&s.parseArrays)a=[].concat(i);else{a=s.plainObjects?Object.create(null):{};var o="["===n.charAt(0)&&"]"===n.charAt(n.length-1)?n.slice(1,-1):n,c=parseInt(o,10);s.parseArrays||""!==o?!isNaN(c)&&n!==o&&String(c)===o&&c>=0&&s.parseArrays&&c<=s.arrayLimit?(a=[])[c]=i:a[o]=i:a={0:i}}i=a}return i}(c,t,s)}};t.exports=function(e,t){var s=function(e){if(!e)return a;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?a.charset:e.charset;return{allowDots:void 0===e.allowDots?a.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:a.comma,decoder:"function"==typeof e.decoder?e.decoder:a.decoder,delimiter:"string"==typeof e.delimiter||i.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:"number"==typeof e.depth?e.depth:a.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling}}(t);if(""===e||null==e)return s.plainObjects?Object.create(null):{};for(var c="string"==typeof e?function(e,t){var s,o={},c=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,d=t.parameterLimit===1/0?void 0:t.parameterLimit,h=c.split(t.delimiter,d),l=-1,u=t.charset;if(t.charsetSentinel)for(s=0;s<h.length;++s)0===h[s].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[s]?u="utf-8":"utf8=%26%2310003%3B"===h[s]&&(u="iso-8859-1"),l=s,s=h.length);for(s=0;s<h.length;++s)if(s!==l){var f,p,m=h[s],g=m.indexOf("]="),y=-1===g?m.indexOf("="):g+1;-1===y?(f=t.decoder(m,a.decoder,u),p=t.strictNullHandling?null:""):(f=t.decoder(m.slice(0,y),a.decoder,u),p=t.decoder(m.slice(y+1),a.decoder,u)),p&&t.interpretNumericEntities&&"iso-8859-1"===u&&(p=n(p)),p&&t.comma&&p.indexOf(",")>-1&&(p=p.split(",")),r.call(o,f)?o[f]=i.combine(o[f],p):o[f]=p}return o}(e,s):e,d=s.plainObjects?Object.create(null):{},h=Object.keys(c),l=0;l<h.length;++l){var u=h[l],f=o(u,c[u],s);d=i.merge(d,f,s)}return i.compact(d)}},{"./utils":283}],282:[function(e,t,s){"use strict";var i=e("./utils"),r=e("./formats"),a=Object.prototype.hasOwnProperty,n={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Array.isArray,c=Array.prototype.push,d=function(e,t){c.apply(e,o(t)?t:[t])},h=Date.prototype.toISOString,l={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:i.encode,encodeValuesOnly:!1,formatter:r.formatters[r.default],indices:!1,serializeDate:function(e){return h.call(e)},skipNulls:!1,strictNullHandling:!1},u=function e(t,s,r,a,n,c,h,u,f,p,m,g,y){var b=t;if("function"==typeof h?b=h(s,b):b instanceof Date?b=p(b):"comma"===r&&o(b)&&(b=b.join(",")),null===b){if(a)return c&&!g?c(s,l.encoder,y):s;b=""}if("string"==typeof b||"number"==typeof b||"boolean"==typeof b||i.isBuffer(b))return c?[m(g?s:c(s,l.encoder,y))+"="+m(c(b,l.encoder,y))]:[m(s)+"="+m(String(b))];var v,w=[];if(void 0===b)return w;if(o(h))v=h;else{var S=Object.keys(b);v=u?S.sort(u):S}for(var k=0;k<v.length;++k){var T=v[k];n&&null===b[T]||(o(b)?d(w,e(b[T],"function"==typeof r?r(s,T):s,r,a,n,c,h,u,f,p,m,g,y)):d(w,e(b[T],s+(f?"."+T:"["+T+"]"),r,a,n,c,h,u,f,p,m,g,y)))}return w};t.exports=function(e,t){var s,i=e,c=function(e){if(!e)return l;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||l.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var s=r.default;if(void 0!==e.format){if(!a.call(r.formatters,e.format))throw new TypeError("Unknown format option provided.");s=e.format}var i=r.formatters[s],n=l.filter;return("function"==typeof e.filter||o(e.filter))&&(n=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:l.addQueryPrefix,allowDots:void 0===e.allowDots?l.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:l.charsetSentinel,delimiter:void 0===e.delimiter?l.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:l.encode,encoder:"function"==typeof e.encoder?e.encoder:l.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:l.encodeValuesOnly,filter:n,formatter:i,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:l.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:l.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:l.strictNullHandling}}(t);"function"==typeof c.filter?i=(0,c.filter)("",i):o(c.filter)&&(s=c.filter);var h,f=[];if("object"!=typeof i||null===i)return"";h=t&&t.arrayFormat in n?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var p=n[h];s||(s=Object.keys(i)),c.sort&&s.sort(c.sort);for(var m=0;m<s.length;++m){var g=s[m];c.skipNulls&&null===i[g]||d(f,u(i[g],g,p,c.strictNullHandling,c.skipNulls,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.formatter,c.encodeValuesOnly,c.charset))}var y=f.join(c.delimiter),b=!0===c.addQueryPrefix?"?":"";return c.charsetSentinel&&("iso-8859-1"===c.charset?b+="utf8=%26%2310003%3B&":b+="utf8=%E2%9C%93&"),y.length>0?b+y:""}},{"./formats":279,"./utils":283}],283:[function(e,t,s){"use strict";var i=Object.prototype.hasOwnProperty,r=Array.isArray,a=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),n=function(e,t){for(var s=t&&t.plainObjects?Object.create(null):{},i=0;i<e.length;++i)void 0!==e[i]&&(s[i]=e[i]);return s};t.exports={arrayToObject:n,assign:function(e,t){return Object.keys(t).reduce((function(e,s){return e[s]=t[s],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],s=[],i=0;i<t.length;++i)for(var a=t[i],n=a.obj[a.prop],o=Object.keys(n),c=0;c<o.length;++c){var d=o[c],h=n[d];"object"==typeof h&&null!==h&&-1===s.indexOf(h)&&(t.push({obj:n,prop:d}),s.push(h))}return function(e){for(;e.length>1;){var t=e.pop(),s=t.obj[t.prop];if(r(s)){for(var i=[],a=0;a<s.length;++a)void 0!==s[a]&&i.push(s[a]);t.obj[t.prop]=i}}}(t),e},decode:function(e,t,s){var i=e.replace(/\+/g," ");if("iso-8859-1"===s)return i.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(i)}catch(e){return i}},encode:function(e,t,s){if(0===e.length)return e;var i="string"==typeof e?e:String(e);if("iso-8859-1"===s)return escape(i).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var r="",n=0;n<i.length;++n){var o=i.charCodeAt(n);45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122?r+=i.charAt(n):o<128?r+=a[o]:o<2048?r+=a[192|o>>6]+a[128|63&o]:o<55296||o>=57344?r+=a[224|o>>12]+a[128|o>>6&63]+a[128|63&o]:(n+=1,o=65536+((1023&o)<<10|1023&i.charCodeAt(n)),r+=a[240|o>>18]+a[128|o>>12&63]+a[128|o>>6&63]+a[128|63&o])}return r},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(t,s,a){if(!s)return t;if("object"!=typeof s){if(r(t))t.push(s);else{if(!t||"object"!=typeof t)return[t,s];(a&&(a.plainObjects||a.allowPrototypes)||!i.call(Object.prototype,s))&&(t[s]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(s);var o=t;return r(t)&&!r(s)&&(o=n(t,a)),r(t)&&r(s)?(s.forEach((function(s,r){if(i.call(t,r)){var n=t[r];n&&"object"==typeof n&&s&&"object"==typeof s?t[r]=e(n,s,a):t.push(s)}else t[r]=s})),t):Object.keys(s).reduce((function(t,r){var n=s[r];return i.call(t,r)?t[r]=e(t[r],n,a):t[r]=n,t}),o)}}},{}],284:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,AuthenticationError:a,ExchangeError:n,InsufficientFunds:o,OrderNotFound:c,PermissionDenied:d,BadRequest:h,BadSymbol:l,DDoSProtection:u,InvalidOrder:f,AccountSuspended:p}=e("./base/errors"),{TICK_SIZE:m}=e("./base/functions/number"),g=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"stex",name:"STEX",countries:["EE"],rateLimit:1e3/3,certified:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrder:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFees:!0,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},version:"v3",urls:{logo:"https://user-images.githubusercontent.com/1294454/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg",api:"https://api3.stex.com",www:"https://www.stex.com",doc:["https://apidocs.stex.com/","https://help.stex.com/en/collections/1593608-api-v3-documentation"],fees:"https://app.stex.com/en/pairs-specification",referral:"https://app.stex.com?ref=36416021"},requiredCredentials:{apiKey:!1,secret:!1,token:!0},timeframes:{"1m":"1","5m":"5","30m":"30","1h":"60","4h":"240","12h":"720","1d":"1D"},api:{public:{get:{currencies:1,"currencies/{currencyId}":1,markets:1,"pairs-groups":1,"currency_pairs/list/{code}":1,"currency_pairs/group/{currencyPairGroupId}":1,"currency_pairs/{currencyPairId}":1,ticker:1,"ticker/{currencyPairId}":1,"trades/{currencyPairId}":1,"orderbook/{currencyPairId}":1,"chart/{currencyPairId}/{candlesType}":1,"deposit-statuses":1,"deposit-statuses/{statusId}":1,"withdrawal-statuses":1,"withdrawal-statuses/{statusId}":1,ping:1,"mobile-versions":1,twitter:1}},trading:{get:{"fees/{currencyPairId}":1,orders:12,"orders/{currencyPairId}":6,"order/{orderId}":12},post:{"orders/{currencyPairId}":1.5,"orders/bulk/{currencyPairId}":12},delete:{orders:30,"orders/{currencyPairId}":12,"order/{orderId}":1.5}},reports:{get:{currencies:12,currency_pairs:12,orders:12,"orders/{orderId}":12,"trades/{currencyPairId}":12,"background/{listMode}":12,"background/{id}":12,"background/download/{id}":12},post:{"background/create":12},delete:{"background/{id}":12}},profile:{get:{info:3,wallets:3,"wallets/{walletId}":3,"wallets/address/{walletId}":3,deposits:3,"deposits/{id}":3,rewards:3,"rewards/{id}":3,addressbook:3,"addressbook/{itemId}":3,withdrawals:3,"withdrawals/{id}":3,notifications:3,"notifications/price":3,"favorite/currency_pairs":3,"token-scopes":3},post:{"wallets/burn/{walletId}":3,"wallets/{walletId}/hold_amount":3,"wallets/{currencyId}":3,"wallets/address/{walletId}":3,"addressbook/disable_item/{itemId}":3,"addressbook/enable_item/{itemId}":3,"addressbook/enable_strict_wd":3,"addressbook/disable_strict_wd":3,withdraw:30,"notifications/price":3,"referral/program":3,"referral/insert/{code}":3,"referral/bonus_transfer/{currencyId}":3},put:{"favorite/currency_pairs/set":3},delete:{"addressbook/{itemId}":3,"withdraw/{withdrawalId}":30,"notifications/price/{priceAlertId}":3}},verification:{get:{countries:1,status:1,"fractal/url":1,"smart-id":1,stex:1,"cryptonomica/code":1},post:{"smart-id":1,stex:1,cryptonomica:1}},settings:{get:{"notifications/{event}":1,notifications:1},put:{notifications:1,"notifications/set":1}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},commonCurrencies:{BC:"Bitcoin Confidential",BITS:"Bitcoinus",BITSW:"BITS",BHD:"Bithold",BTH:"Bithereum",MPH:"Chasyr Token",SBTC:"SBTCT"},options:{parseOrderToPrecision:!1,networks:{ERC20:5,ETH:5,OMNI:10,XLM:20,BEP2:22,TRC20:24,TRX:24,SOL:25,BEP20:501},accountsByType:{spot:"spot",hold:"hold",funding:"funding",referal:"referal"},transfer:{fillResponseFromRequest:!0}},precisionMode:m,exceptions:{exact:{"Wrong parameters":h,"Unauthenticated.":a,"Server Error":n,"This feature is only enabled for users verifies by Cryptonomica":d,"Too Many Attempts.":u,"Selected Pair is disabled":l,"Invalid scope(s) provided.":d,"The maximum amount of open orders with the same price cannot exceed 10":f,"Your account not verified!":p},broad:{"Not enough":o}}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s={},i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"id"),a=this.safeInteger(t,"id"),n=this.safeCurrencyCode(this.safeString(t,"code")),o=this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),c=this.safeNumber(t,"withdrawal_fee_const"),d=this.safeValue(t,"active",!0);s[n]={id:r,numericId:a,code:n,info:t,type:void 0,name:this.safeString(t,"name"),active:d,deposit:void 0,withdraw:void 0,fee:c,precision:o,limits:{amount:{min:o,max:void 0},deposit:{min:this.safeNumber(t,"minimum_deposit_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"minimum_withdrawal_amount"),max:void 0}}}}return s}async fetchMarkets(e={}){const t=await this.publicGetCurrencyPairsListCode(this.extend({code:"ALL"},e)),s=[],i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"id"),a=this.safeInteger(t,"id"),n=this.safeString(t,"currency_id"),o=this.safeString(t,"market_currency_id"),c=this.safeInteger(t,"currency_id"),d=this.safeInteger(t,"market_currency_id"),h=this.safeCurrencyCode(this.safeString(t,"currency_code")),l=this.safeCurrencyCode(this.safeString(t,"market_code")),u=this.safeString(t,"min_buy_price"),f=this.safeString(t,"min_sell_price"),p=g.stringMax(u,f),m=g.stringDiv(this.safeString(t,"buy_fee_percent"),"100"),y=g.stringDiv(this.safeString(t,"sell_fee_percent"),"100"),b=g.stringMax(m,y);s.push({id:r,numericId:a,symbol:h+"/"+l,base:h,quote:l,settle:void 0,baseId:n,quoteId:o,settleId:void 0,baseNumericId:c,quoteNumericId:d,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,taker:b,maker:b,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"currency_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"market_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_order_amount"),max:void 0},price:{min:p,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={currencyPairId:s.id},r=await this.publicGetTickerCurrencyPairId(this.extend(i,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,s)}async fetchTime(e={}){const t=await this.publicGetPing(e),s=this.safeValue(t,"data",{}),i=this.safeValue(s,"server_datetime",{});return this.parse8601(this.safeString(i,"date"))}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={currencyPairId:this.market(e).id};void 0!==t&&(i.limit_bids=t,i.limit_asks=t);const r=await this.publicGetOrderbookCurrencyPairId(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseOrderBook(a,e,void 0,"bid","ask","price","amount")}parseTicker(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString2(e,"id","symbol"),r=this.safeSymbol(i,t,"_"),a=this.safeString(e,"last"),n=this.safeString(e,"open");return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volumeQuote"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i=this.safeValue(s,"data",[]);return this.parseTickers(i,e)}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1d",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={currencyPairId:a.id,candlesType:this.timeframes[t]};void 0===i?i=100:n.limit=i;const o=i*this.parseTimeframe(t);void 0===s?(n.timeEnd=this.seconds(),n.timeStart=n.timeEnd-o):(n.timeStart=parseInt(s/1e3),n.timeEnd=this.sum(n.timeStart,o));const c=await this.publicGetChartCurrencyPairIdCandlesType(this.extend(n,r)),d=this.safeValue(c,"data",[]);return this.parseOHLCVs(d,a,t,s,i)}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"price"),a=this.safeString(e,"amount");let n;void 0===n&&void 0!==t&&(n=t.symbol);const o=this.safeStringLower2(e,"type","trade_type");return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:n,id:s,order:void 0,type:void 0,takerOrMaker:void 0,side:o,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={currencyPairId:r.id};void 0!==s&&(a.limit=s),void 0!==t&&(a.sort="ASC",a.from=parseInt(t/1e3));const n=await this.publicGetTradesCurrencyPairId(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={currencyPairId:s.id},r=await this.tradingGetFeesCurrencyPairId(this.extend(i,t)),a=this.safeValue(r,"data");return{info:r,symbol:s.symbol,maker:this.safeNumber(a,"sell_fee"),taker:this.safeNumber(a,"buy_fee"),percentage:!0,tierBased:!0}}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeCurrencyCode(this.safeString(i,"currency_id")),a=this.account();a.free=this.safeString(i,"balance"),a.used=this.safeString(i,"frozen_balance"),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.profileGetWallets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({PROCESSING:"open",PENDING:"open",PARTIAL:"open",FINISHED:"closed",CANCELLED:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeString2(e,"currency_pair_id","currency_pair_name"),a=this.safeSymbol(r,t,"_"),n=this.safeTimestamp(e,"timestamp"),o=this.safeNumber(e,"price"),c=this.safeNumber(e,"initial_amount"),d=this.safeNumber(e,"processed_amount");let h,l;void 0!==d&&(void 0!==c&&(h=c-d,this.options.parseOrderToPrecision&&(h=parseFloat(this.amountToPrecision(a,h))),h=Math.max(h,0)),void 0!==o&&void 0===l&&(l=o*d));let u=this.safeString(e,"original_type");"BUY"!==u&&"SELL"!==u||(u=void 0);const f=this.safeStringLower(e,"type"),p=this.safeValue(e,"trades");let m;void 0!==p&&(m=this.parseTrades(p,t,void 0,void 0,{symbol:a,order:s}));const g=this.safeNumber(e,"trigger_price"),y={info:e,id:s,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:a,type:u,timeInForce:void 0,postOnly:void 0,side:f,price:o,stopPrice:g,amount:c,cost:l,average:void 0,filled:d,remaining:h,status:i,trades:m},b=this.safeValue(e,"fees");if(void 0===b)y.fee=void 0;else{if(b.length>0){y.fees=[];for(let e=0;e<b.length;e++){const t=this.safeNumber(b[e],"amount");if(void 0!==t){const s=this.safeString(b[e],"currency_id"),i=this.safeCurrencyCode(s);y.fees.push({cost:t,currency:i})}}}else y.fee=void 0}return y}async createOrder(e,t,s,i,r,a={}){if("market"===t)throw new n(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e);"limit"===t&&(t=s);const c={currencyPairId:o.id,type:t.toUpperCase(),amount:parseFloat(this.amountToPrecision(e,i)),price:parseFloat(this.priceToPrecision(e,r))},d=await this.tradingPostOrdersCurrencyPairId(this.extend(c,a)),h=this.safeValue(d,"data",{});return this.parseOrder(h,o)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.tradingGetOrderOrderId(this.extend(i,s)),a=this.safeValue(r,"data",{});let n;return void 0!==t&&(n=this.market(t)),this.parseOrder(a,n)}async fetchClosedOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.reportsGetOrdersOrderId(this.extend(i,s)),a=this.safeValue(r,"data",{});let n;return void 0!==t&&(n=this.market(t)),this.parseOrder(a,n)}async fetchOrderTrades(e,t,s,i,r={}){return(await this.fetchClosedOrder(e,t,r)).trades}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();let a="tradingGetOrders";const n={};void 0!==e&&(a="tradingGetOrdersCurrencyPairId",r=this.market(e),n.currencyPairId=r.id),void 0!==s&&(n.limit=s);const o=await this[a](this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseOrders(c,r,t,s)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={orderId:e},r=await this.tradingDeleteOrderOrderId(this.extend(i,s)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"put_into_processing_queue",[]),o=this.safeValue(a,"not_put_into_processing_queue",[]),d=n.length,h=o.length;if(d<1){if(h<1)throw new c(this.id+" cancelOrder() received an empty response: "+this.json(r));return this.parseOrder(o[0])}if(h<1)return this.parseOrder(n[0]);throw new c(this.id+" cancelOrder() received an empty response: "+this.json(r))}async cancelAllOrders(e,t={}){await this.loadMarkets();const s={};let i="tradingDeleteOrders";if(void 0!==e){const t=this.market(e);s.currencyPairId=t.id,i="tradingDeleteOrdersCurrencyPairId"}return await this[i](this.extend(s,t))}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={currencyPairId:a.id};void 0!==t&&(n.timeStart=this.iso8601(t)),void 0!==s&&(n.limit=s);const o=await this.reportsGetTradesCurrencyPairId(this.extend(n,i)),c=this.safeValue(o,"data",[]);return this.parseTrades(c,a,t,s)}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currencyId:this.currency(e).id},i=await this.profilePostWalletsCurrencyId(this.extend(s,t)),r=this.safeValue(i,"data",{}),a=this.safeValue(r,"deposit_address",{}),n=this.safeString(a,"address"),o=this.safeString(a,"additional_address_parameter");return this.checkAddress(n),{currency:e,address:n,tag:o,info:i}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=await this.fetchBalance(),i=this.safeValue(s.info,"data",[]),r=this.indexBy(i,"currency_id"),a=this.currency(e),o=this.safeValue(r,a.id);if(void 0===o)throw new n(this.id+" fetchDepositAddress() could not find the wallet id for currency code "+e+", try to call createDepositAddress() first");const c=this.safeInteger(o,"id");if(void 0===c)throw new n(this.id+" fetchDepositAddress() could not find the wallet id for currency code "+e+", try to call createDepositAddress() first");const d={walletId:c},h=await this.profileGetWalletsWalletId(this.extend(d,t)),l=this.safeValue(h,"data",[]),u=this.safeValue(l,"deposit_address",{}),f=this.safeString(u,"address"),p=this.safeString(u,"additional_address_parameter");return this.checkAddress(f),{currency:e,address:f,tag:p,network:void 0,info:h}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+t+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(this.checkRequiredCredentials(),r={Authorization:"Bearer "+this.token},"GET"===s||"DELETE"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(a=this.json(o),Object.keys(o).length&&(r["Content-Type"]="application/json"))),{url:n,method:s,body:a,headers:r}}parseTransactionStatus(e){return this.safeString({processing:"pending","checking by system":"pending",hodl:"pending","amount too low":"failed","not confirmed":"pending","cancelled by user":"canceled",approved:"pending",finished:"ok","withdrawal error":"failed","deposit error":"failed","cancelled by admin":"canceled",awaiting:"pending"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeValue(e,"withdrawal_address",{}),r=this.safeString(i,"address"),a=this.safeString(i,"additional_address_parameter"),n=this.safeString(e,"currency_id");let o;n in this.currencies_by_id?t=this.currencies_by_id[n]:o=this.commonCurrencyCode(this.safeString(e,"currency_code")),void 0===o&&void 0!==t&&(o=t.code);const c="deposit_status_id"in e?"deposit":"withdrawal",d=this.safeNumber(e,"amount"),h=this.parseTransactionStatus(this.safeStringLower(e,"status")),l=this.safeTimestamp2(e,"timestamp","created_ts"),u=this.safeTimestamp(e,"updated_ts"),f=this.safeString(e,"txid");let p;const m=this.safeNumber(e,"fee");if(void 0!==m){const t=this.safeString2(e,"fee_currency_id","deposit_fee_currency_id");p={cost:m,currency:this.safeCurrencyCode(t)}}const g=this.safeString(i,"protocol_name");return{info:e,id:s,txid:f,timestamp:l,datetime:this.iso8601(l),network:g,addressFrom:void 0,address:r,addressTo:r,tagFrom:void 0,tag:a,tagTo:a,type:c,amount:d,currency:o,status:h,updated:u,fee:p}}async fetchDeposit(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.profileGetDepositsId(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseTransaction(a)}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currencyId=r.id),void 0!==s&&(a.limit=s),void 0!==t&&(a.timeStart=t);const n=await this.profileGetDeposits(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}async fetchWithdrawal(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.profileGetWithdrawalsId(this.extend(i,s)),a=this.safeValue(r,"data",{});return this.parseTransaction(a)}async fetchWithdrawals(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currencyId=r.id),void 0!==s&&(a.limit=s),void 0!==t&&(a.timeStart=t);const n=await this.profileGetWithdrawals(this.extend(a,i)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,e,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e);let o;const c={};if("referal"===s&&"spot"===i)c.currencyId=a.id,o="profilePostReferralBonusTransferCurrencyId";else if("hold"===i)c.walletId=s,t=this.currencyToPrecision(e,t),t=g.stringNeg(t),c.amount=t,o="profilePostWalletsWalletIdHoldAmount";else{if("hold"!==s)throw new n(this.id+" transfer() only allows transfers of referal to spot and between a walletId and funding");c.walletId=i,c.amount=t,o="profilePostWalletsWalletIdHoldAmount"}const d=await this[o](this.extend(c,r)),h=this.safeValue(d,"data",{}),l=this.parseTransfer(h,a),u=this.safeValue(this.options,"transfer",{});return this.safeValue(u,"fillResponseFromRequest",!0)&&(l.fromAccount=s,l.toAccount=i,"string"==typeof t&&g.stringLt(t,"0")&&(t=this.parseNumber(g.stringNeg(t))),l.amount=t,void 0===l.currency&&(l.currency=e)),l}parseTransfer(e,t){const s=this.safeString(e,"currency_id");let i;return s in this.currencies_by_id?t=this.currencies_by_id[s]:i=this.commonCurrencyCode(this.safeString(e,"currency_code")),void 0===i&&(i=this.safeValue(t,"code")),{info:e,id:this.safeString(e,"id"),timestamp:void 0,datetime:void 0,currency:i,amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={currency_id:a.id,amount:parseFloat(this.currencyToPrecision(e,t)),address:s};void 0!==i&&(n.additional_address_parameter=i);const o=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(r,"network");c=this.safeInteger(o,c,c),void 0!==c&&(n.protocol_id=c,r=this.omit(r,"network"));const d=await this.profilePostWithdraw(this.extend(n,r)),h=this.safeValue(d,"data",{});return this.parseTransaction(h,a)}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.publicGetCurrencies(t),i=this.safeValue(s,"data",[]),r={},a={};for(let e=0;e<i.length;e++){const t=this.safeString(i[e],"id"),s=this.safeCurrencyCode(t);r[s]=this.safeNumber(i[e],"withdrawal_fee_const"),a[s]=this.safeNumber(i[e],"deposit_fee_const")}return{withdraw:r,deposit:a,info:s}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0===o)return;if(!this.safeValue(o,"success",!1)){const e=this.safeString(o,"message"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new n(t)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],285:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadRequest:n,OrderNotFound:o,InvalidAddress:c}=e("./base/errors"),{TICK_SIZE:d}=e("./base/functions/number"),h=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"therock",name:"TheRockTrading",countries:["MT"],rateLimit:100,version:"v1",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg",api:{rest:"https://api.therocktrading.com"},www:"https://therocktrading.com",doc:["https://api.therocktrading.com/doc/v1/index.html","https://api.therocktrading.com/doc/"]},api:{public:{get:{funds:1,"funds/{id}":1,"funds/{id}/orderbook":1,"funds/{id}/ticker":1,"funds/{id}/trades":1,"funds/{id}/ohlc_statistics":1,"funds/tickers":1}},private:{get:{balances:1,"balances/{id}":1,discounts:1,"discounts/{id}":1,funds:1,"funds/{id}":1,"funds/{id}/trades":1,"funds/{fund_id}/orders":1,"funds/{fund_id}/orders/{id}":1,"funds/{fund_id}/position_balances":1,"funds/{fund_id}/positions":1,"funds/{fund_id}/positions/{id}":1,transactions:1,"transactions/{id}":1,"withdraw_limits/{id}":1,withdraw_limits:1},post:{"atms/withdraw":1,"funds/{fund_id}/orders":1},delete:{"funds/{fund_id}/orders/{id}":1,"funds/{fund_id}/orders/remove_all":1}}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{BTC:0,BCH:0,PPC:0,ETH:0,ZEC:0,LTC:0,EUR:0}}},precisionMode:d,exceptions:{exact:{"Request already running":n,"cannot specify multiple address types":n,"Currency is not included in the list":n,"Record not found":o},broad:{"before must be greater than after param":n,"must be shorter than 60 days":n,"must be a multiple of (period param) in minutes":n,"Address allocation limit reached for currency":c,"is not a valid value for param currency":n," is invalid":c}},options:{withdraw:{fillResponseFromRequest:!0}}})}async fetchMarkets(e={}){const t=await this.publicGetFunds(e),s=this.safeValue(t,"funds"),i=[];if(void 0===s)throw new r(this.id+" fetchMarkets() got an unexpected response");for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeString(t,"trade_currency"),n=this.safeString(t,"base_currency"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeString(t,"buy_fee"),l=this.safeString(t,"sell_fee");let u=h.stringMax(d,l);u=this.parseNumber(h.stringDiv(u,"100"));const f=this.safeValue(t,"leverages"),p=f.length;i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:p>0,swap:!1,future:!1,option:!1,contract:!1,linear:void 0,inverse:void 0,taker:u,maker:u,contractSize:void 0,active:!0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"trade_currency_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"base_currency_decimals")))},limits:{leverage:{min:1,max:this.safeValue(f,p-1,1)},amount:{min:this.safeNumber(t,"minimum_quantity_offer"),max:void 0},price:{min:this.safeNumber(t,"minimum_price_offer"),max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}parseBalance(e){const t=this.safeValue(e,"balances",[]),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"trading_balance"),n.total=this.safeString(i,"balance"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={id:i.id},a=await this.publicGetFundsIdOrderbook(this.extend(r,s)),n=this.parse8601(this.safeString(a,"date"));return this.parseOrderBook(a,i.symbol,n,"bids","asks","price","amount")}parseTicker(e,t){const s=this.parse8601(this.safeString(e,"date"));t=this.safeMarket(void 0,t);const i=this.safeString(e,"last");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:i,last:i,previousClose:this.safeString(e,"close"),change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_traded"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetFundsTickers(t),i=this.indexBy(s.tickers,"fund_id"),r=Object.keys(i),a={};for(let e=0;e<r.length;e++){const t=r[e],s=this.safeMarket(t),n=s.symbol,o=i[t];a[n]=this.parseTicker(o,s)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={id:s.id},r=await this.publicGetFundsIdTicker(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.safeString(e,"fund_id"),i=this.safeSymbol(s,t),r=this.parse8601(this.safeString(e,"date")),a=this.safeString(e,"id"),n=this.safeString(e,"order_id"),o=this.safeString(e,"side"),c=this.safeString(e,"price"),d=this.safeString(e,"amount");let l,u;const f=this.safeValue(e,"transactions",[]),p=this.groupBy(f,"type"),m=this.safeValue(p,"paid_commission",[]);for(let e=0;e<m.length;e++)void 0===u&&(u="0.0"),u=h.stringAdd(u,this.safeString(m[e],"price"));return void 0!==u&&(l={cost:u,currency:t.quote}),this.safeTrade({info:e,id:a,order:n,timestamp:r,datetime:this.iso8601(r),symbol:i,type:void 0,side:o,takerOrMaker:void 0,price:c,amount:d,cost:void 0,fee:l},t)}parseLedgerEntryDirection(e){return this.safeString({affiliate_earnings:"in",atm_payment:"in",bought_currency_from_fund:"out",bought_shares:"out",paid_commission:"out",paypal_payment:"in",pos_payment:"in",released_currency_to_fund:"out",rollover_commission:"out",sold_currency_to_fund:"in",sold_shares:"in",transfer_received:"in",transfer_sent:"out",withdraw:"out"},e,e)}parseLedgerEntryType(e){return this.safeString({affiliate_earnings:"referral",atm_payment:"transaction",bought_currency_from_fund:"trade",bought_shares:"trade",paid_commission:"fee",paypal_payment:"transaction",pos_payment:"transaction",released_currency_to_fund:"trade",rollover_commission:"fee",sold_currency_to_fund:"trade",sold_shares:"trade",transfer_received:"transfer",transfer_sent:"transfer",withdraw:"transaction"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"id");let i,r=this.safeString(e,"type");const a=this.parseLedgerEntryDirection(r);r=this.parseLedgerEntryType(r),"trade"!==r&&"fee"!==r||(i=this.safeString(e,"trade_id"));const n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n),c=this.safeNumber(e,"price"),d=this.parse8601(this.safeString(e,"date"));return{info:e,id:s,direction:a,account:void 0,referenceId:i,referenceAccount:void 0,type:r,currency:o,amount:c,before:void 0,after:void 0,status:"ok",timestamp:d,datetime:this.iso8601(d),fee:void 0}}async fetchLedger(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.after=this.iso8601(t));const n=await this.privateGetTransactions(this.extend(r,i)),o=this.safeValue(n,"transactions",[]);return this.parseLedger(o,a,t,s)}parseTransactionType(e){return this.safeString({withdraw:"withdrawal",atm_payment:"deposit"},e,e)}parseTransaction(e,t){const s=this.safeString2(e,"id","transaction_id"),i=this.parseTransactionType(this.safeString(e,"type")),r=this.safeValue(e,"transfer_detail",{}),a=this.safeString(r,"method");let n,o;void 0!==a&&"wire_transfer"!==a&&(n=this.safeString(r,"id"),o=this.safeString(r,"recipient"));const c=this.safeString(e,"currency"),d=this.safeCurrencyCode(c),h=this.safeNumber(e,"price"),l=this.parse8601(this.safeString(e,"date"));return{info:e,id:s,currency:d,amount:h,network:this.safeString(r,"method"),addressFrom:void 0,addressTo:o,address:o,tagFrom:void 0,tagTo:void 0,tag:void 0,status:"ok",type:i,updated:void 0,txid:n,timestamp:l,datetime:this.iso8601(l),fee:void 0}}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"withdraw"},i))}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"atm_payment"},i))}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.after=this.iso8601(t)),i=this.extend(r,i);const n=await this.privateGetTransactions(i),o=this.safeValue(n,"transactions",[]),c=this.filterByArray(o,"type",["withdraw","atm_payment"],!1);return this.parseTransactions(c,a,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),await this.loadMarkets();const a=this.currency(e);t=this.currencyToPrecision(e,t);const n={currency:a.id,destination_address:s,amount:parseFloat(t)};void 0!==i&&(n.destination_tag=i);const o=await this.privatePostAtmsWithdraw(this.extend(n,r)),c=this.parseTransaction(o,a),d=this.safeValue(this.options,"withdraw",{});return this.safeValue(d,"fillResponseFromRequest",!0)&&(c.addressTo===s&&(c.addressTo=s),void 0===c.address&&(c.address=s),void 0===c.tagTo&&(c.tagTo=i),void 0===c.tag&&(c.tag=i),void 0===c.amount&&(c.amount=t)),c}parseOrderStatus(e){return this.safeString({active:"open",executed:"closed",deleted:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"fund_id"),r=this.safeSymbol(i,t),a=this.parseOrderStatus(this.safeString(e,"status")),n=this.parse8601(this.safeString(e,"date")),o=this.safeString(e,"type"),c=this.safeString(e,"side"),d=this.safeNumber(e,"amount"),h=this.safeNumber(e,"amount_unfilled");let l;void 0!==d&&void 0!==h&&(l=d-h);const u=this.safeNumber(e,"price");let f,p,m,g=this.safeValue(e,"trades");if(void 0!==g){const e=g.length;if(e>0){g=this.parseTrades(g,t,void 0,void 0,{orderId:s}),f=0,l=0;for(let t=0;t<e;t++){const e=g[t];f=this.sum(f,e.cost),l=this.sum(l,e.amount)}l>0&&(p=f/l),m=g[e-1].timestamp}else f=0}const y=this.safeNumber(e,"conditional_price");return{id:s,clientOrderId:void 0,info:e,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:m,status:a,symbol:r,type:o,timeInForce:void 0,postOnly:void 0,side:c,price:u,stopPrice:y,cost:f,amount:d,filled:l,average:p,remaining:h,fee:void 0,trades:g}}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"active"},i))}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrders(e,t,s,this.extend({status:"executed"},i))}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={fund_id:r.id};void 0!==t&&(n.after=this.iso8601(t));const o=await this.privateGetFundsFundIdOrders(this.extend(n,i)),c=this.safeValue(o,"orders",[]);return this.parseOrders(c,r,t,s)}async fetchOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i={id:e,fund_id:this.market(t).id},r=await this.privateGetFundsFundIdOrdersId(this.extend(i,s));return this.parseOrder(r)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),"market"===t&&(r=0);const n={fund_id:this.market(e).id,side:s,amount:i,price:r},o=await this.privatePostFundsFundIdOrders(this.extend(n,a));return this.parseOrder(o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e,fund_id:this.marketId(t)},r=await this.privateDeleteFundsFundIdOrdersId(this.extend(i,s));return this.parseOrder(r)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.parseTimeframe(t),o=parseInt(n/60),c={id:a.id,period:o};void 0===s&&(c.after=this.iso8601(s));const d=await this.publicGetFundsIdOhlcStatistics(this.extend(c,r));return this.parseOHLCVs(d,a,t,s,i)}parseOHLCV(e,t){const s=this.safeString(e,"interval_starts_at");return[this.parse8601(s),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"base_volume")]}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={id:r.id};void 0!==s&&(n.per_page=s),void 0!==t&&(n.after=this.iso8601(t));const o=await this.privateGetFundsIdTrades(this.extend(n,i)),c=this.safeValue(o,"trades",[]);return this.parseTrades(c,r,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={id:r.id};void 0!==s&&(a.per_page=s),void 0!==t&&(a.after=this.iso8601(t));const n=await this.publicGetFundsIdTrades(this.extend(a,i));return this.parseTrades(n.trades,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e);let i={id:s.id};const r=await this.publicGetFundsId(this.extend(i,t));i={id:s.quoteId};const a=await this.privateGetDiscountsId(this.extend(i,t));return this.parseTradingFee(r,a,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetFunds(e),s=await this.privateGetDiscounts(e),i=this.safeValue(t,"funds",[]),r=this.safeValue(s,"discounts",[]),a={};for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"id"),n=this.safeMarket(s),o=this.safeValue(n,"quoteId"),c=this.filterBy(r,"currency",o),d=this.parseTradingFee(t,c,n);a[d.symbol]=d}return a}parseTradingFee(e,t,s){const i=this.safeString(e,"id"),r=this.safeString(e,"buy_fee"),a=this.safeString(e,"sell_fee"),n=this.safeString(t,"discount","0"),o=h.stringSub("100",n),c=this.parseNumber(h.stringDiv(h.stringMul(r,o),"10000")),d=this.parseNumber(h.stringDiv(h.stringMul(a,o),"10000"));return{info:e,symbol:this.safeSymbol(i,s),maker:d,taker:c,percentage:!0,tierBased:!0}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if(r=void 0===r?{}:r,"private"===t){if(this.checkRequiredCredentials(),Object.keys(o).length)if("POST"===s)a=this.json(o),r["Content-Type"]="application/json";else{const e=this.rawencode(o);e.length&&(n+="?"+e)}const e=this.nonce().toString(),t=e+n;r["X-TRT-KEY"]=this.apiKey,r["X-TRT-NONCE"]=e,r["X-TRT-SIGN"]=this.hmac(this.encode(t),this.encode(this.secret),"sha512")}else"public"===t&&Object.keys(o).length&&(n+="?"+this.rawencode(o));return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"errors",[]),l=h.length;if(l>0){const e=this.id+" "+n;for(let t=0;t<l;t++){const s=h[t],i=this.safeString(s,"message");this.throwExactlyMatchedException(this.exceptions.exact,i,e),this.throwBroadlyMatchedException(this.exceptions.broad,i,e)}throw new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],286:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,InsufficientFunds:a,OrderNotFound:n,ArgumentsRequired:o}=e("./base/errors"),{TICK_SIZE:c}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"tidebit",name:"TideBit",countries:["HK"],rateLimit:1e3,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","12h":"720","1d":"1440","3d":"4320","1w":"10080"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87460811-1e690280-c616-11ea-8652-69f187305add.jpg",api:"https://www.tidebit.com",www:"https://www.tidebit.com",doc:["https://www.tidebit.com/documents/api/guide","https://www.tidebit.com/swagger/#/default"],referral:"http://bit.ly/2IX0LrM"},api:{public:{get:["markets","tickers","tickers/{market}","timestamp","trades","trades/{market}","order_book","order","k_with_pending_trades","k","depth"],post:[]},private:{get:["addresses/{address}","deposits/history","deposits/get_deposit","deposits/deposit_address","historys/orders","historys/vouchers","historys/accounts","historys/snapshots","linkage/get_status","members/me","order","orders","partners/orders/{id}/trades","referral_commissions/get_undeposited","referral_commissions/get_graph_data","trades/my","withdraws/bind_account_list","withdraws/get_withdraw_account","withdraws/fetch_bind_info"],post:["deposits/deposit_cash","favorite_markets/update","order/delete","orders","orders/multi","orders/clear","referral_commissions/deposit","withdraws/apply","withdraws/bind_bank","withdraws/bind_address"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.003"),taker:this.parseNumber("0.003")},funding:{tierBased:!1,percentage:!0,withdraw:{}}},precisionMode:c,exceptions:{2002:a,2003:n}})}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetDepositAddress(this.extend(s,t));if("success"in i&&i.success){const t=this.safeString(i,"address"),s=this.safeString(i,"addressTag");return{currency:e,address:this.checkAddress(t),tag:s,info:i}}}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"id"),a=this.safeString(i,"name"),[n,o]=a.split("/");s.push({id:r,symbol:a,base:this.safeCurrencyCode(n),quote:this.safeCurrencyCode(o),settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(i,"ask_fixed"))),price:this.parseNumber(this.parsePrecision(this.safeString(i,"bid_fixed")))},limits:this.extend({leverage:{min:void 0,max:void 0}},this.limits),info:i})}return s}parseBalance(e){const t=this.safeValue(e,"accounts",[]),s={info:t};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"balance"),n.used=this.safeString(i,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={market:i.id};void 0!==t&&(r.limit=t),r.market=i.id;const a=await this.publicGetDepth(this.extend(r,s)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,e,n)}parseTicker(e,t){const s=this.safeTimestamp(e,"at");e=this.safeValue(e,"ticker",{}),t=this.safeMarket(void 0,t);const i=this.safeString(e,"last");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),ask:this.safeString(e,"sell"),bidVolume:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:i,last:i,change:void 0,percentage:void 0,previousClose:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeMarket(t),n=a.symbol,o=s[t];r[n]=this.parseTicker(o,a)}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.publicGetTickersMarket(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){const s=this.parse8601(this.safeString(e,"created_at")),i=this.safeString(e,"id"),r=this.safeString(e,"price"),a=this.safeString(e,"volume");return t=this.safeMarket(void 0,t),this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:void 0,order:void 0,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id},n=await this.publicGetTrades(this.extend(a,i));return this.parseTrades(n,r,t,s)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e);void 0===i&&(i=30);const n={market:a.id,period:this.timeframes[t],limit:i};n.timestamp=void 0!==s?parseInt(s/1e3):18e5;const o=await this.publicGetK(this.extend(n,r));return"null"===o?[]:this.parseOHLCVs(o,a,t,s,i)}parseOrderStatus(e){return this.safeString({done:"closed",wait:"open",cancel:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t),r=this.parse8601(this.safeString(e,"created_at")),a=this.parseOrderStatus(this.safeString(e,"state")),n=this.safeString(e,"id"),o=this.safeString(e,"ord_type"),c=this.safeString(e,"side"),d=this.safeString(e,"price"),h=this.safeString(e,"volume"),l=this.safeString(e,"executed_volume"),u=this.safeString(e,"remaining_volume"),f=this.safeString(e,"avg_price");return this.safeOrder({id:n,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:a,symbol:i,type:o,timeInForce:void 0,postOnly:void 0,side:c,price:d,stopPrice:void 0,amount:h,filled:l,remaining:u,cost:void 0,trades:void 0,fee:void 0,info:e,average:f},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n={market:this.market(e).id,side:s,volume:i.toString(),ord_type:t};"limit"===t&&(n.price=r.toString());const o=await this.privatePostOrders(this.extend(n,a));return this.parseOrder(o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={id:e},r=await this.privatePostOrderDelete(this.extend(i,s)),a=this.parseOrder(r),o=this.safeString(a,"status");if("closed"===o||"canceled"===o)throw new n(this.id+" "+this.json(a));return a}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n=this.safeString(r,"id");if(void 0===n)throw new o(this.id+" withdraw() requires an extra `id` param (withdraw account id according to withdraws/bind_account_list endpoint");const c={id:n,currency_type:"coin",currency:a.id,body:t};void 0!==i&&(c.memo=i);const d=await this.privatePostWithdrawsApply(this.extend(c,r));return this.parseTransaction(d,a)}parseTransaction(e,t){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}nonce(){return this.milliseconds()}encodeParams(e){return this.urlencode(this.keysort(e))}sign(e,t="public",s="GET",i={},r,a){const n="/api/"+this.version+"/"+this.implodeParams(e,i)+".json",o=this.omit(i,this.extractParams(e));let c=this.urls.api+n;if("public"===t)Object.keys(o).length&&(c+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.keysort(this.extend({access_key:this.apiKey,tonce:e},i)),o=this.urlencode(t),d=s+"|"+n+"|"+o,h=o+"&signature="+this.hmac(this.encode(d),this.encode(this.secret));"GET"===s?c+="?"+h:(a=h,r={"Content-Type":"application/x-www-form-urlencoded"})}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(400===e||void 0===o){const e=this.id+" "+n;if(void 0===o)throw new r(e);const t=this.safeValue(o,"error",{}),s=this.safeString(t,"code");this.throwExactlyMatchedException(this.exceptions,s,e)}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}],287:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,ExchangeNotAvailable:n,InsufficientFunds:o,OrderNotFound:c,DDoSProtection:d,InvalidOrder:h,AuthenticationError:l,PermissionDenied:u}=e("./base/errors"),{TICK_SIZE:f}=e("./base/functions/number"),p=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"tidex",name:"Tidex",countries:["UK"],rateLimit:2e3,version:"3",userAgent:this.userAgents.chrome,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg",api:{web:"https://gate.tidex.com/api",public:"https://api.tidex.com/api/3",private:"https://api.tidex.com/tapi"},www:"https://tidex.com",doc:"https://tidex.com/exchange/public-api",referral:"https://tidex.com/exchange/?ref=57f5638d9cd7",fees:["https://tidex.com/exchange/assets-spec","https://tidex.com/exchange/pairs-spec"]},api:{web:{get:["currency","pairs","tickers","orders","ordershistory","trade-data","trade-data/{id}"]},public:{get:["info","ticker/{pair}","depth/{pair}","trades/{pair}"]},private:{post:["getInfoExt","getInfo","Trade","ActiveOrders","OrderInfo","CancelOrder","TradeHistory","getDepositAddress","createWithdraw","getWithdraw"]}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},commonCurrencies:{DSH:"DASH",EMGO:"MGO",MGO:"WMGO"},precisionMode:f,exceptions:{exact:{803:h,804:h,805:h,806:h,807:h,831:o,832:o,833:c},broad:{"Invalid pair name":r,"invalid api key":l,"invalid sign":l,"api key dont have trade permission":l,"invalid parameter":h,"invalid order":h,"Requests too often":d,"not available":n,"data unavailable":n,"external service unavailable":n,"IP restricted":u}},options:{fetchTickersMaxLength:2048},orders:{}})}async fetchCurrencies(e={}){const t=await this.webGetCurrency(e),s={};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"symbol"),a=this.safeCurrencyCode(r);let n=!0===this.safeValue(i,"visible");const o=this.safeValue(i,"withdrawEnable",!0),c=this.safeValue(i,"depositEnable",!0);o&&c||(n=!1);const d=this.safeString(i,"name"),h=this.safeNumber(i,"withdrawFee");s[a]={id:r,code:a,name:d,active:n,deposit:c,withdraw:o,precision:this.parseNumber(this.parsePrecision(this.safeString(i,"amountPoint"))),funding:{withdraw:{active:o,fee:h},deposit:{active:c,fee:this.parseNumber("0")}},limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(i,"withdrawMinAmount"),max:void 0},deposit:{min:this.safeNumber(i,"depositMinAmount"),max:void 0}},info:i}}return s}async fetchMarkets(e={}){const t=(await this.publicGetInfo(e)).pairs,s=Object.keys(t),i=[];for(let e=0;e<s.length;e++){const r=s[e],a=t[r],[n,o]=r.split("_"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeInteger(a,"hidden");let l=this.safeString(a,"fee");l=p.stringDiv(l,"100"),i.push({id:r,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:0===h,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(a,"decimal_places"))),price:this.parseNumber(this.parsePrecision(this.safeString(a,"decimal_places")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(a,"min_amount"),max:this.safeNumber(a,"max_amount")},price:{min:this.safeNumber(a,"min_price"),max:this.safeNumber(a,"max_price")},cost:{min:this.safeNumber(a,"min_total"),max:void 0}},info:a})}return i}parseBalance(e){const t=this.safeValue(e,"return"),s=this.safeTimestamp(t,"server_time"),i={info:e,timestamp:s,datetime:this.iso8601(s)},r=this.safeValue(t,"funds",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeCurrencyCode(t),n=this.safeValue(r,t,{}),o=this.account();o.free=this.safeString(n,"value"),o.used=this.safeString(n,"inOrders"),i[s]=o}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfoExt(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),a={pair:i.id};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,s));if(!(i.id in n))throw new r(this.id+" "+i.symbol+" order book is empty or not available");const o=n[i.id];return this.parseOrderBook(o,e)}async fetchOrderBooks(e,t,s={}){let i;if(await this.loadMarkets(),void 0===e){if(i=this.ids.join("-"),i.length>2048){const e=this.ids.length;throw new r(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=this.marketIds(e),i=i.join("-");const a={pair:i};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,s)),o={};i=Object.keys(n);for(let e=0;e<i.length;e++){const t=i[e],s=this.safeSymbol(t);o[s]=this.parseOrderBook(n[t],s)}return o}parseTicker(e,t){const s=this.safeTimestamp(e,"updated");t=this.safeMarket(void 0,t);const i=this.safeString(e,"last");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol_cur"),quoteVolume:this.safeString(e,"vol"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let s=this.ids;if(void 0===e){const e=s.length;if(s=s.join("-"),s.length>this.options.fetchTickersMaxLength){const t=this.safeInteger(this.options,"fetchTickersMaxLength",2048);throw new a(this.id+" fetchTickers() has "+e.toString()+" markets exceeding max URL length for this endpoint ("+t.toString()+" characters), please, specify a list of symbols of interest in the first argument to fetchTickers")}}else s=this.marketIds(e),s=s.join("-");const i={pair:s},r=await this.publicGetTickerPair(this.extend(i,t)),n={},o=Object.keys(r);for(let e=0;e<o.length;e++){const t=o[e],s=this.safeMarket(t);n[s.symbol]=this.parseTicker(r[t],s)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t){const s=this.safeTimestamp(e,"timestamp");let i=this.safeString(e,"type");"ask"===i?i="sell":"bid"===i&&(i="buy");const r=this.safeString2(e,"rate","price"),a=this.safeString2(e,"trade_id","tid"),n=this.safeString(e,"order_id"),o=this.safeString(e,"pair"),c=this.safeSymbol(o,t),d=this.safeString(e,"amount"),h=this.parseNumber(r),l=this.parseNumber(d),u=this.parseNumber(p.stringMul(r,d)),f="limit";let m,g;const y=this.safeNumber(e,"commission");if(void 0!==y){const t=this.safeString(e,"commissionCurrency");g={cost:y,currency:this.safeCurrencyCode(t)}}const b=this.safeValue(e,"is_your_order");return void 0!==b&&(m="taker",b&&(m="maker"),void 0===g&&(g=this.calculateFee(c,f,i,l,h,m))),{id:a,order:n,timestamp:s,datetime:this.iso8601(s),symbol:c,type:f,side:i,takerOrMaker:m,price:h,amount:l,cost:u,fee:g,info:e}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetTradesPair(this.extend(a,i));if(Array.isArray(n)){if(0===n.length)return[]}return this.parseTrades(n[r.id],r,t,s)}async createOrder(e,t,s,i,a,n={}){if("market"===t)throw new r(this.id+" createOrder() allows limit orders only");const o=i.toString(),c=a.toString();await this.loadMarkets();const d=this.market(e),h={pair:d.id,type:s,amount:this.amountToPrecision(e,i),rate:this.priceToPrecision(e,a)},l=await this.privatePostTrade(this.extend(h,n));let u,f="open",p="0.0",m=o;const g=this.safeValue(l,"return");void 0!==g&&(u=this.safeString(g,"order_id"),"0"===u&&(u=this.safeString(g,"init_order_id"),f="closed"),p=this.safeString(g,"received",p),m=this.safeString(g,"remains",o));const y=this.milliseconds();return this.safeOrder({id:u,timestamp:y,datetime:this.iso8601(y),lastTradeTimestamp:void 0,status:f,symbol:e,type:t,side:s,price:c,cost:void 0,amount:o,remaining:m,filled:p,fee:void 0,info:l,clientOrderId:void 0,average:void 0,trades:void 0},d)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)};return await this.privatePostCancelOrder(this.extend(i,s))}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeTimestamp(e,"timestamp_created"),a=this.safeString(e,"pair"),n=this.safeSymbol(a,t);let o,c;const d=this.safeString(e,"rate");"start_amount"in e?(c=this.safeString(e,"start_amount"),o=this.safeString(e,"amount")):o=this.safeString(e,"amount");return this.safeOrder({info:e,id:s,clientOrderId:void 0,symbol:n,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"type"),price:d,stopPrice:void 0,cost:void 0,amount:c,remaining:o,filled:void 0,status:i,fee:undefined,average:void 0,trades:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)},r=await this.privatePostOrderInfo(this.extend(i,s));e=e.toString();const a=this.safeValue(r,"return",{}),n=this.safeValue(a,e);return this.parseOrder(this.extend({id:e},n))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id);const n=await this.privatePostActiveOrders(this.extend(r,i)),o=this.safeValue(n,"return",[]);return this.parseOrders(o,a,t,s)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==s&&(a.count=parseInt(s)),void 0!==t&&(a.since=parseInt(t/1e3));const n=await this.privatePostTradeHistory(this.extend(a,i)),o=this.safeValue(n,"return",[]);return this.parseTrades(o,r,t,s)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={asset:a.id,amount:parseFloat(t),address:s};void 0!==i&&(n.memo=i);const o=await this.privatePostCreateWithdraw(this.extend(n,r)),c=this.safeValue(o,"return",{}),d=this.safeValue(c,"withdraw_info",{});return this.parseTransaction(d,a)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t];const o=this.omit(i,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();const t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},o));const s=this.hmac(this.encode(a),this.encode(this.secret),"sha512");r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:s}}else"public"===t?(n+="/"+this.implodeParams(e,i),Object.keys(o).length&&(n+="?"+this.urlencode(o))):(n+="/"+this.implodeParams(e,i),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o),r={"Content-Type":"application/json"}));return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.safeString(o,"code"),t=this.safeString(o,"error"),s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r(s)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],288:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,PermissionDenied:a,ExchangeNotAvailable:n,InsufficientFunds:o,OrderNotFound:c,InvalidOrder:d,RateLimitExceeded:h,NotSupported:l,BadRequest:u,AuthenticationError:f}=e("./base/errors"),{TICK_SIZE:p}=e("./base/functions/number"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"timex",name:"TimeX",countries:["AU"],version:"v1",rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},timeframes:{"1m":"I1","5m":"I5","15m":"I15","30m":"I30","1h":"H1","2h":"H2","4h":"H4","6h":"H6","12h":"H12","1d":"D1","1w":"W1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg",api:"https://plasma-relay-backend.timex.io",www:"https://timex.io",doc:"https://docs.timex.io",referral:"https://timex.io/?refcode=1x27vNkTbP1uwkCck"},api:{custody:{get:["credentials","credentials/h/{hash}","credentials/k/{key}","credentials/me/address","deposit-addresses","deposit-addresses/h/{hash}"]},history:{get:["orders","orders/details","orders/export/csv","trades","trades/export/csv"]},currencies:{get:["a/{address}","i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},markets:{get:["i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},public:{get:["candles","currencies","markets","orderbook","orderbook/raw","orderbook/v2","tickers","trades"]},statistics:{get:["address"]},trading:{get:["balances","fees","orders"],post:["orders","orders/json"],put:["orders","orders/json"],delete:["orders","orders/json"]},tradingview:{get:["config","history","symbol_info","time"]}},precisionMode:p,exceptions:{exact:{0:r,1:l,4e3:u,4001:u,4002:o,4003:f,4004:f,4005:u,4006:u,4007:u,4300:a,4100:f,4400:c,5001:d,5002:r,400:u,401:f,403:a,404:c,429:h,500:r,503:n},broad:{Insufficient:o}},options:{expireIn:31536e3,fetchTickers:{period:"1d"},fetchTrades:{sort:"timestamp,asc"},fetchMyTrades:{sort:"timestamp,asc"},fetchOpenOrders:{sort:"createdAt,asc"},fetchClosedOrders:{sort:"createdAt,asc"},defaultSort:"timestamp,asc",defaultSortOrders:"createdAt,asc"}})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),s=[];for(let e=0;e<t.length;e++)s.push(this.parseMarket(t[e]));return s}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),s=[];for(let e=0;e<t.length;e++){const i=t[e];s.push(this.parseCurrency(i))}return this.indexBy(s,"code")}async fetchTickers(e,t={}){await this.loadMarkets();const s=this.safeString(this.options.fetchTickers,"period","1d"),i={period:this.timeframes[s]},r=await this.publicGetTickers(this.extend(i,t));return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i=this.safeString(this.options.fetchTickers,"period","1d"),r={market:s.id,period:this.timeframes[i]},a=await this.publicGetTickers(this.extend(r,t)),n=this.safeValue(a,0);return this.parseTicker(n,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market:this.market(e).id};void 0!==t&&(i.limit=t);const r=await this.publicGetOrderbookV2(this.extend(i,s)),a=this.parse8601(this.safeString(r,"timestamp"));return this.parseOrderBook(r,e,a,"bid","ask","price","baseTokenAmount")}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a=this.safeValue(this.options,"fetchTrades",{}),n=this.safeValue(a,"sort","timestamp,asc"),o=this.safeString(i,"sort",n),c=this.omit(i,"sort"),d={market:r.id,sort:o};void 0!==t&&(d.from=this.iso8601(t)),void 0!==s&&(d.size=s);const h=await this.publicGetTrades(this.extend(d,c));return this.parseTrades(h,r,t,s)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,period:this.timeframes[t]},o=this.parseTimeframe(t);if(void 0!==s)n.from=this.iso8601(s),void 0!==i&&(n.till=this.iso8601(this.sum(s,this.sum(i,1)*o*1e3)));else if(void 0!==i){const e=this.milliseconds();n.till=this.iso8601(e),n.from=this.iso8601(e-i*o*1e3-1)}else n.till=this.iso8601(this.milliseconds());const c=await this.publicGetCandles(this.extend(n,r));return this.parseOHLCVs(c,a,t,s,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,"totalBalance"),n.used=this.safeString(i,"lockedBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.tradingGetBalances(e);return this.parseBalance(t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=s.toUpperCase();let c=t.toUpperCase();this.safeValue(a,"postOnly",!1)&&(c="POST_ONLY",a=this.omit(a,["postOnly"]));const h={symbol:n.id,quantity:this.amountToPrecision(e,i),side:o,orderTypes:c};let l=a;if("LIMIT"===c||"POST_ONLY"===c){h.price=this.priceToPrecision(e,r);const s=this.safeInteger(this.options,"expireIn"),i=this.safeValue(a,"expireTime"),n=this.safeValue(a,"expireIn",s);if(void 0!==i)h.expireTime=i;else{if(void 0===n)throw new d(this.id+" createOrder() method requires a expireTime or expireIn param for a "+t+" order, you can also set the expireIn exchange-wide option");h.expireIn=n}l=this.omit(a,["expireTime","expireIn"])}else h.price=0;const u=await this.tradingPostOrders(this.extend(h,l)),f=this.safeValue(u,"orders",[]),p=this.safeValue(f,0,{});return this.parseOrder(p,n)}async editOrder(e,t,s,i,r,a,n={}){await this.loadMarkets();const o=this.market(t),c={id:e};void 0!==r&&(c.quantity=this.amountToPrecision(t,r)),void 0!==a&&(c.price=this.priceToPrecision(t,a));const d=await this.tradingPutOrders(this.extend(c,n));if("unchangedOrders"in d){const e=this.safeValue(d,"unchangedOrders",[]);return{id:this.safeString(e,0),info:d}}const h=this.safeValue(d,"changedOrders",[]),l=this.safeValue(h,0,{}),u=this.safeValue(l,"newOrder",{});return this.parseOrder(u,o)}async cancelOrder(e,t,s={}){return await this.loadMarkets(),await this.cancelOrders([e],t,s)}async cancelOrders(e,t,s={}){await this.loadMarkets();const i={id:e};return await this.tradingDeleteOrders(this.extend(i,s))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={orderHash:e},r=await this.historyGetOrdersDetails(i),a=this.safeValue(r,"order",{}),n=this.safeValue(r,"trades",[]);return this.parseOrder(this.extend(a,{trades:n}))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchOpenOrders",{}),a=this.safeValue(r,"sort","createdAt,asc"),n=this.safeString(i,"sort",a),o=this.omit(i,"sort"),c={sort:n};let d;void 0!==e&&(d=this.market(e),c.symbol=d.id),void 0!==s&&(c.size=s);const h=await this.tradingGetOrders(this.extend(c,o)),l=this.safeValue(h,"orders",[]);return this.parseOrders(l,d,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchClosedOrders",{}),a=this.safeValue(r,"sort","createdAt,asc"),n=this.safeString(i,"sort",a),o=this.omit(i,"sort"),c={sort:n,side:"BUY"};let d;void 0!==e&&(d=this.market(e),c.symbol=d.id),void 0!==t&&(c.from=this.iso8601(t)),void 0!==s&&(c.size=s);const h=await this.historyGetOrders(this.extend(c,o)),l=this.safeValue(h,"orders",[]);return this.parseOrders(l,d,t,s)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchMyTrades",{}),a=this.safeValue(r,"sort","timestamp,asc"),n=this.safeString(i,"sort",a),o=this.omit(i,"sort"),c={sort:n};let d;void 0!==e&&(d=this.market(e),c.symbol=d.id),void 0!==t&&(c.from=this.iso8601(t)),void 0!==s&&(c.size=s);const h=await this.historyGetTrades(this.extend(c,o)),l=this.safeValue(h,"trades",[]);return this.parseTrades(l,d,t,s)}parseTradingFee(e,t){const s=this.safeString(e,"market"),i=this.safeNumber(e,"fee");return{info:e,symbol:this.safeSymbol(s,t),maker:i,taker:i}}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i={markets:s.id},r=await this.tradingGetFees(this.extend(i,t)),a=this.safeValue(r,0,{});return this.parseTradingFee(a,s)}parseMarket(e){const t=this.safeValue(e,"locked"),s=this.safeString(e,"symbol"),i=this.safeString(e,"baseCurrency"),r=this.safeString(e,"quoteCurrency"),a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(r),o=this.safeString(e,"quantityIncrement"),c=this.safeString(e,"baseMinSize"),d=m.stringMax(o,c),h=this.safeString(e,"tickSize"),l=this.safeString(e,"quoteMinSize");return{id:s,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:i,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!t,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"takerFee"),maker:this.safeNumber(e,"makerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"quantityIncrement"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(d),max:void 0},price:{min:this.parseNumber(h),max:void 0},cost:{min:l,max:void 0}},info:e}}parseCurrency(e){const t=this.safeString(e,"symbol"),s=this.safeCurrencyCode(t),i=this.safeString(e,"name"),r=this.safeValue(e,"depositEnabled"),a=this.safeValue(e,"withdrawalEnabled"),n=this.safeValue(e,"active"),o=r&&a&&n,c=this.safeString(e,"withdrawalFee"),d=this.safeInteger(e,"tradeDecimals");let h;if(void 0!==c&&void 0!==d){const e=c.length-d;if(e>0){const t=c.slice(0,e),s=c.slice(-e);h=this.parseNumber(t+"."+s)}else{let t=".";for(let s=0;s<-e;s++)t+="0";h=this.parseNumber(t+c)}}return{id:s,code:s,info:e,type:void 0,name:i,active:o,deposit:r,withdraw:a,fee:h,precision:this.parseNumber(this.parsePrecision(this.safeString(e,"decimals"))),limits:{withdraw:{min:h,max:void 0},amount:{min:void 0,max:void 0}}}}parseTicker(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t,"/"),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"last"),n=this.safeString(e,"open");return this.safeTicker({symbol:i,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"volumeQuote")},t)}parseTrade(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"price"),n=this.safeString(e,"quantity"),o=this.parseNumber(a),c=this.parseNumber(n),d=this.parseNumber(m.stringMul(a,n)),h=this.safeString(e,"id"),l=this.safeStringLower2(e,"direction","side"),u=this.safeStringLower(e,"makerOrTaker");let f,p;void 0!==u&&(f=this.safeString(e,u+"OrderId"));const g=this.safeNumber(e,"fee"),y=this.safeCurrencyCode(this.safeString(e,"feeToken"));return void 0!==g&&(p={cost:g,currency:y}),{info:e,id:h,timestamp:r,datetime:this.iso8601(r),symbol:i,order:f,type:void 0,side:l,price:o,amount:c,cost:d,takerOrMaker:u,fee:p}}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseOrder(e,t){const s=this.safeString(e,"id"),i=this.safeStringLower(e,"type"),r=this.safeStringLower(e,"side"),a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t),o=this.parse8601(this.safeString(e,"createdAt")),c=this.safeString(e,"price"),d=this.safeString(e,"quantity"),h=this.safeString(e,"filledQuantity"),l=this.omitZero(this.safeString(e,"cancelledQuantity"));let u;u=m.stringEquals(h,d)?"closed":void 0!==l?"canceled":"open";const f=this.safeValue(e,"trades",[]),p=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:s,clientOrderId:p,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:n,type:i,timeInForce:void 0,postOnly:void 0,side:r,price:c,stopPrice:void 0,amount:d,cost:void 0,average:void 0,filled:h,remaining:void 0,status:u,fee:void 0,trades:f},t)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+t+"/"+e;if(Object.keys(i).length&&(n+="?"+this.urlencodeWithArrayRepeat(i)),"public"!==t){this.checkRequiredCredentials();const e=this.stringToBase64(this.apiKey+":"+this.secret);r={authorization:"Basic "+this.decode(e)}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&e>=400){const e=this.id+" "+n;let t=this.safeValue(o,"error");void 0===t&&(t=o);const s=this.safeString2(t,"code","status"),i=this.safeString2(t,"message","debugMessage");throw this.throwBroadlyMatchedException(this.exceptions.broad,i,e),this.throwExactlyMatchedException(this.exceptions.exact,s,e),this.throwExactlyMatchedException(this.exceptions.exact,i,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],289:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadRequest:a,AuthenticationError:n,InvalidOrder:o,InsufficientFunds:c,OrderNotFound:d,PermissionDenied:h,AddressPending:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number"),f=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"upbit",name:"Upbit",countries:["KR"],version:"v1",rateLimit:1e3,pro:!0,has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!0,createOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:void 0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:void 0,fetchWithdrawals:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"minutes","3m":"minutes","5m":"minutes","15m":"minutes","30m":"minutes","1h":"minutes","4h":"minutes","1d":"days","1w":"weeks","1M":"months"},hostname:"api.upbit.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg",api:{public:"https://{hostname}",private:"https://{hostname}"},www:"https://upbit.com",doc:"https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C",fees:"https://upbit.com/service_center/guide"},api:{public:{get:["market/all","candles/{timeframe}","candles/{timeframe}/{unit}","candles/minutes/{unit}","candles/minutes/1","candles/minutes/3","candles/minutes/5","candles/minutes/15","candles/minutes/30","candles/minutes/60","candles/minutes/240","candles/days","candles/weeks","candles/months","trades/ticks","ticker","orderbook"]},private:{get:["accounts","orders/chance","order","orders","withdraws","withdraw","withdraws/chance","deposits","deposit","deposits/coin_addresses","deposits/coin_address"],post:["orders","withdraws/coin","withdraws/krw","deposits/generate_coin_address"],delete:["order"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},precisionMode:u,exceptions:{exact:{"This key has expired.":n,"Missing request parameter error. Check the required parameters!":a,"side is missing, side does not have a valid value":o},broad:{thirdparty_agreement_required:h,out_of_scope:h,order_not_found:d,insufficient_funds:c,invalid_access_key:n,jwt_verification:n,create_ask_error:r,create_bid_error:r,volume_too_large:o,invalid_funds:o}},options:{createMarketBuyOrderRequiresPrice:!0,fetchTickersMaxLength:4096,fetchOrderBooksMaxLength:4096,tradingFeesByQuoteCurrency:{KRW:5e-4}},commonCurrencies:{TON:"Tokamak Network"}})}async fetchCurrency(e,t={}){await this.loadMarkets();const s=this.currency(e);return await this.fetchCurrencyById(s.id,t)}async fetchCurrencyById(e,t={}){const s={currency:e},i=await this.privateGetWithdrawsChance(this.extend(s,t)),r=this.safeValue(i,"member_level",{}),a=this.safeValue(i,"currency",{}),n=this.safeValue(i,"withdraw_limit",{}),o=this.safeValue(n,"can_withdraw"),c=this.safeString(a,"wallet_state"),d=this.safeValue(r,"wallet_locked"),h=this.safeValue(r,"locked");let l=!0;void 0===o||o?("working"!==c||void 0!==d&&d||void 0!==h&&h)&&(l=!1):l=!1;const u=this.safeNumber(n,"onetime"),f=this.safeNumber(n,"daily",u),p=this.safeNumber(n,"remaining_daily",f);let m;m=p>0?p:f;const g=this.safeString(a,"code"),y=this.safeCurrencyCode(g);return{info:i,id:g,code:y,name:y,active:l,fee:this.safeNumber(a,"withdraw_fee"),precision:void 0,limits:{withdraw:{min:this.safeNumber(n,"minimum"),max:m}}}}async fetchMarket(e,t={}){await this.loadMarkets();const s=this.market(e);return await this.fetchMarketById(s.id,t)}async fetchMarketById(e,t={}){const s={market:e},i=await this.privateGetOrdersChance(this.extend(s,t)),r=this.safeValue(i,"market"),a=this.safeValue(r,"bid"),n=this.safeValue(r,"ask"),o=this.safeString(r,"id"),c=this.safeString(n,"currency"),d=this.safeString(a,"currency"),h=this.safeCurrencyCode(c),l=this.safeCurrencyCode(d),u=this.safeString(r,"state"),f=this.safeNumber(i,"bid_fee"),p=this.safeNumber(i,"ask_fee"),m=Math.max(f,p);return{id:o,symbol:h+"/"+l,base:h,quote:l,settle:void 0,baseId:c,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"active"===u,contract:!1,linear:void 0,inverse:void 0,taker:m,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("0.00000001"),price:this.parseNumber("0.00000001")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_total"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,"min_total"),max:this.safeNumber(r,"max_total")},info:i}}}async fetchMarkets(e={}){const t=await this.publicGetMarketAll(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"market"),[a,n]=r.split("-"),o=this.safeCurrencyCode(n),c=this.safeCurrencyCode(a);s.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:n,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,c,this.fees.trading.taker),maker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,c,this.fees.trading.maker),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber("0.00000001"),amount:this.parseNumber("0.00000001")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"balance"),n.used=this.safeString(i,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBooks(e,t,s={}){let i;if(await this.loadMarkets(),void 0===e){if(i=this.ids.join(","),i.length>this.options.fetchOrderBooksMaxLength){const e=this.ids.length;throw new r(this.id+" fetchOrderBooks() has "+e.toString()+" symbols ("+i.length.toString()+" characters) exceeding max URL length ("+this.options.fetchOrderBooksMaxLength.toString()+" characters), you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=this.marketIds(e),i=i.join(",");const a={markets:i},n=await this.publicGetOrderbook(this.extend(a,s)),o={};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"market"),i=this.safeSymbol(s,void 0,"-"),r=this.safeInteger(t,"timestamp");o[i]={symbol:i,bids:this.sortBy(this.parseBidsAsks(t.orderbook_units,"bid_price","bid_size"),0,!0),asks:this.sortBy(this.parseBidsAsks(t.orderbook_units,"ask_price","ask_size"),0),timestamp:r,datetime:this.iso8601(r),nonce:void 0}}return o}async fetchOrderBook(e,t,s={}){const i=await this.fetchOrderBooks([e],t,s);return this.safeValue(i,e)}parseTicker(e,t){const s=this.safeInteger(e,"trade_timestamp"),i=this.safeString2(e,"market","code");t=this.safeMarket(i,t,"-");const r=this.safeString(e,"trade_price");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high_price"),low:this.safeString(e,"low_price"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"opening_price"),close:r,last:r,previousClose:this.safeString(e,"prev_closing_price"),change:this.safeString(e,"signed_change_price"),percentage:this.safeString(e,"signed_change_rate"),average:void 0,baseVolume:this.safeString(e,"acc_trade_volume_24h"),quoteVolume:this.safeString(e,"acc_trade_price_24h"),info:e},t)}async fetchTickers(e,t={}){let s;if(await this.loadMarkets(),void 0===e){if(s=this.ids.join(","),s.length>this.options.fetchTickersMaxLength){const e=this.ids.length;throw new r(this.id+" fetchTickers() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchTickers")}}else s=this.marketIds(e),s=s.join(",");const i={markets:s},a=await this.publicGetTicker(this.extend(i,t)),n={};for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n[t.symbol]=t}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){const s=await this.fetchTickers([e],t);return this.safeValue(s,e)}parseTrade(e,t){const s=this.safeString2(e,"sequential_id","uuid");let i,r=this.safeInteger(e,"timestamp");void 0===r&&(r=this.parse8601(this.safeString(e,"created_at")));const a=this.safeStringLower2(e,"ask_bid","side");"ask"===a?i="sell":"bid"===a&&(i="buy");const n=this.safeString(e,"funds"),o=this.safeString2(e,"trade_price","price"),c=this.safeString2(e,"trade_volume","volume"),d=this.safeString2(e,"market","code");let h;t=this.safeMarket(d,t,"-");const l=this.safeString(e,a+"_fee");return void 0!==l&&(h={currency:t.quote,cost:l}),this.safeTrade({id:s,info:e,order:undefined,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,type:void 0,side:i,takerOrMaker:void 0,price:o,amount:c,cost:n,fee:h},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e);void 0===s&&(s=200);const a={market:r.id,count:s},n=await this.publicGetTradesTicks(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchTradingFee(e,t={}){await this.loadMarkets();const s={market:this.market(e).id},i=await this.privateGetOrdersChance(this.extend(s,t)),r=this.safeString(i,"ask_fee"),a=this.safeString(i,"bid_fee"),n=f.stringMax(r,a),o=this.safeString(i,"maker_ask_fee"),c=this.safeString(i,"maker_bid_fee"),d=f.stringMax(o,c);return{info:i,symbol:e,maker:this.parseNumber(d),taker:this.parseNumber(n),percentage:!0,tierBased:!1}}parseOHLCV(e,t){return[this.parse8601(this.safeString(e,"candle_date_time_utc")),this.safeNumber(e,"opening_price"),this.safeNumber(e,"high_price"),this.safeNumber(e,"low_price"),this.safeNumber(e,"trade_price"),this.safeNumber(e,"candle_acc_trade_volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=this.parseTimeframe(t),o=this.timeframes[t];void 0===i&&(i=200);const c={market:a.id,timeframe:o,count:i};let d="publicGetCandlesTimeframe";if("minutes"===o){const e=Math.round(n/60);c.unit=e,d+="Unit"}void 0!==s&&(c.to=this.iso8601(this.sum(s,n*i*1e3)));const h=await this[d](this.extend(c,r));return this.parseOHLCVs(h,a,t,s,i)}async createOrder(e,t,s,i,r,a={}){if("market"===t&&"buy"===s&&this.options.createMarketBuyOrderRequiresPrice){if(void 0===r)throw new o(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");i*=r}let n;if("buy"===s)n="bid";else{if("sell"!==s)throw new o(this.id+" createOrder() allows buy or sell side only!");n="ask"}await this.loadMarkets();const c={market:this.market(e).id,side:n};"limit"===t?(c.volume=this.amountToPrecision(e,i),c.price=this.priceToPrecision(e,r),c.ord_type=t):"market"===t&&("buy"===s?(c.ord_type="price",c.price=this.priceToPrecision(e,i)):"sell"===s&&(c.ord_type=t,c.volume=this.amountToPrecision(e,i)));const d=this.safeString2(a,"clientOrderId","identifier");void 0!==d&&(c.identifier=d),a=this.omit(a,["clientOrderId","identifier"]);const h=await this.privatePostOrders(this.extend(c,a));return this.parseOrder(h)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={uuid:e},r=await this.privateDeleteOrder(this.extend(i,s));return this.parseOrder(r)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetDeposits(this.extend(r,i));return this.parseTransactions(n,a,t,s)}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=s);const n=await this.privateGetWithdraws(this.extend(r,i));return this.parseTransactions(n,a,t,s)}parseTransactionStatus(e){return this.safeString({submitting:"pending",submitted:"pending",almost_accepted:"pending",rejected:"failed",accepted:"pending",processing:"pending",done:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"uuid"),i=this.safeNumber(e,"amount"),r=this.safeString(e,"txid"),a=this.parse8601(this.safeString(e,"done_at")),n=this.parse8601(this.safeString(e,"created_at",a));let o=this.safeString(e,"type");"withdraw"===o&&(o="withdrawal");const c=this.safeString(e,"currency"),d=this.safeCurrencyCode(c),h=this.parseTransactionStatus(this.safeStringLower(e,"state")),l=this.safeNumber(e,"fee");return{info:e,id:s,currency:d,amount:i,network:void 0,address:undefined,addressTo:void 0,addressFrom:void 0,tag:undefined,tagTo:void 0,tagFrom:void 0,status:h,type:o,updated:a,txid:r,timestamp:n,datetime:this.iso8601(n),fee:{currency:d,cost:l}}}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}parseOrder(e,t){const s=this.safeString(e,"uuid");let i=this.safeString(e,"side");i="bid"===i?"buy":"sell";let r=this.safeString(e,"ord_type");const a=this.parse8601(this.safeString(e,"created_at")),n=this.parseOrderStatus(this.safeString(e,"state"));let o,c=this.safeNumber(e,"price");const d=this.safeNumber(e,"volume"),h=this.safeNumber(e,"remaining_volume"),l=this.safeNumber(e,"executed_volume");let u,f,p;"price"===r&&(r="market",u=c,c=void 0);let m=this.safeNumber(e,"paid_fee");const g=this.safeString(e,"market");t=this.safeMarket(g,t);let y=this.safeValue(e,"trades",[]);y=this.parseTrades(y,t,void 0,void 0,{order:s,type:r});const b=y.length;if(b>0){o=y[b-1].timestamp;let e=!1;void 0===m&&(e=!0,m=0),u=0;for(let t=0;t<b;t++){const s=y[t];if(u=this.sum(u,s.cost),e){const e=this.safeValue(y[t],"fee",{}),s=this.safeNumber(e,"cost");void 0!==s&&(m=this.sum(m,s))}}f=u/l}void 0!==m&&(p={currency:t.quote,cost:m});return{info:e,id:s,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:o,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:i,price:c,stopPrice:void 0,cost:u,average:f,amount:d,filled:l,remaining:h,status:n,fee:p,trades:y}}async fetchOrdersByState(e,t,s,i,r={}){await this.loadMarkets();const a={state:e};let n;void 0!==t&&(n=this.market(t),a.market=n.id);const o=await this.privateGetOrders(this.extend(a,r));return this.parseOrders(o,n,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersByState("wait",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersByState("done",e,t,s,i)}async fetchCanceledOrders(e,t,s,i={}){return await this.fetchOrdersByState("cancel",e,t,s,i)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={uuid:e},r=await this.privateGetOrder(this.extend(i,s));return this.parseOrder(r)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=await this.privateGetDepositsCoinAddresses(t);return this.parseDepositAddresses(s)}parseDepositAddress(e,t){const s=this.safeString(e,"deposit_address"),i=this.safeString(e,"secondary_address"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r);return this.checkAddress(s),{currency:a,address:s,tag:i,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i=await this.privateGetDepositsCoinAddress(this.extend({currency:s.id},t));return this.parseDepositAddress(i)}async createDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privatePostDepositsGenerateCoinAddress(this.extend(s,t));if(void 0!==this.safeString(i,"message"))throw new l(this.id+" is generating "+e+" deposit address, call fetchDepositAddress or createDepositAddress one more time later to retrieve the generated address");return this.parseDepositAddress(i)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const a=this.currency(e),n={amount:t};let o="privatePostWithdraws";"KRW"!==e?(o+="Coin",n.currency=a.id,n.address=s,void 0!==i&&(n.secondary_address=i)):o+="Krw";const c=await this[o](this.extend(n,r));return this.parseTransaction(c)}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeParams(this.urls.api[t],{hostname:this.hostname});n+="/"+this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("POST"!==s&&Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t){this.checkRequiredCredentials();const e=this.nonce(),t={access_key:this.apiKey,nonce:e};if(Object.keys(o).length){const e=this.urlencode(o),s=this.hash(this.encode(e),"sha512");t.query_hash=s,t.query_hash_alg="SHA512"}r={Authorization:"Bearer "+this.jwt(t,this.encode(this.secret))},"GET"!==s&&"DELETE"!==s&&(a=this.json(i),r["Content-Type"]="application/json")}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeValue(o,"error");if(void 0!==h){const e=this.safeString(h,"message"),t=this.safeString(h,"name"),s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.broad,e,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r(s)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],290:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,OrderNotFound:a,InvalidOrder:n,BadRequest:o,AuthenticationError:c,RateLimitExceeded:d,RequestTimeout:h,BadSymbol:l,AddressPending:u,PermissionDenied:f,InsufficientFunds:p}=e("./base/errors"),{ROUND:m,TICK_SIZE:g}=e("./base/functions/number"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"vcc",name:"VCC Exchange",countries:["VN"],rateLimit:1e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:void 0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:"emulated",fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:void 0,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"60000","5m":"300000","15m":"900000","30m":"1800000","1h":"3600000","2h":"7200000","4h":"14400000","6h":"21600000","12h":"43200000","1d":"86400000","1w":"604800000"},urls:{logo:"https://user-images.githubusercontent.com/1294454/100545356-8427f500-326c-11eb-9539-7d338242d61b.jpg",api:{public:"https://api.vcc.exchange",private:"https://api.vcc.exchange"},www:"https://vcc.exchange",doc:["https://vcc.exchange/api"],fees:"https://support.vcc.exchange/hc/en-us/articles/360016401754",referral:"https://vcc.exchange?ref=l4xhrH"},api:{public:{get:["summary","exchange_info","assets","ticker","trades/{market_pair}","orderbook/{market_pair}","chart/bars","tick_sizes"]},private:{get:["user","balance","orders/{order_id}","orders/open","orders","orders/trades","deposit-address","transactions"],post:["orders"],put:["orders/{order_id}/cancel","orders/cancel-by-type","orders/cancel-all"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:g,exceptions:{exact:{},broad:{"limit may not be greater than":o,"Insufficient balance":p,Unauthenticated:c,"signature is invalid":c,Timeout:h,"Too many requests":d,"quantity field is required":n,"price field is required":n,error_security_level:f,"pair is invalid":l,"type is invalid":n,"Data not found":a}}})}async fetchMarkets(e={}){const t=await this.publicGetExchangeInfo(e),s=this.safeValue(t,"data"),i=this.safeValue(s,"symbols",[]),r=[];for(let e=0;e<i.length;e++){const t=this.safeValue(i,e),s=this.safeString(t,"symbol"),a=s.replace("/","_"),n=this.safeString(t,"coin"),o=this.safeString(t,"currency"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=this.safeValue(t,"precision",{}),l=this.safeValue(t,"limits",{}),u=this.safeValue(l,"amount",{}),f=this.safeValue(l,"price",{}),p=this.safeValue(l,"cost",{}),m={id:a,symbol:s,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settledId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(h,"amount"))),price:this.parseNumber(this.parsePrecision(this.safeString(h,"price"))),cost:this.parseNumber(this.parsePrecision(this.safeString(h,"cost")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(u,"min"),max:void 0},price:{min:this.safeNumber(f,"min"),max:void 0},cost:{min:this.safeNumber(p,"min"),max:void 0}},info:t};r.push(m)}return r}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),s={},i=this.safeValue(t,"data",[]),r=Object.keys(i);for(let e=0;e<r.length;e++){const t=this.safeStringLower(r,e),a=this.safeValue(i,r[e]),n=this.safeCurrencyCode(t),o=this.safeInteger(a,"can_deposit"),c=this.safeInteger(a,"can_withdraw"),d=o&&c,h=1===o,l=1===c;s[n]={id:t,code:n,name:this.safeString(a,"name"),active:d,deposit:h,withdraw:l,fee:this.safeNumber(a,"withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(a,"decimal"))),limits:{withdraw:{min:this.safeNumber(a,"min_withdraw"),max:this.safeNumber(a,"max_withdraw")}}}}return s}async fetchTradingFee(e,t={}){await this.loadMarkets();const s=this.market(e),i=this.extend({symbol:s.id},this.omit(t,"symbol")),r=await this.privateGetTradingFeeSymbol(i);return{info:r,maker:this.safeNumber(r,"provideLiquidityRate"),taker:this.safeNumber(r,"takeLiquidityRate")}}parseBalance(e){const t=this.safeValue(e,"data",{}),s={info:e,timestamp:void 0,datetime:void 0},i=Object.keys(t);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeCurrencyCode(r),n=this.safeValue(t,r),o=this.account();o.free=this.safeString(n,"available_balance"),o.total=this.safeString(n,"balance"),s[a]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}parseOHLCV(e,t){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={coin:a.baseId,currency:a.quoteId,resolution:this.timeframes[t]};i=void 0===i?100:i,i=Math.min(100,i);const o=this.parseTimeframe(t);if(void 0===s){const e=this.seconds();n.to=e,n.from=e-i*o}else{const e=parseInt(s/1e3);n.from=e,n.to=this.sum(e,i*o)}const c=await this.publicGetChartBars(this.extend(n,r));return this.parseOHLCVs(c,a,t,s,i)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market_pair:this.market(e).id,level:2};if(void 0!==t){if(0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t)throw new o(this.id+" fetchOrderBook() limit must be 0, 5, 10, 20, 50, 100, 500 if specified");i.depth=t}const r=await this.publicGetOrderbookMarketPair(this.extend(i,s)),a=this.safeValue(r,"data"),n=this.safeValue(a,"timestamp");return this.parseOrderBook(a,e,n,"bids","asks",0,1)}parseTicker(e,t){const s=this.milliseconds(),i=this.safeString(e,"base_volume"),r=this.safeString(e,"quote_volume"),a=this.safeString(e,"open_price"),n=this.safeString(e,"last_price"),o=this.safeSymbol(void 0,t);return this.safeTicker({symbol:o,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"max_price"),low:this.safeString(e,"min_price"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:i,quoteVolume:r,info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTicker(t),i={},r=this.safeValue(s,"data",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeMarket(t,void 0,"_");i[s.symbol]=this.parseTicker(r[t],s)}return this.filterByArray(i,"symbol",e)}parseTrade(e,t){const s=this.safeInteger2(e,"trade_timestamp","created_at"),i=this.safeStringUpper(e,"coin"),r=this.safeStringUpper(e,"currency");let a;void 0!==i&&void 0!==r&&(a=i+"_"+r);const n=(t=this.safeMarket(a,t,"_")).symbol,o=this.safeString(e,"price"),c=this.safeString2(e,"base_volume","quantity"),d=this.parseNumber(o),h=this.parseNumber(c);let l=this.safeNumber2(e,"quote_volume","amount");void 0===l&&(l=this.parseNumber(y.stringMul(o,c)));const u=this.safeString2(e,"type","trade_type"),f=this.safeString2(e,"trade_id","id"),p=this.safeNumber(e,"fee");let m;return void 0!==p&&(m={cost:p,currency:t.quote}),{info:e,id:f,order:void 0,timestamp:s,datetime:this.iso8601(s),symbol:n,type:void 0,side:u,takerOrMaker:void 0,price:d,amount:h,cost:l,fee:m}}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market_pair:r.id};void 0!==s&&(a.count=Math.min(1e3,s));const n=await this.publicGetTradesMarketPair(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,s)}async fetchTransactions(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.limit=Math.min(1e3,s)),void 0!==t&&(r.start=t);const n=await this.privateGetTransactions(this.extend(r,i));let o=this.safeValue(n,"data",{});return o=this.safeValue(o,"data",[]),this.parseTransactions(o,a,t,s)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"deposit"},i))}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({type:"withdraw"},i))}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeInteger(e,"created_at"),r=this.safeInteger(e,"updated_at"),a=this.safeString(e,"currency"),n=this.safeCurrencyCode(a,t),o=this.parseTransactionStatus(this.safeString(e,"status"));let c=this.safeNumber(e,"amount");void 0!==c&&(c=Math.abs(c));const d=this.safeString(e,"blockchain_address"),h=this.safeString(e,"transaction_id"),l=this.safeString(e,"destination_tag");let u;const f=this.safeNumber(e,"fee");void 0!==f&&(u={cost:f,currency:n});const p=c>0?"deposit":"withdrawal",m=this.safeString(e,"network");return{info:e,id:s,txid:h,timestamp:i,datetime:this.iso8601(i),network:m,address:d,addressTo:d,addressFrom:void 0,tag:l,tagTo:l,tagFrom:void 0,type:p,amount:c,currency:n,status:o,updated:r,fee:u}}parseTransactionStatus(e){return this.safeString({pending:"pending",error:"failed",success:"ok",cancel:"canceled"},e,e)}parseTransactionType(e){return this.safeString({deposit:"deposit",withdraw:"withdrawal"},e,e)}costToPrecision(e,t){return this.decimalToPrecision(t,m,this.markets[e].precision.cost,this.precisionMode,this.paddingMode)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=this.market(e),c={coin:o.baseId,currency:o.quoteId,trade_type:s,type:t};if("ceiling_market"===t){const s=this.safeValue(a,"ceiling");if(void 0!==s)c.ceiling=this.costToPrecision(e,s);else{if(void 0===r)throw new n(this.id+" createOrder() requires a price argument or a ceiling parameter for "+t+" orders");c.ceiling=this.costToPrecision(e,i*r)}}else c.quantity=this.amountToPrecision(e,i);"limit"===t&&(c.price=this.priceToPrecision(e,r));const d=this.safeValue2(a,"stop_price","stopPrice");void 0!==d&&(c.is_stop=1,c.stop_condition="buy"===s?"le":"ge",c.stop_price=this.priceToPrecision(e,d)),a=this.omit(a,["stop_price","stopPrice"]);const h=await this.privatePostOrders(this.extend(c,a)),l=this.safeValue(h,"data");return this.parseOrder(l,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privatePutOrdersOrderIdCancel(this.extend(i,s));return this.parseOrder(r)}async cancelAllOrders(e,t={}){const s=this.safeString(t,"type"),i=void 0===s?"privatePutOrdersCancelAll":"privatePutOrdersCancelByType",r={};void 0!==s&&(r.type=s),await this.loadMarkets();const a=await this[i](this.extend(r,t));let n=this.safeValue(a,"data",{});return n=this.safeValue(a,"data",[]),this.parseOrders(n)}parseOrderStatus(e){return this.safeString({pending:"open",stopping:"open",executing:"open",executed:"closed",canceled:"canceled"},e,e)}parseOrder(e,t){const s=this.safeValue(e,"created_at"),i=this.safeValue(e,"updated_at"),r=this.safeStringUpper(e,"coin")+"_"+this.safeStringUpper(e,"currency"),a=(t=this.safeMarket(r,t,"_")).symbol,n=this.safeString(e,"quantity"),o=this.safeString(e,"executed_quantity"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"ceiling"),h=this.safeString(e,"id"),l=this.safeString(e,"price"),u=this.safeString(e,"executed_price"),f=this.safeString(e,"remaining"),p=this.safeString(e,"type"),m=this.safeString(e,"trade_type"),g={currency:t.quote,cost:this.safeNumber(e,"fee"),rate:this.safeNumber(e,"fee_rate")};let y;i!==s&&(y=i);const b=this.safeNumber(e,"stopPrice");return this.safeOrder({id:h,clientOrderId:h,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:y,status:c,symbol:a,type:p,timeInForce:void 0,postOnly:void 0,side:m,price:l,stopPrice:b,average:u,amount:n,cost:d,filled:o,remaining:f,fee:g,trades:void 0,info:e},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:e},r=await this.privateGetOrdersOrderId(this.extend(i,s)),a=this.safeValue(r,"data");return this.parseOrder(a)}async fetchOrdersWithMethod(e,t,s,i,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.coin=n.baseId,a.currency=n.quoteId),void 0!==s&&(a.start_date=s),void 0!==i&&(a.limit=Math.min(1e3,i));const o=await this[e](this.extend(a,r));let c=this.safeValue(o,"data",{});return c=this.safeValue(c,"data",[]),this.parseOrders(c,n,s,i)}async fetchOpenOrders(e,t,s,i={}){return await this.fetchOrdersWithMethod("privateGetOrdersOpen",e,t,s,i)}async fetchClosedOrders(e,t,s,i={}){return await this.fetchOrdersWithMethod("privateGetOrders",e,t,s,i)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.coin=a.baseId,r.currency=a.quoteId),void 0!==t&&(r.start_date=t),void 0!==s&&(r.limit=Math.min(1e3,s));const n=await this.privateGetOrdersTrades(this.extend(r,i));let o=this.safeValue(n,"data",{});return o=this.safeValue(o,"data",[]),this.parseTrades(o,a,t,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={currency:this.currency(e).id},i=await this.privateGetDepositAddress(this.extend(s,t)),r=this.safeValue(i,"data");if("REQUESTED"===this.safeString(r,"status"))throw new u(this.id+" is generating "+e+" deposit address, call fetchDepositAddress one more time later to retrieve the generated address");const a=this.safeString(r,"blockchain_address");this.checkAddress(a);const n=this.safeString(r,"blockchain_tag"),o=this.safeString(r,"currency");return{currency:this.safeCurrencyCode(o),address:a,tag:n,network:void 0,info:r}}sign(e,t="public",s="GET",i={},r,a){let n=this.version+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if(Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t){this.checkRequiredCredentials();const e=this.milliseconds().toString();"GET"!==s&&(a=this.json(o));const t=s+" "+n,i=this.hmac(this.encode(t),this.encode(this.secret),"sha256");r={Authorization:"Bearer "+this.apiKey,"Content-Type":"application/json",timestamp:e,signature:i}}return n=this.urls.api[t]+"/"+n,{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"message");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],291:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,AuthenticationError:a,InsufficientFunds:n,InvalidOrder:o,AccountSuspended:c,ExchangeError:d,DuplicateOrderId:h,OrderNotFound:l,BadSymbol:u,ExchangeNotAvailable:f,BadRequest:p}=e("./base/errors"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"wavesexchange",name:"Waves.Exchange",countries:["CH"],certified:!0,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg",test:{matcher:"https://matcher-testnet.waves.exchange",node:"https://nodes-testnet.wavesnodes.com",public:"https://api-testnet.wavesplatform.com/v0",private:"https://api-testnet.waves.exchange/v1",forward:"https://testnet.waves.exchange/api/v1/forward/matcher",market:"https://testnet.waves.exchange/api/v1/forward/marketdata/api/v1"},api:{matcher:"https://matcher.waves.exchange",node:"https://nodes.waves.exchange",public:"https://api.wavesplatform.com/v0",private:"https://api.waves.exchange/v1",forward:"https://waves.exchange/api/v1/forward/matcher",market:"https://waves.exchange/api/v1/forward/marketdata/api/v1"},doc:"https://docs.waves.exchange",www:"https://waves.exchange"},api:{matcher:{get:["matcher","matcher/settings","matcher/settings/rates","matcher/balance/reserved/{publicKey}","matcher/debug/allSnashotOffsets","matcher/debug/currentOffset","matcher/debug/lastOffset","matcher/debug/oldestSnapshotOffset","matcher/orderbook","matcher/orderbook/{amountAsset}/{priceAsset}","matcher/orderbook/{baseId}/{quoteId}/publicKey/{publicKey}","matcher/orderbook/{baseId}/{quoteId}/{orderId}","matcher/orderbook/{baseId}/{quoteId}/info","matcher/orderbook/{baseId}/{quoteId}/status","matcher/orderbook/{baseId}/{quoteId}/tradeableBalance/{address}","matcher/orderbook/{publicKey}","matcher/orderbook/{publicKey}/{orderId}","matcher/orders/{address}","matcher/orders/{address}/{orderId}","matcher/transactions/{orderId}"],post:["matcher/orderbook","matcher/orderbook/market","matcher/orderbook/cancel","matcher/orderbook/{baseId}/{quoteId}/cancel","matcher/orderbook/{amountAsset}/{priceAsset}/calculateFee","matcher/debug/saveSnapshots","matcher/orders/{address}/cancel","matcher/orders/cancel/{orderId}"],delete:["matcher/orderbook/{baseId}/{quoteId}","matcher/settings/rates/{assetId}"],put:["matcher/settings/rates/{assetId}"]},node:{get:["addresses","addresses/balance/{address}","addresses/balance/{address}/{confirmations}","addresses/balance/details/{address}","addresses/data/{address}","addresses/data/{address}/{key}","addresses/effectiveBalance/{address}","addresses/effectiveBalance/{address}/{confirmations}","addresses/publicKey/{publicKey}","addresses/scriptInfo/{address}","addresses/scriptInfo/{address}/meta","addresses/seed/{address}","addresses/seq/{from}/{to}","addresses/validate/{address}","alias/by-address/{address}","alias/by-alias/{alias}","assets/{assetId}/distribution/{height}/{limit}","assets/balance/{address}","assets/balance/{address}/{assetId}","assets/details/{assetId}","assets/nft/{address}/limit/{limit}","blockchain/rewards","blockchain/rewards/height","blocks/address/{address}/{from}/{to}/","blocks/at/{height}","blocks/delay/{signature}/{blockNum}","blocks/first","blocks/headers/last","blocks/headers/seq/{from}/{to}","blocks/height","blocks/height/{signature}","blocks/last","blocks/seq/{from}/{to}","blocks/signature/{signature}","consensus/algo","consensus/basetarget","consensus/basetarget/{blockId}","consensus/{generatingbalance}/address","consensus/generationsignature","consensus/generationsignature/{blockId}","debug/balances/history/{address}","debug/blocks/{howMany}","debug/configInfo","debug/historyInfo","debug/info","debug/minerInfo","debug/portfolios/{address}","debug/state","debug/stateChanges/address/{address}","debug/stateChanges/info/{id}","debug/stateWaves/{height}","leasing/active/{address}","node/state","node/version","peers/all","peers/blacklisted","peers/connected","peers/suspended","transactions/address/{address}/limit/{limit}","transactions/info/{id}","transactions/status","transactions/unconfirmed","transactions/unconfirmed/info/{id}","transactions/unconfirmed/size","utils/seed","utils/seed/{length}","utils/time","wallet/seed"],post:["addresses","addresses/data/{address}","addresses/sign/{address}","addresses/signText/{address}","addresses/verify/{address}","addresses/verifyText/{address}","debug/blacklist","debug/print","debug/rollback","debug/validate","node/stop","peers/clearblacklist","peers/connect","transactions/broadcast","transactions/calculateFee","tranasctions/sign","transactions/sign/{signerAddress}","tranasctions/status","utils/hash/fast","utils/hash/secure","utils/script/compileCode","utils/script/compileWithImports","utils/script/decompile","utils/script/estimate","utils/sign/{privateKey}","utils/transactionsSerialize"],delete:["addresses/{address}","debug/rollback-to/{signature}"]},public:{get:["assets","pairs","candles/{baseId}/{quoteId}","transactions/exchange"]},private:{get:["deposit/addresses/{currency}","deposit/addresses/{currency}/{platform}","platforms","deposit/currencies","withdraw/currencies","withdraw/addresses/{currency}/{address}"],post:["oauth2/token"]},forward:{get:["matcher/orders/{address}","matcher/orders/{address}/{orderId}"],post:["matcher/orders/{wavesAddress}/cancel"]},market:{get:["tickers"]}},currencies:{WX:{id:"EMAMLxDnv3xiz8RXg8Btj33jcEw3wLczL3JKYYmuubpc",numericId:void 0,code:"WX",precision:8}},options:{allowedCandles:1440,accessToken:void 0,createMarketBuyOrderRequiresPrice:!0,matcherPublicKey:void 0,quotes:void 0,createOrderDefaultExpiry:24192e5,wavesAddress:void 0,withdrawFeeUSDN:7420,withdrawFeeWAVES:1e5,wavesPrecision:8,messagePrefix:"W",networks:{ERC20:"ETH",BEP20:"BSC"},reverseNetworks:{ETH:"ERC20",BSC:"BEP20"}},commonCurrencies:{EGG:"Waves Ducks"},requiresEddsa:!0,exceptions:{3147270:n,112:n,4:d,13:f,14:f,3145733:c,3148040:h,3148801:a,9440512:a,9440771:u,9441026:o,9441282:o,9441286:o,9441295:o,9441540:o,9441542:o,106954752:a,106954769:a,106957828:a,106960131:a,106981137:a,9437193:l,1048577:p,1051904:a}})}setSandboxMode(e){return this.options.messagePrefix=e?"T":"W",super.setSandboxMode(e)}async getFeesForAsset(e,t,s,i,r={}){await this.loadMarkets();const a=this.market(e);s=this.amountToPrecision(e,s),i=this.priceToPrecision(e,i);const n=this.extend({amountAsset:a.baseId,priceAsset:a.quoteId,orderType:t,amount:s,price:i},r);return await this.matcherPostMatcherOrderbookAmountAssetPriceAssetCalculateFee(n)}async calculateFee(e,t,s,i,r,a="taker",n={}){const o=await this.getFeesForAsset(e,s,i,r);let c;c=this.safeValue(n,"isDiscountFee",!1)?this.safeValue(o,"discount"):this.safeValue(o,"base");const d=this.safeString(c,"matcherFee"),h=this.safeString(c,"feeAssetId"),l=this.safeCurrencyCode(h),u=this.currencyFromPrecision(l,d),f=this.numberToString(i),p=this.numberToString(r),g=this.feeToPrecision(e,this.parseNumber(u)),y=m.stringDiv(u,m.stringMul(f,p));return{type:a,currency:l,rate:this.parseNumber(y),cost:this.parseNumber(g)}}async getQuotes(){let e=this.safeValue(this.options,"quotes");if(e)return e;{const t=await this.matcherGetMatcherSettings();e={};const s=this.safeValue(t,"priceAssets");for(let t=0;t<s.length;t++)e[s[t]]=!0;return this.options.quotes=e,e}}async fetchMarkets(e={}){const t=await this.marketGetTickers(),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"amountAssetID"),a=this.safeString(i,"priceAssetID"),n=r+"/"+a,o=this.safeString(i,"symbol");let[c,d]=o.split("/");c=this.safeCurrencyCode(c),d=this.safeCurrencyCode(d);const h=c+"/"+d;s.push({id:n,symbol:h,base:c,quote:d,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(i,"amountAssetDecimals"),price:this.safeInteger(i,"priceAssetDecimals")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r=this.extend({amountAsset:i.baseId,priceAsset:i.quoteId},s),a=await this.matcherGetMatcherOrderbookAmountAssetPriceAsset(r),n=this.safeInteger(a,"timestamp");return{symbol:e,bids:this.parseOrderBookSide(this.safeValue(a,"bids"),i,t),asks:this.parseOrderBookSide(this.safeValue(a,"asks"),i,t),timestamp:n,datetime:this.iso8601(n),nonce:void 0}}parseOrderBookSide(e,t,s){const i=t.precision,r=this.safeInteger(this.options,"wavesPrecision",8),a=Math.pow(10,i.amount),n=i.amount-i.price,o=Math.pow(10,r-n),c=[];for(let t=0;t<e.length;t++){const i=e[t],r=this.safeInteger(i,"price",0)/o,n=this.safeInteger(i,"amount",0)/a;if(void 0!==s&&t>s)break;c.push([r,n])}return c}checkRequiredKeys(){if(void 0===this.apiKey)throw new a(this.id+" requires apiKey credential");if(void 0===this.secret)throw new a(this.id+" requires secret credential");let e,t;try{e=this.base58ToBinary(this.apiKey)}catch(e){throw new a(this.id+" apiKey must be a base58 encoded public key")}try{t=this.base58ToBinary(this.secret)}catch(e){throw new a(this.id+" secret must be a base58 encoded private key")}const s=this.binaryToBase16(e),i=this.binaryToBase16(t);if(64!==s.length)throw new a(this.id+" apiKey must be a base58 encoded public key");if(64!==i.length)throw new a(this.id+" secret must be a base58 encoded private key")}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e)),o="matcher/orders/{wavesAddress}/cancel"===e;e=this.implodeParams(e,i);let c=this.urls.api[t]+"/"+e,d=this.urlencodeWithArrayRepeat(n);if("private"===t||"forward"===t){r={Accept:"application/json"};const e=this.safeString(this.options,"accessToken");e&&(r.Authorization="Bearer "+e),r["content-type"]="POST"===s?"application/json":"application/x-www-form-urlencoded",o&&(a=this.json([n.orderId]),d=""),d.length>0&&(c+="?"+d)}else"matcher"===t?"POST"===s?(r={Accept:"application/json","Content-Type":"application/json"},a=this.json(n)):r=n:"POST"===s?(r={"content-type":"application/json"},a=this.json(n)):(r={"content-type":"application/x-www-form-urlencoded"},d.length>0&&(c+="?"+d));return{url:c,method:s,body:a,headers:r}}async signIn(e={}){if(!this.safeString(this.options,"accessToken")){const e="ffffff01",t=604800;let s=this.sum(this.seconds(),t);s=s.toString();const i="waves.exchange",r=this.safeString(this.options,"messagePrefix","W")+":"+i+":"+s,a=e+this.binaryToBase16(this.stringToBinary(this.encode(r))),n=this.binaryToBase16(this.base58ToBinary(this.secret)),o=this.eddsa(a,n,"ed25519"),c={grant_type:"password",scope:"general",username:this.apiKey,password:s+":"+o,client_id:i},d=await this.privatePostOauth2Token(c);return this.options.accessToken=this.safeString(d,"access_token"),this.options.accessToken}}parseTicker(e,t){const s=void 0,i=this.safeString(e,"amountAsset"),r=this.safeString(e,"priceAsset");let a;if(void 0!==i&&void 0!==r){const e=i+"/"+r;a=(t=this.safeMarket(e,t,"/")).symbol}const n=this.safeValue(e,"data",{}),o=this.safeString(n,"lastPrice"),c=this.safeString(n,"low"),d=this.safeString(n,"high"),h=this.safeString(n,"weightedAveragePrice"),l=this.safeString(n,"volume"),u=this.safeString(n,"quoteVolume"),f=this.safeString(n,"firstPrice");return this.safeTicker({symbol:a,timestamp:s,datetime:this.iso8601(s),high:d,low:c,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:h,open:f,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:l,quoteVolume:u,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pairs:s.id},r=await this.publicGetPairs(this.extend(i,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetPairs(t),i=this.safeValue(s,"data",[]);return this.parseTickers(i,e)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={baseId:a.baseId,quoteId:a.quoteId,interval:this.timeframes[t]},o=this.safeInteger(this.options,"allowedCandles",1440);void 0===i&&(i=o),i=Math.min(o,i);const c=1e3*this.parseTimeframe(t);if(void 0===s){const e=parseInt(this.milliseconds()/c)*c-(i-1)*c;n.timeStart=e.toString()}else{n.timeStart=s.toString();const e=this.sum(s,c*i);n.timeEnd=e.toString()}const d=await this.publicGetCandlesBaseIdQuoteId(this.extend(n,r)),h=this.safeValue(d,"data",[]);let l,u=this.parseOHLCVs(h,a,t,s,i);u=this.filterFutureCandles(u);const f=u.length;for(let e=0;e<u.length;e++){const t=f-e-1,s=u[t];void 0===s[1]&&(s[1]=l,s[2]=l,s[3]=l,s[4]=l,u[t]=s),l=s[4]}return u}filterFutureCandles(e){const t=[],s=this.milliseconds();for(let i=0;i<e.length&&!(e[i][0]>s);i++)t.push(e[i]);return t}parseOHLCV(e,t){const s=this.safeValue(e,"data",{});return[this.parse8601(this.safeString(s,"time")),this.safeNumber(s,"open"),this.safeNumber(s,"high"),this.safeNumber(s,"low"),this.safeNumber(s,"close"),this.safeNumber(s,"volume",0)]}async fetchDepositAddress(e,t={}){await this.signIn();const s=this.safeValue(this.options,"networks",{}),i=this.safeStringUpper(t,"network"),r=this.safeString(s,i,i);t=this.omit(t,["network"]);const a=await this.privateGetPlatforms(),n={},o={},c=this.safeValue(a,"items",[]);for(let e=0;e<c.length;e++){const t=c[e],s=this.safeString(t,"id"),i=this.safeValue(t,"currencies",[]);for(let e=0;e<i.length;e++){const t=this.safeString(i,e);n[t]=!0,t in o||(o[t]={}),o[t][s]=!0}}if(!(e in n)){const t=Object.keys(n);throw new d(this.id+" fetchDepositAddress() "+e+" not supported. Currency code must be one of "+t.join(", "))}let h;if(void 0===r){const s={currency:e};h=await this.privateGetDepositAddressesCurrency(this.extend(s,t))}else{const s=o[e];if(!(r in s)){const t=Object.keys(s);throw new d(this.id+" "+r+" network "+e+" deposit address not supported. Network must be one of "+t.join(", "))}if("WAVES"===r){const t={publicKey:this.apiKey},s=await this.nodeGetAddressesPublicKeyPublicKey(this.extend(t,t));return{address:this.safeString(s,"address"),code:e,network:r,tag:void 0,info:s}}{const s={currency:e,platform:r};h=await this.privateGetDepositAddressesCurrencyPlatform(this.extend(s,t))}}const l=this.safeValue(h,"currency"),u=this.safeString(l,"platform_id"),f=this.safeValue(this.options,"reverseNetworks",{}),p=this.safeString(f,u,u),m=this.safeValue(h,"deposit_addresses");return{address:this.safeString(m,0),code:e,tag:void 0,network:p,info:h}}async getMatcherPublicKey(){const e=this.safeString(this.options,"matcherPublicKey");if(e)return e;{const e=await this.matcherGetMatcher();return this.options.matcherPublicKey=e.slice(1,e.length-1),this.options.matcherPublicKey}}getAssetBytes(e){return"WAVES"===e?this.numberToBE(0,1):this.binaryConcat(this.numberToBE(1,1),this.base58ToBinary(e))}getAssetId(e){return"WAVES"===e?"":e}priceToPrecision(e,t){const s=this.markets[e],i=this.safeInteger(this.options,"wavesPrecision",8),r=s.precision.amount-s.precision.price;return parseInt(parseFloat(this.toPrecision(t,i-r)))}amountToPrecision(e,t){return parseInt(parseFloat(this.toPrecision(t,this.markets[e].precision.amount)))}currencyToPrecision(e,t,s){return parseInt(parseFloat(this.toPrecision(t,this.currencies[e].precision)))}fromPrecision(e,t){if(void 0===e)return;const s=new m(e);return s.decimals=this.sum(s.decimals,t),s.reduce(),s.toString()}toPrecision(e,t){const s=e.toString(),i=new m(s);return i.decimals=i.decimals-t,i.reduce(),i.toString()}currencyFromPrecision(e,t){const s=this.currencies[e].precision;return this.fromPrecision(t,s)}priceFromPrecision(e,t){const s=this.markets[e],i=this.safeInteger(this.options,"wavesPrecision",8),r=this.sum(i,s.precision.price)-s.precision.amount;return this.fromPrecision(t,r)}safeGetDynamic(e){const t=this.safeValue(e,"orderFee");return"dynamic"in t?this.safeValue(t,"dynamic"):this.safeValue(t.composite.default,"dynamic")}safeGetRates(e){const t=this.safeValue(e,"rates");return void 0===t?{WAVES:1}:t}async createOrder(e,t,s,i,r,a={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();const c=this.market(e),d=await this.getMatcherPublicKey(),h=this.getAssetId(c.baseId),l=this.getAssetId(c.quoteId),u="market"===t;if(u&&void 0===r)throw new o(this.id+" createOrder() requires a price argument for "+t+" orders to determine the max price for buy and the min price for sell");const f="buy"===s?0:1,p=this.milliseconds(),m=this.safeInteger(this.options,"createOrderDefaultExpiry",24192e5),g=this.sum(p,m),y=await this.getFeesForAsset(e,s,i,r),b=this.safeValue(y,"base"),v=this.safeString(b,"feeAssetId"),w=this.safeCurrencyCode(v),S=this.safeString(b,"matcherFee"),k=this.safeValue(y,"discount"),T=this.safeString(k,"feeAssetId"),O=this.safeCurrencyCode(T),_=this.safeString(k,"matcherFee");let x,M;if("feeAsset"in a||"feeAsset"in this.options){const e=this.safeString(a,"feeAsset",this.safeString(this.options,"feeAsset")),t=this.currency(e);x=this.safeString(t,"id")}const I=await this.fetchBalance();if(void 0!==x){if(v!==x&&T!==x)throw new o(this.id+" asset fee must be "+w+" or "+O);const e=this.safeCurrencyCode(x),t=x===v?S:_,s=parseFloat(this.currencyFromPrecision(e,t));if(!(e in I&&I[e].free>=s))throw new n(this.id+" not enough funds of the selected asset fee");M=parseInt(t)}if(void 0===x){const e=parseFloat(this.currencyFromPrecision(w,S));if(w in I&&I[w].free>=e)x=v,M=parseInt(S);else{const e=parseFloat(this.currencyFromPrecision(O,_));O in I&&I[O].free>=e&&(x=T,M=parseInt(_))}}if(void 0===x)throw new n(this.id+" not enough funds on none of the eligible asset fees");i=this.amountToPrecision(e,i),r=this.priceToPrecision(e,r);const C=[this.numberToBE(3,1),this.base58ToBinary(this.apiKey),this.base58ToBinary(d),this.getAssetBytes(c.baseId),this.getAssetBytes(c.quoteId),this.numberToBE(f,1),this.numberToBE(r,8),this.numberToBE(i,8),this.numberToBE(p,8),this.numberToBE(g,8),this.numberToBE(M,8),this.getAssetBytes(x)],P=this.binaryConcatArray(C),A=this.eddsa(this.binaryToBase16(P),this.binaryToBase16(this.base58ToBinary(this.secret)),"ed25519"),N={amountAsset:h,priceAsset:l},V={senderPublicKey:this.apiKey,matcherPublicKey:d,assetPair:N,orderType:s,price:r,amount:i,timestamp:p,expiration:g,matcherFee:parseInt(M),signature:A,version:3};if("WAVES"!==x&&(V.matcherFeeAssetId=x),u){const e=await this.matcherPostMatcherOrderbookMarket(V),t=this.safeValue(e,"message");return this.parseOrder(t,c)}{const e=await this.matcherPostMatcherOrderbook(V),t=this.safeValue(e,"message");return this.parseOrder(t,c)}}async cancelOrder(e,t,s={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.signIn();const i=await this.getWavesAddress(),r=await this.forwardPostMatcherOrdersWavesAddressCancel({wavesAddress:i,orderId:e}),a=this.safeValue(r,"message"),n=this.safeValue(a,0),o=this.safeValue(n,0);return{info:r,id:this.safeString(o,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:t,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0}}async fetchOrder(e,t,s={}){let i;this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets(),void 0!==t&&(i=this.market(t));const r=this.milliseconds(),a=[this.base58ToBinary(this.apiKey),this.numberToBE(r,8)],n=this.binaryConcatArray(a),o=this.binaryToBase16(this.base58ToBinary(this.secret)),c=this.eddsa(this.binaryToBase16(n),o,"ed25519"),d={Timestamp:r.toString(),Signature:c,publicKey:this.apiKey,orderId:e},h=await this.matcherGetMatcherOrderbookPublicKeyOrderId(this.extend(d,s));return this.parseOrder(h,i)}async fetchOrders(e,t,s,i={}){if(this.checkRequiredDependencies(),this.checkRequiredKeys(),void 0===e)throw new r(this.id+" fetchOrders() requires symbol argument");await this.loadMarkets();const a=this.market(e),n=this.milliseconds(),o=[this.base58ToBinary(this.apiKey),this.numberToBE(n,8)],c=this.binaryConcatArray(o),d=this.binaryToBase16(this.base58ToBinary(this.secret)),h=this.eddsa(this.binaryToBase16(c),d,"ed25519"),l={Accept:"application/json",Timestamp:n.toString(),Signature:h,publicKey:this.apiKey,baseId:a.baseId,quoteId:a.quoteId},u=await this.matcherGetMatcherOrderbookBaseIdQuoteIdPublicKeyPublicKey(this.extend(l,i));return this.parseOrders(u,a,t,s)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));const a={address:await this.getWavesAddress(),activeOnly:!0},n=await this.forwardGetMatcherOrdersAddress(a);return this.parseOrders(n,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));const a={address:await this.getWavesAddress(),closedOnly:!0},n=await this.forwardGetMatcherOrdersAddress(a);return this.parseOrders(n,r,t,s)}parseOrderStatus(e){return this.safeString({Cancelled:"canceled",Accepted:"open",Filled:"closed",PartiallyFilled:"open"},e,e)}getSymbolFromAssetPair(e){const t=this.safeString(e,"amountAsset","WAVES"),s=this.safeString(e,"priceAsset","WAVES");return this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(s)}parseOrder(e,t){const s=this.safeInteger(e,"timestamp"),i=this.safeString2(e,"type","orderType");let r="limit";"type"in e&&(r=this.safeString(e,"orderType",r));const a=this.safeString(e,"id"),n=this.safeString(e,"filled"),o=this.safeString(e,"price"),c=this.safeString(e,"amount"),d=this.safeValue(e,"assetPair");let h;void 0!==d?h=this.getSymbolFromAssetPair(d):void 0!==t&&(h=t.symbol);const l=this.safeCurrencyCode(this.safeString(d,"amountAsset","WAVES")),u=this.priceFromPrecision(h,o),f=this.currencyFromPrecision(l,c),p=this.currencyFromPrecision(l,n),m=this.priceFromPrecision(h,this.safeString(e,"avgWeighedPrice")),g=this.parseOrderStatus(this.safeString(e,"status"));let y;if("type"in e){const t=this.safeCurrencyCode(this.safeString(e,"feeAsset"));y={currency:t,fee:this.parseNumber(this.currencyFromPrecision(t,this.safeString(e,"filledFee")))}}else{const t=this.safeCurrencyCode(this.safeString(e,"matcherFeeAssetId","WAVES"));y={currency:t,fee:this.parseNumber(this.currencyFromPrecision(t,this.safeString(e,"matcherFee")))}}return this.safeOrder({info:e,id:a,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:h,type:r,timeInForce:void 0,postOnly:void 0,side:i,price:u,stopPrice:void 0,amount:f,cost:void 0,average:m,filled:p,remaining:void 0,status:g,fee:y,trades:void 0},t)}async getWavesAddress(){const e=this.safeString(this.options,"wavesAddress");if(void 0===e){const e={publicKey:this.apiKey},t=await this.nodeGetAddressesPublicKeyPublicKey(e);return this.options.wavesAddress=this.safeString(t,"address"),this.options.wavesAddress}return e}async fetchBalance(e={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();const t=await this.getWavesAddress(),s={address:t},i=await this.nodeGetAssetsBalanceAddress(s),r=this.safeValue(i,"balances",[]),a={};let n;const o=[],c=[];for(let e=0;e<r.length;e++){const t=r[e],s=this.safeInteger(t,"timestamp");n=void 0===n?s:Math.max(n,s);const i=this.safeValue(t,"issueTransaction"),d=this.safeString(t,"assetId"),h=this.safeString(t,"balance");if(void 0===i){o.push(d),c.push(h);continue}const l=this.safeInteger(i,"decimals");let u;d in this.currencies_by_id&&(u=this.safeCurrencyCode(d),a[u]=this.account(),a[u].total=this.fromPrecision(h,l))}if(o.length){const e={ids:o},t=await this.publicGetAssets(e),s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],i=c[e],r=this.safeValue(t,"data"),n=this.safeInteger(r,"precision"),o=this.safeString(r,"ticker"),d=this.safeCurrencyCode(o);a[d]=this.account(),a[d].total=this.fromPrecision(i,n)}}const d=this.milliseconds(),h=[this.base58ToBinary(this.apiKey),this.numberToBE(d,8)],l=this.binaryConcatArray(h),u=this.binaryToBase16(this.base58ToBinary(this.secret)),f=this.eddsa(this.binaryToBase16(l),u,"ed25519"),p={publicKey:this.apiKey,signature:f,timestamp:d.toString()},m=await this.matcherGetMatcherBalanceReservedPublicKey(p),g=Object.keys(m);for(let e=0;e<g.length;e++){const t=g[e],s=this.safeCurrencyCode(t);s in a||(a[s]=this.account());const i=this.safeString(m,t);s in this.currencies?a[s].used=this.currencyFromPrecision(s,i):a[s].used=i}const y={address:t},b=await this.nodeGetAddressesBalanceAddress(y);a.WAVES=this.safeValue(a,"WAVES",{}),a.WAVES.total=this.currencyFromPrecision("WAVES",this.safeString(b,"balance"));const v=Object.keys(a);for(let e=0;e<v.length;e++){const t=v[e];void 0===this.safeValue(a[t],"used")&&(a[t].used="0")}return a.timestamp=n,a.datetime=this.iso8601(n),this.safeBalance(a)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={sender:await this.getWavesAddress()};let a;void 0!==e&&(a=this.market(e),r.amountAsset=a.baseId,r.priceAsset=a.quoteId);const n=await this.publicGetTransactionsExchange(r),o=this.safeValue(n,"data");return this.parseTrades(o,a,t,s)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={amountAsset:r.baseId,priceAsset:r.quoteId};void 0!==s&&(a.limit=s),void 0!==t&&(a.timeStart=t);const n=await this.publicGetTransactionsExchange(a),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeValue(e,"data"),i=this.safeString(s,"timestamp"),r=this.parse8601(i),a=this.safeString(s,"id"),n=this.safeString(s,"price"),o=this.safeString(s,"amount"),c=this.safeValue(s,"order1"),d=this.safeValue(s,"order2");let h,l;h=this.safeString(c,"senderPublicKey")===this.apiKey?c:d;const u=this.safeValue(h,"assetPair");void 0!==u?l=this.getSymbolFromAssetPair(u):void 0!==t&&(l=t.symbol);const f=this.safeString(h,"orderType"),p=this.safeString(h,"id"),m={cost:this.safeString(h,"matcherFee"),currency:this.safeCurrencyCode(this.safeString(h,"matcherFeeAssetId","WAVES"))};return this.safeTrade({info:e,timestamp:r,datetime:i,symbol:l,id:a,order:p,type:void 0,side:f,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:m},t)}handleErrors(e,t,s,i,r,a,n,o,c){const h=this.safeString(n,"error"),l=this.safeValue(n,"success",!0),u=this.safeValue(this.exceptions,h);if(void 0!==u){const e=this.safeString(n,"message");throw new u(this.id+" "+e)}if("Validation Error"===this.safeString(n,"message"))throw new p(this.id+" "+a);if(!l)throw new d(this.id+" "+a)}async withdraw(e,t,s,i,r={}){if([i,r]=this.handleWithdrawTagAndParams(i,r),"WAVES"!==e){const t=await this.privateGetWithdrawCurrencies(),s={},i=this.safeValue(t,"items",[]);for(let e=0;e<i.length;e++){const t=i[e];s[this.safeString(t,"id")]=!0}if(!(e in s)){const t=Object.keys(s);throw new d(this.id+" withdraw() "+e+" not supported. Currency code must be one of "+t.toString())}}await this.loadMarkets();const a=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],n={};for(let e=0;e<a.length;e++){n[a[e]]=!0}let o=!0;const c=this.remove0xPrefix(s).toLowerCase();for(let e=0;e<c.length;e++){if(!(c[e]in n)){o=!1;break}}let h;if(await this.signIn(),"WAVES"!==e||o){const i={address:s,currency:e},r=await this.privateGetWithdrawAddressesCurrencyAddress(i),a=this.safeValue(r,"currency"),n=this.safeValue(a,"allowed_amount"),o=this.safeNumber(n,"min");if(t<=o)throw new p(this.id+" "+e+" withdraw failed, amount "+t.toString()+" must be greater than the minimum allowed amount of "+o.toString());const c=this.safeValue(r,"proxy_addresses",[]);h=this.safeString(c,0)}else h=s;const l=this.safeInteger(this.options,"withdrawFeeWAVES",1e5),u="WAVES",f=this.currencyToPrecision(e,t),m=this.currency(e),g=this.milliseconds(),y=[this.numberToBE(4,1),this.numberToBE(2,1),this.base58ToBinary(this.apiKey),this.getAssetBytes(m.id),this.getAssetBytes(u),this.numberToBE(g,8),this.numberToBE(f,8),this.numberToBE(l,8),this.base58ToBinary(h),this.numberToBE(0,2)],b=this.binaryConcatArray(y),v=this.binaryToBase16(this.base58ToBinary(this.secret)),w=this.eddsa(this.binaryToBase16(b),v,"ed25519"),S={senderPublicKey:this.apiKey,amount:f,fee:l,type:4,version:2,attachment:"",feeAssetId:this.getAssetId(u),proofs:[w],assetId:this.getAssetId(m.id),recipient:h,timestamp:g,signature:w},k=await this.nodePostTransactionsBroadcast(S);return this.parseTransaction(k,m)}parseTransaction(e,t){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129}],292:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadRequest:a,RateLimitExceeded:n,BadSymbol:o,ArgumentsRequired:c,PermissionDenied:d,InsufficientFunds:h,InvalidOrder:l}=e("./base/errors"),{TICK_SIZE:u}=e("./base/functions/number"),f=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"wazirx",name:"WazirX",countries:["IN"],version:"v2",rateLimit:1e3,has:{CORS:!1,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!1,transfer:!1,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/148647666-c109c20b-f8ac-472f-91c3-5f658cb90f49.jpeg",api:"https://api.wazirx.com/sapi/v1",www:"https://wazirx.com",doc:"https://docs.wazirx.com/#public-rest-api-for-wazirx",fees:"https://wazirx.com/fees",referral:"https://wazirx.com/invite/k7rrnks5"},api:{public:{get:{exchangeInfo:1,depth:1,ping:1,systemStatus:1,"tickers/24hr":1,"ticker/24hr":1,time:1,trades:1}},private:{get:{account:1,allOrders:1,funds:1,historicalTrades:1,openOrders:1,order:1,myTrades:1},post:{order:1,"order/test":1},delete:{order:1,openOrders:1}}},fees:{WRX:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0")}},precisionMode:u,exceptions:{exact:{"-1121":o,1999:a,2002:h,2005:a,2078:d,2098:a,2031:l,2113:a,2115:a,2136:n,94001:l}},options:{recvWindow:1e4}})}async fetchMarkets(e={}){const t=await this.publicGetExchangeInfo(e),s=this.safeValue(t,"symbols",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d=this.safeValue(t,"isSpotTradingAllowed"),h=this.safeValue(t,"filters");let l;for(let e=0;e<h.length;e++){const t=h[e];"PRICE_FILTER"===this.safeString(t,"filterType")&&(l=this.safeNumber(t,"minPrice"))}const u=this.safeValue(this.fees,c,{});let p=this.safeString(u,"taker","0.2");p=f.stringDiv(p,"100");let m=this.safeString(u,"maker","0.2");m=f.stringDiv(m,"100");const g=this.safeString(t,"status");i.push({id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:d,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===g,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(p),maker:this.parseNumber(m),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quoteAssetPrecision")))},limits:{leverage:{min:void 0,max:void 0},price:{min:l,max:void 0},amount:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id};void 0!==t&&(i.limit=t);const r=await this.publicGetDepth(this.extend(i,s)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.publicGetTicker24hr(this.extend(i,t));return this.parseTicker(r,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetTickers24hr(),i={};for(let e=0;e<s.length;e++){const t=s[e],r=this.parseTicker(t);i[r.symbol]=r}return i}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==s&&(a.limit=s);const n=this.safeString(this.options,"fetchTradesMethod","publicGetTrades"),o=await this[n](this.extend(a,i));return this.parseTrades(o,r,t,s)}parseTrade(e,t){const s=this.safeString(e,"id"),i=this.safeInteger(e,"time"),r=this.iso8601(i);t=this.safeMarket(void 0,t);const a=this.safeValue(e,"isBuyerMaker")?"sell":"buy",n=this.safeNumber(e,"price"),o=this.safeNumber(e,"qty"),c=this.safeNumber(e,"quoteQty");return this.safeTrade({info:e,id:s,timestamp:i,datetime:r,symbol:t.symbol,order:s,type:void 0,side:a,takerOrMaker:void 0,price:n,amount:o,cost:c,fee:void 0},t)}async fetchStatus(e={}){const t=await this.publicGetSystemStatus(e);return{status:"normal"===this.safeString(t,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}parseTicker(e,t){const s=this.safeString(e,"symbol"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString(e,"lastPrice"),a=this.safeString(e,"openPrice"),n=this.safeString(e,"highPrice"),o=this.safeString(e,"lowPrice"),c=this.safeString(e,"volume"),d=this.safeString(e,"bidPrice"),h=this.safeString(e,"askPrice"),l=this.safeInteger(e,"at");return this.safeTicker({symbol:i,timestamp:l,datetime:this.iso8601(l),high:n,low:o,bid:d,bidVolume:void 0,ask:h,askVolume:void 0,vwap:void 0,open:a,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:c,quoteVolume:void 0,info:e},t)}parseBalance(e){const t={};for(let s=0;s<e.length;s++){const i=e[s],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free"),n.used=this.safeString(i,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetFunds(e);return this.parseBalance(t)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new c(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.startTime=t),void 0!==s&&(a.limit=s);const n=await this.privateGetAllOrders(this.extend(a,i));let o=this.parseOrders(n,r,t,s);return o=this.filterBy(o,"symbol",e),o}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const n=await this.privateGetOpenOrders(this.extend(r,i));return this.parseOrders(n,a,t,s)}async cancelAllOrders(e,t={}){if(void 0===e)throw new c(this.id+" cancelAllOrders() requires a `symbol` argument");await this.loadMarkets();const s={symbol:this.market(e).id};return await this.privateDeleteOpenOrders(this.extend(s,t))}async cancelOrder(e,t,s={}){if(void 0===t)throw new c(this.id+" cancelOrder() requires a `symbol` argument");await this.loadMarkets();const i={symbol:this.market(t).id,orderId:e},r=await this.privateDeleteOrder(this.extend(i,s));return this.parseOrder(r)}async createOrder(e,t,s,i,a,n={}){if("limit"!==(t=t.toLowerCase())&&"stop_limit"!==t)throw new r(this.id+" createOrder() supports limit and stop_limit orders only");if(void 0===a)throw new r(this.id+" createOrder() requires a price argument");await this.loadMarkets();const o=this.market(e),c={symbol:o.id,side:s,quantity:i,type:"limit"};c.price=this.priceToPrecision(e,a);void 0!==this.safeString(n,"stopPrice")&&(c.type="stop_limit");const d=await this.privatePostOrder(this.extend(c,n));return this.parseOrder(d,o)}parseOrder(e,t){const s=this.safeInteger(e,"createdTime"),i=this.safeInteger(e,"updatedTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeString(e,"quantity"),o=this.safeString(e,"executedQty"),c=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"id"),h=this.safeString(e,"price"),l=this.safeStringLower(e,"type"),u=this.safeStringLower(e,"side");return this.safeOrder({info:e,id:d,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:i,status:c,symbol:a,type:l,timeInForce:void 0,postOnly:void 0,side:u,price:h,amount:n,filled:o,remaining:void 0,cost:void 0,fee:void 0,average:void 0,trades:[]},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/"+e;if("public"===t&&Object.keys(i).length&&(n+="?"+this.urlencode(i)),"private"===t){this.checkRequiredCredentials();const e=this.milliseconds();let t=this.extend({recvWindow:this.options.recvWindow,timestamp:e},i);t=this.keysort(t);const s=this.hmac(this.encode(this.urlencode(t)),this.encode(this.secret),"sha256");n+="?"+this.urlencode(t),n+="&signature="+s,r={"Content-Type":"application/x-www-form-urlencoded","X-Api-Key":this.apiKey}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.safeString(o,"code");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],293:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeNotAvailable:r,ExchangeError:a,DDoSProtection:n,BadSymbol:o,InvalidOrder:c,ArgumentsRequired:d,AuthenticationError:h,OrderNotFound:l,PermissionDenied:u,InsufficientFunds:f,BadRequest:p,NotSupported:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number"),y=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"whitebit",name:"WhiteBit",version:"v2",countries:["EE"],rateLimit:500,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:void 0,createLimitOrder:void 0,createMarketOrder:void 0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,setLeverage:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg",api:{v1:{public:"https://whitebit.com/api/v1/public",private:"https://whitebit.com/api/v1"},v2:{public:"https://whitebit.com/api/v2/public"},v4:{public:"https://whitebit.com/api/v4/public",private:"https://whitebit.com/api/v4"}},www:"https://www.whitebit.com",doc:"https://github.com/whitebit-exchange/api-docs",fees:"https://whitebit.com/fee-schedule",referral:"https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963"},api:{web:{get:["v1/healthcheck"]},v1:{public:{get:["markets","tickers","ticker","symbols","depth/result","history","kline"]},private:{post:["account/balance","order/new","order/cancel","orders","account/order_history","account/executed_history","account/executed_history/all","account/order"]}},v2:{public:{get:["markets","ticker","assets","fee","depth/{market}","trades/{market}"]}},v4:{public:{get:["assets","fee","orderbook/{market}","ticker","trades/{market}","time","ping"]},private:{post:["collateral-account/leverage","main-account/address","main-account/balance","main-account/create-new-address","main-account/codes","main-account/codes/apply","main-account/codes/my","main-account/codes/history","main-account/fiat-deposit-url","main-account/history","main-account/withdraw","main-account/withdraw-pay","main-account/transfer","trade-account/balance","trade-account/executed-history","trade-account/order","trade-account/order/history","order/new","order/market","order/stock_market","order/stop_limit","order/stop_market","order/cancel","orders","profile/websocket_token"]}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{createMarketBuyOrderRequiresPrice:!0,fiatCurrencies:["EUR","USD","RUB","UAH"],accountsByType:{main:"main",spot:"trade",margin:"margin"},transfer:{fillTransferResponseFromRequest:!0}},precisionMode:g,exceptions:{exact:{"Unauthorized request.":h,"The market format is invalid.":o,"Market is not available":o,"Invalid payload.":p,"Amount must be greater than 0":c,"The order id field is required.":c,"Not enough balance":f,"This action is unauthorized.":u,"This API Key is not authorized to perform this action.":u,"Unexecuted order was not found.":l,503:r,422:l},broad:{"Given amount is less than min amount":c,"Total is less than":c,"fee must be no less than":c,"Enable your key in API settings":u}}})}async fetchMarkets(e={}){const t=await this.v2PublicGetMarkets(e),s=this.safeValue(t,"result",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeString(t,"stock"),n=this.safeString(t,"money"),o=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),d={id:r,symbol:o+"/"+c,base:o,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:this.safeValue(t,"tradesEnabled"),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"makerFee"),maker:this.safeNumber(t,"takerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"stockPrec"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"moneyPrec")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minTotal"),max:void 0}},info:t};i.push(d)}return i}async fetchCurrencies(e={}){const t=await this.v4PublicGetAssets(e),s=Object.keys(t),i={};for(let e=0;e<s.length;e++){const r=s[e],a=t[r],n=this.safeValue(a,"can_deposit",!0),o=this.safeValue(a,"can_withdraw",!0),c=n&&o,d=this.safeCurrencyCode(r);i[d]={id:r,code:d,info:a,name:void 0,active:c,deposit:n,withdraw:o,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(a,"min_withdraw"),max:this.safeNumber(a,"max_withdraw")}}}}return i}async fetchTransactionFees(e,t={}){await this.loadMarkets();const s=await this.v4PublicGetFee(t),i=Object.keys(s),r={},a={};for(let e=0;e<i.length;e++){const t=i[e],n=s[t],o=this.safeCurrencyCode(t),c=this.safeValue(n,"withdraw",{});r[o]=this.safeString(c,"fixed");const d=this.safeValue(n,"deposit",{});a[o]=this.safeString(d,"fixed")}return{withdraw:r,deposit:a,info:s}}async fetchTradingFees(e={}){const t=await this.v4PublicGetAssets(e),s={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e],r=this.market(i),a=this.safeValue(t,r.baseId,{});let n=this.safeString(a,"maker_fee"),o=this.safeString(a,"taker_fee");n=y.stringDiv(n,"100"),o=y.stringDiv(o,"100"),s[i]={info:a,symbol:r.symbol,percentage:!0,tierBased:!1,maker:this.parseNumber(n),taker:this.parseNumber(o)}}return s}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={market:s.id},r=await this.v1PublicGetTicker(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseTicker(a,s)}parseTicker(e,t){t=this.safeMarket(void 0,t);const s=this.safeString(e,"last_price");return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:s,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeString2(e,"base_volume","volume"),quoteVolume:this.safeString2(e,"quote_volume","deal"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.v4PublicGetTicker(t),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeMarket(t),n=this.parseTicker(s[t],a);r[n.symbol]=n}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={market:this.market(e).id};void 0!==t&&(i.depth=t);const r=await this.v4PublicGetOrderbookMarket(this.extend(i,s)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={market:r.id},n=await this.v4PublicGetTradesMarket(this.extend(a,i));return this.parseTrades(n,r,t,s)}async fetchMyTrades(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.market=r.id);const n=await this.v4PrivatePostTradeAccountExecutedHistory(this.extend(a,i));if(Array.isArray(n))return this.parseTrades(n,r,t,s);{let e=[];const i=Object.keys(n);for(let r=0;r<i.length;r++){const a=i[r],o=this.safeMarket(a,void 0,"_"),c=this.safeValue(n,a,[]),d=this.parseTrades(c,o,t,s);e=this.arrayConcat(e,d)}e=this.sortBy2(e,"timestamp","id");const r=void 0===t;return this.filterBySinceLimit(e,t,s,"timestamp",r)}}parseTrade(e,t){t=this.safeMarket(void 0,t);const s=this.safeTimestamp2(e,"time","trade_timestamp"),i=this.safeString2(e,"dealOrderId","orderId"),r=this.safeString(e,"deal"),a=this.safeString(e,"price"),n=this.safeString2(e,"amount","base_volume"),o=this.safeString2(e,"id","tradeID"),c=this.safeString2(e,"type","side"),d=t.symbol,h=this.safeInteger(e,"role");let l,u;void 0!==h&&(l=1===h?"maker":"taker");const f=this.safeString(e,"fee");return void 0!==f&&(u={cost:f,currency:t.quote}),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:d,id:o,order:i,type:void 0,takerOrMaker:l,side:c,price:a,amount:n,cost:r,fee:u},t)}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:this.timeframes[t]};if(void 0!==s){const e=1440;void 0===i&&(i=e),i=Math.min(i,e);const r=parseInt(s/1e3),a=this.parseTimeframe(t),o=this.sum(r,a*i);n.start=r,n.end=o}void 0!==i&&(n.limit=i);const o=await this.v1PublicGetKline(this.extend(n,r)),c=this.safeValue(o,"result",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOHLCV(e,t){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchStatus(e={}){const t=await this.v4PublicGetPing(e),s=this.safeString(t,0);return{status:"pong"===s?"ok":s,updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.v4PublicGetTime(e);return this.safeInteger(t,"time")}async createOrder(e,t,s,i,r,a={}){let n;await this.loadMarkets();const o={market:this.market(e).id,side:s,amount:this.amountToPrecision(e,i)},h=this.safeNumber2(a,"stopPrice","activationPrice");if(void 0!==h?(o.activation_price=this.priceToPrecision(e,h),"limit"===t||"stopLimit"===t?n="v4PrivateOPostOrderStopLimit":"market"!==t&&"stopMarket"!==t||(n="v4PrivatePostOrderStopMarket")):("market"===t&&(n="v4PrivatePostOrderMarket"),"limit"===t&&(n="v4PrivatePostOrderNew")),"limit"===t||"stopLimit"===t){if(void 0===r)throw new d(this.id+" createOrder() requires a price argument for a stopLimit order");const t=this.priceToPrecision(e,r);o.price=t}if(("market"===t||"stopMarket"===t)&&"buy"===s){let t=this.safeNumber(a,"cost");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==r)void 0===t&&(t=i*r);else if(void 0===t)throw new c(this.id+" createOrder() requires the price argument for market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?i:t;o.amount=this.costToPrecision(e,t)}if(void 0===n)throw new d(this.id+" createOrder() requires one of the following order types: market, limit, stopLimit or stopMarket");const l=await this[n](this.extend(o,a));return this.parseOrder(l)}async cancelOrder(e,t,s={}){if(void 0===t)throw new d(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i={market:this.market(t).id,orderId:parseInt(e)};return await this.v4PrivatePostOrderCancel(this.extend(i,s))}parseBalance(e){const t=Object.keys(e),s={};for(let i=0;i<t.length;i++){const r=t[i],a=e[r],n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"available"),o.used=this.safeString(a,"freeze"),s[n]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v4PrivatePostTradeAccountBalance(e);return this.parseBalance(t)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new d(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==s&&(a.limit=s);const n=await this.v4PrivatePostOrders(this.extend(a,i));return this.parseOrders(n,r,t,s,{status:"open"})}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),e=a.symbol,r.market=a.id),void 0!==s&&(r.limit=s);const n=await this.v4PrivatePostTradeAccountOrderHistory(this.extend(r,i)),o=Object.keys(n);let c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeMarket(t,void 0,"_"),i=n[t];for(let e=0;e<i.length;e++){const t=this.parseOrder(i[e],s);c.push(this.extend(t,{status:"filled"}))}}return c=this.sortBy(c,"timestamp"),c=this.filterBySymbolSinceLimit(c,e,t,s,void 0===t),c}parseOrder(e,t){const s=this.safeString(e,"market"),i=(t=this.safeMarket(s,t,"_")).symbol,r=this.safeString(e,"side"),a=this.safeString(e,"dealStock"),n=this.safeString(e,"left"),o=this.safeString(e,"clientOrderId");let c=this.safeString(e,"price");const d=this.safeString(e,"activation_price"),h=this.safeString2(e,"orderId","id"),l=this.safeString(e,"type");let u,f=this.safeString(e,"amount");"0"===c&&(c=void 0),"buy"===r&&l.indexOf("market")>=0&&(u=f,f=void 0,void 0!==c&&(f=y.stringDiv(u,c)));const p=this.safeString(e,"dealFee");let m;void 0!==p&&(m={cost:this.parseNumber(p),currency:t.quote});const g=this.safeTimestamp2(e,"ctime","timestamp"),b=this.safeTimestamp(e,"ftime");return this.safeOrder({info:e,id:h,symbol:i,clientOrderId:o,timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:b,timeInForce:void 0,postOnly:void 0,status:void 0,side:r,price:c,type:l,stopPrice:d,amount:f,filled:a,remaining:n,average:void 0,cost:u,fee:m,trades:void 0},t)}async fetchOrderTrades(e,t,s,i,r={}){await this.loadMarkets();const a={orderId:parseInt(e)};let n;void 0!==t&&(n=this.market(t),a.market=n.id),void 0!==i&&(a.limit=i);const o=await this.v4PrivatePostTradeAccountOrder(this.extend(a,r)),c=this.safeValue(o,"records",[]);return this.parseTrades(c,n)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={ticker:this.currency(e).id};let i="v4PrivatePostMainAccountAddress";if(this.isFiat(e)){i="v4PrivatePostMainAccountFiatDepositUrl";const e=this.safeNumber(t,"provider");if(void 0===e)throw new d(this.id+" fetchDepositAddress() requires a provider when the ticker is fiat");s.provider=e;const r=this.safeNumber(t,"amount");if(void 0===r)throw new d(this.id+" fetchDepositAddress() requires an amount when the ticker is fiat");s.amount=r;if(void 0===this.safeValue(t,"uniqueId"))throw new d(this.id+" fetchDepositAddress() requires an uniqueId when the ticker is fiat")}const r=await this[i](this.extend(s,t)),a=this.safeString(r,"url"),n=this.safeValue(r,"account",{}),o=this.safeString(n,"address",a),c=this.safeString(n,"memo");return this.checkAddress(o),{currency:e,address:o,tag:c,network:void 0,info:r}}async setLeverage(e,t,s={}){if(await this.loadMarkets(),void 0!==t)throw new m(this.id+" setLeverage() does not allow to set per symbol");if(e<1||e>20)throw new p(this.id+" setLeverage() leverage should be between 1 and 20");const i={leverage:e};return await this.v4PrivatePostCollateralAccountLeverage(this.extend(i,s))}async transfer(e,t,s,i,r={}){await this.loadMarkets();const n=this.currency(e),o=this.safeValue(this.options,"accountsByType"),c=this.safeString(o,s,s),d=this.safeString(o,i,i);let h;if("main"===c&&"trade"===d?h="deposit":"trade"===c&&"main"===d&&(h="withdraw"),void 0===h)throw new a(this.id+" transfer() only allows transfers between main account and spot account");const l={ticker:n.id,method:h,amount:this.currencyToPrecision(e,t)},u=await this.v4PrivatePostMainAccountTransfer(this.extend(l,r)),f=this.parseTransfer(u,n),p=this.safeValue(this.options,"transfer",{});return this.safeValue(p,"fillTransferResponseFromRequest",!0)&&(f.amount=t,f.fromAccount=s,f.toAccount=i),f}parseTransfer(e,t){return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:"pending"}}async withdraw(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={ticker:a.id,amount:this.currencyToPrecision(e,t),address:s};let o=this.safeValue(r,"uniqueId");if(void 0===o&&(o=this.uuid22()),n.uniqueId=o,void 0!==i&&(n.memo=i),this.isFiat(e)){const e=this.safeValue(r,"provider");if(void 0===e)throw new d(this.id+" withdraw() requires a provider when the ticker is fiat");n.provider=e}const c=await this.v4PrivatePostMainAccountWithdraw(this.extend(n,r));return this.extend({id:o},this.parseTransaction(c,a))}parseTransaction(e,t){t=this.safeCurrency(void 0,t);const s=this.safeString(e,"address"),i=this.safeTimestamp(e,"createdAt"),r=this.safeString(e,"ticker"),a=this.safeString(e,"status"),n=this.safeString(e,"method");return{id:this.safeString(e,"uniqueId"),txid:this.safeString(e,"transactionHash"),timestamp:i,datetime:this.iso8601(i),network:this.safeString(e,"network"),addressFrom:"1"===n?s:void 0,address:s,addressTo:"2"===n?s:void 0,amount:this.safeNumber(e,"amount"),type:"1"===n?"deposit":"withdrawal",currency:this.safeCurrencyCode(r,t),status:this.parseTransactionStatus(a),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"description"),fee:{cost:this.safeNumber(e,"fee"),currency:this.safeCurrencyCode(r,t)},info:e}}parseTransactionStatus(e){return this.safeString({1:"pending",2:"pending",3:"ok",4:"canceled",5:"pending",6:"pending",7:"ok",9:"canceled",10:"pending",11:"pending",12:"pending",13:"pending",14:"pending",15:"pending",16:"pending",17:"pending"},e,e)}async fetchDeposit(e,t,s={}){let i;await this.loadMarkets();const r={transactionMethod:1,uniqueId:e,limit:1,offset:0};void 0!==t&&(i=this.currency(t),r.ticker=i.id);const a=await this.v4PrivatePostMainAccountHistory(this.extend(r,s)),n=this.safeValue(a,"records",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,i)}async fetchDeposits(e,t,s,i={}){let r;await this.loadMarkets();const a={transactionMethod:1,limit:100,offset:0};void 0!==e&&(r=this.currency(e),a.ticker=r.id),void 0!==s&&(a.limit=s);const n=await this.v4PrivatePostMainAccountHistory(this.extend(a,i)),o=this.safeValue(n,"records",[]);return this.parseTransactions(o,r,t,s)}isFiat(e){const t=this.safeValue(this.options,"fiatCurrencies",[]);return this.inArray(e,t)}sign(e,t="public",s="GET",i={},r,a){const n=this.omit(i,this.extractParams(e)),o=this.safeValue(t,0),c=this.safeValue(t,1),d="/"+this.implodeParams(e,i);let h=this.urls.api[o][c]+d;if("public"===c&&Object.keys(n).length&&(h+="?"+this.urlencode(n)),"private"===c){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.stringToBinary(this.encode(this.secret)),s="/api/"+o+d;a=this.json(this.extend({request:s,nonce:e},i));const n=this.stringToBase64(a),c=this.hmac(n,t,"sha512");r={"Content-Type":"application/json","X-TXC-APIKEY":this.apiKey,"X-TXC-PAYLOAD":this.decode(n),"X-TXC-SIGNATURE":c}}return{url:h,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,o,c,d,h){if(418===e||429===e)throw new n(this.id+" "+e.toString()+" "+t+" "+o);if(404===e)throw new a(this.id+" "+e.toString()+" endpoint not found");if(void 0!==c){const e=this.safeInteger(c,"status"),t=this.safeString(c,"message"),s=this.safeInteger(c,"code"),i=void 0!==e&&"200"!==e;if(i||void 0!==s){const s=this.id+" "+o;let r=t;if(i)r=e;else{const e=this.safeValue(c,"errors");if(void 0!==e){const t=Object.keys(e)[0],s=this.safeValue(e,t,[]);r=s.length>0?s[0]:o}}throw this.throwExactlyMatchedException(this.exceptions.exact,r,s),this.throwBroadlyMatchedException(this.exceptions.broad,o,s),new a(s)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],294:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ArgumentsRequired:r,AuthenticationError:a,RateLimitExceeded:n,BadRequest:o,ExchangeError:c,InvalidOrder:d}=e("./base/errors"),{TICK_SIZE:h}=e("./base/functions/number"),l=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"woo",name:"WOO X",countries:["KY"],rateLimit:100,version:"v1",certified:!1,hostname:"woo.org",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!1,borrowMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelWithdraw:!1,createDepositAddress:!1,createMarketOrder:!1,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,repayMargin:!0,setLeverage:!0,setMargin:!1,transfer:!0,withdraw:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w","1M":"1mon","1y":"1y"},urls:{logo:"https://user-images.githubusercontent.com/1294454/150730761-1a00e5e0-d28c-480f-9e65-089ce3e6ef3b.jpg",api:{pub:"https://api-pub.woo.org",public:"https://api.{hostname}",private:"https://api.{hostname}"},test:{pub:"https://api-pub.staging.woo.org",public:"https://api.staging.woo.org",private:"https://api.staging.woo.org"},www:"https://woo.org/",doc:["https://docs.woo.org/"],fees:["https://support.woo.org/hc/en-001/articles/4404611795353--Trading-Fees"],referral:"https://referral.woo.org/BAJS6oNmZb3vi3RGA"},api:{v1:{pub:{get:{"hist/kline":10}},public:{get:{info:1,"info/{symbol}":1,market_trades:1,token:1,token_network:1,funding_rates:1,"funding_rate/{symbol}":1,funding_rate_history:1,futures:1,"futures/{symbol}":1}},private:{get:{"client/token":1,"order/{oid}":1,"client/order/{client_order_id}":1,orders:1,"orderbook/{symbol}":1,kline:1,"client/trade/{tid}":1,"order/{oid}/trades":1,"client/trades":1,"client/info":60,"asset/deposit":120,"asset/history":60,"sub_account/all":60,"sub_account/assets":60,token_interest:60,"token_interest/{token}":60,"interest/history":60,"interest/repay":60,"funding_fee/history":30,positions:30,"position/{symbol}":30},post:{order:5,"asset/main_sub_transfer":30,"asset/withdraw":120,"interest/repay":60,"client/account_mode":120,"client/leverage":120},delete:{order:1,"client/order":1,orders:1,"asset/withdraw":120}}},v2:{private:{get:{"client/holding":1}}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0002"),taker:this.parseNumber("0.0005")}},options:{createMarketBuyOrderRequiresPrice:!0,"network-aliases-for-tokens":{HT:"ERC20",OMG:"ERC20",UATOM:"ATOM",ZRX:"ZRX"},defaultNetworkCodeForCurrencies:{},transfer:{fillResponseFromRequest:!0}},commonCurrencies:{},exceptions:{exact:{"-1000":c,"-1001":a,"-1002":a,"-1003":n,"-1004":o,"-1005":o,"-1006":o,"-1007":o,"-1008":d,"-1009":o,"-1011":c,"-1012":o,"-1101":d,"-1102":d,"-1103":d,"-1104":d,"-1105":d},broad:{"symbol must not be blank":o,"The token is not supported":o,"Your order and symbol are not valid or already canceled":o,"Insufficient WOO. Please enable margin trading for leverage trading":o}},precisionMode:h})}async fetchMarkets(e={}){const t=await this.v1PublicGetInfo(e),s=[],i=this.safeValue(t,"rows",[]);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=r.split("_");let n=this.safeStringLower(a,0);const o="spot"===n,c="perp"===n,d=this.safeString(a,1),h=this.safeString(a,2),l=this.safeCurrencyCode(d),u=this.safeCurrencyCode(h);let f,p,m,g,y=l+"/"+u;c&&(f=this.safeString(a,2),p=this.safeCurrencyCode(f),y=l+"/"+u+":"+p,m=this.parseNumber("1"),n="swap",g=!0),s.push({id:r,symbol:y,base:l,quote:u,settle:p,baseId:d,quoteId:h,settleId:f,type:n,spot:o,margin:!0,swap:c,future:!1,option:!1,active:void 0,contract:c,linear:g,inverse:void 0,contractSize:m,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"base_tick"),price:this.safeNumber(t,"quote_tick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"base_min"),max:this.safeNumber(t,"base_max")},price:{min:this.safeNumber(t,"quote_min"),max:this.safeNumber(t,"quote_max")},cost:{min:this.safeNumber(t,"min_notional"),max:void 0}},info:t})}return s}async fetchTrades(e,t,s,i={}){if(void 0===e)throw new r(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==s&&(n.limit=s);const o=await this.v1PublicGetMarketTrades(this.extend(n,i)),c=this.safeValue(o,"rows",{});return this.parseTrades(c,a,t,s)}parseTrade(e,t){const s="id"in e,i=this.safeTimestamp(e,"executed_timestamp"),r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.safeString(e,"executed_price"),o=this.safeString(e,"executed_quantity"),c=this.safeString(e,"order_id"),d=this.parseTokenAndFeeTemp(e,"fee_asset","fee"),h=l.stringMul(n,o),u=this.safeStringLower(e,"side"),f=this.safeString(e,"id");let p;if(s){p="1"===this.safeString(e,"is_maker")?"maker":"taker"}return this.safeTrade({id:f,timestamp:i,datetime:this.iso8601(i),symbol:a,side:u,price:n,amount:o,cost:h,order:c,takerOrMaker:p,type:void 0,fee:d,info:e},t)}parseTokenAndFeeTemp(e,t,s){const i=this.safeString(e,s);let r;if(void 0!==i){const s=this.safeString(e,t);r={cost:i,currency:this.safeCurrencyCode(s)}}return r}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.v1PrivateGetClientInfo(e),s=this.safeValue(t,"application",{}),i=this.safeString(s,"maker_fee_rate"),r=this.safeString(s,"taker_fee_rate"),a={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];a[s]={info:t,symbol:s,maker:this.parseNumber(l.stringDiv(i,"10000")),taker:this.parseNumber(l.stringDiv(r,"10000")),percentage:!0,tierBased:!0}}return a}async fetchCurrencies(e={}){const t={},s=await this.v1PublicGetToken(e),i=this.safeValue(s,"rows",[]),r=this.groupBy(i,"balance_token"),a=Object.keys(r);for(let e=0;e<a.length;e++){const s=a[e],i=r[s],n=this.safeCurrencyCode(s);let o;const c={};for(let e=0;e<i.length;e++){const t=i[e];o=this.safeString(t,"fullname");const s=this.safeString(t,"token"),r=s.split("_")[0],a=this.parseNumber(this.parsePrecision(this.safeString(t,"decimals")));c[r]={id:s,network:r,limits:{withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:a,info:t}}t[n]={id:s,name:o,code:n,precision:void 0,active:void 0,fee:void 0,networks:c,limits:{deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},info:i}}return t}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,order_type:t.toUpperCase(),side:s.toUpperCase()};if(void 0!==r&&(o.order_price=this.priceToPrecision(e,r)),"market"===t)if("buy"===s){const t=this.safeNumber(a,"cost");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0))if(void 0===t){if(void 0===r)throw new d(this.id+" createOrder() requires the price argument for market buy orders to calculate total order cost. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or alternatively, supply the total cost value in the 'order_amount' in  exchange-specific parameters");o.order_amount=this.costToPrecision(e,i*r)}else o.order_amount=this.costToPrecision(e,t)}else o.order_quantity=this.amountToPrecision(e,i);else o.order_quantity=this.amountToPrecision(e,i);const c=this.safeString2(a,"clOrdID","clientOrderId");void 0!==c&&(o.client_order_id=c),a=this.omit(a,["clOrdID","clientOrderId"]);const h=await this.v1PrivatePostOrder(this.extend(o,a));return this.extend(this.parseOrder(h,n),{type:t})}async cancelOrder(e,t,s={}){if(void 0===t)throw new r(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i={},a=this.safeString2(s,"clOrdID","clientOrderId"),n=this.safeString2(s,"client_order_id",a),o=void 0!==n;let c;o?(i.client_order_id=n,s=this.omit(s,["clOrdID","clientOrderId","client_order_id"])):i.order_id=e,void 0!==t&&(c=this.market(t)),i.symbol=c.id;const d=await this.v1PrivateDeleteOrder(this.extend(i,s)),h={symbol:t};return o?h.client_order_id=n:h.id=e,this.extend(this.parseOrder(d),h)}async cancelAllOrders(e,t={}){if(void 0===e)throw new r(this.id+" canelOrders() requires a symbol argument");await this.loadMarkets();const s={symbol:this.market(e).id};return await this.v1PrivateDeleteOrders(this.extend(s,t))}async fetchOrder(e,t,s={}){await this.loadMarkets();const i=void 0!==t?this.market(t):void 0,r={},a=this.safeString2(s,"clOrdID","clientOrderId");let n;a?(n="v1PrivateGetClientOrderClientOrderId",r.client_order_id=a):(n="v1PrivateGetOrderOid",r.oid=e);const o=await this[n](this.extend(r,s));return this.parseOrder(o,i)}async fetchOrders(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetOrders(this.extend(r,i)),o=this.safeValue(n,"rows");return this.parseOrders(o,a,t,s,i)}parseOrder(e,t){const s=this.safeTimestamp2(e,"timestamp","created_time"),i=this.safeInteger(e,"order_id"),r=this.safeTimestamp(e,"client_order_id"),a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t)).symbol,o=this.safeString2(e,"order_price","price"),c=this.safeString2(e,"order_quantity","quantity"),d=this.safeString2(e,"order_amount","amount"),h=this.safeStringLower2(e,"order_type","type"),u=this.safeValue(e,"status"),f=this.safeStringLower(e,"side"),p=this.safeValue(e,"executed"),m=l.stringSub(d,p),g=this.safeValue(e,"total_fee"),y=this.safeString(e,"fee_asset"),b=this.safeValue(e,"Transactions");return this.safeOrder({id:i,clientOrderId:r,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:this.parseOrderStatus(u),symbol:n,type:h,timeInForce:void 0,postOnly:void 0,side:f,price:o,stopPrice:void 0,average:void 0,amount:c,filled:p,remaining:m,cost:d,trades:b,fee:{cost:g,currency:y},info:e},t)}parseOrderStatus(e){if(void 0!==e){const t={NEW:"open",FILLED:"closed",CANCEL_SENT:"canceled",CANCEL_ALL_SENT:"canceled",CANCELLED:"canceled",PARTIAL_FILLED:"open",REJECTED:"rejected",INCOMPLETE:"open",COMPLETED:"closed"};return this.safeString(t,e,e)}return e}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i={symbol:this.market(e).id};void 0!==t&&(t=Math.min(t,1e3),i.max_level=t);const r=await this.v1PrivateGetOrderbookSymbol(this.extend(i,s)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a,"bids","asks","price","quantity")}async fetchOHLCV(e,t="1h",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,type:this.timeframes[t]};void 0!==i&&(n.limit=Math.min(i,1e3));const o=await this.v1PrivateGetKline(this.extend(n,r)),c=this.safeValue(o,"rows",[]);return this.parseOHLCVs(c,a,t,s,i)}parseOHLCV(e,t){return[this.safeInteger(e,"start_timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOrderTrades(e,t,s,i,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={oid:e},o=await this.v1PrivateGetOrderOidTrades(this.extend(n,r)),c=this.safeValue(o,"rows",[]);return this.parseTrades(c,a,s,i,r)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetClientTrades(this.extend(r,i)),o=this.safeValue(n,"rows",[]);return this.parseTrades(o,a,t,s,i)}async fetchAccounts(e={}){const t=await this.v1PrivateGetSubAccountAssets(e),s=this.safeValue(t,"rows",[]);return this.parseAccounts(s,e)}parseAccount(e){const t=this.safeString(e,"account");return{info:e,id:this.safeString(e,"application_id"),name:t,code:void 0,type:"Main"===t?"main":"subaccount"}}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v2PrivateGetClientHolding(e);return this.parseBalance(t)}parseBalance(e){const t={info:e},s=this.safeValue(e,"holding",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeCurrencyCode(this.safeString(i,"token")),a=this.account();a.total=this.safeString(i,"holding");const n=this.safeString(i,"outstanding_holding");a.used=l.stringNeg(n),t[r]=a}return this.safeBalance(t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i=this.defaultNetworkCodeForCurrency(e),r=this.safeString(t,"network",i);t=this.omit(t,"network");const a={token:r+"_"+s.code},n=await this.v1PrivateGetAssetDeposit(this.extend(a,t)),o=this.safeString(n,"extra"),c=this.safeString(n,"address");return this.checkAddress(c),{currency:e,address:c,tag:o,network:r,info:n}}async getAssetHistoryRows(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.balance_token=a.id),void 0!==t&&(r.start_t=t),void 0!==s&&(r.pageSize=s);const n=this.safeString(i,"type");i=this.omit(i,"type"),void 0!==n&&(r.type=n);const o=await this.v1PrivateGetAssetHistory(this.extend(r,i));return[a,this.safeValue(o,"rows",{})]}async fetchLedger(e,t,s,i={}){const[r,a]=await this.getAssetHistoryRows(e,t,s,i);return this.parseLedger(a,r,t,s,i)}parseLedgerEntry(e,t){const s=this.safeString(e,"token"),i=this.getCurrencyFromChaincode(s,t).code,r=this.safeNumber(e,"amount"),a="DEPOSIT"===this.safeString(e,"token_side")?"in":"out",n=this.safeTimestamp(e,"created_time"),o=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount");return{id:this.safeString(e,"id"),currency:i,account:this.safeString(e,"account"),referenceAccount:void 0,referenceId:this.safeString(e,"tx_id"),status:this.parseTransactionStatus(this.safeString(e,"status")),amount:r,before:void 0,after:void 0,fee:o,direction:a,timestamp:n,datetime:this.iso8601(n),type:this.parseLedgerEntryType(this.safeString(e,"type")),info:e}}parseLedgerEntryType(e){return this.safeString({BALANCE:"transaction",COLLATERAL:"transfer"},e,e)}getCurrencyFromChaincode(e,t){if(void 0!==t)return t;{const s=e.split("_"),i=s.length,r=this.safeString(s,0);let a=this.safeString(s,1,r);i>2&&(a+="_"+this.safeString(s,2)),t=this.safeCurrency(a)}return t}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({token_side:"DEPOSIT"},i))}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactions(e,t,s,this.extend({token_side:"WITHDRAW"},i))}async fetchTransactions(e,t,s,i={}){const[r,a]=await this.getAssetHistoryRows(e,t,s,this.extend({type:"BALANCE"},i));return this.parseTransactions(a,r,t,s,i)}parseTransaction(e,t){const s=this.safeString(e,"token"),i=this.getCurrencyFromChaincode(s,t).code;let r=this.safeStringLower(e,"token_side");"withdraw"===r&&(r="withdrawal");const a=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount");a.rate=void 0;const n=this.safeString(e,"target_address"),o=this.safeString(e,"source_address"),c=this.safeTimestamp(e,"created_time");return{id:this.safeString(e,"id"),txid:this.safeString(e,"tx_id"),timestamp:c,datetime:this.iso8601(c),address:void 0,addressFrom:o,addressTo:n,tag:this.safeString(e,"extra"),type:r,amount:this.safeNumber(e,"amount"),currency:i,status:this.parseTransactionStatus(this.safeString(e,"status")),updated:this.safeTimestamp(e,"updated_time"),fee:a,info:e}}parseTransactionStatus(e){return this.safeString({NEW:"pending",CONFIRMING:"pending",PROCESSING:"pending",COMPLETED:"ok",CANCELED:"canceled"},e,e)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={token:a.id,amount:this.parseNumber(t),from_application_id:s,to_application_id:i},o=await this.v1PrivatePostAssetMainSubTransfer(this.extend(n,r)),c=this.parseTransfer(o,a),d=this.safeValue(this.options,"transfer",{});return this.safeValue(d,"fillResponseFromRequest",!0)&&(c.amount=t,c.fromAccount=s,c.toAccount=i),c}async fetchTransfers(e,t,s,i={}){const[r,a]=await this.getAssetHistoryRows(e,t,s,this.extend({type:"COLLATERAL"},i));return this.parseTransfers(a,r,t,s,i)}parseTransfer(e,t){const s=this.safeString(e,"token"),i=this.getCurrencyFromChaincode(s,t).code;let r,a,n=this.safeStringLower(e,"token_side");"withdraw"===n&&(n="withdrawal"),"withdraw"===n?(r=void 0,a="spot"):"deposit"===n&&(r="spot",a=void 0);const o=this.safeTimestamp(e,"created_time"),c=this.safeValue(e,"success");let d;return void 0!==c&&(d=c?"ok":"failed"),{id:this.safeString(e,"id"),timestamp:o,datetime:this.iso8601(o),currency:i,amount:this.safeNumber(e,"amount"),fromAccount:r,toAccount:a,status:this.parseTransferStatus(this.safeString(e,"status",d)),info:e}}parseTransferStatus(e){return this.safeString({NEW:"pending",CONFIRMING:"pending",PROCESSING:"pending",COMPLETED:"ok",CANCELED:"canceled"},e,e)}async repayMargin(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==s&&(r=this.market(s),s=r.symbol);const a=this.currency(e),n={token:a.id,amount:this.currencyToPrecision(e,t)},o=await this.v1PrivatePostInterestRepay(this.extend(n,i)),c=this.parseMarginLoan(o,a);return this.extend(c,{amount:t,symbol:s})}parseMarginLoan(e,t){return{id:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const n=t[0],o=t[1];let c=this.implodeHostname(this.urls.api[o]);if(c+="/"+n+"/",e=this.implodeParams(e,i),i=this.omit(i,this.extractParams(e)),i=this.keysort(i),"public"===o)c+=o+"/"+e,Object.keys(i).length&&(c+="?"+this.urlencode(i));else{this.checkRequiredCredentials(),c+=e;const t=this.nonce().toString();let n=this.urlencode(i);"POST"===s||"DELETE"===s?a=n:c+="?"+n,n+="|"+t;const o=this.hmac(this.encode(n),this.encode(this.secret),"sha256");r={"x-api-key":this.apiKey,"x-api-signature":o,"x-api-timestamp":t,"Content-Type":"application/x-www-form-urlencoded"}}return{url:c,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,c){if(!n)return;const d=this.safeValue(n,"success"),h=this.safeString(n,"code");if(!d){const e=this.id+" "+this.json(n);this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e)}}parseIncome(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"funding_fee"),a=this.safeCurrencyCode("USD"),n=this.safeString(e,"id"),o=this.safeTimestamp(e,"updated_time"),c=this.safe_number(e,"funding_rate");return{info:e,symbol:i,code:a,timestamp:o,datetime:this.iso8601(o),id:n,amount:r,rate:c}}parseIncomes(e,t,s,i){const r=[];for(let s=0;s<e.length;s++){const i=e[s],a=this.parseIncome(i,t);r.push(a)}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,s,i,"timestamp")}async fetchFundingHistory(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetFundingFeeHistory(this.extend(r,i)),o=this.safeValue(n,"rows",[]);return this.parseIncomes(o,a,t,s)}parseFundingRate(e,t){const s=this.safeString(e,"symbol"),i=this.safeInteger(e,"next_funding_time"),r=this.safeInteger(e,"est_funding_rate_timestamp"),a=this.safeInteger(e,"last_funding_rate_timestamp");return{info:e,symbol:s,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"est_funding_rate"),fundingTimestamp:r,fundingDatetime:this.iso8601(r),nextFundingRate:void 0,nextFundingTimestamp:i,nextFundingDatetime:this.iso8601(i),previousFundingRate:this.safeNumber(e,"last_funding_rate"),previousFundingTimestamp:a,previousFundingDatetime:this.iso8601(a)}}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.v1PublicGetFundingRateSymbol(this.extend(i,t));return this.parseFundingRate(r,s)}async fetchFundingRates(e,t={}){await this.loadMarkets();const s=await this.v1PublicGetFundingRates(t),i=this.safeValue(s,"rows",{}),r=this.parseFundingRates(i);return this.filterByArray(r,"symbol",e)}async fetchFundingRateHistory(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);e=t.symbol,r.symbol=t.id}void 0!==t&&(r.start_t=parseInt(t/1e3));const a=await this.v1PublicGetFundingRateHistory(this.extend(r,i)),n=this.safeValue(a,"rows"),o=[];for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,"symbol"),i=this.safeInteger(t,"funding_rate_timestamp");o.push({info:t,symbol:this.safeSymbol(s),fundingRate:this.safeNumber(t,"funding_rate"),timestamp:i,datetime:this.iso8601(i)})}const c=this.sortBy(o,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,s)}async fetchLeverage(e,t={}){await this.loadMarkets();const s=await this.v1PrivateGetClientInfo(t),i=this.safeValue(s,"application");return{info:s,leverage:this.safeNumber(i,"leverage")}}async setLeverage(e,t,s={}){if(await this.loadMarkets(),e<1||e>20)throw new o(this.id+" leverage should be between 1 and 20");const i={leverage:e};return await this.v1PrivatePostClientLeverage(this.extend(i,s))}async fetchPosition(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.v1PrivateGetPositionSymbol(this.extend(i,t));return this.parsePosition(r,s)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.v1PrivateGetPositions(t),i=this.safeValue(s,"positions",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);let i,r=this.safeString(e,"holding");i=l.stringGt(r,"0")?"long":"short";const a=this.safeString(t,"contractSize"),n=this.safeString(e,"mark_price"),o=this.safeTimestamp(e,"timestamp"),c=this.safeString(e,"average_open_price"),d=l.stringSub(n,c),h=l.stringMul(d,r);r=l.stringAbs(r);const u=l.stringMul(r,n);return{info:e,symbol:this.safeString(t,"symbol"),timestamp:o,datetime:this.iso8601(o),initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(c),notional:this.parseNumber(u),leverage:void 0,unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(r),contractSize:this.parseNumber(a),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"est_liq_price"),markPrice:this.parseNumber(n),collateral:void 0,marginMode:"cross",marginType:void 0,side:i,percentage:void 0}}defaultNetworkCodeForCurrency(e){const t=this.currency(e).networks,s=Object.keys(t);for(let e=0;e<s.length;e++){const t=s[e];if("ETH"===t)return t}return this.safeValue(s,0)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],295:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,BadRequest:n,InsufficientFunds:o,InvalidAddress:c,BadSymbol:d,InvalidOrder:h}=e("./base/errors"),{TICK_SIZE:l}=e("./base/functions/number"),u=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"xena",name:"Xena Exchange",countries:["VC","UK"],rateLimit:36.1,has:{CORS:void 0,spot:!1,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchLedger:!0,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrderBook:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87489843-bb469280-c64c-11ea-91aa-69c6326506af.jpg",test:{public:"https://trading.demo.xena.io/api",private:"https://api.demo.xena.io"},api:{public:"https://trading.xena.exchange/api",private:"https://api.xena.exchange"},www:"https://xena.exchange",doc:"https://support.xena.exchange/support/solutions/44000808700",fees:"https://trading.xena.exchange/en/contracts/terms-and-condition"},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w"},api:{public:{get:{"common/currencies":20.013,"common/instruments":20.013,"common/features":20.013,"common/commissions":20.013,"common/news":20.013,"market-data/candles/{marketId}/{timeframe}":20.013,"market-data/market-watch":20.013,"market-data/dom/{symbol}":20.013,"market-data/candles/{symbol}/{timeframe}":20.013,"market-data/trades/{symbol}":20.013,"market-data/server-time":20.013,"market-data/v2/candles/{symbol}/{timeframe}":20.013,"market-data/v2/trades/{symbol}":20.013,"market-data/v2/dom/{symbol}/":20.013,"market-data/v2/server-time":20.013}},private:{get:{"trading/accounts/{accountId}/order":50,"trading/accounts/{accountId}/active-orders":50,"trading/accounts/{accountId}/last-order-statuses":50,"trading/accounts/{accountId}/positions":50,"trading/accounts/{accountId}/positions-history":50,"trading/accounts/{accountId}/margin-requirements":50,"trading/accounts":50,"trading/accounts/{accountId}/balance":50,"trading/accounts/{accountId}/trade-history":50,"transfers/accounts":50,"transfers/accounts/{accountId}":50,"transfers/accounts/{accountId}/deposit-address/{currency}":50,"transfers/accounts/{accountId}/deposits":100,"transfers/accounts/{accountId}/trusted-addresses":50,"transfers/accounts/{accountId}/withdrawals":50,"transfers/accounts/{accountId}/balance-history":50},post:{"trading/order/new":3.334,"trading/order/heartbeat":3.334,"trading/order/cancel":1,"trading/order/mass-cancel":1,"trading/order/replace":3.334,"trading/position/maintenance":3.334,"transfers/accounts/{accountId}/withdrawals":3.334,"transfers/accounts/{accountId}/deposit-address/{currency}":3.334}}},fees:{trading:{maker:5e-4,taker:.001,tierBased:!0,percentage:!0},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},precisionMode:l,exceptions:{exact:{"Validation failed":n,"Unknown derivative symbol":d,"Unknown account":n,"Wrong TransactTime":n,"ClOrdId is empty":n},broad:{"Invalid aggregation ratio or depth":n,address:c,"Money not enough":o,"parse error":n,"Not enough":o}},options:{defaultType:"margin",accountId:void 0}})}async fetchTime(e={}){const t=await this.publicGetMarketDataV2ServerTime(e),s=this.safeInteger(t,"transactTime");return parseInt(s/1e6)}async fetchMarkets(e={}){const t=await this.publicGetCommonInstruments(e),s=[];for(let e=0;e<t.length;e++){const i=t[e];let r=this.safeStringLower(i,"type");const a=this.safeString(i,"symbol"),n=this.safeString(i,"id"),o=this.safeString(i,"marginType"),c=this.safeString(i,"baseCurrency"),d=this.safeString(i,"quoteCurrency"),h=this.safeString(i,"settlCurrency"),l=this.safeCurrencyCode(c),u=this.safeCurrencyCode(d),f=this.safeCurrencyCode(h),p=this.safeString(i,"expiryDate"),m=this.parse8601(p);let g=a,y=!1,b=!1;"margin"===r&&(g=l+"/"+u+":"+f,"XenaFuture"===o?(g=g+"-"+this.yymmdd(m),r="future",y=!0):"XenaListedPerpetual"===o&&(r="swap",b=!0));const v=this.safeValue(i,"inverse",!1),w=b||y;s.push({id:a,symbol:g,base:l,quote:u,settle:f,baseId:c,quoteId:d,settleId:h,numericId:n,type:r,spot:!1,margin:!1,swap:b,future:y,option:!1,active:this.safeValue(i,"enabled",!1),contract:w,linear:w?!v:void 0,inverse:w?v:void 0,contractSize:this.safeNumber(i,"contractValue"),expiry:m,expiryDatetime:this.iso8601(m),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1"),price:this.parseNumber(this.parsePrecision(this.safeString2(i,"tickSize","pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(i,"minOrderQuantity"),max:this.safeNumber(i,"maxOrderQty")}},info:i})}return s}async fetchCurrencies(e={}){const t=await this.publicGetCommonCurrencies(e),s=Object.keys(t),i={};for(let e=0;e<s.length;e++){const r=s[e],a=t[r],n=this.safeCurrencyCode(r),o=this.safeString(a,"title"),c=!0===this.safeValue(a,"enabled"),d=this.safeValue(a,"withdraw",{});i[n]={id:r,code:n,info:a,name:o,active:c,deposit:void 0,withdraw:void 0,fee:this.safeNumber(d,"commission"),precision:this.parseNumber(this.parsePrecision(this.safeString(a,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(d,"minAmount"),max:void 0}}}}return i}parseTicker(e,t){const s=this.milliseconds(),i=this.safeString(e,"symbol"),r=this.safeSymbol(i,t),a=this.safeString(e,"lastPx"),n=this.safeString(e,"firstPx"),o=this.safeString(e,"buyVolume"),c=this.safeString(e,"sellVolume"),d=this.sum(o,c);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"highPx"),low:this.safeString(e,"lowPx"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=await this.fetchTickers(void 0,t);if(e in s)return s[e];throw new d(this.id+" fetchTicker() could not find a ticker with symbol "+e)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.publicGetMarketDataMarketWatch(t),i={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);i[t.symbol]=t}return this.filterByArray(i,"symbol",e)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id};void 0!==t&&(r.depth=t);const a=await this.publicGetMarketDataV2DomSymbol(this.extend(r,s)),n=this.safeValue(a,"mdEntry",[]),o=this.groupBy(n,"mdEntryType"),c=this.safeInteger(a,"lastUpdateTime");let d;return void 0!==c&&(d=parseInt(c/1e6)),this.parseOrderBook(o,i.symbol,d,"0","1","mdEntryPx","mdEntrySize")}async fetchAccounts(e={}){const t=await this.privateGetTradingAccounts(e),s=this.safeValue(t,"accounts",[]),i=[];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeString(t,"currency"),n=this.safeCurrencyCode(a),o=this.safeStringLower(t,"kind");i.push({id:r,type:o,currency:n,info:t})}return i}async findAccountByType(e){await this.loadMarkets(),await this.loadAccounts();const t=this.groupBy(this.accounts,"type"),s=this.safeValue(t,e);if(void 0===s)throw new r(this.id+" findAccountByType() could not find an accountId with type '"+e+"', specify the 'accountId' parameter instead");if(s.length>1)throw new r(this.id+" findAccountByType() found more than one accountId with type '"+e+"', specify the 'accountId' parameter instead");return s[0]}async getAccountId(e){await this.loadMarkets(),await this.loadAccounts();const t=this.safeString(this.options,"accountId"),s=this.safeString(e,"accountId",t);if(void 0!==s)return s;const i=this.safeString(this.options,"defaultType","margin"),r=this.safeString(e,"type",i);if(e=this.omit(e,"type"),void 0===r)throw new a(this.id+" requires an 'accountId' parameter or a 'type' parameter ('spot' or 'margin')");return(await this.findAccountByType(r)).id}parseBalance(e){const t={info:e};let s;const i=this.safeValue(e,"balances",[]);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"lastUpdateTime").slice(0,13),n=parseInt(a);s=void 0===s?n:Math.max(s,n);const o=this.safeString(r,"currency"),c=this.safeCurrencyCode(o),d=this.account();d.free=this.safeString(r,"available"),d.used=this.safeString(r,"onHold"),t[c]=d}return t.timestamp=s,t.datetime=this.iso8601(s),this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();const t={accountId:await this.getAccountId(e)},s=await this.privateGetTradingAccountsAccountIdBalance(this.extend(t,e));return this.parseBalance(s)}parseTrade(e,t){const s=this.safeString(e,"tradeId");let i=this.safeInteger(e,"transactTime");void 0!==i&&(i=parseInt(i/1e6));let r=this.safeStringLower2(e,"side","aggressorSide");"1"===r?r="buy":"2"===r&&(r="sell");const a=this.safeString(e,"orderId"),n=this.safeString(e,"symbol"),o=this.safeSymbol(n,t),c=this.safeString2(e,"lastPx","mdEntryPx"),d=this.safeString2(e,"lastQty","mdEntrySize");let h;const l=this.safeString(e,"commission");if(void 0!==l){const t=this.safeString(e,"commCurrency"),s=this.safeCurrencyCode(t);h={cost:l,rate:this.safeString(e,"commRate"),currency:s}}return this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:o,type:void 0,order:a,side:r,takerOrMaker:void 0,price:c,amount:d,cost:void 0,fee:h},t)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r={accountId:await this.getAccountId(i)};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=1e6*t),void 0!==s&&(r.limit=s);const n=await this.privateGetTradingAccountsAccountIdTradeHistory(this.extend(r,i));return this.parseTrades(n,a,t,s)}parseOHLCV(e,t){const s=this.safeInteger(e,"transactTime"),i=parseInt(s/1e6),r=this.safeNumber(e,"buyVolume"),a=this.safeNumber(e,"sellVolume"),n=this.sum(r,a);return[i,this.safeNumber(e,"firstPx"),this.safeNumber(e,"highPx"),this.safeNumber(e,"lowPx"),this.safeNumber(e,"lastPx"),n]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,timeframe:this.timeframes[t]},o=1e3*this.parseTimeframe(t);if(void 0!==s)n.from=1e6*s,void 0!==i&&(n.to=1e6*this.sum(s,i*o));else{const e=this.milliseconds();void 0!==i&&(n.from=1e6*(e-i*o))}const c=await this.publicGetMarketDataV2CandlesSymbolTimeframe(this.extend(n,r)),d=this.safeValue(c,"mdEntry",[]);return this.parseOHLCVs(d,a,t,s,i)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.from=this.iso8601(t)),void 0!==s&&(a.limit=s);const n=await this.publicGetMarketDataV2TradesSymbol(this.extend(a,i)),o=this.safeValue(n,"mdEntry",[]);return this.parseTrades(o,r,t,s)}parseOrderStatus(e){return this.safeString({A:"open",0:"open",1:"open",2:"closed",6:"canceled",4:"canceled",E:"open",8:"rejected"},e,e)}parseOrder(e,t){const s=this.safeString(e,"orderId"),i=this.safeString(e,"clOrdId"),r=this.safeInteger(e,"transactTime"),a=parseInt(r/1e6),n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeString(e,"symbol"),c=this.safeSymbol(o,t),d=this.safeString(e,"price"),h=this.safeString(e,"orderQty"),l=this.safeString(e,"cumQty"),u=this.safeString(e,"leavesQty");let f=this.safeString(e,"side");"1"===f?f="buy":"2"===f&&(f="sell");let p=this.safeString(e,"ordType");return"1"===p?p="market":"2"===p?p="limit":"3"===p?p="stop":"4"===p&&(p="stop-limit"),this.safeOrder({id:s,clientOrderId:i,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:c,type:p,timeInForce:void 0,postOnly:void 0,side:f,price:d,stopPrice:void 0,amount:h,cost:void 0,average:void 0,filled:l,remaining:u,status:n,fee:void 0,trades:void 0},t)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets(),await this.loadAccounts();const n=await this.getAccountId(a),o=this.safeString({market:"1",limit:"2",stop:"3","stop-limit":"4"},t);if(void 0===o)throw new h(this.id+" createOrder() does not support order type "+t+", supported order types are market, limit, stop, stop-limit");const c=this.safeString({buy:"1",sell:"2"},s);if(void 0===c)throw new h(this.id+" createOrder() does not support order side "+s+", supported order sides are buy, sell");const d=this.market(e),l={account:parseInt(n),symbol:d.id,ordType:o,side:c,orderQty:this.amountToPrecision(e,i),transactTime:1e6*this.milliseconds()};if("limit"===t||"stop-limit"===t){if(void 0===r)throw new h(this.id+" createOrder() requires a price argument for order type "+t);l.price=this.priceToPrecision(e,r)}if("stop"===t||"stop-limit"===t){const s=this.safeNumber(a,"stopPx");if(void 0===s)throw new h(this.id+" createOrder() requires a stopPx param for order type "+t);l.stopPx=this.priceToPrecision(e,s),a=this.omit(a,"stopPx")}const u=this.safeString2(a,"clientOrderId","clOrdId",this.uuid());void 0!==u&&(l.clOrdId=u,a=this.omit(a,["clientOrderId","clOrdId"]));const f=await this.privatePostTradingOrderNew(this.extend(l,a));return this.parseOrder(f,d)}async editOrder(e,t,s,i,r,n,o={}){if(void 0===t)throw new a(this.id+" editOrder() requires a symbol argument");await this.loadMarkets(),await this.loadAccounts();const c=await this.getAccountId(o),d=this.market(t),h={account:parseInt(c),clOrdId:this.uuid(),symbol:d.id,transactTime:1e6*this.milliseconds()},l=this.safeString2(o,"clientOrderId","origClOrdId");void 0!==l?(h.origClOrdId=l,o=this.omit(o,["clientOrderId","origClOrdId"])):h.orderId=e,void 0!==r&&(h.orderQty=this.amountToPrecision(t,r)),void 0!==n&&(h.price=this.priceToPrecision(t,n));const u=this.safeNumber(o,"stopPx");void 0!==u&&(h.stopPx=this.priceToPrecision(t,u),o=this.omit(o,"stopPx"));const f=this.safeNumber(o,"capPrice");void 0!==f&&(h.capPrice=this.priceToPrecision(t,f),o=this.omit(o,"capPrice"));const p=await this.privatePostTradingOrderReplace(this.extend(h,o));return this.parseOrder(p,d)}async cancelOrder(e,t,s={}){if(void 0===t)throw new a(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets(),await this.loadAccounts();const i=await this.getAccountId(s),r=this.safeString2(s,"clientOrderId","origClOrdId");s=this.omit(s,["clientOrderId","origClOrdId"]);const n=this.market(t),o={account:parseInt(i),symbol:n.id,clOrdId:this.uuid(),transactTime:1e6*this.milliseconds()};void 0!==r?o.origClOrdId=r:o.orderId=e;const c=await this.privatePostTradingOrderCancel(this.extend(o,s));return this.parseOrder(c,n)}async cancelAllOrders(e,t={}){await this.loadMarkets(),await this.loadAccounts();const s=await this.getAccountId(t),i={account:parseInt(s),clOrdId:this.uuid()};if(void 0!==e){const t=this.market(e);i.symbol=t.id,i.massCancelRequestType="1"}else i.massCancelRequestType="7";return await this.privatePostTradingOrderMassCancel(this.extend(i,t))}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r={accountId:await this.getAccountId(i)};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const n=await this.privateGetTradingAccountsAccountIdActiveOrders(this.extend(r,i));return this.parseOrders(n,a,t,s)}async fetchClosedOrders(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r={accountId:await this.getAccountId(i)};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=1e6*t),void 0!==s&&(r.limit=s);const n=await this.privateGetTradingAccountsAccountIdLastOrderStatuses(this.extend(r,i));return this.parseOrders(n,a,t,s)}async createDepositAddress(e,t={}){await this.loadMarkets(),await this.loadAccounts();const s={accountId:await this.getAccountId(t),currency:this.currency(e).id},i=await this.privatePostTransfersAccountsAccountIdDepositAddressCurrency(this.extend(s,t)),r=this.safeValue(i,"address");return this.checkAddress(r),{currency:e,address:r,tag:undefined,info:i}}async fetchDepositAddress(e,t={}){await this.loadMarkets(),await this.loadAccounts();const s={accountId:await this.getAccountId(t),currency:this.currency(e).id},i=await this.privateGetTransfersAccountsAccountIdDepositAddressCurrency(this.extend(s,t)),r=this.safeValue(i,"address");return this.checkAddress(r),{currency:e,address:r,tag:undefined,network:void 0,info:i}}async fetchTransactionsByType(e,t,s,i,r={}){if(void 0===t)throw new a(this.id+" fetchTransactions() requires a currency `code` argument");await this.loadMarkets(),await this.loadAccounts();const n=await this.getAccountId(r),o=this.currency(t),c={currency:o.id,accountId:n};void 0!==s&&(c.since=parseInt(s/1e3));const d="privateGetTransfersAccountsAccountId"+this.capitalize(e),h=await this[d](this.extend(c,r)),l=this.safeValue(h,e,[]);return this.parseTransactions(l,o,s,i)}async fetchWithdrawals(e,t,s,i={}){return await this.fetchTransactionsByType("withdrawals",e,t,s,i)}async fetchDeposits(e,t,s,i={}){return await this.fetchTransactionsByType("deposits",e,t,s,i)}parseTransaction(e,t){const s=this.safeString(e,"withdrawalRequestId"),i=void 0===s?"deposit":"withdrawal";let r=this.safeInteger(e,"lastUpdated");void 0!==r&&(r=parseInt(r/1e6));const a=void 0,n=this.safeString(e,"txId"),o=this.safeString(e,"currency"),c=this.safeCurrencyCode(o,t),d=this.safeString(e,"address"),h=d,l=this.safeNumber(e,"amount"),u=this.parseTransactionStatus(this.safeString(e,"status")),f=this.safeString(e,"blockchain");return{info:e,id:s,txid:n,timestamp:a,datetime:this.iso8601(a),network:f,addressFrom:undefined,addressTo:h,address:d,tagFrom:void 0,tagTo:void 0,tag:void 0,type:i,amount:l,currency:c,status:u,updated:r,fee:undefined}}parseTransactionStatus(e){return this.safeString({1:"pending",2:"ok",3:"failed",4:"failed",5:"pending",100:"pending",101:"pending",102:"pending",103:"pending"},e,e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets(),await this.loadAccounts();const a=await this.getAccountId(r),n=this.currency(e);let o=this.uuid();o=o.split("-"),o=o.join("");const c={currency:n.id,accountId:a,amount:this.currencyToPrecision(e,t),address:s,id:o},d=await this.privatePostTransfersAccountsAccountIdWithdrawals(this.extend(c,r));return this.parseTransaction(d,n)}parseLedgerEntryType(e){return this.safeString({deposit:"transaction",withdrawal:"transaction","internal deposit":"transfer","internal withdrawal":"transfer",rebate:"rebate",reward:"reward"},e,e)}parseLedgerEntry(e,t){const s=this.safeString(e,"id");let i;const r=this.safeString(e,"accountId"),a=this.parseLedgerEntryType(this.safeString(e,"kind")),n=this.safeCurrencyCode(this.safeString(e,"currency"),t);let o=this.safeNumber(e,"amount");o<0?(i="out",o=Math.abs(o)):i="in";let c=this.safeInteger(e,"ts");void 0!==c&&(c=parseInt(c/1e6));const d={cost:this.safeNumber(e,"commission"),currency:n};return{info:e,id:s,direction:i,account:r,referenceId:undefined,referenceAccount:undefined,type:a,currency:n,amount:o,before:undefined,after:this.safeNumber(e,"balance"),status:"ok",timestamp:c,datetime:this.iso8601(c),fee:d}}async fetchLedger(e,t,s,i={}){await this.loadMarkets(),await this.loadAccounts();const r={accountId:await this.getAccountId(i)};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id),void 0!==t&&(r.from=1e6*t),void 0!==s&&(r.limit=s);const n=await this.privateGetTransfersAccountsAccountIdBalanceHistory(this.extend(r,i));return this.parseLedger(n,a,t,s)}async fetchLeverageTiers(e,t={}){await this.loadMarkets();const s=await this.publicGetCommonInstruments(t);return this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t){const s=this.safeValue(e,"margin"),i=this.safeValue(s,"rates");let r=0;const a=this.safeString(e,"symbol");t=this.safeMarket(a,t);const n=[];if(void 0!==i)for(let e=0;e<i.length;e++){const s=i[e],a=this.safeNumber(s,"maxVolume"),o=this.safeString(s,"initialRate");n.push({tier:this.sum(e,1),currency:t.base,minNotional:r,maxNotional:a,maintenanceMarginRate:this.safeNumber(s,"maintenanceRate"),maxLeverage:this.parseNumber(u.stringDiv("1",o)),info:s}),r=a}return n}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t]+"/"+this.implodeParams(e,i);const o=this.omit(i,this.extractParams(e));if("public"===t)Object.keys(o).length&&(n+="?"+this.urlencode(o));else if("private"===t){this.checkRequiredCredentials();let e=this.nonce();e=e.toString(),e+="000000";const t="AUTH"+e,i=this.secret.slice(14,78),c=this.ecdsa(t,i,"p256","sha256"),d=c.r+c.s;r={"X-AUTH-API-KEY":this.apiKey,"X-AUTH-API-PAYLOAD":t,"X-AUTH-API-SIGNATURE":d,"X-AUTH-API-NONCE":e},"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"POST"===s&&(a=this.json(o),r["Content-Type"]="application/json")}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&e>=400){const e=this.id+" "+this.json(o),t=this.safeString(o,"error"),s=this.exceptions.exact;if(t in s)throw new s[t](e);const i=this.exceptions.broad,a=this.findBroadlyMatchedKey(i,n);if(void 0!==a)throw new i[a](e);throw new r(e)}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],296:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,ArgumentsRequired:a,ExchangeNotAvailable:n,InvalidNonce:o,InsufficientFunds:c,OrderNotFound:d,DDoSProtection:h,InvalidOrder:l,AuthenticationError:u,RateLimitExceeded:f}=e("./base/errors"),{TICK_SIZE:p}=e("./base/functions/number"),m=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"yobit",name:"YoBit",countries:["RU"],rateLimit:2e3,version:"3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:void 0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg",api:{public:"https://yobit.net/api",private:"https://yobit.net/tapi"},www:"https://www.yobit.net",doc:"https://www.yobit.net/en/api/",fees:"https://www.yobit.net/en/fees/"},api:{public:{get:{"depth/{pair}":1,info:1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{ActiveOrders:1,CancelOrder:1,GetDepositAddress:1,getInfo:1,OrderInfo:1,Trade:1,TradeHistory:1,WithdrawCoinsToAddress:1}}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{}}},commonCurrencies:{AIR:"AirCoin",ANI:"ANICoin",ANT:"AntsCoin",ATMCHA:"ATM",ASN:"Ascension",AST:"Astral",ATM:"Autumncoin",AUR:"AuroraCoin",BAB:"Babel",BAN:"BANcoin",BCC:"BCH",BCS:"BitcoinStake",BITS:"Bitstar",BLN:"Bulleon",BNS:"Benefit Bonus Coin",BOT:"BOTcoin",BON:"BONES",BPC:"BitcoinPremium",BST:"BitStone",BTS:"Bitshares2",CAT:"BitClave",CBC:"CryptoBossCoin",CMT:"CometCoin",COIN:"Coin.com",COV:"Coven Coin",COVX:"COV",CPC:"Capricoin",CREDIT:"Creditbit",CS:"CryptoSpots",DCT:"Discount",DFT:"DraftCoin",DGD:"DarkGoldCoin",DIRT:"DIRTY",DROP:"FaucetCoin",DSH:"DASH",EGC:"EverGreenCoin",EGG:"EggCoin",EKO:"EkoCoin",ENTER:"ENTRC",EPC:"ExperienceCoin",ESC:"EdwardSnowden",EUROPE:"EUROP",EXT:"LifeExtension",FUND:"FUNDChains",FUNK:"FUNKCoin",FX:"FCoin",GCC:"GlobalCryptocurrency",GEN:"Genstake",GENE:"Genesiscoin",GMR:"Gimmer",GOLD:"GoldMint",GOT:"Giotto Coin",GSX:"GlowShares",GT:"GTcoin",HTML5:"HTML",HYPERX:"HYPER",ICN:"iCoin",INSANE:"INSN",JNT:"JointCoin",JPC:"JupiterCoin",JWL:"Jewels",KNC:"KingN Coin",LBTCX:"LiteBitcoin",LIZI:"LiZi",LOC:"LocoCoin",LOCX:"LOC",LUNYR:"LUN",LUN:"LunarCoin",LUNA:"Luna Coin",MASK:"Yobit MASK",MDT:"Midnight",MEME:"Memez Token",MIS:"MIScoin",MM:"MasterMint",NAV:"NavajoCoin",NBT:"NiceBytes",OMG:"OMGame",ONX:"Onix",PAC:"$PAC",PLAY:"PlayCoin",PIVX:"Darknet",PRS:"PRE",PURE:"PurePOS",PUTIN:"PutinCoin",SPACE:"Spacecoin",STK:"StakeCoin",SUB:"Subscriptio",PAY:"EPAY",PLC:"Platin Coin",RAI:"RaiderCoin",RCN:"RCoin",REP:"Republicoin",RUR:"RUB",SBTC:"Super Bitcoin",SMC:"SmartCoin",SOLO:"SoloCoin",STAR:"StarCoin",SUPER:"SuperCoin",TNS:"Transcodium",TTC:"TittieCoin",UNI:"Universe",UST:"Uservice",VOL:"VolumeCoin",XIN:"XINCoin",XMT:"SummitCoin",XRA:"Ratecoin"},options:{fetchOrdersRequiresSymbol:!0,fetchTickersMaxLength:512},precisionMode:p,exceptions:{exact:{803:l,804:l,805:l,806:l,807:l,831:c,832:c,833:d},broad:{"Invalid pair name":r,"invalid api key":u,"invalid sign":u,"api key dont have trade permission":u,"invalid parameter":l,"invalid order":l,"The given order has already been cancelled":l,"Requests too often":h,"not available":n,"data unavailable":n,"external service unavailable":n,"Total transaction amount":l,"The given order has already been closed and cannot be cancelled":l,"Insufficient funds":c,"invalid key":u,"invalid nonce":o,"Total order amount is less than minimal amount":l,"Rate Limited":f}},orders:{}})}parseBalance(e){const t=this.safeValue(e,"return",{}),s=this.safeInteger(t,"server_time"),i={info:e,timestamp:s,datetime:this.iso8601(s)},r=this.safeValue(t,"funds",{}),a=this.safeValue(t,"funds_incl_orders",{}),n=Object.keys(this.extend(r,a));for(let e=0;e<n.length;e++){const t=n[e],s=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(r,t),o.total=this.safeString(a,t),i[s]=o}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchMarkets(e={}){const t=await this.publicGetInfo(e),s=this.safeValue(t,"pairs",{}),i=Object.keys(s),r=[];for(let e=0;e<i.length;e++){const t=i[e],a=s[t],[n,o]=t.split("_");let c=n.toUpperCase(),d=o.toUpperCase();c=this.safeCurrencyCode(c),d=this.safeCurrencyCode(d);const h=this.safeInteger(a,"hidden");let l=this.safeString(a,"fee");l=m.stringDiv(l,"100"),r.push({id:t,symbol:c+"/"+d,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:0===h,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),maker:this.parseNumber(l),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(a,"decimal_places"))),price:this.parseNumber(this.parsePrecision(this.safeString(a,"decimal_places")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(a,"min_amount"),max:this.safeNumber(a,"max_amount")},price:{min:this.safeNumber(a,"min_price"),max:this.safeNumber(a,"max_price")},cost:{min:this.safeNumber(a,"min_total"),max:void 0}},info:a})}return r}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),a={pair:i.id};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,s));if(!(i.id in n))throw new r(this.id+" "+i.symbol+" order book is empty or not available");const o=n[i.id];return this.parseOrderBook(o,e)}async fetchOrderBooks(e,t,s={}){let i;if(await this.loadMarkets(),void 0===e){if(i=this.ids.join("-"),i.length>2048){const e=this.ids.length;throw new r(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else i=this.marketIds(e),i=i.join("-");const a={pair:i};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,s)),o={};i=Object.keys(n);for(let e=0;e<i.length;e++){const t=i[e],s=this.safeSymbol(t);o[s]=this.parseOrderBook(n[t],s)}return o}parseTicker(e,t){const s=this.safeTimestamp(e,"updated"),i=this.safeString(e,"last");return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol_cur"),quoteVolume:this.safeString(e,"vol"),info:e},t)}async fetchTickers(e,t={}){await this.loadMarkets();let s=this.ids;if(void 0===e){const e=s.length;s=s.join("-");const t=this.safeInteger(this.options,"fetchTickersMaxLength",2048);if(s.length>this.options.fetchTickersMaxLength)throw new a(this.id+" fetchTickers() has "+e.toString()+" markets exceeding max URL length for this endpoint ("+t.toString()+" characters), please, specify a list of symbols of interest in the first argument to fetchTickers")}else s=this.marketIds(e),s=s.join("-");const i={pair:s},r=await this.publicGetTickerPair(this.extend(i,t)),n={},o=Object.keys(r);for(let e=0;e<o.length;e++){const t=o[e],s=r[t],i=this.safeMarket(t);n[i.symbol]=this.parseTicker(s,i)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t){const s=this.safeTimestamp(e,"timestamp");let i=this.safeString(e,"type");"ask"===i?i="sell":"bid"===i&&(i="buy");const r=this.safeString2(e,"rate","price"),a=this.safeString2(e,"trade_id","tid"),n=this.safeString(e,"order_id"),o=this.safeString(e,"pair"),c=this.safeSymbol(o,t),d=this.safeString(e,"amount"),h=this.parseNumber(r),l=this.parseNumber(d),u="limit";let f;const p=this.safeNumber(e,"commission");if(void 0!==p){const t=this.safeString(e,"commissionCurrency");f={cost:p,currency:this.safeCurrencyCode(t)}}if(void 0!==this.safeValue(e,"is_your_order")&&void 0===f){const e=this.calculateFee(c,u,i,l,h,"taker");f={currency:this.safeString(e,"currency"),cost:this.safeString(e,"cost"),rate:this.safeString(e,"rate")}}return this.safeTrade({id:a,order:n,timestamp:s,datetime:this.iso8601(s),symbol:c,type:u,side:i,takerOrMaker:void 0,price:r,amount:d,cost:void 0,fee:f,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==s&&(a.limit=s);const n=await this.publicGetTradesPair(this.extend(a,i));if(Array.isArray(n)){if(0===n.length)return[]}const o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,s)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetInfo(e),s=this.safeValue(t,"pairs",{}),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=this.safeValue(s,t,{}),n=this.safeSymbol(t,void 0,"_"),o=this.safeString(a,"fee_buyer"),c=this.safeString(a,"fee_seller"),d=this.parseNumber(m.stringDiv(o,"100")),h=this.parseNumber(m.stringDiv(c,"100"));r[n]={info:a,symbol:n,taker:d,maker:h,percentage:!0,tierBased:!1}}return r}async createOrder(e,t,s,i,a,n={}){if("market"===t)throw new r(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),c={pair:o.id,type:s,amount:this.amountToPrecision(e,i),rate:this.priceToPrecision(e,a)},d=await this.privatePostTrade(this.extend(c,n)),h=this.safeValue(d,"return");return this.parseOrder(h,o)}async cancelOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)},r=await this.privatePostCancelOrder(this.extend(i,s)),a=this.safeValue(r,"return",{});return this.parseOrder(a)}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"open"},e,e)}parseOrder(e,t){let s=this.safeString2(e,"id","order_id"),i=this.parseOrderStatus(this.safeString(e,"status","open"));"0"===s&&(s=this.safeString(e,"init_order_id"),i="closed");const r=this.safeTimestamp2(e,"timestamp_created","server_time"),a=this.safeString(e,"pair"),n=this.safeSymbol(a,t),o=this.safeString(e,"start_amount"),c=this.safeString2(e,"amount","remains"),d=this.safeString(e,"received","0.0"),h=this.safeString(e,"rate"),l=this.safeString(e,"type");return this.safeOrder({info:e,id:s,clientOrderId:void 0,symbol:n,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:l,price:h,stopPrice:void 0,cost:void 0,amount:o,remaining:c,filled:d,status:i,fee:undefined,average:void 0,trades:void 0},t)}async fetchOrder(e,t,s={}){await this.loadMarkets();const i={order_id:parseInt(e)},r=await this.privatePostOrderInfo(this.extend(i,s));e=e.toString();const a=this.safeValue(r,"return",{});return this.parseOrder(this.extend({id:e},a[e]))}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);r.pair=t.id}const n=await this.privatePostActiveOrders(this.extend(r,i)),o=this.safeValue(n,"return",{});return this.parseOrders(o,undefined,t,s)}async fetchMyTrades(e,t,s,i={}){if(void 0===e)throw new a(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const r=this.market(e),n={pair:r.id};void 0!==s&&(n.count=parseInt(s)),void 0!==t&&(n.since=parseInt(t/1e3));const o=await this.privatePostTradeHistory(this.extend(n,i)),c=this.safeValue(o,"return",{}),d=Object.keys(c),h=[];for(let e=0;e<d.length;e++){const t=d[e],s=this.parseTrade(this.extend(c[t],{trade_id:t}),r);h.push(s)}return this.filterBySymbolSinceLimit(h,r.symbol,t,s)}async createDepositAddress(e,t={}){const s=await this.fetchDepositAddress(e,this.extend({need_new:1},t)),i=this.safeString(s,"address");return this.checkAddress(i),{currency:e,address:i,tag:void 0,info:s.info}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s={coinName:this.currency(e).id,need_new:0},i=await this.privatePostGetDepositAddress(this.extend(s,t)),r=this.safeString(i.return,"address");return this.checkAddress(r),{currency:e,address:r,tag:void 0,network:void 0,info:i}}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n={coinName:this.currency(e).id,amount:t,address:s};if(void 0!==i)throw new r(this.id+" withdraw() does not support the tag argument yet due to a lack of docs on withdrawing with tag/memo on behalf of the exchange.");return{info:await this.privatePostWithdrawCoinsToAddress(this.extend(n,a)),id:void 0}}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api[t];const o=this.omit(i,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();const t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},o));const s=this.hmac(this.encode(a),this.encode(this.secret),"sha512");r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:s}}else"public"===t?(n+="/"+this.version+"/"+this.implodeParams(e,i),Object.keys(o).length&&(n+="?"+this.urlencode(o))):(n+="/"+this.implodeParams(e,i),"GET"===s?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o),r={"Content-Type":"application/json"}));return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.safeString(o,"code"),t=this.safeString(o,"error"),s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwExactlyMatchedException(this.exceptions.exact,t,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r(s)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],297:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{ExchangeError:r,BadRequest:a}=e("./base/errors"),{TICK_SIZE:n}=e("./base/functions/number"),o=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"zaif",name:"Zaif",countries:["JP"],rateLimit:100,version:"1",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg",api:"https://api.zaif.jp",www:"https://zaif.jp",doc:["https://techbureau-api-document.readthedocs.io/ja/latest/index.html","https://corp.zaif.jp/api-docs","https://corp.zaif.jp/api-docs/api_links","https://www.npmjs.com/package/zaif.jp","https://github.com/you21979/node-zaif"],fees:"https://zaif.jp/fee?lang=en"},fees:{trading:{percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},api:{public:{get:{"depth/{pair}":1,"currencies/{pair}":1,"currencies/all":1,"currency_pairs/{pair}":1,"currency_pairs/all":1,"last_price/{pair}":1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{active_orders:5,cancel_order:5,deposit_history:5,get_id_info:5,get_info:10,get_info2:5,get_personal_info:5,trade:5,trade_history:50,withdraw:5,withdraw_history:5}},ecapi:{post:{createInvoice:1,getInvoice:1,getInvoiceIdsByOrderNumber:1,cancelInvoice:1}},tlapi:{post:{get_positions:66,position_history:66,active_positions:5,create_position:33,change_position:33,cancel_position:33}},fapi:{get:{"groups/{group_id}":1,"last_price/{group_id}/{pair}":1,"ticker/{group_id}/{pair}":1,"trades/{group_id}/{pair}":1,"depth/{group_id}/{pair}":1}}},options:{fees:{"BTC/JPY":{maker:0,taker:.001},"BCH/JPY":{maker:0,taker:.003},"BCH/BTC":{maker:0,taker:.003},"PEPECASH/JPY":{maker:0,taker:1e-4},"PEPECASH/BT":{maker:0,taker:1e-4}}},precisionMode:n,exceptions:{exact:{"unsupported currency_pair":a},broad:{}}})}async fetchMarkets(e={}){const t=await this.publicGetCurrencyPairsAll(e),s=[];for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency_pair"),a=this.safeString(i,"name"),[n,o]=a.split("/"),c=this.safeCurrencyCode(n),d=this.safeCurrencyCode(o),h=c+"/"+d,l=this.safeValue(this.options.fees,h,this.fees.trading);s.push({id:r,symbol:h,base:c,quote:d,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:l.taker,maker:l.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(i,"item_unit_step"),price:this.parseNumber(this.parsePrecision(this.safeString(i,"aux_unit_point")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"item_unit_min"),max:void 0},price:{min:this.safeNumber(i,"aux_unit_min"),max:void 0},cost:{min:void 0,max:void 0}},info:i})}return s}parseBalance(e){const t=this.safeValue(e,"return",{}),s=this.safeValue(t,"deposit"),i={info:e,timestamp:void 0,datetime:void 0},r=this.safeValue(t,"funds",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],n=this.safeCurrencyCode(t),o=this.safeString(r,t),c=this.account();c.free=o,c.total=o,void 0!==s&&t in s&&(c.total=this.safeString(s,t)),i[n]=c}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={pair:i.id},a=await this.publicGetDepthPair(this.extend(r,s));return this.parseOrderBook(a,i.symbol)}parseTicker(e,t){const s=this.safeSymbol(void 0,t),i=this.milliseconds(),r=this.safeString(e,"vwap"),a=this.safeString(e,"volume"),n=o.stringMul(a,r),c=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={pair:s.id},r=await this.publicGetTickerPair(this.extend(i,t));return this.parseTicker(r,s)}parseTrade(e,t){let s=this.safeString(e,"trade_type");s="bid"===s?"buy":"sell";const i=this.safeTimestamp(e,"date"),r=this.safeString2(e,"id","tid"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"currency_pair"),c=this.safeSymbol(o,t,"_");return this.safeTrade({id:r,info:e,timestamp:i,datetime:this.iso8601(i),symbol:c,type:void 0,side:s,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};let n=await this.publicGetTradesPair(this.extend(a,i));if(1===n.length){const e=n[0];Object.keys(e).length||(n=[])}return this.parseTrades(n,r,t,s)}async createOrder(e,t,s,i,a,n={}){if(await this.loadMarkets(),"limit"!==t)throw new r(this.id+" createOrder() allows limit orders only");const o={currency_pair:this.market(e).id,action:"buy"===s?"bid":"ask",amount:i,price:a},c=await this.privatePostTrade(this.extend(o,n));return{info:c,id:c.return.order_id.toString()}}async cancelOrder(e,t,s={}){const i={order_id:e};return await this.privatePostCancelOrder(this.extend(i,s))}parseOrder(e,t){let s=this.safeString(e,"action");s="bid"===s?"buy":"sell";const i=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"currency_pair"),a=this.safeSymbol(r,t,"_"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),c=this.safeString(e,"id");return this.safeOrder({id:c,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:"open",symbol:a,type:"limit",timeInForce:void 0,postOnly:void 0,side:s,price:n,stopPrice:void 0,cost:void 0,amount:o,filled:void 0,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOpenOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);const n=await this.privatePostActiveOrders(this.extend(a,i));return this.parseOrders(n.return,r,t,s)}async fetchClosedOrders(e,t,s,i={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);const n=await this.privatePostTradeHistory(this.extend(a,i));return this.parseOrders(n.return,r,t,s)}async withdraw(e,t,s,i,a={}){[i,a]=this.handleWithdrawTagAndParams(i,a),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e);if("JPY"===e)throw new r(this.id+" withdraw() does not allow "+e+" withdrawals");const o={currency:n.id,amount:t,address:s};void 0!==i&&(o.message=i);const c=await this.privatePostWithdraw(this.extend(o,a)),d=this.safeValue(c,"return");return this.parseTransaction(d,n)}parseTransaction(e,t){let s;t=this.safeCurrency(void 0,t);const i=this.safeValue(e,"fee");return void 0!==i&&(s={cost:i,currency:t.code}),{id:this.safeString(e,"id"),txid:this.safeString(e,"txid"),timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:s,info:e}}nonce(){return parseFloat(this.milliseconds()/1e3).toFixed(8)}sign(e,t="public",s="GET",i={},r,a){let n=this.urls.api+"/";if("public"===t)n+="api/"+this.version+"/"+this.implodeParams(e,i);else if("fapi"===t)n+="fapi/"+this.version+"/"+this.implodeParams(e,i);else{this.checkRequiredCredentials(),n+="ecapi"===t?"ecapi":"tlapi"===t?"tlapi":"tapi";const s=this.nonce();a=this.urlencode(this.extend({method:e,nonce:s},i)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),"sha512")}}return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,a,n,o,c,d){if(void 0===o)return;const h=this.id+" "+n,l=this.safeString(o,"error");if(void 0!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,l,h),new r(h);if(!this.safeValue(o,"success",!0))throw new r(h)}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],298:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{BadRequest:r,BadSymbol:a,ExchangeError:n,ArgumentsRequired:o,AuthenticationError:c,InsufficientFunds:d,NotSupported:h,OrderNotFound:l,ExchangeNotAvailable:u,RateLimitExceeded:f,PermissionDenied:p,InvalidOrder:m,InvalidAddress:g,OnMaintenance:y,RequestTimeout:b,AccountSuspended:v,NetworkError:w,DDoSProtection:S,DuplicateOrderId:k,BadResponse:T}=e("./base/errors"),{TICK_SIZE:O}=e("./base/functions/number"),_=e("./base/Precise");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"zb",name:"ZB",countries:["CN"],rateLimit:6,version:"v1",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:void 0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","5d":"5d","1w":"1w"},hostname:"zb.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg",api:{spot:{v1:{public:"https://api.{hostname}/data",private:"https://trade.{hostname}/api"}},contract:{v1:{public:"https://fapi.{hostname}/api/public"},v2:{public:"https://fapi.{hostname}/Server/api",private:"https://fapi.{hostname}/Server/api"}}},www:"https://www.zb.com",doc:"https://www.zb.com/i/developer",fees:"https://www.zb.com/i/rate",referral:{url:"https://www.zbex.club/en/register?ref=4301lera",discount:.16}},api:{spot:{v1:{public:{get:{markets:16.667,ticker:16.667,allTicker:16.667,depth:16.667,trades:16.667,kline:166.667,getGroupMarkets:16.667,getFeeInfo:16.667}},private:{get:{order:1,orderMoreV2:1,cancelOrder:1,cancelAllOrdersAfter:1,getOrder:1,getOrders:1,getOrdersNew:16.667,getOrdersIgnoreTradeType:1,getUnfinishedOrdersIgnoreTradeType:1,getFinishedAndPartialOrders:1,getAccountInfo:16.667,getUserAddress:16.667,getPayinAddress:16.667,getWithdrawAddress:16.667,getWithdrawRecord:16.667,getChargeRecord:16.667,getCnyWithdrawRecord:16.667,getCnyChargeRecord:16.667,withdraw:16.667,addSubUser:16.667,getSubUserList:16.667,doTransferFunds:16.667,createSubUserKey:16.667,getLeverAssetsInfo:16.667,getLeverBills:16.667,transferInLever:16.667,transferOutLever:16.667,loan:16.667,cancelLoan:16.667,getLoans:16.667,getLoanRecords:16.667,borrow:16.667,autoBorrow:16.667,repay:16.667,doAllRepay:16.667,getRepayments:16.667,getFinanceRecords:16.667,changeInvestMark:16.667,changeLoop:16.667,getCrossAssets:16.667,getCrossBills:16.667,transferInCross:16.667,transferOutCross:16.667,doCrossLoan:16.667,doCrossRepay:16.667,getCrossRepayRecords:16.667}}}},contract:{v1:{public:{get:{depth:16.667,fundingRate:16.667,indexKline:16.667,indexPrice:16.667,kline:16.667,markKline:16.667,markPrice:16.667,ticker:16.667,trade:16.667}}},v2:{public:{get:{allForceOrders:3.334,"config/marketList":3.334,topLongShortAccountRatio:3.334,topLongShortPositionRatio:3.334,fundingRate:3.334,premiumIndex:3.334}},private:{get:{"Fund/balance":3.334,"Fund/getAccount":3.334,"Fund/getBill":3.334,"Fund/getBillTypeList":3.334,"Fund/marginHistory":3.334,"Positions/getPositions":3.334,"Positions/getNominalValue":3.334,"Positions/marginInfo":3.334,"setting/get":3.334,"trade/getAllOrders":3.334,"trade/getOrder":3.334,"trade/getOrderAlgos":3.334,"trade/getTradeList":3.334,"trade/getUndoneOrders":3.334,"trade/tradeHistory":3.334},post:{"activity/buyTicket":3.334,"Fund/transferFund":3.334,"Positions/setMarginCoins":3.334,"Positions/updateAppendUSDValue":3.334,"Positions/updateMargin":3.334,"setting/setLeverage":3.334,"setting/setPositionsMode":3.334,"trade/batchOrder":3.334,"trade/batchCancelOrder":3.334,"trade/cancelAlgos":3.334,"trade/cancelAllOrders":3.334,"trade/cancelOrder":3.334,"trade/order":3.334,"trade/orderAlgo":3.334,"trade/updateOrderAlgo":3.334}}}}},fees:{funding:{withdraw:{}},trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},commonCurrencies:{ANG:"Anagram",ENT:"ENTCash",BCHABC:"BCHABC",BCHSV:"BCHSV"},options:{timeframes:{spot:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},swap:{"1m":"1M","5m":"5M","15m":"15M","30m":"30M","1h":"1H","6h":"6H","1d":"1D","5d":"5D"}}},precisionMode:O,exceptions:{ws:{1001:n,1002:n,1003:c,1004:c,1005:c,1006:p,1007:n,1009:y,1010:u,1012:p,1013:n,1014:n,2001:d,2002:d,2003:d,2005:d,2006:d,2007:d,2008:d,2009:d,3001:l,3002:m,3003:m,3004:c,3005:r,3006:p,3007:b,3008:n,3009:m,3010:p,3011:m,3012:m,4001:v,4002:f},exact:{10001:n,10002:p,10003:T,10004:T,10005:p,10006:r,10007:n,10008:n,10009:n,1001:n,10010:c,10011:c,10012:v,10013:c,10014:c,10015:c,10016:c,10017:p,10018:v,10019:b,1002:n,10020:r,10021:r,10022:r,10023:f,10024:c,10025:n,10026:w,10027:b,10028:u,10029:S,1003:c,10030:r,10031:r,10032:r,10033:r,10034:r,10035:r,10036:r,10037:o,10038:r,10039:T,1004:c,10040:T,10041:T,10042:n,10043:n,10044:n,10045:n,10046:n,10047:n,10048:n,10049:w,1005:c,1006:c,1009:u,1010:u,10100:y,1012:p,1013:n,1014:n,11e3:n,11001:n,110011:n,11002:n,11003:n,11004:d,11005:m,11006:d,11007:l,11008:n,11009:n,110110:n,11012:d,11013:n,11014:n,11015:c,11016:c,11017:n,11018:d,11019:n,11021:d,11023:n,11030:p,11031:n,11032:n,11033:o,11034:n,12e3:m,12001:m,12002:m,12003:m,12004:m,12005:m,12006:m,12007:m,12008:m,12009:m,12010:m,12011:m,12012:l,12013:m,12014:m,12015:m,12016:m,12017:m,12018:m,12019:o,12020:n,12021:m,12022:m,12023:l,12024:m,12025:m,12026:k,12027:u,12028:m,12029:m,12201:m,12202:m,12203:m,12204:m,12205:m,12206:m,12207:f,13001:c,13002:p,13003:m,13004:m,13005:f,13006:n,13007:n,13008:n,13009:n,14e3:n,14001:c,14002:c,14003:n,14100:n,14101:f,14200:o,14300:n,14301:n,14302:n,14303:n,14305:n,14306:n,14307:m,14308:m,14309:n,14310:h,14311:h,14312:n,14313:p,14314:n,2001:d,2002:d,2003:d,2005:d,2006:d,2007:d,2008:d,2009:d,3001:l,3002:m,3003:m,3004:c,3005:r,3006:c,3007:c,3008:l,3009:m,3010:p,3011:m,3012:m,4001:u,4002:f,9999:n},broad:{"提币地址有误, 请先添加提币地址。":g,"资金不足,无法划账":d,"响应超时":b}}})}async fetchMarkets(e={}){let t=[this.spotV1PublicGetMarkets(e),this.contractV2PublicGetConfigMarketList(e)];t=await Promise.all(t);const s=t[0],i=t[1],r=this.safeValue(i,"data",[]),a=this.indexBy(r,"marketName"),n=this.deepExtend(a,s),o=Object.keys(n),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=n[t],[i,r]=t.split("_"),a=this.safeCurrencyCode(i),d=this.safeCurrencyCode(r),h=this.safeValue(s,"marginCurrencyName"),l=this.safeCurrencyCode(h),u=void 0===l,f=this.safeValue(s,"futures",!1),p=!!f||void 0;let m=!0,g=a+"/"+d;if(f){m="1"===this.safeString(s,"status"),g=a+"/"+d+":"+l}c.push({id:t,symbol:g,base:a,quote:d,settle:l,baseId:i,quoteId:r,settleId:h,type:f?"swap":"spot",spot:u,margin:!1,swap:f,future:!1,option:!1,active:m,contract:f,linear:p,inverse:f?!p:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString2(s,"amountScale","amountDecimal"))),price:this.parseNumber(this.parsePrecision(this.safeString2(s,"priceScale","priceDecimal")))},limits:{leverage:{min:void 0,max:this.safeNumber(s,"maxLeverage")},amount:{min:this.safeNumber(s,"minAmount"),max:this.safeNumber(s,"maxAmount")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber2(s,"minSize","minTradeMoney"),max:this.safeNumber(s,"maxTradeMoney")}},info:s})}return c}async fetchCurrencies(e={}){const t=await this.spotV1PublicGetGetFeeInfo(e),s=this.safeValue(t,"result",{}),i=Object.keys(s),r={};for(let e=0;e<i.length;e++){const t=i[e],a=s[t],n=this.safeCurrencyCode(t);let o=!0,c=!0;const d={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"chainName"),i=this.safeNumber(t,"fee"),r=this.safeValue(t,"canDeposit"),n=this.safeValue(t,"canWithdraw");c=c||r,o=o||n,d[s]=i}const h=o&&c;r[n]={id:t,name:void 0,code:n,precision:void 0,info:a,active:h,deposit:c,withdraw:o,fee:void 0,fees:d,limits:this.limits}}return r}parseBalance(e){const t=this.safeValue(e.result,"coins"),s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.account(),a=this.safeString(i,"key"),n=this.safeCurrencyCode(a);r.free=this.safeString(i,"available"),r.used=this.safeString(i,"freez"),s[n]=r}return this.safeBalance(s)}parseSwapBalance(e){const t={info:e},s=this.safeValue(e,"data",{});for(let e=0;e<s.length;e++){const i=s[e],r=this.safeCurrencyCode(this.safeString(i,"currencyName")),a=this.account();a.total=this.safeString(i,"accountBalance"),a.free=this.safeString(i,"allowTransferOutAmount"),a.used=this.safeString(i,"freezeAmount"),t[r]=a}return this.safeBalance(t)}parseMarginBalance(e,t){const s={info:e};let i;if("isolated"===t){const t=this.safeValue(e,"message",{}),s=this.safeValue(t,"datas",{});i=this.safeValue(s,"levers",[])}else{const t=this.safeValue(e,"result",{});i=this.safeValue(t,"list",[])}for(let e=0;e<i.length;e++){const r=i[e],a=this.account();if("isolated"===t){const e=this.safeCurrencyCode(this.safeString(r,"fShowName"));a.total=this.safeString(r,"fAvailableUSD"),a.free=this.safeString(r,"couldTransferOutFiat"),a.used=this.safeString(r,"fFreeze"),s[e]=a}else{const e=this.safeCurrencyCode(this.safeString(r,"key"));a.total=this.safeString(r,"amount"),a.free=this.safeString(r,"canTransferOut"),a.used=this.safeString(r,"freeze"),s[e]=a}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const[t,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i="margin"===t,r="swap"===t;let a;const n=i?"isolated":"cross",o=this.safeString2(this.options,"defaultMarginMode","marginMode",n);"isolated"===o?a="spotV1PrivateGetGetLeverAssetsInfo":"cross"===o&&(a="spotV1PrivateGetGetCrossAssets");const c=this.getSupportedMapping(t,{spot:"spotV1PrivateGetGetAccountInfo",swap:"contractV2PrivateGetFundBalance",margin:a}),d={};r&&(d.futuresAccountType=1);const h=await this[c](this.extend(d,s));return r?this.parseSwapBalance(h):i?this.parseMarginBalance(h,o):this.parseBalance(h)}parseDepositAddress(e,t){let s,i=this.safeString2(e,"key","address");const r=this.safeString(e,"memo");if(void 0!==r)s=r;else if(i.indexOf("_")>=0){const e=i.split("_");i=e[0],s=e[1]}this.checkAddress(i);const a=this.safeString(e,"blockChain");return{currency:this.safeCurrencyCode(a,t),address:i,tag:s,network:void 0,info:e}}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=await this.spotV1PrivateGetGetPayinAddress(t),i=this.safeValue(s,"message",{}),r=this.safeValue(i,"datas",[]);return this.parseDepositAddresses(r,e)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.spotV1PrivateGetGetUserAddress(this.extend(i,t)),a=this.safeValue(r,"message",{}),n=this.safeValue(a,"datas",{});return this.parseDepositAddress(n,s)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={};r[i.swap?"symbol":"market"]=i.id;const a=this.getSupportedMapping(i.type,{spot:"spotV1PublicGetDepth",swap:"contractV1PublicGetDepth"});void 0!==t&&(r.size=t);const n=await this[a](this.extend(r,s));let o,c;return"swap"===i.type?(o=this.safeValue(n,"data"),c=this.safeInteger(o,"time")):(o=n,c=this.safeTimestamp(n,"timestamp")),this.parseOrderBook(o,e,c)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.spotV1PublicGetAllTicker(t),i={},r={},a=Object.keys(this.markets_by_id);for(let e=0;e<a.length;e++){r[a[e].replace("_","")]=this.markets_by_id[a[e]]}const n=Object.keys(s);for(let e=0;e<n.length;e++){const t=this.safeValue(r,n[e]);if(void 0!==t){const r=t.symbol,a=this.safeValue(s,n[e]);void 0!==a&&(i[r]=this.parseTicker(a,t))}}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={};i[s.swap?"symbol":"market"]=s.id;const r=this.getSupportedMapping(s.type,{spot:"spotV1PublicGetTicker",swap:"contractV1PublicGetTicker"}),a=await this[r](this.extend(i,t));let n;if("swap"===s.type){n={};const e=this.safeValue(a,"data"),t=this.safeValue(e,s.id,[]);for(let e=0;e<t.length;e++)n.open=this.safeValue(t,0),n.high=this.safeValue(t,1),n.low=this.safeValue(t,2),n.last=this.safeValue(t,3),n.vol=this.safeValue(t,4),n.riseRate=this.safeValue(t,5)}else n=this.safeValue(a,"ticker",{}),n.date=this.safeValue(a,"date");return this.parseTicker(n,s)}parseTicker(e,t){const s=this.safeInteger(e,"date",this.milliseconds()),i=this.safeString(e,"last");return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}parseOHLCV(e,t){if(t.swap){return e.length>5?[this.safeTimestamp(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]:[this.safeTimestamp(e,4),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),void 0]}return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n=a.swap,o=a.spot,c=this.safeValue(this.options,"timeframes",{}),d=this.safeValue(c,a.type,{}),l=this.safeString(d,t);if(void 0===l)throw new h(this.id+" fetchOHLCV() does not support "+t+" timeframe for "+a.type+" markets");void 0===i&&(i=1e3);const u={size:i};u[n?"symbol":"market"]=a.id;u[n?"period":"type"]=l;const f=this.safeString(r,"price");r=this.omit(r,"price");let p=this.getSupportedMapping(a.type,{spot:"spotV1PublicGetKline",swap:"contractV1PublicGetKline"});n?"mark"===f?p="contractV1PublicGetMarkKline":"index"===f&&(p="contractV1PublicGetIndexKline"):o&&void 0!==s&&(u.since=s);const m=await this[p](this.extend(u,r)),g=this.safeValue(m,"data",[]);return this.parseOHLCVs(g,a,t,s,i)}parseTrade(e,t){const s=t.swap?"side":"trade_type";let i,r=this.safeString(e,s);const a=this.safeValue(e,"maker");let n;void 0!==a&&(i=a?"maker":"taker"),t.spot?r="bid"===r?"buy":"sell":"3"===r?r="sell":"4"===r||"1"===r?r="buy":"2"===r&&(r="sell"),n=t.swap?this.safeInteger(e,"createTime"):this.safeTimestamp(e,"date");const o=this.safeString(e,"price"),c=this.safeString(e,"amount");let d;const h=this.safeString(e,"feeAmount");if(void 0!==h){const t=this.safeString(e,"feeCurrency");d={cost:h,currency:this.safeCurrencyCode(t)}}return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:this.safeString(e,"tid"),timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:void 0,side:r,order:this.safeString(e,"orderId"),takerOrMaker:i,price:o,amount:c,cost:void 0,fee:d},t)}async fetchTrades(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.swap,n={};void 0!==s&&(n.pageSize=s),void 0!==t&&(n.startTime=t);n[a?"symbol":"market"]=r.id,a&&void 0===i.pageNum&&(n.pageNum=1);const c=this.getSupportedMapping(r.type,{spot:"spotV1PublicGetTrades",swap:"contractV2PrivateGetTradeTradeHistory"});let d=await this[c](this.extend(n,i));if(a){const e=this.safeValue(d,"data");d=this.safeValue(e,"list")}return this.parseTrades(d,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const o=this.market(e),c=o.swap,d=o.spot,h=this.safeString(a,"timeInForce");let l=this.safeValue(a,"reduceOnly");const u=this.safeValue2(a,"triggerPrice","stopPrice"),f=this.safeValue(a,"stopLossPrice"),p=this.safeValue(a,"takeProfitPrice"),g=void 0!==f,y=void 0!==p,b=void 0!==u;if(this.sum(g,y,b))throw new n(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");const v=g||y||b;if(v&&d)throw new n(this.id+" createOrder() it is not possible to make a stop order on spot markets");if("market"===t)throw new m(this.id+" createOrder() on "+o.type+" markets does not allow market orders");let w=this.getSupportedMapping(o.type,{spot:"spotV1PrivateGetOrder",swap:"contractV2PrivatePostTradeOrder"});const S={amount:this.amountToPrecision(e,i)};if(d){const i=1===this.safeInteger(a,"orderType",t),n=this.isPostOnly(!1,i,a);S.tradeType="buy"===s?1:0,S.currency=o.id,n?S.orderType=1:"IOC"===h&&(S.orderType=2),void 0!==r&&(S.price=this.priceToPrecision(e,r))}else if(c){const i=4===this.safeInteger(a,"action",t),n=this.isPostOnly(!1,i,a);(g||y)&&(l=!0),S.side=l?0:"buy"===s?5:6,v?(w="contractV2PrivatePostTradeOrderAlgo",g?(S.orderType=2,S.bizType=2,S.triggerPrice=this.priceToPrecision(e,f)):y?(S.orderType=2,S.bizType=1,S.triggerPrice=this.priceToPrecision(e,p)):b&&(S.orderType=1,S.triggerPrice=this.priceToPrecision(e,u)),S.algoPrice=this.priceToPrecision(e,r),S.pricetype=2):S.action="IOC"===h?3:n?4:"FOK"===h?5:"limit"===t?1:t,void 0!==r&&(S.price=this.priceToPrecision(e,r)),S.symbol=o.id;const c=this.safeString(a,"clientOrderId");void 0!==c&&(S.clientOrderId=c);const d=this.safeValue(a,"extend",void 0);void 0!==d&&(S.extend=d)}const k=this.omit(a,["takeProfitPrice","stopLossPrice","stopPrice","reduceOnly","orderType","triggerPrice","priceType","clientOrderId","extend"]),T=await this[w](this.extend(S,k));let O=T;return c&&!v&&(O=this.safeValue(T,"data")),this.parseOrder(O,o)}async cancelOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t),r=i.swap,a={};a[r?"symbol":"currency"]=this.marketId(t);a[r?"orderId":"id"]=e.toString();const n=this.getSupportedMapping(i.type,{spot:"spotV1PrivateGetCancelOrder",swap:"contractV2PrivatePostTradeCancelOrder"}),c=await this[n](this.extend(a,s));return this.parseOrder(c,i)}async cancelAllOrders(e,t={}){if(void 0===e)throw new o(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const s=this.market(e),i=this.safeValue(t,"stop");if(s.spot)throw new h(this.id+" cancelAllOrders() is not supported on "+s.type+" markets");const r={symbol:s.id};let a="contractV2PrivatePostTradeCancelAllOrders";i&&(a="contractV2PrivatePostTradeCancelAlgos");const n=this.omit(t,"stop");return await this[a](this.extend(r,n))}async fetchOrder(e,t,s={}){if(void 0===t)throw new o(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const i=this.market(t);if(void 0!==this.safeInteger(s,"orderType"))throw new n(this.id+" fetchOrder() it is not possible to fetch a single conditional order, use fetchOrders instead");const r=i.swap,a={};a[r?"symbol":"currency"]=this.marketId(t);a[r?"orderId":"id"]=e.toString();const c=this.getSupportedMapping(i.type,{spot:"spotV1PrivateGetGetOrder",swap:"contractV2PrivateGetTradeGetOrder"}),d=await this[c](this.extend(a,s));let h=d;return r&&(h=this.safeValue(d,"data")),this.parseOrder(h,i)}async fetchOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=this.safeInteger(i,"orderType"),n=r.swap,c={pageSize:s};c[r.swap?"symbol":"currency"]=r.id;c[r.swap?"pageNum":"pageIndex"]=1,n&&(c.startTime=t);let d=this.getSupportedMapping(r.type,{spot:"spotV1PrivateGetGetOrdersIgnoreTradeType",swap:"contractV2PrivateGetTradeGetAllOrders"});"tradeType"in i&&(d="spotV1PrivateGetGetOrdersNew"),void 0!==a&&(d="contractV2PrivateGetTradeGetOrderAlgos");const h=await this[d](this.extend(c,i));let l=h;if(n){const e=this.safeValue(h,"data",{});l=this.safeValue(e,"list",[])}return this.parseOrders(l,r,t,s)}async fetchCanceledOrders(e,t,s=10,i={}){if(void 0===e)throw new o(this.id+" fetchCanceledOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=this.safeValue(i,"reduceOnly"),n=this.safeValue(i,"stop"),c={pageSize:s};c[r.spot?"currency":"symbol"]=r.id;c[r.spot?"pageIndex":"pageNum"]=1;let d,h="spotV1PrivateGetGetOrdersIgnoreTradeType";if(n){h="contractV2PrivateGetTradeGetOrderAlgos";const e=this.safeInteger(i,"orderType");if(void 0===e)throw new o(this.id+" fetchCanceledOrders() requires an orderType parameter for stop orders");const t=this.safeValue(i,"side"),s=this.safeInteger(i,"bizType");"sell"===t&&a?c.side=3:"buy"===t&&a?c.side=4:"buy"===t?c.side=1:"sell"===t?c.side=2:5===t?c.side=5:6===t?c.side=6:0===t&&(c.side=0),1===e?c.orderType=1:(2===e||s)&&(c.orderType=2,c.bizType=s),c.status=2}"tradeType"in i&&(h="spotV1PrivateGetGetOrdersNew");try{d=await this[h](this.extend(c,i))}catch(e){if(e instanceof l)return[];throw e}const u=this.omit(i,["reduceOnly","stop","side","orderType","bizType"]);if(d=await this[h](this.extend(c,u)),n){const e=this.safeValue(d,"data",{});d=this.safeValue(e,"list",[])}const f=[];if("spot"===r.type){for(let e=0;e<d.length;e++){const t=d[e];"1"===this.safeString(t,"status")&&f.push(t)}d=f}return this.parseOrders(d,r,t,s)}async fetchClosedOrders(e,t,s=10,i={}){if(void 0===e)throw new o(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=r.swap,c=this.safeInteger(i,"orderType"),d={pageSize:s};d[r.spot?"currency":"symbol"]=r.id;d[r.spot?"pageIndex":"pageNum"]=1,a&&void 0!==t&&(d.startTime=t);const h=this.getSupportedMapping(r.type,{spot:"spotV1PrivateGetGetFinishedAndPartialOrders",swap:"contractV2PrivateGetTradeGetOrderAlgos"});if(void 0===c)throw new n(this.id+" fetchClosedOrders() it not possible to fetch closed swap orders, use fetchOrders instead");a&&(d.status=5);const l=await this[h](this.extend(d,i));let u=l;if(a){const e=this.safeValue(l,"data",{});u=this.safeValue(e,"list",[])}return this.parseOrders(u,r,t,s)}async fetchOpenOrders(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),a=this.safeInteger(i,"orderType"),n=r.swap,c={};void 0!==s&&(c.pageSize=s);c[r.swap?"symbol":"currency"]=r.id;c[r.swap?"pageNum":"pageIndex"]=1,n&&void 0!==t&&(c.startTime=t);let d=this.getSupportedMapping(r.type,{spot:"spotV1PrivateGetGetUnfinishedOrdersIgnoreTradeType",swap:"contractV2PrivateGetTradeGetUndoneOrders"});void 0!==a&&(d="contractV2PrivateGetTradeGetOrderAlgos",c.status=1),"tradeType"in i&&(d="spotV1PrivateGetGetOrdersNew");const h=await this[d](this.extend(c,i));let l;if(n){const e=this.safeValue(h,"data",{});l=this.safeValue(e,"list",[])}return this.parseOrders(l,r,t,s)}parseOrder(e,t){let s=t.swap?this.safeString2(e,"orderId","data"):this.safeString(e,"id");void 0===s&&(s=this.safeValue(e,"id"));let i=this.safeInteger2(e,"type","side");void 0===i?i=void 0:t.spot?i=1===i?"buy":"sell":t.swap&&(0===i?i=void 0:1===i||4===i||5===i?i="buy":2!==i&&3!==i&&6!==i||(i="sell"));let r=this.safeInteger(e,"trade_date");void 0===r&&(r=this.safeInteger(e,"createTime"));const a=this.safeString(e,"currency");t=this.safeMarket(a,t,"_");const n=this.safeString2(e,"price","algoPrice"),o=t.swap?this.safeString(e,"tradeAmount"):this.safeString(e,"trade_amount");let c=this.safeString(e,"total_amount");void 0===c&&(c=this.safeString(e,"amount"));const d=this.safeString(e,"trade_money"),h=this.parseOrderStatus(this.safeString(e,"status"),t),l=this.safeString(e,"timeInForce"),u="PO"===l,f=this.safeNumber(e,"fees");let p;if(void 0!==f){let s;s=!0===this.safeValue(e,"useZbFee")?"ZB":"sell"===i?t.quote:t.base,p={cost:f,currency:s}}return this.safeOrder({info:e,id:s,clientOrderId:this.safeString(e,"userId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:t.symbol,type:"limit",timeInForce:l,postOnly:u,side:i,price:n,stopPrice:this.safeNumber(e,"triggerPrice"),average:this.safeString(e,"avgPrice"),cost:d,amount:c,filled:o,remaining:void 0,status:h,fee:p,trades:void 0},t)}parseOrderStatus(e,t){let s={};return s="spot"===t.type?{0:"open",1:"canceled",2:"closed",3:"open"}:{1:"open",2:"canceled",3:"open",4:"rejected",5:"closed"},this.safeString(s,e,e)}parseTransactionStatus(e){return this.safeString({0:"pending",1:"failed",2:"ok",3:"canceled",5:"ok"},e,e)}parseTransaction(e,t){const s=this.safeString(e,"id"),i=this.safeString(e,"hash"),r=this.safeNumber(e,"amount");let a=this.parse8601(this.safeString(e,"submit_time"));a=this.safeInteger(e,"submitTime",a);let n,o=this.safeString2(e,"toAddress","address");if(void 0!==o){const e=o.split("_");o=this.safeString(e,0),n=this.safeString(e,1)}const c=this.safeInteger(e,"confirmTimes"),d=this.safeInteger(e,"manageTime");let h;const l=this.safeString(e,"currency"),u=this.safeCurrencyCode(l,t);void 0!==o&&(h=void 0===c?"withdrawal":"deposit");const f=this.parseTransactionStatus(this.safeString(e,"status"));let p;const m=this.safeNumber(e,"fees");return void 0!==m&&(p={cost:m,currency:u}),{info:e,id:s,txid:i,timestamp:a,datetime:this.iso8601(a),network:void 0,addressFrom:void 0,address:o,addressTo:o,tagFrom:void 0,tag:n,tagTo:n,type:h,amount:r,currency:u,status:f,updated:d,fee:p}}async setLeverage(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new o(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new r(this.id+" setLeverage() leverage should be between 1 and 125");const i=this.market(t);let n;if(!i.swap)throw new a(this.id+" setLeverage() supports swap contracts only");n=1;const c={symbol:i.id,leverage:e,futuresAccountType:n};return await this.contractV2PrivatePostSettingSetLeverage(this.extend(c,s))}async fetchFundingRateHistory(e,t,s,i={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);e=t.symbol,r.symbol=t.id}void 0!==t&&(r.startTime=t);const a=this.safeInteger2(i,"until","till");i=this.omit(i,["endTime","till","until"]),void 0!==a&&(r.endTime=a),void 0!==s&&(r.limit=s);const n=await this.contractV2PublicGetFundingRate(this.extend(r,i)),o=this.safeValue(n,"data",[]),c=[];for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"symbol"),i=this.safeSymbol(s),r=this.safeInteger(t,"fundingTime");c.push({info:t,symbol:i,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const d=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(d,e,t,s)}async fetchFundingRate(e,t={}){await this.loadMarkets();const s=this.market(e);if(!s.swap)throw new a(this.id+" fetchFundingRate() does not supports contracts only");const i={symbol:s.id},r=await this.contractV1PublicGetFundingRate(this.extend(i,t)),n=this.safeValue(r,"data");return this.parseFundingRate(n,s)}parseFundingRate(e,t){const s=this.safeString(e,"symbol"),i=this.safeSymbol(s,t),r=this.safeNumber(e,"fundingRate"),a=this.safeString(e,"nextCalculateTime");return{info:e,symbol:i,markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:r,fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:this.parse8601(a),nextFundingDatetime:a,previousFundingRate:this.safeString(e,"lastFundingRate"),previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRates(e,t={}){await this.loadMarkets();const s=await this.contractV2PublicGetPremiumIndex(t),i=this.safeValue(s,"data",[]),r=this.parseFundingRates(i);return this.filterByArray(r,"symbol",e)}async withdraw(e,t,s,i,r={}){[i,r]=this.handleWithdrawTagAndParams(i,r);const a=this.safeString(r,"safePwd",this.password);if(void 0===a)throw new o(this.id+" withdraw() requires exchange.password or a safePwd parameter");const n=this.safeNumber(r,"fees");if(void 0===n)throw new o(this.id+" withdraw() requires a fees parameter");this.checkAddress(s),await this.loadMarkets();const c=this.currency(e);void 0!==i&&(s+="_"+i);const d={amount:this.currencyToPrecision(e,t),currency:c.id,fees:this.currencyToPrecision(e,n),method:"withdraw",receiveAddr:s,safePwd:a},h=await this.spotV1PrivateGetWithdraw(this.extend(d,r)),l=this.parseTransaction(h,c);return this.extend(l,{type:"withdrawal",address:s,addressTo:s,amount:t})}async fetchWithdrawals(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s);const n=await this.spotV1PrivateGetGetWithdrawRecord(this.extend(r,i)),o=this.safeValue(n,"message",{}),c=this.safeValue(o,"datas",{}),d=this.safeValue(c,"list",[]);return this.parseTransactions(d,a,t,s)}async fetchDeposits(e,t,s,i={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==s&&(r.pageSize=s);const n=await this.spotV1PrivateGetGetChargeRecord(this.extend(r,i)),o=this.safeValue(n,"message",{}),c=this.safeValue(o,"datas",{}),d=this.safeValue(c,"list",[]);return this.parseTransactions(d,a,t,s)}async fetchPosition(e,t={}){let s;await this.loadMarkets(),void 0!==e&&(s=this.market(e));const i=await this.contractV2PrivateGetPositionsGetPositions(this.extend({futuresAccountType:1},t)),r=this.safeValue(i,"data",[]),a=this.safeValue(r,0);return this.parsePosition(a,s)}async fetchPositions(e,t={}){await this.loadMarkets();const s=await this.contractV2PrivateGetPositionsGetPositions(this.extend({futuresAccountType:1},t)),i=this.safeValue(s,"data",[]);return this.parsePositions(i,e)}parsePosition(e,t){const s=this.safeString(e,"marketName"),i=(t=this.safeMarket(s,t)).symbol,r=this.safeString(e,"amount"),a=this.safeNumber(e,"avgPrice"),n=this.safeString(e,"margin"),o="1"===this.safeString(e,"side")?"long":"short",c="1"===this.safeString(e,"marginMode")?"isolated":"cross",d=this.safeString(e,"leverage"),h=this.safeNumber(e,"liquidatePrice"),l=this.safeNumber(e,"unrealizedPnl"),u=this.safeNumber(e,"maintainMargin"),f=this.safeNumber(e,"marginRate"),p=this.safeNumber(e,"nominalValue"),m=_.stringMul(this.safeString(e,"returnRate"),"100"),g=this.safeNumber(e,"createTime");return{info:e,symbol:i,contracts:this.parseNumber(r),contractSize:void 0,entryPrice:a,collateral:void 0,side:o,unrealizedProfit:l,leverage:this.parseNumber(d),percentage:m,marginMode:c,notional:p,markPrice:void 0,liquidationPrice:h,initialMargin:this.parseNumber(n),initialMarginPercentage:void 0,maintenanceMargin:u,maintenanceMarginPercentage:void 0,marginRatio:f,timestamp:g,datetime:this.iso8601(g)}}parseLedgerEntryType(e){return this.safeString({1:"realized pnl",2:"commission",3:"funding fee subtract",4:"funding fee addition",5:"insurance clear",6:"transfer in",7:"transfer out",8:"margin addition",9:"margin subtraction",10:"commission addition",11:"bill type freeze",12:"bill type unfreeze",13:"system take over margin",14:"transfer",15:"realized pnl collection",16:"funding fee collection",17:"recommender return commission",18:"by level subtract positions",19:"system add",20:"system subtract",23:"trading competition take over fund",24:"trading contest tickets",25:"return of trading contest tickets",26:"experience expired recall",50:"test register gift",51:"register gift",52:"deposit gift",53:"trading volume gift",54:"awards gift",55:"trading volume gift",56:"awards gift expire",201:"open positions",202:"close positions",203:"take over positions",204:"trading competition take over positions",205:"one way open long",206:"one way open short",207:"one way close long",208:"one way close short",301:"coupon deduction service charge",302:"experience deduction",303:"experience expired"},e,e)}parseLedgerEntry(e,t){const s=this.safeInteger(e,"createTime");let i;let r;i=1===this.safeNumber(e,"isIn")?"increase":"reduce";const a=this.safeNumber(e,"fee");return void 0!==a&&(r={cost:a,currency:this.safeCurrencyCode(this.safeString(e,"unit"))}),{id:this.safeString(e,"id"),info:e,timestamp:s,datetime:this.iso8601(s),direction:i,account:this.safeString(e,"userId"),referenceId:void 0,referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeInteger(e,"type")),currency:this.safeCurrencyCode(this.safeString(e,"unit")),amount:this.safeNumber(e,"changeAmount"),before:this.safeNumber(e,"beforeAmount"),after:this.safeNumber(e,"available"),status:void 0,fee:r}}async fetchLedger(e,t,s,i={}){if(void 0===e)throw new o(this.id+" fetchLedger() requires a code argument");await this.loadMarkets();const r=this.currency(e),a={futuresAccountType:1};void 0!==e&&(a.currencyName=r.id),void 0!==t&&(a.startTime=t),void 0!==s&&(a.pageSize=s);const n=await this.contractV2PrivateGetFundGetBill(this.extend(a,i)),c=this.safeValue(n,"data",{}),d=this.safeValue(c,"list",[]);return this.parseLedger(d,r,t,s)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const[a,n]=this.handleMarketTypeAndParams("transfer",void 0,r),o=this.currency(e),c="margin"===a,d="swap"===a;let h,l;const u=this.currencyToPrecision(e,t),f={amount:u};if(d)h="spot"===s||"future"===i?1:0,f.currencyName=o.id,f.clientId=this.safeString(r,"clientId"),f.side=h;else{const e=c?"isolated":"cross",t=this.safeString2(this.options,"defaultMarginMode","marginMode",e);"isolated"===t?(l="spot"===s||"isolated"===i?"spotV1PrivateGetTransferInLever":"spotV1PrivateGetTransferOutLever",f.marketName=this.safeString(r,"marketName")):"cross"===t&&(l="spot"===s||"cross"===i?"spotV1PrivateGetTransferInCross":"spotV1PrivateGetTransferOutCross"),f.coin=o.id}const p=this.getSupportedMapping(a,{swap:"contractV2PrivatePostFundTransferFund",margin:l}),m=await this[p](this.extend(f,n));return this.extend(this.parseTransfer(m,o),{amount:this.parseNumber(u),fromAccount:s,toAccount:i})}parseTransfer(e,t){const s=this.milliseconds();return{id:this.safeString(e,"data"),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(void 0,"currency"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async modifyMarginHelper(e,t,s,i={}){if(void 0===i.positionsId)throw new o(this.id+" modifyMarginHelper() requires a positionsId argument in the params");await this.loadMarkets();const r=this.market(e);t=this.amountToPrecision(e,t);const a={positionsId:this.safeString(i,"positionsId"),amount:t,type:s,futuresAccountType:1},n=await this.contractV2PrivatePostPositionsUpdateMargin(this.extend(a,i));return this.extend(this.parseMarginModification(n,r),{amount:this.parseNumber(t)})}parseMarginModification(e,t){const s=this.safeValue(e,"data",{}),i=1===this.safeInteger(s,"side")?"add":"reduce",r=1===this.safeInteger(s,"status")?"ok":"failed";return{info:e,type:i,amount:void 0,code:t.quote,symbol:t.symbol,status:r}}async addMargin(e,t,s={}){if(void 0===s.positionsId)throw new o(this.id+" addMargin() requires a positionsId argument in the params");return await this.modifyMarginHelper(e,t,1,s)}async reduceMargin(e,t,s={}){if(void 0===s.positionsId)throw new o(this.id+" reduceMargin() requires a positionsId argument in the params");return await this.modifyMarginHelper(e,t,0,s)}async fetchBorrowRate(e,t={}){await this.loadMarkets();const s={coin:this.currency(e).id},i=await this.spotV1PrivateGetGetLoans(this.extend(s,t)),r=this.milliseconds(),a=this.safeValue(i,"result",[]),n=this.safeValue(a,0,{});return{currency:this.safeCurrencyCode(this.safeString(n,"coinName")),rate:this.safeNumber(n,"interestRateOfDay"),period:this.safeNumber(n,"repaymentDay"),timestamp:r,datetime:this.iso8601(r),info:n}}async fetchBorrowRates(e={}){if(void 0===e.coin)throw new o(this.id+" fetchBorrowRates() requires a coin argument in the params");await this.loadMarkets();const t={coin:this.currency(this.safeString(e,"coin")).id},s=await this.spotV1PrivateGetGetLoans(this.extend(t,e)),i=this.milliseconds(),r=this.safeValue(s,"result",[]),a=[];for(let e=0;e<r.length;e++){const t=r[e];a.push({currency:this.safeCurrencyCode(this.safeString(t,"coinName")),rate:this.safeNumber(t,"interestRateOfDay"),period:this.safeNumber(t,"repaymentDay"),timestamp:i,datetime:this.iso8601(i),info:t})}return a}async setPositionMode(e,t,s={}){if(await this.loadMarkets(),void 0===t)throw new o(this.id+" setPositionMode() requires a symbol argument");const i=this.market(t);let r;if(!i.swap)throw new a(this.id+" setPositionMode() supports swap contracts only");r=1;const n={marketId:i.id,positionMode:e?2:1,futuresAccountType:r};return await this.contractV2PrivatePostSettingSetPositionsMode(this.extend(n,s))}async borrowMargin(e,t,s,i={}){let r;await this.loadMarkets(),void 0!==s&&(r=this.market(s),s=r.symbol);const a=this.safeString2(this.options,"defaultMarginMode","marginMode","cross"),n=this.safeString(i,"marginMode",a),c=this.safeString(i,"safePwd",this.password),d=this.currency(e),h={coin:d.id,amount:this.currencyToPrecision(e,t)};let l;if("isolated"===n){if(void 0===s)throw new o(this.id+" borrowMargin() requires a symbol argument for isolated margin");l="spotV1PrivateGetBorrow",h.marketName=r.id}else"cross"===n&&(l="spotV1PrivateGetDoCrossLoan",h.safePwd=c);const u=await this[l](this.extend(h,i)),f=this.parseMarginLoan(u,d);return this.extend(f,{amount:t,symbol:s})}parseMarginLoan(e,t){return{id:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",s="GET",i={},r,a){const[n,o,c]=t;let d=this.implodeHostname(this.urls.api[n][o][c]);if("public"===c)"getFeeInfo"===e?d=this.implodeHostname(this.urls.api[n][o].private)+"/"+e:d+="/"+o+"/"+e,Object.keys(i).length&&(d+="?"+this.urlencode(i));else if("contract"===n){const t=this.milliseconds(),n=this.iso8601(t);let c=n+s+"/Server/api/"+o+"/"+e;if(i=this.keysort(i),r={"ZB-APIKEY":this.apiKey,"ZB-TIMESTAMP":n},d+="/"+o+"/"+e,"POST"===s)r["Content-Type"]="application/json",a=this.json(i),c+=this.urlencode(i);else if(Object.keys(i).length){const e=this.urlencode(i);d+="?"+e,c+=e}const h=this.hash(this.encode(this.secret),"sha1"),l=this.hmac(this.encode(c),this.encode(h),"sha256","base64");r["ZB-SIGN"]=l}else{let t=this.keysort(this.extend({method:e,accesskey:this.apiKey},i));const s=this.nonce();t=this.keysort(t);const r=this.rawencode(t),a=this.hash(this.encode(this.secret),"sha1");d+="/"+e+"?"+r+"&"+("sign="+this.hmac(this.encode(r),this.encode(a),"md5")+"&reqTime="+s.toString())}return{url:d,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,o,c,d){if(void 0!==o&&"{"===a[0]){const e=this.id+" "+a;if(this.throwBroadlyMatchedException(this.exceptions.broad,a,e),"code"in o){const t=this.safeString(o,"code");if(this.throwExactlyMatchedException(this.exceptions.exact,t,e),"1000"!==t&&"10000"!==t)throw new n(e)}const t=this.safeValue(o,"result");if(void 0!==t&&!t){throw"服务端忙碌"===this.safeString(o,"message")?new u(e):new n(e)}}}}},{"./base/Exchange":126,"./base/Precise":127,"./base/errors":129,"./base/functions/number":135}],299:[function(e,t,s){"use strict";const i=e("./ndax.js");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"zipmex",name:"Zipmex",countries:["AU","SG","TH","ID"],certified:!1,pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/146103275-c39a34d9-68a4-4cd2-b1f1-c684548d311b.jpg",test:void 0,api:{public:"https://apws.zipmex.com:8443/AP",private:"https://apws.zipmex.com:8443/AP"},www:"https://zipmex.com/",referral:"https://trade.zipmex.com/global/accounts/sign-up?aff=KLm7HyCsvN",fees:"https://zipmex.com/fee-schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}}})}}},{"./ndax.js":231}],300:[function(e,t,s){"use strict";const i=e("./base/Exchange"),{InvalidNonce:r,InsufficientFunds:a,AuthenticationError:n,InvalidOrder:o,ExchangeError:c,OrderNotFound:d,AccountSuspended:h,BadSymbol:l,OrderImmediatelyFillable:u,RateLimitExceeded:f,OnMaintenance:p,PermissionDenied:m}=e("./base/errors"),{TICK_SIZE:g}=e("./base/functions/number");t.exports=class extends i{describe(){return this.deepExtend(super.describe(),{id:"zonda",name:"Zonda",countries:["EE"],rateLimit:1e3,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:void 0,fetchTransfer:!1,fetchWithdrawal:!1,fetchWithdrawals:void 0,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","3d":"259200","1w":"604800"},hostname:"zonda.exchange",urls:{referral:"https://auth.zondaglobal.com/ref/jHlbB4mIkdS1",logo:"https://user-images.githubusercontent.com/1294454/159202310-a0e38007-5e7c-4ba9-a32f-c8263a0291fe.jpg",www:"https://zondaglobal.com",api:{public:"https://{hostname}/API/Public",private:"https://{hostname}/API/Trading/tradingApi.php",v1_01Public:"https://api.{hostname}/rest",v1_01Private:"https://api.{hostname}/rest"},doc:["https://docs.zonda.exchange/","https://github.com/BitBayNet/API"],support:"https://zondaglobal.com/en/helpdesk/zonda-exchange",fees:"https://zondaglobal.com/legal/zonda-exchange/fees"},api:{public:{get:["{id}/all","{id}/market","{id}/orderbook","{id}/ticker","{id}/trades"]},private:{post:["info","trade","cancel","orderbook","orders","transfer","withdraw","history","transactions"]},v1_01Public:{get:["trading/ticker","trading/ticker/{symbol}","trading/stats","trading/stats/{symbol}","trading/orderbook/{symbol}","trading/transactions/{symbol}","trading/candle/history/{symbol}/{resolution}"]},v1_01Private:{get:["api_payments/deposits/crypto/addresses","payments/withdrawal/{detailId}","payments/deposit/{detailId}","trading/offer","trading/stop/offer","trading/config/{symbol}","trading/history/transactions","balances/BITBAY/history","balances/BITBAY/balance","fiat_cantor/rate/{baseId}/{quoteId}","fiat_cantor/history"],post:["trading/offer/{symbol}","trading/stop/offer/{symbol}","trading/config/{symbol}","balances/BITBAY/balance","balances/BITBAY/balance/transfer/{source}/{destination}","fiat_cantor/exchange"],delete:["trading/offer/{symbol}/{id}/{side}/{price}","trading/stop/offer/{symbol}/{id}/{side}/{price}"],put:["balances/BITBAY/balance/{id}"]}},fees:{trading:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.001"),percentage:!0,tierBased:!1},fiat:{maker:.003,taker:.0043,percentage:!0,tierBased:!0,tiers:{taker:[[.0043,0],[.0042,1250],[.0041,3750],[.004,7500],[.0039,1e4],[.0038,15e3],[.0037,2e4],[.0036,25e3],[.0035,37500],[.0034,5e4],[.0033,75e3],[.0032,1e5],[.0031,15e4],[.003,2e5],[.0029,25e4],[.0028,375e3],[.0027,5e5],[.0026,625e3],[.0025,875e3]],maker:[[.003,0],[.0029,1250],[.0028,3750],[.0028,7500],[.0027,1e4],[.0026,15e3],[.0025,2e4],[.0025,25e3],[.0024,37500],[.0023,5e4],[.0023,75e3],[.0022,1e5],[.0021,15e4],[.0021,2e5],[.002,25e4],[.0019,375e3],[.0018,5e5],[.0018,625e3],[.0017,875e3]]}},funding:{withdraw:{}}},options:{fiatCurrencies:["EUR","USD","GBP","PLN"],transfer:{fillResponseFromRequest:!0}},precisionMode:g,exceptions:{400:c,401:o,402:o,403:o,404:o,405:o,406:a,408:o,501:n,502:n,503:r,504:c,505:n,506:h,509:c,510:l,FUNDS_NOT_SUFFICIENT:a,OFFER_FUNDS_NOT_EXCEEDING_MINIMUMS:o,OFFER_NOT_FOUND:d,OFFER_WOULD_HAVE_BEEN_PARTIALLY_FILLED:u,ACTION_LIMIT_EXCEEDED:f,UNDER_MAINTENANCE:p,REQUEST_TIMESTAMP_TOO_OLD:r,PERMISSIONS_NOT_SUFFICIENT:m,INVALID_STOP_RATE:o},commonCurrencies:{GGC:"Global Game Coin"}})}async fetchMarkets(e={}){const t=await this.v1_01PublicGetTradingTicker(e),s=this.safeValue(this.options,"fiatCurrencies",[]),i=[],r=this.safeValue(t,"items",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],n=r[t],o=this.safeValue(n,"market",{}),c=this.safeValue(o,"first",{}),d=this.safeValue(o,"second",{}),h=this.safeString(c,"currency"),l=this.safeString(d,"currency"),u=this.safeCurrencyCode(h),f=this.safeCurrencyCode(l);let p=this.safeValue(this.fees,"trading",{});(this.inArray(u,s)||this.inArray(f,s))&&(p=this.safeValue(this.fees,"fiat",{})),i.push({id:t,symbol:u+"/"+f,base:u,quote:f,settle:void 0,baseId:h,quoteId:l,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(p,"taker"),maker:this.safeNumber(p,"maker"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(c,"scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(d,"scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(c,"minOffer"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(d,"minOffer"),max:void 0}},info:n})}return i}async fetchOpenOrders(e,t,s,i={}){await this.loadMarkets();const r=await this.v1_01PrivateGetTradingOffer(this.extend({},i)),a=this.safeValue(r,"items",[]);return this.parseOrders(a,void 0,t,s,{status:"open"})}parseOrder(e,t){const s=this.safeString(e,"market"),i=this.safeSymbol(s,t,"-"),r=this.safeInteger(e,"time"),a=this.safeString(e,"startAmount"),n=this.safeString(e,"currentAmount"),o=this.safeValue(e,"postOnly");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,info:e,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:void 0,symbol:i,type:this.safeString(e,"mode"),timeInForce:void 0,postOnly:o,side:this.safeStringLower(e,"offerType"),price:this.safeString(e,"rate"),stopPrice:void 0,amount:a,cost:void 0,filled:void 0,remaining:n,average:void 0,fee:void 0,trades:void 0},t)}async fetchMyTrades(e,t,s,i={}){await this.loadMarkets();const r={};if(e){const t=[this.marketId(e)];r.markets=t}const a={query:this.json(this.extend(r,i))},n=await this.v1_01PrivateGetTradingHistoryTransactions(a),o=this.safeValue(n,"items"),c=this.parseTrades(o,void 0,t,s);return void 0===e?c:this.filterBySymbol(c,e)}parseBalance(e){const t=this.safeValue(e,"balances");if(void 0===t)throw new c(this.id+" empty balance response "+this.json(e));const s={info:e};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(i,"lockedFunds"),n.free=this.safeString(i,"availableFunds"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1_01PrivateGetBalancesBITBAYBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t,s={}){await this.loadMarkets();const i=this.market(e),r={symbol:i.id},a=await this.v1_01PublicGetTradingOrderbookSymbol(this.extend(r,s)),n=this.safeValue(a,"buy",[]),o=this.safeValue(a,"sell",[]),c=this.safeInteger(a,"timestamp");return{symbol:i.symbol,bids:this.parseBidsAsks(n,"ra","ca"),asks:this.parseBidsAsks(o,"ra","ca"),timestamp:c,datetime:this.iso8601(c),nonce:this.safeInteger(a,"seqNo")}}parseTicker(e,t){const s=this.safeString(e,"r24h"),i=this.safeString(e,"h"),r=this.safeString(e,"l"),a=this.safeString(e,"v"),n=this.safeString(e,"m"),o=(t=this.safeMarket(n,t,"-")).symbol;return this.safeTicker({symbol:o,timestamp:void 0,datetime:void 0,high:i,low:r,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:s,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const s=this.market(e),i={symbol:s.id},r=await this.v1_01PublicGetTradingStatsSymbol(this.extend(i,t)),a=this.safeValue(r,"stats");return this.parseTicker(a,s)}async fetchTickers(e,t={}){await this.loadMarkets();const s=await this.v1_01PublicGetTradingStats(t),i=this.safeValue(s,"items");return this.parseTickers(i,e)}async fetchLedger(e,t,s,i={}){const r=[];if(void 0!==e){const t=this.currency(e);r.push(t.id)}let a={balanceCurrencies:r};void 0!==t&&(a.fromTime=t),void 0!==s&&(a.limit=s),a=this.extend(a,i);const n=(await this.v1_01PrivateGetBalancesBITBAYHistory({query:this.json(a)})).items;return this.parseLedger(n,void 0,t,s)}parseLedgerEntry(e,t){const s=this.safeInteger(e,"time"),i=this.safeValue(e,"balance",{}),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.safeValue(e,"change",{});let o=this.safeNumber(n,"total"),c="in";o<0&&(c="out",o=-o);const d=this.safeString(e,"historyId"),h=this.safeString(e,"detailId"),l=this.parseLedgerEntryType(this.safeString(e,"type")),u=this.safeValue(e,"fundsBefore",{}),f=this.safeNumber(u,"total"),p=this.safeValue(e,"fundsAfter",{});return{info:e,id:d,direction:c,account:void 0,referenceId:h,referenceAccount:void 0,type:l,currency:a,amount:o,before:f,after:this.safeNumber(p,"total"),status:"ok",timestamp:s,datetime:this.iso8601(s),fee:void 0}}parseLedgerEntryType(e){return this.safeString({ADD_FUNDS:"transaction",BITCOIN_GOLD_FORK:"transaction",CREATE_BALANCE:"transaction",FUNDS_MIGRATION:"transaction",WITHDRAWAL_LOCK_FUNDS:"transaction",WITHDRAWAL_SUBTRACT_FUNDS:"transaction",WITHDRAWAL_UNLOCK_FUNDS:"transaction",TRANSACTION_COMMISSION_OUTCOME:"fee",TRANSACTION_COMMISSION_RETURN:"fee",TRANSACTION_OFFER_ABORTED_RETURN:"trade",TRANSACTION_OFFER_COMPLETED_RETURN:"trade",TRANSACTION_POST_INCOME:"trade",TRANSACTION_POST_OUTCOME:"trade",TRANSACTION_PRE_LOCKING:"trade"},e,e)}parseOHLCV(e,t){const s=this.safeValue(e,1,{});return[this.safeInteger(e,0),this.safeNumber(s,"o"),this.safeNumber(s,"h"),this.safeNumber(s,"l"),this.safeNumber(s,"c"),this.safeNumber(s,"v")]}async fetchOHLCV(e,t="1m",s,i,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.baseId+"-"+a.quoteId,resolution:this.timeframes[t]};void 0===i&&(i=100);const o=i*this.parseTimeframe(t)*1e3;void 0===s?(n.to=this.milliseconds(),n.from=n.to-o):(n.from=parseInt(s),n.to=this.sum(n.from,o));const c=await this.v1_01PublicGetTradingCandleHistorySymbolResolution(this.extend(n,r)),d=this.safeValue(c,"items",[]);return this.parseOHLCVs(d,a,t,s,i)}parseTrade(e,t){const s=this.safeInteger2(e,"time","t"),i=this.safeStringLower2(e,"userAction","ty"),r=this.safeValue(e,"wasTaker");let a;void 0!==r&&(a=r?"taker":"maker");const n=this.safeString2(e,"rate","r"),o=this.safeString2(e,"amount","a"),c=this.safeString(e,"commissionValue"),d=this.safeString(e,"market"),h=(t=this.safeMarket(d,t,"-")).symbol;let l;if(void 0!==c){l={currency:"buy"===i?t.base:t.quote,cost:c}}const u=this.safeString(e,"offerId");let f;return void 0!==u&&(f=u?"limit":"market"),this.safeTrade({id:this.safeString(e,"id"),order:u,timestamp:s,datetime:this.iso8601(s),symbol:h,type:f,side:i,price:n,amount:o,cost:void 0,takerOrMaker:a,fee:l,info:e},t)}async fetchTrades(e,t,s,i={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.baseId+"-"+r.quoteId};void 0!==t&&(a.fromTime=t-1),void 0!==s&&(a.limit=s);const n=await this.v1_01PublicGetTradingTransactionsSymbol(this.extend(a,i)),o=this.safeValue(n,"items");return this.parseTrades(o,r,t,s)}async createOrder(e,t,s,i,r,a={}){await this.loadMarkets();const n=this.market(e),o=n.baseId+"-"+n.quoteId;i=parseFloat(this.amountToPrecision(e,i));const d={symbol:o,offerType:s.toUpperCase(),amount:i},h=this.safeValue2(a,"stopPrice","stopLossPrice"),l=void 0!==h,u="limit"===t,f="market"===t,p="stop-limit"===t||u&&l,m="stop-market"===t||f&&l,g=p||m,y=g?"v1_01PrivatePostTradingStopOfferSymbol":"v1_01PrivatePostTradingOfferSymbol";if(u||p)d.rate=this.priceToPrecision(e,r),d.mode=p?"stop-limit":"limit";else{if(!f&&!m)throw new c(this.id+" createOrder() invalid type");d.mode=m?"stop-market":"market"}if(g){if(!l)throw new c(this.id+" createOrder() zonda requires `triggerPrice` or `stopPrice` parameter for stop-limit or stop-market orders");d.stopRate=this.priceToPrecision(e,h)}a=this.omit(a,["stopPrice","stopLossPrice"]);const b=await this[y](this.extend(d,a)),v=this.safeString2(b,"offerId","stopOfferId"),w=this.safeValue(b,"completed",!1)?"closed":"open",S=this.safeValue(b,"transactions");return this.safeOrder({id:v,info:b,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:w,symbol:e,type:t,side:s,price:r,amount:i,cost:void 0,filled:void 0,remaining:void 0,average:void 0,fee:void 0,trades:S,clientOrderId:void 0})}async cancelOrder(e,t,s={}){const i=this.safeString(s,"side");if(void 0===i)throw new c(this.id+' cancelOrder() requires a `side` parameter ("buy" or "sell")');const r=this.safeValue(s,"price");if(void 0===r)throw new c(this.id+" cancelOrder() requires a `price` parameter (float or string)");await this.loadMarkets();const a=this.market(t),n={symbol:a.baseId+"-"+a.quoteId,id:e,side:i,price:r};return await this.v1_01PrivateDeleteTradingOfferSymbolIdSidePrice(this.extend(n,s))}isFiat(e){return this.safeValue({USD:!0,EUR:!0,PLN:!0},e,!1)}parseDepositAddress(e,t){const s=this.safeString(e,"currency"),i=this.safeString(e,"address");return this.checkAddress(i),{currency:this.safeCurrencyCode(s,t),address:i,tag:this.safeString(e,"tag"),network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const s=this.currency(e),i={currency:s.id},r=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeValue(a,0);return this.parseDepositAddress(n,s)}async fetchDepositAddresses(e,t={}){await this.loadMarkets();const s=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(t),i=this.safeValue(s,"data");return this.parseDepositAddresses(i,e)}async transfer(e,t,s,i,r={}){await this.loadMarkets();const a=this.currency(e),n={source:s,destination:i,currency:e,funds:this.currencyToPrecision(e,t)},o=await this.v1_01PrivatePostBalancesBITBAYBalanceTransferSourceDestination(this.extend(n,r)),c=this.parseTransfer(o,a),d=this.safeValue(this.options,"transfer",{});return this.safeValue(d,"fillResponseFromRequest",!0)&&(c.amount=t),c}parseTransfer(e,t){const s=this.safeString(e,"status"),i=this.safeValue(e,"from",{}),r=this.safeString(i,"id"),a=this.safeValue(e,"to",{}),n=this.safeString(a,"id"),o=this.safeString(i,"currency");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(o,t),amount:void 0,fromAccount:r,toAccount:n,status:this.parseTransferStatus(s)}}parseTransferStatus(e){return this.safeString({Ok:"ok",Fail:"failed"},e,e)}async withdraw(e,t,s,i,r={}){let a;[i,r]=this.handleWithdrawTagAndParams(i,r),this.checkAddress(s),await this.loadMarkets();const n=this.currency(e),o={currency:n.id,quantity:t};this.isFiat(e)?a="privatePostWithdraw":(a="privatePostTransfer",void 0!==i&&(s+="?dt="+i.toString()),o.address=s);const c=await this[a](this.extend(o,r)),d=this.safeValue(c,"data");return this.parseTransaction(d,n)}parseTransaction(e,t){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}sign(e,t="public",s="GET",i={},r,a){let n=this.implodeHostname(this.urls.api[t]);if("public"===t){const t=this.omit(i,this.extractParams(e));n+="/"+this.implodeParams(e,i)+".json",Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Public"===t){const t=this.omit(i,this.extractParams(e));n+="/"+this.implodeParams(e,i),Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Private"===t){this.checkRequiredCredentials();const t=this.omit(i,this.extractParams(e));n+="/"+this.implodeParams(e,i);const o=this.milliseconds().toString();let c;"POST"!==s?(Object.keys(t).length&&(n+="?"+this.urlencode(t)),c=this.apiKey+o):void 0===a&&(a=this.json(t),c=this.apiKey+o+a),r={"Request-Timestamp":o,"Operation-Id":this.uuid(),"API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(c),this.encode(this.secret),"sha512"),"Content-Type":"application/json"}}else this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,moment:this.nonce()},i)),r={"Content-Type":"application/x-www-form-urlencoded","API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(a),this.encode(this.secret),"sha512")};return{url:n,method:s,body:a,headers:r}}handleErrors(e,t,s,i,r,a,n,o,d){if(void 0!==n){if("code"in n){const e=this.safeString(n,"code"),t=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions,e,t),new c(t)}if("status"in n){if("Fail"===this.safeString(n,"status")){const e=this.safeValue(n,"errors"),t=this.id+" "+a;for(let s=0;s<e.length;s++){const i=e[s];this.throwExactlyMatchedException(this.exceptions,i,t)}throw new c(t)}}}}}},{"./base/Exchange":126,"./base/errors":129,"./base/functions/number":135}]},{},[1]);
